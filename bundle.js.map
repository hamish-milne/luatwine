{"version":3,"file":"bundle.js","mappings":";+QAAA,mBACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,UAIMA,EAAK,CACPC,OAAQ,IAAI,UACZC,MAAO,IAAI,UACXC,KAAM,IAAI,UACVC,QAAS,CACLC,MAAc,EACdC,UAAc,EACdC,QAAc,EACdC,WAAc,YACdC,SAAc,EACdC,aAAc,EACdC,OAAQ,OACRC,UAAW,KACXC,WAAc,KAElBC,MAAO,SAASC,EAAaC,GACzB,GAAmB,iBAARD,EACP,MAAM,IAAIE,MAAM,iCAEpB,IAAIC,EAAQ,IAAIC,KAAKhB,KAAKiB,MAAML,EAAKI,KAAMH,GAE3C,OADAG,KAAKhB,KAAKkB,QAAQH,GACXA,EAAMI,SAIfC,EAAQvB,EAAGC,OAAOuB,MASxB,SAASC,EAAOC,GACZ,OAAOA,EACFC,QAAQ,MAAO,OACfA,QAAQ,MAAO,QAGxB,SAASC,EAAUF,EAAcG,EAAkBX,aAE/C,SAASY,EAAIC,GACTF,EAAOG,KAAK,GAAG,KAAKC,OAAOf,EAAMgB,SAASH,KAG9CL,EAAMS,QAAuB,QAAb,EAAAT,EAAMS,eAAO,eAAER,QAAQ,MAAO,MAC9C,MAAMS,EAAkC,QAAxB,EAAAV,EAAMW,QAAQ,kBAAU,eAAEV,QAAQ,MAAO,MACnDW,EAAOb,EAA4B,QAArB,EAAAC,EAAMW,QAAQ,eAAO,QAAI,IAC7C,OAAQX,EAAMa,MACd,IAAK,SACD,IAAK,MAAMC,KAASd,EAAMe,SACtBb,EAAUY,EAAOX,EAAQX,GAE7B,MACJ,IAAK,OACD,IAAIiB,EAAUT,EAAMS,QAChBA,EAAQO,OAAS,KACZ,IAAAC,cAAaR,EAAQS,WAAWT,EAAQO,OAAS,MAClDP,GAAoB,KAExBL,EAAI,SAASL,EAAOU,SAExB,MACJ,IAAK,YAEGL,EADW,MAAXM,EACI,SAASE,iBAET,qBAAqBF,aAAmBE,mBAEhDpB,EAAMgB,QACNhB,EAAM2B,MAAMb,KAAKM,GACjB,MACJ,IAAK,cAEGR,EADW,MAAXM,EACI,YAAYE,MAEZ,aAAaF,0BAAgCE,YAErD,MACJ,IAAK,eAEGR,EADW,MAAXM,EACI,kBAEA,aAAaA,iBAErBlB,EAAMgB,QACN,MACJ,IAAK,gBACL,IAAK,kBACDJ,EAAI,QAAQJ,EAAMS,YAClB,MACJ,IAAK,aACDL,EAAIJ,EAAMS,SACV,MACJ,QACI,OAAQT,EAAMoB,SACd,KAAK,EACDhB,EAAI,SAASJ,EAAMqB,kBACnB7B,EAAMgB,QACN,MACJ,KAAM,EACFhB,EAAMgB,QACNJ,EAAI,QACJ,MACJ,KAAK,EACiB,aAAdJ,EAAMa,MACc,IAAbb,EAAMqB,KACbjB,EAAI,WAAWJ,EAAMqB,WASrC,SAAgBC,EAAcjC,EAAakC,EAAwB/B,GAC/D,IAAIgC,EAAahC,EAAMgB,MACvB,IAAI,MAAMiB,KAASnD,EAAGc,MAAMsC,EAAWrC,GAAM,IACzCa,EAAUuB,EAAOF,EAAc/B,GAEnC,KAAOA,EAAMgB,MAAQgB,GACjBtB,EAAU,IAAI,UAAM,gBAAiB,IAAK,GAAIqB,EAAc/B,GAIpE,SAASkC,EAAWrC,GAChB,IAAIsC,EAAM,EACNC,EAAM,GACV,KAAOD,EAAMtC,EAAI2B,QAAQ,CACrB,IAEIa,EACAC,EAHAC,EAAK1C,EAAI2C,QAAQ,KAAML,GACvBM,EAAK5C,EAAI2C,QAAQ,KAAML,GAG3B,GAAII,GAAM,EACND,EAAQC,EACRF,EAAS,SACN,MAAII,GAAM,GAGV,CACHL,GAAOvC,EAAI6C,UAAUP,GACrB,MAJAG,EAAQG,EACRJ,EAAS,KAKbD,GAAOvC,EAAI6C,UAAUP,EAAKG,GAC1B,IAAIK,EAAM9C,EAAI2C,QAAQH,EAAQF,EAAM,GAChCQ,EAAM,EACNA,EAAM9C,EAAI2B,OAEVmB,GAAY,EAGhBP,GAAOvC,EAAI6C,UAAUJ,EAAOK,GAAKlC,QAAQ,MAAO,MAChD0B,EAAMQ,EAEV,OAAOP,EAlIX/B,EAAMuC,QAAQ,CAAC,OAAQ,QAAS,aAChCvC,EAAMS,KAAK,eAAgB,WAC3BT,EAAMS,KAAK,gBAAiB,WAC5BT,EAAMS,KAAK,aAAc,WACzBT,EAAMS,KAAK,eAAgB,WAC3BT,EAAMS,KAAK,WAAY,WACvBhC,EAAGE,MAAMsB,MAAMsC,QAAQ,CAAC,cAmFxB,iBAAsB/C,GAAe,OAAOf,EAAGc,MAAMsC,EAAWrC,GAAM,KAEtE,kBA0CA,sBAA2BgD,GACvB,IAAIC,EAAYD,EAAME,aAAa,aAC/BC,EAA+B,KACnC,MAAMC,EAAgB,CAAC,8BACvBA,EAAInC,KAAK,YAAYP,EAAOsC,EAAME,aAAa,aAC/CE,EAAInC,KAAK,gBACT,IAAK,IAAIoC,EAAI,EAAGA,EAAIL,EAAMtB,SAASC,OAAQ0B,IAAK,CAC5C,IAAIC,EAAON,EAAMtB,SAAS2B,GAC1B,GAAmC,mBAA/BC,EAAKC,QAAQC,cAAoC,CAC7CP,IAAcK,EAAKJ,aAAa,SAChCC,EAAgBG,EAAKJ,aAAa,SAEtCE,EAAInC,KAAK,OAAOP,EAAO4C,EAAKJ,aAAa,kBACzC,IAAIO,EAAOH,EAAKJ,aAAa,QAAQQ,MAAM,KACvB,IAAhBD,EAAK9B,QAA4B,KAAZ8B,EAAK,KAC1BA,EAAO,IAEXL,EAAInC,KAAK,gBAAgBwC,EAAKE,KAAIC,GAAK,KAAKlD,EAAOkD,gBAAeC,KAAK,WACvET,EAAInC,KAAK,mBAAmBqC,EAAKJ,aAAa,iBAC9CE,EAAInC,KAAK,4BACT,IAAIa,EAAkB,GACtBG,EAAcqB,EAAKQ,YAAaV,EAAK,CAACjC,MAAO,EAAGW,UAChDsB,EAAInC,KAAK,YACTmC,EAAInC,KAAK,iBAAiBa,EAAM6B,KAAIC,GAAK,IAAIlD,EAAOkD,QAAOC,KAAK,UAChET,EAAInC,KAAK,SAMjB,OAHAmC,EAAInC,KAAK,KACTmC,EAAInC,KAAK,mBAAmBP,EAAOyC,OAE5BC,EAAIS,KAAK,+KCzMpB,gBACA,UACA,OACA,mBACA,QAIA,IAAI/C,EAASiD,SAASC,eAAe,UACjCC,EAAkBF,SAASC,eAAe,mBAC1CE,EAAUH,SAASC,eAAe,OAClCG,GAAgB,EAEhBC,EAASL,SAASC,eAAe,qBACrC,SAASK,IACLJ,EAAgBK,MAAMC,QAAUH,EAAOI,QAAU,OAAS,QAC1DN,EAAQI,MAAMC,QAAUH,EAAOI,QAAU,QAAU,OAEvDJ,EAAOK,SAAWC,IACdT,EAAgBK,MAAMK,QAAUP,EAAOI,QAAU,IAAM,IACvDN,EAAQI,MAAMK,QAAUP,EAAOI,QAAU,IAAM,IAC/CI,WAAWP,EAfQ,MAkBvB,IAAIQ,GAAS,IAAAC,YAAWf,SAASC,eAAe,aAAatC,SAAS,IACtEwC,EAAQJ,YAAce,EAEtB,IAAIE,EAAWhB,SAASC,eAAe,YAIvC,SAASgB,EAAU1F,GACfwB,EAAOmE,UAAY3F,EACnBwB,EAAOwD,MAAMK,QAAU,IACvBR,GAAgB,EAepB,SAASe,EAAWR,GAChB,IAAIS,EAAST,EAAMS,OACnB,KAAOA,KAAYC,OAAOD,EAAOE,IAAM,IACnCF,EAASA,EAAOG,cAEpB,OAAKH,EAGEA,EAAOE,GAFH,KA3BfN,EAASxD,KAAOgE,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACb,GAAS,CAACrD,KAAM,kBACrEuD,EAASA,SAAWhB,SAAS4B,MAAQ,QAQrC,IAAAC,WAAU,CAAC,UAAaf,IAAS,CAACvF,EAAMuG,KAChCA,GACA1B,GAAgB,EAChBrD,EAAOwD,MAAMK,QAAU,IACvBC,WAAWI,EAnCI,IAmCuB1F,IAEtC0F,EAAU1F,MAEdwG,IACAC,QAAQC,MAAMF,MAclB,IAAIG,EAA0B,KAE9BV,OAAOW,iBAAiB,SAASxB,IAC7B,GAAIP,EACA,OAEJ,IAAIkB,EAAKH,EAAWR,GACT,OAAPW,IACAY,EAAW,MACX,IAAAE,YAAWzB,EAAMlD,KAAM6D,OAG/BE,OAAOW,iBAAiB,aAAaxB,IACjC,GAAIP,EACA,OAEJ,IAAIkB,EAAKH,EAAWR,GAChBW,IAAOY,GAGA,OAAPZ,IACiB,OAAbY,IACA,IAAAE,YAAW,WAAYF,GAE3BA,EAAWZ,GACX,IAAAc,YAAWzB,EAAMlD,KAAM6D,OAG/BE,OAAOW,iBAAiB,YAAYxB,IAChC,GAAIP,EACA,OAEJ,IAAIkB,EAAKH,EAAWR,GACT,OAAPW,GAAeA,IAAOY,IACtBA,EAAW,MACX,IAAAE,YAAWzB,EAAMlD,KAAM6D,OAI/B,IAAIe,EAAWC,YAAYC,MACvBC,EAAiCC,KACjC,IAAAC,QAA2B,KAAnBD,EAAOJ,IACfA,EAAWI,EACXjB,OAAOmB,sBAAsBH,IAEjChB,OAAOmB,sBAAsBH,IAE7B,IAAA9D,qFCzGA,mBAAyBtC,EAAoBwG,GAEzC,GAAwC,KAApCxG,EAAMH,IAAI6B,WAAW1B,EAAMyG,KAAuB,CAGlD,MAAMC,EAAY1G,EAAMI,OAAOJ,EAAMI,OAAOoB,OAAS,GACrD,IAAIN,EAWJ,OAVIwF,GAAgC,iBAAlBA,EAAUrF,MAA6C,mBAAlBqF,EAAUrF,KAK7DH,EAAU,MAHVlB,EAAMI,OAAOuG,OAAO3G,EAAMI,OAAOoB,OAAS,EAAG,GAC7CN,EAAUwF,EAAUzF,SAKxBjB,EAAMc,KAAK,eAAgB,GAAI,GAAG8F,MAAQ,CAAC,CAAC,UAAW1F,IACvDlB,EAAMyG,OACC,EAGX,OAAwC,KAApCzG,EAAMH,IAAI6B,WAAW1B,EAAMyG,OAC3BzG,EAAMc,KAAK,gBAAiB,GAAId,EAAMgB,OAAS,EAAI,GAAK,GACxDhB,EAAMyG,OACC,gFCvBf,mBAAyBzG,EAAoBwG,GAGzC,IAAKxG,EAAMH,IAAIgH,WAAW,KAAM7G,EAAMyG,KAClC,OAAO,EAEX,MAAMK,EAAY9G,EAAMH,IAAI2C,QAAQ,KAAMxC,EAAMyG,IAJ3B,GAKrB,IAAIM,EAAkBC,EAClBF,EAAY,GACZC,EAAW/G,EAAMH,IAAI2B,OACrBwF,EAAYhH,EAAMH,IAAI2B,SAEtBuF,EAAWD,EACXE,EAAYF,EAXK,GAarB,IAAIG,EAAMjH,EAAMc,KAAK,kBAAmB,GAAI,GAI5C,OAHAmG,EAAIhG,QAAUjB,EAAMH,IAAIqH,MAAMlH,EAAMyG,IAdf,EAcmCM,GACxDE,EAAIE,KAAOnH,EAAMyG,IACjBzG,EAAMyG,IAAMO,GACL,+ECnBX,mBAAyBhH,EAAoBwG,GAGzC,IAAKxG,EAAMH,IAAIgH,WAAW,KAAM7G,EAAMyG,KAClC,OAAO,EAGX,MAAMW,EAAWpH,EAAMyG,IALF,EAMfY,EAASrH,EAAMsH,OACrB,IAgCItC,EAhCAuC,EAASH,EACTI,GAAW,EACXC,GAAW,EACf,KAAOF,EAASF,IAAWrH,EAAMH,IAAIgH,WAAW,KAAMU,KAGjC,IAAbE,GAAkBzH,EAAMH,IAAIgH,WAAW,KAAMU,GAC7CE,EAAUF,EACHvH,EAAMH,IAAIgH,WAAW,KAAMU,KAClCC,EAAUD,GAEdA,IAGJ,GAAIA,IAAWF,EAEX,OAAO,GAGM,IAAbG,IAA+B,IAAbC,IAEAA,EAAUL,EACVG,GAAUC,EA7BX,GAgCbA,GAAW,EAEXC,GAAW,IAMF,IAAbD,GACAxC,EAAShF,EAAMH,IAAIqH,MAAMM,EAzCR,EAyCgCD,GAAQG,OACzD1H,EAAMyG,IAAMW,EACZpH,EAAMsH,OAASE,IACK,IAAbC,GACPzC,EAAShF,EAAMH,IAAIqH,MAAME,EAAUK,GAASC,OAC5C1H,EAAMyG,IAAMgB,EA9CK,EA+CjBzH,EAAMsH,OAASC,IAEfvC,EAAShF,EAAMH,IAAIqH,MAAME,EAAUG,GAAQG,OAC3C1H,EAAMyG,IAAMW,EACZpH,EAAMsH,OAASC,GAInB,MAAMb,EAAY1G,EAAMI,OAAOJ,EAAMI,OAAOoB,OAAS,GACrD,IAAIN,EAsBJ,OArBIwF,GAAgC,iBAAlBA,EAAUrF,MAA6C,mBAAlBqF,EAAUrF,KAK7DH,EAAU,MAHVlB,EAAMI,OAAOuG,OAAO3G,EAAMI,OAAOoB,OAAS,EAAG,GAC7CN,EAAUwF,EAAUzF,UAMP,IAAbuG,GAAqE,IAAnDxH,EAAMH,IAAIqH,MAAMlH,EAAMyG,IAAKzG,EAAMsH,QAAQI,OAC3D1H,EAAMc,KAAK,cAAe,GAAI,GAAG8F,MAAQ,CAAE,CAAC,OAAQ5B,GAAS,CAAC,UAAW9D,KAGzElB,EAAMc,KAAK,YAAa,IAAK,GAAG8F,MAAQ,CAAE,CAAC,OAAQ5B,GAAS,CAAC,UAAW9D,IACxElB,EAAMlB,GAAGC,OAAO4I,SAAS3H,GACzBA,EAAMc,KAAK,aAAc,KAAM,IAInCd,EAAMyG,IAAMc,EA5ES,EA6ErBvH,EAAMsH,OAASD,GACR,+EChFX,mBAAyBrH,EAAoBwG,GAGzC,IAAKxG,EAAMH,IAAIgH,WAAW,KAAM7G,EAAMyG,KAClC,OAAO,EAEX,MAAMK,EAAY9G,EAAMH,IAAI2C,QAAQ,KAAMxC,EAAMyG,IAJ3B,GAKrB,IAAIM,EAAkBC,EAClBF,EAAY,GACZC,EAAW/G,EAAMH,IAAI2B,OACrBwF,EAAYhH,EAAMH,IAAI2B,SAEtBuF,EAAWD,EACXE,EAAYF,EAXK,GAarB,IAAIG,EAAMjH,EAAMc,KAAK,aAAc,GAAI,GAIvC,OAHAmG,EAAIhG,QAAUjB,EAAMH,IAAIqH,MAAMlH,EAAMyG,IAdf,EAcmCM,GACxDE,EAAIE,KAAOnH,EAAMyG,IACjBzG,EAAMyG,IAAMO,GACL,8BCnBX,SAASY,EAASC,GACd,OAAgB,KAATA,GAAkBA,GAAQ,IAAQA,GAAQ,IAAUA,GAAQ,IAAQA,GAAQ,IAGvF,SAASC,EAAiBD,GACtB,OAAOD,EAASC,IAAUA,GAAQ,IAAQA,GAAQ,GAGtD,SAASE,EAAmB/H,EAAoBW,GAC5C,IAAI2B,EAAQtC,EAAMyG,IAClB,GAAuC,IAAnCzG,EAAMH,IAAI6B,WAAW1B,EAAMyG,KAC3B,OAAO,EAEX,IAAKmB,EAAS5H,EAAMH,IAAI6B,WAAW1B,EAAMyG,IAAM,IAC3C,OAAO,EAEXzG,EAAMyG,MACN,GACIzG,EAAMyG,YACDzG,EAAMyG,IAAMzG,EAAMH,IAAI2B,QAAUsG,EAAiB9H,EAAMH,IAAI6B,WAAW1B,EAAMyG,OAErF,OADA9F,EAAOG,KAAKd,EAAMH,IAAIqH,MAAM5E,EAAOtC,EAAMyG,OAClC,EAGX,SAASuB,EAAehI,EAAoBW,EAAkBsH,EAAetF,GACzE,GAAI3C,EAAMH,IAAI6B,WAAW1B,EAAMyG,MAAQwB,EACnC,OAAO,EAEX,IAGIJ,EAHAvF,EAAQtC,EAAMyG,IACdA,EAAMzG,EAAMyG,IACZzF,EAAQ,EAEZ,GACIyF,IACAoB,EAAO7H,EAAMH,IAAI6B,WAAW+E,GACxBoB,GAAQI,EACRjH,IACO6G,GAAQlF,GACf3B,UAECA,EAAQ,GAAa,IAAR6G,GAAgBpB,EAAMzG,EAAMH,IAAI2B,QACtD,OAAa,GAATR,IACAhB,EAAMyG,IAAMA,EAAM,EAClB9F,EAAOG,KAAKd,EAAMH,IAAIqH,MAAM5E,EAAOtC,EAAMyG,OAClC,GAKf,SAASyB,EAAiBlI,EAAoBW,GAC1C,IAAKX,EAAMH,IAAIgH,WAAW,KAAM7G,EAAMyG,KAClC,OAAO,EAEX,IAAI0B,EAAQnI,EAAMH,IAAI2C,QAAQ,KAAMxC,EAAMyG,IAAM,GAChD,QAAI0B,EAAQ,IAGZxH,EAAOG,KAAK,gBACZH,EAAOG,KAAKd,EAAMH,IAAIqH,MAAMlH,EAAMyG,IAAM,EAAG0B,IAC3CxH,EAAOG,KAAK,SACZd,EAAMyG,IAAM0B,EAAQ,EACb,qDAGX,mBAAyBnI,EAAoBwG,GAEzC,GAAwC,KAApCxG,EAAMH,IAAI6B,WAAW1B,EAAMyG,KAC3B,OAAO,EAEX,IAAKmB,EAAS5H,EAAMH,IAAI6B,WAAW1B,EAAMyG,IAAM,IAC3C,OAAO,EAEX,MAAMnE,EAAQtC,EAAMyG,IAAMzG,EAAMyG,IAAM,EACtC,GACIzG,EAAMyG,YACDqB,EAAiB9H,EAAMH,IAAI6B,WAAW1B,EAAMyG,OACrD,IAAI9F,EAAS,CAACX,EAAMH,IAAIqH,MAAM5E,EAAOtC,EAAMyG,MAC3C,KAAOsB,EAAmB/H,EAAOW,IAC1BqH,EAAehI,EAAOW,EAAQ,GAAM,KACpCqH,EAAehI,EAAOW,EAAQ,IAAM,MACpCuH,EAAiBlI,EAAOW,KAI/B,IAAIsG,EAAMjH,EAAMc,KAAK,gBAAiB,GAAI,GAG1C,OAFAmG,EAAIhG,QAAUN,EAAO+C,KAAK,IAC1BuD,EAAIE,KAAO7E,GACJ,kIC1FX,gBAEM8F,EAAM,IAAIC,YAChB,IAGIC,EAHAC,EAAsB,KACtBjF,EAAiB,GACjBL,EAAgB,GAEhBuF,GAAa,EACbC,GAAc,EAElB,qBAA0B5I,EAAe6I,EAAmDC,GACxFL,EAAOI,EACPH,EAAI,EAAAK,QAAQC,gBAEZ,EAAAC,IAAIC,YAAYR,GAAGA,IACfI,EAAM,EAAAG,IAAIE,eAAeT,EAAG,EAAAO,IAAIG,WAAWV,IAAK,SACzC,KAGX,EAAAW,OAAOC,cAAcZ,GAErB,EAAAO,IAAIM,aAAab,EAAG,SAASA,IACzB,IAAIc,EAAI,EAAAP,IAAIG,WAAWV,GACnBe,EAAO,GACX,IAAK,IAAIpG,EAAI,EAAGA,GAAKmG,EAAGnG,IACpBoG,EAAKxI,KAAK,EAAAgI,IAAIE,eAAeT,EAAGrF,IAGpC,OADA0C,QAAQ2D,OAAOD,GACR,KAGX,EAAAR,IAAIM,aAAab,EAAG,OAAOA,IACb,EAAAO,IAAIG,WAAWV,GACzBI,EAAM,EAAAG,IAAIE,eAAeT,EAAG,GAAI,EAAAO,IAAIE,eAAeT,EAAG,IAC/C,KAGX,EAAAO,IAAIM,aAAab,EAAG,QAAQA,IACxB,IAAI1H,EAAM,EAAAiI,IAAIE,eAAeT,EAAG,GAWhC,OAVAjF,EAAKxC,KAAKD,GACC,KAAPA,GACAoC,EAAInC,KAAK,mBAAmB,EAAAgI,IAAIU,aAAajB,EAAG,QAChD,EAAAO,IAAIW,QAAQlB,EAAG,IACD,SAAP1H,EACPoC,EAAInC,KAAK,uBAAuB,EAAAgI,IAAIE,eAAeT,EAAG,SAEtDtF,EAAInC,KAAK,IAAID,MAEjB2H,GAAa,EACN,KAEX,EAAAM,IAAIM,aAAab,EAAG,OAAOA,IACvB,IAAI1H,EAAMyC,EAAKqD,OAAOrD,EAAK9B,OAAS,EAAG,GAAG,GAS1C,OARIX,IACY,UAARA,EACAoC,EAAInC,KAAK,WAETmC,EAAInC,KAAK,KAAKD,OAGtB2H,GAAa,EACN,KAEX,EAAAM,IAAIM,aAAab,EAAG,QAAQA,IACxB,IAAI1H,EAAM,EAAAiI,IAAIE,eAAeT,EAAG,GAGhC,OAFAtF,EAAInC,KAAKD,GACT2H,GAAa,EACN,KAEX,EAAAM,IAAIM,aAAab,EAAG,UAAUA,IAC1B,IAAI1H,EAAM,EAAAiI,IAAIE,eAAeT,EAAG,GAGhC,OAFAtF,EAAInC,KAAK,IAAID,MACb2H,GAAa,EACN,KAEX,EAAAM,IAAIM,aAAab,EAAG,SAASA,IACzBtF,EAAM,GACNuF,GAAa,EACN,KAEX,EAAAM,IAAIM,aAAab,EAAG,cAAcA,IAC9BE,GAAc,EACdD,GAAa,EACN,KAGX3I,EAAI2D,KAAIkG,GAAK,EAAAd,QAAQe,cAAcpB,EAAGH,EAAIwB,OAAOF,OAGrD,sBAA2BnF,EAAeW,GACtC,EAAA4D,IAAIe,cAActB,EAAG,cACrB,EAAAO,IAAIgB,eAAevB,EAAGhE,GACtB,EAAAuE,IAAIgB,eAAevB,EAAGrD,GACtB,EAAA4D,IAAIiB,SAASxB,EAAG,EAAG,GACfC,IACAA,GAAa,EACbF,SAAAA,EAAOrF,EAAIS,KAAK,IAAK+E,GACrBA,GAAc,IAItB,mBACI,EAAAK,IAAIe,cAActB,EAAG,aACrB,EAAAO,IAAIiB,SAASxB,EAAG,EAAG,GACnBD,SAAAA,EAAOrF,EAAIS,KAAK,IAAK+E,GACrBA,GAAc,EACdD,GAAa,GAGjB,kBAAuBwB,GACnB,EAAAlB,IAAIe,cAActB,EAAG,UACrB,EAAAO,IAAImB,eAAe1B,EAAGyB,GACtB,EAAAlB,IAAIiB,SAASxB,EAAG,EAAG,GACfC,IACAA,GAAa,EACbF,SAAAA,EAAOrF,EAAIS,KAAK,IAAK+E,GACrBA,GAAc,iCC9GtB,IAAIyB,EAaAC,EAcAC,EAbJ,GAZIF,EAD2B,mBAApBG,WAAWC,KACDD,WAAWC,KAAKC,KAAKF,YAErB,SAASG,GACtB,IAAItH,EAAI,EACJuH,EAAMD,EAAEhJ,OACRkJ,EAAI,IAAIL,WAAWI,GACvB,KAAOA,EAAMvH,GAAGwH,EAAExH,GAAKsH,EAAEtH,KACzB,OAAOwH,GAK2B,mBAA9B,IAAIL,YAAoB,QAChCF,EAAoB,SAASQ,EAAGC,EAAG1H,GAC/B,OAAOyH,EAAEnI,QAAQoI,EAAG1H,QAErB,CAEH,IAAI2H,EAAgB,GAAGrI,QACvB,GAAiD,IAA7CqI,EAAcC,KAAK,IAAIT,WAAW,GAAI,GAAU,MAAMtK,MAAM,oBAChEoK,EAAoB,SAASQ,EAAGC,EAAG1H,GAC/B,OAAO2H,EAAcC,KAAKH,EAAGC,EAAG1H,IAMpCkH,EADyB,mBAAlBC,WAAWU,GACHV,WAAWU,GAAGR,KAAKF,YAEnB,WACX,OAAOH,EAAec,YAI9B,MAAMC,EAAe,SAASN,GAC1B,OAAOA,aAAaN,YAelBa,EAAwB,mDAkGxBC,EAAc,sFAAwF5H,MAAM,IAAI6H,QAAO,SAASD,EAAaE,GAE/I,OADAF,EAAYE,EAAE3J,WAAW,KAAM,EACxByJ,IACR,IAiBGG,EAAqB,GAErBC,EAAe,SAAS1K,EAAK2K,GAC/B,GAAmB,iBAAR3K,EAAkB,MAAM,IAAI4K,UAAU,4CAEjD,GAAID,EAAO,CACP,IAAIE,EAASJ,EAAmBzK,GAChC,GAAIoK,EAAaS,GAAS,OAAOA,EAGrC,IAAIjB,EAAM5J,EAAIW,OACVmK,EAAaC,MAAMnB,GACnBoB,EAAS,EACb,IAAK,IAAI3I,EAAI,EAAGA,EAAIuH,IAAOvH,EAAG,CAC1B,IAAI4I,EAAIjL,EAAIa,WAAWwB,GACvB,GAAI4I,GAAK,IACLH,EAAWE,KAAYC,OACpB,GAAIA,GAAK,KACZH,EAAWE,KAAY,IAAQC,GAAK,EACpCH,EAAWE,KAAY,IAAY,GAAJC,MAC5B,CAEH,GAAIA,GAAK,OAAUA,GAAK,OAAW5I,EAAE,EAAKuH,EAAK,CAE3C,IAAIG,EAAI/J,EAAIa,WAAWwB,EAAE,GACrB0H,GAAK,OAAUA,GAAK,QAEpB1H,IACA4I,EAAmB,MAAdA,EAAI,OAAkBlB,EAAI,MAGnCkB,GAAK,OACLH,EAAWE,KAAY,IAAQC,GAAK,GACpCH,EAAWE,KAAY,IAASC,GAAK,EAAK,GAC1CH,EAAWE,KAAY,IAAY,GAAJC,IAE/BH,EAAWE,KAAY,IAAQC,GAAK,GACpCH,EAAWE,KAAY,IAASC,GAAK,GAAM,GAC3CH,EAAWE,KAAY,IAASC,GAAK,EAAK,GAC1CH,EAAWE,KAAY,IAAY,GAAJC,IAQ3C,OAJAH,EAAazB,EAAeyB,GAExBH,IAAOF,EAAmBzK,GAAO8K,GAE9BA,GAcXI,EAAOC,QAAQ9B,eAAoBA,EACnC6B,EAAOC,QAAQ7B,kBAAoBA,EACnC4B,EAAOC,QAAQ5B,aAAoBA,EACnC2B,EAAOC,QAAQf,aAAoBA,EACnCc,EAAOC,QAAQC,aAlMM,SAASzB,EAAG0B,GAC7B,GAAI1B,IAAM0B,EAAG,CACT,IAAIzB,EAAMD,EAAEhJ,OACZ,GAAIiJ,IAAQyB,EAAE1K,OAAQ,OAAO,EAE7B,IAAK,IAAI0B,EAAE,EAAGA,EAAEuH,EAAKvH,IACjB,GAAIsH,EAAEtH,KAAOgJ,EAAEhJ,GAAI,OAAO,EAElC,OAAO,GA2LX6I,EAAOC,QAAQG,YAvLK,SAASC,EAAO9B,EAAM+B,EAAIC,GAC1C,IAAKrB,EAAamB,GAAQ,MAAM,IAAIX,UAAU,oCAG1CY,OADO,IAAPA,EACKD,EAAM5K,OAEN+K,KAAKC,IAAIJ,EAAM5K,OAAQ6K,GAGhC,IAAIxL,EAAM,GACV,IAAK,IAAIqC,OAAY,IAAPoH,EAAcA,EAAK,EAAIpH,EAAImJ,GAAK,CAC1C,IAAII,EAAKL,EAAMlJ,KACf,GAAIuJ,EAAK,IAEL5L,GAAO6L,OAAOC,aAAaF,QACxB,GAAIA,EAAK,KAAQA,EAAK,IAAM,CAC/B,IAAKH,EAAkB,MAAMM,WAAW1B,GACxCrK,GAAO,SACJ,GAAI4L,GAAM,IAAM,CAEnB,GAAIvJ,GAAKmJ,EAAI,CACT,IAAKC,EAAkB,MAAMM,WAAW1B,GACxCrK,GAAO,IACP,SAEJ,IAAIgM,EAAKT,EAAMlJ,KACf,GAAkB,MAAV,IAAH2J,GAAmB,CACpB,IAAKP,EAAkB,MAAMM,WAAW1B,GACxCrK,GAAO,IACP,SAEJA,GAAO6L,OAAOC,eAAoB,GAALF,IAAc,IAAW,GAALI,SAC9C,GAAIJ,GAAM,IAAM,CAEnB,GAAIvJ,EAAE,GAAKmJ,EAAI,CACX,IAAKC,EAAkB,MAAMM,WAAW1B,GACxCrK,GAAO,IACP,SAEJ,IAAIgM,EAAKT,EAAMlJ,KACf,GAAkB,MAAV,IAAH2J,GAAmB,CACpB,IAAKP,EAAkB,MAAMM,WAAW1B,GACxCrK,GAAO,IACP,SAEJ,IAAIiM,EAAKV,EAAMlJ,KACf,GAAkB,MAAV,IAAH4J,GAAmB,CACpB,IAAKR,EAAkB,MAAMM,WAAW1B,GACxCrK,GAAO,IACP,SAEJ,IAAIiL,IAAW,GAALW,IAAc,MAAa,GAALI,IAAc,IAAW,GAALC,GACpD,GAAIhB,GAAK,MACLjL,GAAO6L,OAAOC,aAAab,OACxB,CACHA,GAAK,MACL,IAAIiB,EAAiB,OAAXjB,GAAK,IACXkB,EAAMlB,EAAI,KAAS,MACvBjL,GAAO6L,OAAOC,aAAaI,EAAIC,QAEhC,CAEH,GAAI9J,EAAE,GAAKmJ,EAAI,CACX,IAAKC,EAAkB,MAAMM,WAAW1B,GACxCrK,GAAO,IACP,SAEJ,IAAIgM,EAAKT,EAAMlJ,KACf,GAAkB,MAAV,IAAH2J,GAAmB,CACpB,IAAKP,EAAkB,MAAMM,WAAW1B,GACxCrK,GAAO,IACP,SAEJ,IAAIiM,EAAKV,EAAMlJ,KACf,GAAkB,MAAV,IAAH4J,GAAmB,CACpB,IAAKR,EAAkB,MAAMM,WAAW1B,GACxCrK,GAAO,IACP,SAEJ,IAAIoM,EAAKb,EAAMlJ,KACf,GAAkB,MAAV,IAAH+J,GAAmB,CACpB,IAAKX,EAAkB,MAAMM,WAAW1B,GACxCrK,GAAO,IACP,SAGJ,IAAIiL,IAAW,EAALW,IAAc,MAAa,GAALI,IAAc,MAAa,GAALC,IAAc,IAAW,GAALG,GAC1EnB,GAAK,MACL,IAAIiB,EAAiB,OAAXjB,GAAK,IACXkB,EAAMlB,EAAI,KAAS,MACvBjL,GAAO6L,OAAOC,aAAaI,EAAIC,IAGvC,OAAOnM,GA2FXkL,EAAOC,QAAQkB,aAjFM,SAAS1C,GAC1B,IAAKS,EAAaT,GAAI,MAAM,IAAIiB,UAAU,qCAC1C,IAAId,EAAI,GACR,IAAK,IAAIzH,EAAE,EAAGA,EAAEsH,EAAEhJ,OAAQ0B,IAAK,CAC3B,IAAI0H,EAAIJ,EAAEtH,GACNiI,EAAYP,GACZD,GAAK+B,OAAOC,aAAa/B,GAEzBD,GAAK,KAAOC,EAAE,GAAK,IAAI,IAAMA,EAAEuC,SAAS,IAGhD,OAAOxC,GAuEXoB,EAAOC,QAAQT,aAAoBA,EACnCQ,EAAOC,QAAQoB,gBAnBS,SAASvM,GAC7B,IAAKoK,EAAapK,GAAM,CACpB,GAAmB,iBAARA,EAGP,MAAM,IAAI4K,UAAU,kDAFpB5K,EAAM0K,EAAa1K,GAK3B,OAAOA,GAeX,MAAMwM,EAAgB9B,EAAa,QAYnCQ,EAAOC,QAAQqB,cAAsBA,EACrCtB,EAAOC,QAAQsB,kBAXa,IAY5BvB,EAAOC,QAAQuB,kBAXa,IAY5BxB,EAAOC,QAAQwB,gBAXa,IAY5BzB,EAAOC,QAAQyB,oBAXa,IAY5B1B,EAAOC,QAAQ0B,YAVa,UAW5B3B,EAAOC,QAAQ2B,YAVaD,YAW5B3B,EAAOC,QAAQ4B,cAVaD,sDAW5B5B,EAAOC,QAAQ6B,YAVa,kDAa5B,MAUMC,EAAiB,CACnBC,WAAqB,EACrBC,SAAoB,EACpBC,aAAoB,EACpBC,mBAAoB,EACpBC,YAAoB,EACpBC,YAAoB,EACpBC,WAAoB,EACpBC,cAAoB,EACpBC,cAAoB,EACpBC,YAAoB,EACpBC,YAAoB,GAGxBX,EAAeY,YAA2C,EAA7BZ,EAAeM,YAC5CN,EAAea,YAA2C,GAA7Bb,EAAeM,YAE5CN,EAAec,YAA2C,EAA7Bd,EAAeK,YAC5CL,EAAee,YAA2C,GAA7Bf,EAAeK,YAE5CL,EAAegB,SAA0C,EAA/BhB,EAAeQ,cACzCR,EAAeiB,SAA0C,GAA/BjB,EAAeQ,cACzCR,EAAekB,SAA0C,GAA/BlB,EAAeQ,cAMzC,MAqBM,cAAEW,GAAkB,EAAQ,MAC5BC,GAAqBD,EAAgB,IAiD3ClD,EAAOC,QAAQmD,aAfU,EAgBzBpD,EAAOC,QAAQoD,cAbU,EAczBrD,EAAOC,QAAQqD,aAfU,EAgBzBtD,EAAOC,QAAQsD,YAjBU,EAkBzBvD,EAAOC,QAAQuD,iBAfU,EAgBzBxD,EAAOC,QAAQwD,aAVO,EAWtBzD,EAAOC,QAAQyD,cARO,EAStB1D,EAAOC,QAAQ0D,aAVO,EAWtB3D,EAAOC,QAAQ2D,YAZO,EAatB5D,EAAOC,QAAQ4D,aA7DM,GA8DrB7D,EAAOC,QAAQ6D,aAA2B,EAC1C9D,EAAOC,QAAQ8D,UAlFI,EAmFnB/D,EAAOC,QAAQ+D,WA5EI,EA6EnBhE,EAAOC,QAAQgE,WAvEI,GAwEnBjE,EAAOC,QAAQiE,UA7EI,EA8EnBlE,EAAOC,QAAQkE,WA7EI,EA8EnBnE,EAAOC,QAAQmE,UAlFI,EAmFnBpE,EAAOC,QAAQoE,SAzEE,EA0EjBrE,EAAOC,QAAQqE,WAnFI,EAoFnBtE,EAAOC,QAAQsE,SAzEE,EA0EjBvE,EAAOC,QAAQuE,SA3EE,EA4EjBxE,EAAOC,QAAQwE,UAzFI,EA0FnBzE,EAAOC,QAAQyE,UA3FI,EA4FnB1E,EAAOC,QAAQ0E,UA1FI,EA2FnB3E,EAAOC,QAAQ2E,UArFI,GAsFnB5E,EAAOC,QAAQ4E,UArFI,GAsFnB7E,EAAOC,QAAQ6E,UAhGI,EAiGnB9E,EAAOC,QAAQ8E,UAtFI,GAuFnB/E,EAAOC,QAAQkD,kBAA0BA,EACzCnD,EAAOC,QAAQ+E,iBAtEa,EAuE5BhF,EAAOC,QAAQgF,cAvEa,EAwE5BjF,EAAOC,QAAQiF,oBAzEa,EA0E5BlF,EAAOC,QAAQ8B,eAA0BA,EACzC/B,EAAOC,QAAQkF,UAvEf,MACIC,cACIlR,KAAKsE,MAAQ6M,IACbnR,KAAKoR,KAAO,KACZpR,KAAKqR,SAAW,KAChBrR,KAAKsR,KAAO,KACZtR,KAAKuR,OAAS,KACdvR,KAAKwR,YAAcL,IACnBnR,KAAKyR,YAAcN,IACnBnR,KAAK0R,gBAAkBP,IACvBnR,KAAK2R,KAAOR,IACZnR,KAAK4R,QAAUT,IACfnR,KAAK6R,SAAWV,IAChBnR,KAAK8R,WAAaX,IAClBnR,KAAK+R,UAAY,KAEjB/R,KAAKgS,KAAO,OAwDpBlG,EAAOC,QAAQkG,iBAjFU,SAAShP,GAC9B,OAAOgM,EAAoBhM,GAiF/B6I,EAAOC,QAAQmG,cAhJO,CAClBC,OAAe,EACfC,UAAe,EACfC,WAAe,EACfC,cAAe,EACfC,WAAe,EACfC,YAAe,EACfC,WAAe,gCC7QnB,MAAMzT,EAAO,EAAQ,MAErB8M,EAAOC,QAAQ2G,gBAA0B1T,EAAK0T,gBAC9C5G,EAAOC,QAAQ4G,kBAA0B3T,EAAK2T,kBAC9C7G,EAAOC,QAAQ6G,gBAA0B5T,EAAK4T,gBAC9C9G,EAAOC,QAAQ8G,gBAA0B7T,EAAK6T,gBAC9C/G,EAAOC,QAAQ+G,sBAA0B9T,EAAK8T,sBAC9ChH,EAAOC,QAAQgH,sBAA0B/T,EAAK+T,sBAC9CjH,EAAOC,QAAQiH,oBAA0BhU,EAAKgU,oBAC9ClH,EAAOC,QAAQkH,wBAA0BjU,EAAKiU,wBAE9CnH,EAAOC,QAAQC,aAAoBhN,EAAKgN,aACxCF,EAAOC,QAAQ7B,kBAAoBlL,EAAKkL,kBACxC4B,EAAOC,QAAQ5B,aAAoBnL,EAAKmL,aACxC2B,EAAOC,QAAQG,YAAoBlN,EAAKkN,YACxCJ,EAAOC,QAAQT,aAAoBtM,EAAKsM,aACxCQ,EAAOC,QAAQkB,aAAoBjO,EAAKiO,aAExC,MAAMiG,EAAU,EAAQ,MAClBrK,EAAU,EAAQ,MAClBF,EAAU,EAAQ,MAClBM,EAAU,EAAQ,MAExB6C,EAAOC,QAAQmH,QAAUA,EACzBpH,EAAOC,QAAQlD,IAAUA,EACzBiD,EAAOC,QAAQpD,QAAUA,EACzBmD,EAAOC,QAAQ9C,OAAUA,kBC5BzB,MAAMkK,EAAO,EAAQ,MAQfT,EAA0B,8BAC1BC,EAA0BC,0CAAiDF,EAAkB,eAAiBS,EAAKxF,cAEzH7B,EAAOC,QAAQ2G,gBAA0BA,EACzC5G,EAAOC,QAAQ4G,kBAA0BA,EACzC7G,EAAOC,QAAQ6G,gBANiBC,gBAOhC/G,EAAOC,QAAQ8G,gBARiB,cAShC/G,EAAOC,QAAQ+G,sBAbiB,IAchChH,EAAOC,QAAQgH,sBAbiB,IAchCjH,EAAOC,QAAQiH,oBAbiB,EAchClH,EAAOC,QAAQkH,wBAbiB,IAchCnH,EAAOC,QAAQf,aAA0BmI,EAAKnI,aAC9Cc,EAAOC,QAAQC,aAA0BmH,EAAKnH,aAC9CF,EAAOC,QAAQ9B,eAA0BkJ,EAAKlJ,eAC9C6B,EAAOC,QAAQ7B,kBAA0BiJ,EAAKjJ,kBAC9C4B,EAAOC,QAAQ5B,aAA0BgJ,EAAKhJ,aAC9C2B,EAAOC,QAAQG,YAA0BiH,EAAKjH,YAC9CJ,EAAOC,QAAQT,aAA0B6H,EAAK7H,aAC9CQ,EAAOC,QAAQkB,aAA0BkG,EAAKlG,aAC9CnB,EAAOC,QAAQoB,gBAA0BgG,EAAKhG,gCCnC9C,MAAM,gBACFiG,EAAe,gBACfC,EAAe,aACfC,GACA,EAAQ,OACN,YACFC,GACA,EAAQ,OACN,gBACFb,EAAe,kBACfC,EAAiB,gBACjBC,EAAe,gBACfC,EAAe,sBACfC,EAAqB,sBACrBC,EAAqB,oBACrBC,EAAmB,wBACnBC,EAAuB,aACvB3H,GACA,EAAQ,MAuBZQ,EAAOC,QAAQyH,gBArBS,SAASlL,GAkB7B,OAjBAiL,EAAYjL,EAAG,IACf+K,EAAgB/K,EAAGoK,GACnBY,EAAahL,GAAI,EAAGgD,EAAa,YACjC+H,EAAgB/K,EAAGqK,GACnBW,EAAahL,GAAI,EAAGgD,EAAa,cACjC+H,EAAgB/K,EAAGsK,GACnBU,EAAahL,GAAI,EAAGgD,EAAa,YACjC+H,EAAgB/K,EAAGuK,GACnBS,EAAahL,GAAI,EAAGgD,EAAa,YACjC+H,EAAgB/K,EAAGwK,GACnBQ,EAAahL,GAAI,EAAGgD,EAAa,kBACjC+H,EAAgB/K,EAAGyK,GACnBO,EAAahL,GAAI,EAAGgD,EAAa,kBACjC8H,EAAgB9K,EAAG0K,GACnBM,EAAahL,GAAI,EAAGgD,EAAa,gBACjC+H,EAAgB/K,EAAG2K,GACnBK,EAAahL,GAAI,EAAGgD,EAAa,oBAC1B,gCCpCX,MAAM,YACFsE,EAAW,WACXG,EAAU,SACVI,EAAQ,SACRE,EAAQ,SACRC,EAAQ,UACRO,EAAS,kBACT5B,EAAiB,iBACjB6B,EAAgB,gBAChBvD,EACAM,gBAAgB,YACZW,EAAW,aACXR,EAAY,SACZe,EAAQ,cACRV,EAAa,SACbS,EAAQ,SACRD,EAAQ,mBACRZ,EAAkB,YAClBS,EAAW,SACXX,EAAQ,UACRD,EAAS,YACTa,EAAW,YACXC,EAAW,YACXH,EAAW,WACXL,EAAU,YACVG,EAAW,cACXD,GAEJ4D,eAAe,OAAEC,GAAQ,gBACzBhF,EAAe,aACf7B,GACA,EAAQ,OACN,UAAEmI,GAAc,EAAQ,MACxBC,EAAY,EAAQ,MACpBC,EAAY,EAAQ,OACpB,UAAEC,GAAc,EAAQ,MACxBC,EAAY,EAAQ,MACpBC,EAAY,EAAQ,MACpBC,EAAY,EAAQ,OACpB,WACFC,EAAU,SACVC,EAAQ,gBACRC,GACA,EAAQ,MACNC,EAAY,EAAQ,OACpB,cAAEnF,GAAkB,EAAQ,MAC5BoF,EAAY,EAAQ,MACpBC,EAAY,EAAQ,OACpB,IAAEC,GAAQ,EAAQ,MAClBC,EAAYT,EAAQS,OACpBC,EAAYV,EAAQU,SAEpBC,EAAe,SAASnM,GAC1BA,EAAEoM,MACFjB,EAAUnL,EAAGA,EAAEoM,KAAOpM,EAAEqM,GAAGD,IAAK,mBAG9BE,EAAkB,SAAStM,EAAGuM,GAChCpB,EAAUnL,EAAGuM,EAAKvM,EAAEoM,IAAMpM,EAAEqM,GAAGG,QAAU,qCAGvCC,EAAmB,SAAS3J,GAC9B,IAAKA,EAAG,MAAMI,UAAU,qBAGtBwJ,EAA0B,SAASH,GACrCE,EAA8B,iBAANF,IAAqB,EAAFA,KAASA,IAGlDI,EAAU,SAASC,GACrB,OAAOA,IAAMpB,EAAQqB,gBAqBnBC,EAAa,SAAS9M,EAAGpG,GAC3B,IAAIyS,EAAKrM,EAAEqM,GACX,GAAIzS,EAAM,EAAG,CACT,IAAIgT,EAAIP,EAAGG,QAAU5S,EAErB,OADAuR,EAAUnL,EAAGpG,GAAOyS,EAAGD,KAAOC,EAAGG,QAAU,GAAI,sBAC3CI,GAAK5M,EAAEoM,IAAYZ,EAAQqB,eACnB7M,EAAE+M,MAAMH,GACjB,OAAIhT,EAAM+M,GACbwE,EAAUnL,EAAW,IAARpG,IAAcA,GAAOoG,EAAEoM,IAAK,iBAClCpM,EAAE+M,MAAM/M,EAAEoM,IAAMxS,IAChBA,IAAQ+M,EACR3G,EAAEgN,IAAIC,YAGb9B,EAAUnL,GADVpG,EAAM+M,EAAoB/M,IACN2R,EAAM2B,SAAW,EAAG,2BACpCb,EAAGc,KAAKC,UACD5B,EAAQqB,eAERjT,GAAOyS,EAAGc,KAAKtJ,MAAMwJ,UAAYhB,EAAGc,KAAKtJ,MAAMyJ,QAAQ1T,EAAM,GAAK4R,EAAQqB,iBAMvFU,GAAc,SAASvN,EAAGpG,GAC5B,IAAIyS,EAAKrM,EAAEqM,GACX,GAAIzS,EAAM,EAAG,CACT,IAAIgT,EAAIP,EAAGG,QAAU5S,EAErB,OADAuR,EAAUnL,EAAGpG,GAAOyS,EAAGD,KAAOC,EAAGG,QAAU,GAAI,sBAC3CI,GAAK5M,EAAEoM,IAAY,KACXQ,EACT,GAAIhT,EAAM+M,EAEb,OADAwE,EAAUnL,EAAW,IAARpG,IAAcA,GAAOoG,EAAEoM,IAAK,iBAClCpM,EAAEoM,IAAMxS,EAEf,MAAMpC,MAAM,gCA8DdgW,GAAa,SAASxN,EAAGpG,GAC3B,IACI6T,EADAN,EAAOnN,EAAEqM,GAAGG,QAEZ5S,GAAO,GACPuR,EAAUnL,EAAGpG,GAAOoG,EAAE0N,YAAcP,EAAO,GAAI,qBAC/CM,EAASN,EAAO,EAAIvT,IAEpBuR,EAAUnL,IAAKpG,EAAM,IAAMoG,EAAEoM,KAAOe,EAAO,GAAI,mBAC/CM,EAASzN,EAAEoM,IAAMxS,EAAM,GAE3ByR,EAAIsC,WAAW3N,EAAGyN,IAGhBvM,GAAU,SAASlB,EAAGuM,GACxBiB,GAAWxN,GAAIuM,EAAI,IAGjBqB,GAAU,SAAS5N,EAAG+B,EAAM+B,GAC9B,KAAO/B,EAAO+B,EAAI/B,IAAQ+B,IAAM,CAC5B,IAAI+J,EAAS7N,EAAE+M,MAAMhL,GACjB+L,EAAO,IAAI7B,EAAO4B,EAAO/U,KAAM+U,EAAOhK,OAC1C2H,EAAQuC,UAAU/N,EAAG+B,EAAM+B,GAC3B0H,EAAQwC,SAAShO,EAAG8D,EAAIgK,KAQ1BG,GAAa,SAASjO,EAAGpG,EAAK2S,GAChC,IAAIrR,EAAI8E,EAAEoM,IAAM,EACZ8B,EAAOX,GAAYvN,EAAGpG,GACtBuU,EAAInO,EAAE+M,MAAMmB,GAChB/C,EAAUnL,EAAG2M,EAAQwB,IAAMvU,EAAM+M,EAAmB,0BACpDwE,EAAUnL,GAAIuM,GAAK,EAAIA,GAAKA,IAAOrR,EAAIgT,EAAO,EAAI,eAClD,IAAIE,EAAI7B,GAAK,EAAIrR,EAAIqR,EAAI2B,EAAO3B,EAAI,EACpCqB,GAAQ5N,EAAGkO,EAAME,GACjBR,GAAQ5N,EAAGoO,EAAI,EAAGpO,EAAEoM,IAAM,GAC1BwB,GAAQ5N,EAAGkO,EAAMlO,EAAEoM,IAAM,IAGvBiC,GAAW,SAASrO,EAAGsO,EAASC,GAClC,IAAIxM,EAAO+K,EAAW9M,EAAGsO,GACzBxB,EAAW9M,EAAGuO,GAAOC,QAAQzM,IA6F3B0M,GAAmB,SAASzO,EAAG0O,EAAInC,GAGrC,GAFAE,EAA+B,mBAAPiC,GACxBhC,EAAwBH,GACd,IAANA,EACAvM,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIH,EAAOzF,EAAUkI,OACrC,CACDpC,EAAgBtM,EAAGuM,GACnBpB,EAAUnL,EAAGuM,GAAKhB,EAAM2B,SAAU,2BAClC,IAAIyB,EAAK,IAAIzC,EAASlM,EAAG0O,EAAInC,GAC7B,IAAK,IAAI5R,EAAE,EAAGA,EAAE4R,EAAG5R,IACfgU,EAAGrB,QAAQ3S,GAAG6T,QAAQxO,EAAE+M,MAAM/M,EAAEoM,IAAMG,EAAI5R,IAC9C,IAAK,IAAIA,EAAE,EAAGA,EAAE4R,EAAG5R,WACRqF,EAAE+M,QAAQ/M,EAAEoM,KACnBG,EAAE,KACAvM,EAAEoM,IACRpM,EAAE+M,MAAM/M,EAAEoM,KAAKwC,YAAYD,GAE/BxC,EAAanM,IAGX6O,GAAoBJ,GAEpBK,GAAoB,SAAS9O,EAAG0O,GAClCD,GAAiBzO,EAAG0O,EAAI,IAGtBK,GAAqBD,GA6BrBE,GAAY,SAAShP,EAAG9E,EAAG+T,GAC7B,IAAI3W,EAAMqT,EAAS3L,EAAG6E,EAAgBoK,IACtC3C,EAAgBtM,EAAG,GACnBwL,EAAQ0D,aAAalP,EAAG1H,GACxB6S,EAAUnL,EAAGA,EAAEoM,KAAOpM,EAAEqM,GAAGD,IAAK,kBAChCN,EAAIqD,SAASnP,EAAG9E,EAAG8E,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAIpM,EAAE+M,MAAM/M,EAAEoM,IAAM,WAEhDpM,EAAE+M,QAAQ/M,EAAEoM,YACZpM,EAAE+M,QAAQ/M,EAAEoM,MAGjBgD,GAAgB,SAASpP,EAAG8I,GAC9BkG,GAAUhP,EAAG+L,EAAOsD,YAAYrP,EAAEgN,IAAIC,WAAWpJ,MAAO2E,GAAmBM,IAyFzEwG,GAAY,SAAStP,EAAG9E,EAAG+T,GAC7B,IAAI3W,EAAMqT,EAAS3L,EAAG6E,EAAgBoK,IAItC,OAHAzD,EAAQ0D,aAAalP,EAAG1H,GACxB6S,EAAUnL,EAAGA,EAAEoM,KAAOpM,EAAEqM,GAAGD,IAAK,kBAChCN,EAAIyD,cAAcvP,EAAG9E,EAAG8E,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAIpM,EAAEoM,IAAM,GAC7CpM,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAGoD,SAGxBC,GAAc,SAASzP,EAAGpG,EAAK2S,GACjC,IAAIrR,EAAI4R,EAAW9M,EAAGpG,GAKtB,OAJA8S,EAAwBH,GACxBpB,EAAUnL,EAAG9E,EAAEwU,YAAa,kBAC5BlE,EAAQmE,UAAU3P,EAAG+L,EAAOsD,YAAYnU,EAAE2I,MAAO0I,IACjDpB,EAAUnL,EAAGA,EAAEoM,KAAOpM,EAAEqM,GAAGD,IAAK,kBACzBpM,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAGoD,SAoBxBI,GAAkB,SAAS5P,EAAG6P,EAAQC,GACxC,IAAI5U,EAAI,IAAIsQ,EAAQS,OAAOnG,EAAYiG,EAAOgE,SAAS/P,IACvDA,EAAE+M,MAAM/M,EAAEoM,KAAOlR,EACjBiR,EAAanM,IAcXgQ,GAAc,SAAShQ,EAAGiQ,EAAI1D,GAEhC,OADAG,EAAwBH,GACjB0D,EAAGC,SACN,KAAKzJ,EAAU,CACX,IAAI0J,EAAIF,EAAGpM,MACX,OAAM,GAAK0I,GAAKA,GAAK4D,EAAE9C,UAChB,CACHvE,KAAM9F,EAAa,IAAI,GACvBoN,IAAKD,EAAE7C,QAAQf,EAAE,IAHqB,KAM9C,KAAKhG,EAAU,CACX,IAAI4J,EAAIF,EAAGpM,MACPsK,EAAIgC,EAAEhC,EACV,KAAM,GAAK5B,GAAKA,GAAK4B,EAAEkC,SAASpX,QAAS,OAAO,KAChD,IAAI6P,EAAOqF,EAAEkC,SAAS9D,EAAE,GAAGzD,KAC3B,MAAO,CACHA,KAAMA,EAAOA,EAAKwH,SAAWtN,EAAa,cAAc,GACxDoN,IAAKD,EAAEI,OAAOhE,EAAE,IAGxB,QAAS,OAAO,OAuGlBiE,GAAgB,SAASxQ,EAAGpG,GAC9B,IAAIgT,EAAIE,EAAW9M,EAAGpG,GAEtB,IAAKgT,EAAE6D,aAAc,CACjB,IAAK3E,EAAI4E,QAAQ9D,GACb,OAAO,KAEXpB,EAAQmF,cAAc3Q,EAAG4M,GAE7B,OAAOA,EAAEgE,UAGPC,GAAgBL,GA6ChBM,GAAiB,SAAS9Q,EAAGpG,GAC/B,OAAOkS,EAAIiF,UAAUjE,EAAW9M,EAAGpG,KAQjCoX,GAAgB,SAAShR,EAAGpG,GAC9B,OAAOkS,EAAImF,SAASnE,EAAW9M,EAAGpG,KAuChCsX,GAAO,IAAIC,QAwDXC,GAAS,SAASpR,EAAGqR,GACvBhG,EAAIiG,iBAAiBtR,EAAGqR,EAAG7E,QAAS6E,EAAGE,WAGrCC,GAAW,SAASxR,EAAGpG,GACzB,IAAIgT,EAAIE,EAAW9M,EAAGpG,GACtB,OAAO+S,EAAQC,GAAMA,EAAE4C,QAAUhK,GAsF/BiM,GAAoBzO,EAAa,KAuCjC0O,GAAe,SAAS1R,EAAE2R,EAAGC,GAC/BzG,EAAUnL,EAAG4R,IAAOtK,GAAgBtH,EAAEqM,GAAGD,IAAMpM,EAAEoM,KAAO,EAAO,EAC3D,sDAGFyF,GAAY,SAAS7R,EAAG8R,EAAOP,EAAUQ,EAAK9C,GAChD9D,EAAUnL,EAAS,OAANiP,KAAgBjP,EAAEqM,GAAG2F,WAAavG,EAAOwG,UAAW,yCACjE3F,EAAgBtM,EAAG8R,EAAQ,GAC3B3G,EAAUnL,EAAGA,EAAEkS,SAAWrI,EAAQ,wCAClC6H,GAAa1R,EAAG8R,EAAOP,GACvB,IAAIpE,EAAOnN,EAAEoM,KAAO0F,EAAQ,GAClB,OAAN7C,GAAwB,IAAVjP,EAAEmS,KAChBnS,EAAEqM,GAAG+F,IAAMnD,EACXjP,EAAEqM,GAAGgG,MAAQN,EACb1G,EAAIiH,UAAUtS,EAAGmN,EAAMoE,IAEvBlG,EAAIiG,iBAAiBtR,EAAGmN,EAAMoE,GAG9BA,IAAajK,GAAetH,EAAEqM,GAAGD,IAAMpM,EAAEoM,MACzCpM,EAAEqM,GAAGD,IAAMpM,EAAEoM,MAOfmG,GAAa,SAASvS,EAAG8R,EAAOP,EAAUiB,EAAST,EAAK9C,GAK1D,IAAIiD,EACA/E,EALJhC,EAAUnL,EAAS,OAANiP,KAAgBjP,EAAEqM,GAAG2F,WAAavG,EAAOwG,UAAW,yCACjE3F,EAAgBtM,EAAG8R,EAAQ,GAC3B3G,EAAUnL,EAAGA,EAAEkS,SAAWrI,EAAQ,wCAClC6H,GAAa1R,EAAG8R,EAAOP,GAInBpE,EADY,IAAZqF,EACO,EAEAjF,GAAYvN,EAAGwS,GAE1B,IAAIhG,EAAUxM,EAAEoM,KAAO0F,EAAQ,GAC/B,GAAU,OAAN7C,GAAcjP,EAAEmS,IAAM,EAAG,CACzB,IAAIrP,EAAI,CACJ0J,QAASA,EACT+E,SAAUA,GAEdW,EAAS7G,EAAIoH,WAAWzS,EAAGoR,GAAQtO,EAAG0J,EAASW,OAC5C,CACH,IAAId,EAAKrM,EAAEqM,GACXA,EAAG+F,IAAMnD,EACT5C,EAAGgG,MAAQN,EAEX1F,EAAGqG,MAAQlG,EACXH,EAAGsG,cAAgB3S,EAAEwS,QACrBxS,EAAEwS,QAAUrF,EACZd,EAAG2F,aAAevG,EAAOmH,SAAW5S,EAAE6S,UACtCxG,EAAG2F,YAAcvG,EAAOqH,YACxBzH,EAAIiH,UAAUtS,EAAGwM,EAAS+E,GAC1BlF,EAAG2F,aAAevG,EAAOqH,YACzB9S,EAAEwS,QAAUnG,EAAGsG,cACfT,EAASrI,EAMb,OAHI0H,IAAajK,GAAetH,EAAEqM,GAAGD,IAAMpM,EAAEoM,MACzCpM,EAAEqM,GAAGD,IAAMpM,EAAEoM,KAEV8F,GAiDLa,GAAc,SAAS/S,EAAGgT,EAAMzG,GAClC,IAAI0D,EAAKnD,EAAW9M,EAAGgT,GACvB7H,EAAUnL,EAAGiQ,EAAGgD,eAAgB,yBAChC,IAAI9C,EAAIF,EAAGpM,MAGX,OAFA6I,EAAwBH,GACxBpB,EAAUnL,EAAG,GAAKuM,GAAKA,GAAK4D,EAAEhC,EAAEkC,SAASpX,OAAQ,yBAC1C,CACHkX,EAAGA,EACHxV,EAAG4R,EAAI,IAgDf/I,EAAOC,QAAQ0I,aAAwBA,EACvC3I,EAAOC,QAAQ6I,gBAAwBA,EACvC9I,EAAOC,QAAQyP,aAp7BM,SAASlT,EAAGpG,GAC7B,OAAQA,EAAM,GAAKA,GAAO+M,EACpB/M,EACCoG,EAAEoM,IAAMpM,EAAEqM,GAAGG,QAAW5S,GAk7BnC4J,EAAOC,QAAQ0P,UArOG,SAASnT,EAAGoT,GACtBA,IAAO7K,GAAa6K,IAAO3L,EAC3B6E,EAAgBtM,EAAG,IAEnBsM,EAAgBtM,EAAG,GACnBwL,EAAQmE,UAAU3P,EAAGA,EAAE+M,MAAM/M,EAAEoM,IAAI,IACnCjB,EAAUnL,EAAGA,EAAEoM,KAAOpM,EAAEqM,GAAGD,IAAK,mBAGpCZ,EAAQ6H,WAAWrT,EAAGoT,EAAIpT,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAIpM,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAIpM,EAAE+M,MAAM/M,EAAEoM,IAAM,WAC3EpM,EAAE+M,QAAQ/M,EAAEoM,MA4NvB5I,EAAOC,QAAQjD,YArhCK,SAASR,EAAGsT,GAC5B,IAAIC,EAAMvT,EAAEgN,IAAIwG,MAEhB,OADAxT,EAAEgN,IAAIwG,MAAQF,EACPC,GAmhCX/P,EAAOC,QAAQgQ,kBAhhCW,SAASzT,EAAG0T,GAClC,IAAIH,EAAMvT,EAAEgN,IAAI2G,cAEhB,OADA3T,EAAEgN,IAAI2G,cAAgBD,EACfH,GA8gCX/P,EAAOC,QAAQjC,SAzJE,SAASxB,EAAGuM,EAAGpK,GAC5B0P,GAAU7R,EAAGuM,EAAGpK,EAAG,EAAG,OAyJ1BqB,EAAOC,QAAQoO,UAAwBA,GACvCrO,EAAOC,QAAQmQ,eAr+BQ,SAAS5T,EAAGuM,GAC/B,IAAIsH,EACAxH,EAAKrM,EAAEqM,GAiBX,OAhBAlB,EAAUnL,EAAGuM,GAAK,EAAG,gBACjBvM,EAAE0N,WAAa1N,EAAEoM,IAAMG,EACvBsH,GAAM,EAEM7T,EAAEoM,IAAMX,EAAOqI,YACfpN,EAAgB6F,EACxBsH,GAAM,GAENxI,EAAI0I,eAAe/T,EAAGuM,GACtBsH,GAAM,GAIVA,GAAOxH,EAAGD,IAAMpM,EAAEoM,IAAMG,IACxBF,EAAGD,IAAMpM,EAAEoM,IAAMG,GAEdsH,GAm9BXrQ,EAAOC,QAAQuQ,YAlVK,SAAShU,EAAGiU,EAAQC,EAAQd,GAC5C,IAAIe,EAAKrH,EAAW9M,EAAGiU,GACnBG,EAAKtH,EAAW9M,EAAGkU,GAEnBvZ,EAAI,EAER,GAAIgS,EAAQwH,IAAOxH,EAAQyH,GACvB,OAAQhB,GACJ,KAAKvL,EAAUlN,EAAImR,EAAIuI,cAAcrU,EAAGmU,EAAIC,GAAK,MACjD,KAAKpM,EAAUrN,EAAImR,EAAIwI,cAActU,EAAGmU,EAAIC,GAAK,MACjD,KAAKrM,EAAUpN,EAAImR,EAAIyI,eAAevU,EAAGmU,EAAIC,GAAK,MAClD,QAASjJ,EAAUnL,GAAG,EAAO,kBAIrC,OAAOrF,GAoUX6I,EAAOC,QAAQ+Q,WApFI,SAASxU,EAAGuM,GAC3BD,EAAgBtM,EAAGuM,GACfA,GAAK,EACLT,EAAI2I,YAAYzU,EAAGuM,GACR,IAANA,IACLf,EAAQ0D,aAAalP,EAAG0L,EAAW1L,EAAGgD,EAAa,IAAI,KACvDmI,EAAUnL,EAAGA,EAAEoM,KAAOpM,EAAEqM,GAAGD,IAAK,oBA+ExC5I,EAAOC,QAAQ4K,SAAwBA,GACvC7K,EAAOC,QAAQmM,gBAAwBA,GACvCpM,EAAOC,QAAQiR,SA3ME,SAAS1U,EAAG2U,EAAQC,EAAMC,GACvCvI,EAAgBtM,EAAG,GACnB,IAAI4M,EAAI5M,EAAE+M,MAAM/M,EAAEoM,IAAK,GACvB,OAAIQ,EAAEqG,eACK3H,EAAUtL,EAAG4M,EAAE/I,MAAMsK,EAAGwG,EAAQC,EAAMC,GAC1C,GAuMXrR,EAAOC,QAAQqR,UA5GG,SAAS9U,GACvBsM,EAAgBtM,EAAG,GACnBoL,EAAO2J,cAAc/U,IA2GzBwD,EAAOC,QAAQuR,OAhCA,aAiCfxR,EAAOC,QAAQwR,cA/BO,WAElB,OADA5X,QAAQ6X,KAAK,kCACN,GA8BX1R,EAAOC,QAAQ0R,kBAtBW,WAEtB,OADA9X,QAAQ6X,KAAK,sCACN,GAqBX1R,EAAOC,QAAQ2R,aA3fM,SAASpV,EAAGpG,EAAKqV,GAClC,OAAOK,GAAUtP,EAAG8M,EAAW9M,EAAGpG,GAAMqV,IA2f5CzL,EAAOC,QAAQnC,cA/eO,SAAStB,EAAG8I,GAC9B,OAAOwG,GAAUtP,EAAG+L,EAAOsD,YAAYrP,EAAEgN,IAAIC,WAAWpJ,MAAO2E,GAAmBM,IA+etFtF,EAAOC,QAAQ4R,SAzfE,SAASrV,EAAGpG,EAAK2S,GAC9B,IAAIrR,EAAI4R,EAAW9M,EAAGpG,GAKtB,OAJA8S,EAAwBH,GACxBvM,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIH,EAAO3F,EAAaiG,GACzCJ,EAAanM,GACb8L,EAAIyD,cAAcvP,EAAG9E,EAAG8E,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAIpM,EAAEoM,IAAM,GAC7CpM,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAGoD,SAof9BhM,EAAOC,QAAQ6R,iBApiBU,SAAStV,EAAGuV,GACjC,IACIC,EADAC,EAAM3I,EAAW9M,EAAGuV,GAEpB1B,GAAM,EACV,OAAQ4B,EAAIjG,SACR,KAAK1J,EACL,KAAKE,EACDwP,EAAKC,EAAI5R,MAAM6R,UACf,MACJ,QACIF,EAAKxV,EAAEgN,IAAIwI,GAAGC,EAAIjG,SAU1B,OANIgG,UACAxV,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIH,EAAOnG,EAAY0P,GACxCrJ,EAAanM,GACb6T,GAAM,GAGHA,GAihBXrQ,EAAOC,QAAQkS,aArgBM,SAAS3V,EAAGpG,GAC7B,IAAIsB,EAAI4R,EAAW9M,EAAGpG,GAEtB,OADAkS,EAAIyD,cAAcvP,EAAG9E,EAAG8E,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAIpM,EAAEoM,IAAM,GAC7CpM,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAGoD,SAmgB9BhM,EAAOC,QAAQ/C,WAn8BI,SAASV,GACxB,OAAOA,EAAEoM,KAAOpM,EAAEqM,GAAGG,QAAU,IAm8BnChJ,EAAOC,QAAQmS,eA1kBQ,SAAS5V,EAAG6V,EAAWtJ,GAC1C,IAAIuJ,EAAK9F,GAAYhQ,EAAG8M,EAAW9M,EAAG6V,GAAYtJ,GAClD,GAAIuJ,EAAI,CACJ,IAAIhN,EAAOgN,EAAGhN,KACVsH,EAAM0F,EAAG1F,IAGb,OAFA5E,EAAQmE,UAAU3P,EAAGoQ,GACrBjF,EAAUnL,EAAGA,EAAEoM,KAAOpM,EAAEqM,GAAGD,IAAK,kBACzBtD,EAEX,OAAO,MAkkBXtF,EAAOC,QAAQsS,iBAjhBU,SAAS/V,EAAGpG,GACjC,IAAIgT,EAAIE,EAAW9M,EAAGpG,GACtBuR,EAAUnL,EAAG4M,EAAEoJ,mBAAoB,0BACnC,IAAIC,EAAKrJ,EAAE/I,MAAMqS,UAGjB,OAFAlW,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIH,EAAOgK,EAAGnd,KAAMmd,EAAGpS,OACxCsI,EAAanM,GACNA,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAGoD,SA4gB9BhM,EAAOC,QAAQ0S,WAz4BI,SAASnW,EAAGpG,GAC3BqU,GAAWjO,EAAGpG,EAAK,IAy4BvB4J,EAAOC,QAAQ2S,cAjTO,SAASpW,EAAGuM,GAC9B,OAAOiF,GAASxR,EAAGuM,KAAO7G,GAiT9BlC,EAAOC,QAAQ4S,gBA3TS,SAASrW,EAAGpG,GAChC,IAAIgT,EAAIE,EAAW9M,EAAGpG,GACtB,OAAOgT,EAAEQ,QAAQR,IAAMA,EAAE0J,gBA0T7B9S,EAAOC,QAAQ8S,eA7QQ,SAASvW,EAAGpG,GAC/B,OAAO4X,GAASxR,EAAGpG,KAASmM,GA6QhCvC,EAAOC,QAAQ+S,cApSO,SAASxW,EAAGpG,GAC9B,OAAOkT,EAAW9M,EAAGpG,GAAK6c,eAoS9BjT,EAAOC,QAAQiT,oBA3Qa,SAAS1W,EAAGpG,GACpC,OAAO4X,GAASxR,EAAGpG,KAAS+L,GA2QhCnC,EAAOC,QAAQkT,UA1TG,SAAS3W,EAAGuM,GAC1B,OAAOiF,GAASxR,EAAGuM,KAAO9G,GA0T9BjC,EAAOC,QAAQmT,WAnTI,SAAS5W,EAAGuM,GAC3B,OAAOiF,GAASxR,EAAGuM,KAAO/G,GAmT9BhC,EAAOC,QAAQoT,gBAhTS,SAAS7W,EAAGuM,GAChC,OAAOiF,GAASxR,EAAGuM,IAAM,GAgT7B/I,EAAOC,QAAQqT,aArSM,SAAS9W,EAAGpG,GAC7B,OAA4C,IAArCkS,EAAImF,SAASnE,EAAW9M,EAAGpG,KAqStC4J,EAAOC,QAAQsT,YAtYK,SAAS5I,EAAGnO,GAC5B,IAAIgX,EAAI9F,GAAK+F,IAAI9I,GACjB,QAAK6I,IAES,OAANhX,GAAgBA,EAAEgN,MAAQgK,IAmYtCxT,EAAOC,QAAQyT,aAnSM,SAASlX,EAAGpG,GAC7B,IAAIgT,EAAIE,EAAW9M,EAAGpG,GACtB,OAAOgT,EAAE6D,cAAgB3E,EAAI4E,QAAQ9D,IAkSzCpJ,EAAOC,QAAQ0T,YAhTK,SAASnX,EAAGpG,GAC5B,OAAOkT,EAAW9M,EAAGpG,GAAK8V,aAgT9BlM,EAAOC,QAAQ2T,aA3RM,SAASpX,EAAGpG,GAC7B,OAAO4X,GAASxR,EAAGpG,KAASqM,GA2RhCzC,EAAOC,QAAQ4T,eAjSQ,SAASrX,EAAGpG,GAC/B,IAAIgT,EAAIE,EAAW9M,EAAGpG,GACtB,OAAOgT,EAAEoJ,iBAAiBpJ,IAAMA,EAAE0K,qBAgStC9T,EAAOC,QAAQ8T,QAzGC,SAASvX,EAAGpG,GACxB,IAAIsB,EAAI4R,EAAW9M,EAAGpG,GAClB4d,EAAK,IAAIvL,EACbH,EAAI2L,YAAYzX,EAAGwX,EAAItc,GACvB8E,EAAE+M,MAAM/M,EAAEoM,KAAOoL,EACjBrL,EAAanM,IAqGjBwD,EAAOC,QAAQiU,SA1PE,SAAS1X,EAAG2X,EAAQ/C,EAAMgD,EAAWC,GAE7CD,EADAA,EACY/S,EAAgB+S,GADLnG,GAEf,OAAToG,IAAeA,EAAOhT,EAAgBgT,IAC1C,IAAIC,EAAI,IAAI9L,EAAIhM,EAAG2X,EAAQ/C,GACvB1C,EAAS7G,EAAI0M,qBAAqB/X,EAAG8X,EAAGF,EAAWC,GACvD,GAAI3F,IAAWrI,EAAQ,CACnB,IAAIsG,EAAInQ,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAGvI,MAC3B,GAAIsM,EAAE9C,WAAa,EAAG,CAElB,IAAI2K,EAAKjM,EAAOsD,YAAYrP,EAAEgN,IAAIC,WAAWpJ,MAAO2E,GAEpD2H,EAAEI,OAAO,GAAG/B,QAAQwJ,IAG5B,OAAO9F,GA4OX1O,EAAOC,QAAQwU,aAnkBM,SAASjY,GAC1B4P,GAAgB5P,IAmkBpBwD,EAAOC,QAAQyU,gBA9nBS,SAASlY,EAAGmY,GAChC,IAAI5U,EALc,SAASvD,EAAGmY,GAC9B,OAAO,IAAI3M,EAAQ4M,MAAMpY,EAAGmY,GAIpBE,CAAcrY,EAAGmY,GAGzB,OAFAnY,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIZ,EAAQS,OAAOjG,EAAezC,GACnD4I,EAAanM,GACNuD,EAAEqR,MA2nBbpR,EAAOC,QAAQ6U,SAtIE,SAAStY,EAAGpG,GACzB,IAAIsB,EAAI4R,EAAW9M,EAAGpG,GAItB,OAHAuR,EAAUnL,EAAG9E,EAAEwU,YAAa,kBAC5B1P,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIH,EACVF,EAAOwM,UAAUvY,EAAG9E,EAAE2I,MAAO7D,EAAEoM,IAAM,IAE5CD,EAAanM,GACN,WAEAA,EAAE+M,MAAM/M,EAAEoM,YACVpM,EAAE+M,QAAQ/M,EAAEoM,KACZ,IA4Hf5I,EAAOC,QAAQ+U,UApJG,SAASxY,EAAGuM,EAAGpK,EAAGgO,GAChC,OAAOoC,GAAWvS,EAAGuM,EAAGpK,EAAGgO,EAAG,EAAG,OAoJrC3M,EAAOC,QAAQ8O,WAAwBA,GACvC/O,EAAOC,QAAQvC,QAAwBA,GACvCsC,EAAOC,QAAQgV,gBA/yBS,SAASzY,EAAG2D,GAChC3D,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIH,EAAOvG,IAAgB/B,GAC5CwI,EAAanM,IA8yBjBwD,EAAOC,QAAQgL,iBAAwBA,GACvCjL,EAAOC,QAAQqL,kBAAwBA,GACvCtL,EAAOC,QAAQiV,gBAn2BS,SAAU1Y,EAAG2Y,KAAQC,GAEzC,OADAD,EAAM9T,EAAgB8T,GACfnN,EAAQqN,kBAAkB7Y,EAAG2Y,EAAKC,IAk2B7CpV,EAAOC,QAAQqV,oBAnyBa,SAAS9Y,GACjCyP,GAAYzP,EAAG2G,EAAmB6B,IAmyBtChF,EAAOC,QAAQqH,gBA74BS,SAAS9K,EAAGuM,GAChCG,EAAwBH,GACxBvM,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIH,EAAO3F,EAAaiG,GACzCJ,EAAanM,IA24BjBwD,EAAOC,QAAQoL,kBAAwBA,GACvCrL,EAAOC,QAAQsL,mBAAwBA,GACvCvL,EAAOC,QAAQsV,sBAlzBe,SAAS/Y,EAAGmO,GACtCnO,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIH,EAAOtG,EAAoBwI,GAChDhC,EAAanM,IAizBjBwD,EAAOC,QAAQsH,gBAn2BS,SAAU/K,EAAGoC,GACjC,GAAIA,QACApC,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIH,EAAOxG,EAAU,MACtCzF,EAAEoM,UACC,CACHK,EAA8B,iBAANrK,GACxB,IAAI4W,EAAKpN,EAAgB5L,EAAGoC,GAC5BoJ,EAAQ0D,aAAalP,EAAGgZ,GACxB5W,EAAI4W,EAAG1I,SAIX,OAFAnF,EAAUnL,EAAGA,EAAEoM,KAAOpM,EAAEqM,GAAGD,IAAK,kBAEzBhK,GAw1BXoB,EAAOC,QAAQwV,gBA54BS,SAASjZ,EAAGoC,EAAGF,GAEnC,IAAI8W,EAWJ,OAZAtM,EAAwBxK,GAEZ,IAARA,GACAE,EAAIY,EAAa,IAAI,GACrBgW,EAAKtN,EAAW1L,EAAGoC,KAEnBA,EAAIyC,EAAgBzC,GACpB+I,EAAUnL,EAAGoC,EAAEnJ,QAAUiJ,EAAK,qCAC9B8W,EAAKrN,EAAS3L,EAAGoC,EAAE8W,SAAS,EAAGhX,KAEnCsJ,EAAQ0D,aAAalP,EAAGgZ,GACxB7N,EAAUnL,EAAGA,EAAEoM,KAAOpM,EAAEqM,GAAGD,IAAK,kBACzB4M,EAAGnV,OAg4BdL,EAAOC,QAAQ0V,YA95BK,SAASnZ,GACzBA,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIH,EAAOxG,EAAU,MACtC0G,EAAanM,IA65BjBwD,EAAOC,QAAQ/B,eA15BQ,SAAS1B,EAAGuM,GAC/BE,EAA8B,iBAANF,GACxBvM,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIH,EAAO5F,EAAakG,GACzCJ,EAAanM,IAw5BjBwD,EAAOC,QAAQlC,eA/3BQ,SAAUvB,EAAGoC,GAChC,GAAIA,QACApC,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIH,EAAOxG,EAAU,MACtCzF,EAAEoM,UACC,CACH,IAAI4M,EAAKrN,EAAS3L,EAAG6E,EAAgBzC,IACrCoJ,EAAQ0D,aAAalP,EAAGgZ,GACxB5W,EAAI4W,EAAG1I,SAGX,OADAnF,EAAUnL,EAAGA,EAAEoM,KAAOpM,EAAEqM,GAAGD,IAAK,kBACzBhK,GAs3BXoB,EAAOC,QAAQ2V,eAnzBQ,SAASpZ,GAG5B,OAFAA,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIH,EAAOhG,EAAajG,GACzCmM,EAAanM,GACNA,EAAEgN,IAAIqM,aAAerZ,GAizBhCwD,EAAOC,QAAQ6V,cAx+BO,SAAStZ,EAAGpG,GAC9B4R,EAAQmE,UAAU3P,EAAG8M,EAAW9M,EAAGpG,IACnCuR,EAAUnL,EAAGA,EAAEoM,KAAOpM,EAAEqM,GAAGD,IAAK,mBAu+BpC5I,EAAOC,QAAQ8V,iBAr3BU,SAAUvZ,EAAG2Y,EAAKC,GAEvC,OADAD,EAAM9T,EAAgB8T,GACfnN,EAAQqN,kBAAkB7Y,EAAG2Y,EAAKC,IAo3B7CpV,EAAOC,QAAQ+V,aA1SM,SAASxZ,EAAGiU,EAAQC,GACrC,IAAIC,EAAKrH,EAAW9M,EAAGiU,GACnBG,EAAKtH,EAAW9M,EAAGkU,GACvB,OAAOvH,EAAQwH,IAAOxH,EAAQyH,GAAMtI,EAAIuI,cAAc,KAAMF,EAAIC,GAAM,GAwS1E5Q,EAAOC,QAAQgW,WAvqBI,SAASzZ,EAAGpG,GAC3B,IAAIsB,EAAI4R,EAAW9M,EAAGpG,GAGtB,OAFAuR,EAAUnL,EAAG9E,EAAEwU,UAAUxU,GAAI,kBAC7BsQ,EAAQwC,SAAShO,EAAGA,EAAEoM,IAAM,EAAGL,EAAO2N,SAAS1Z,EAAG9E,EAAE2I,MAAO7D,EAAE+M,MAAM/M,EAAEoM,IAAM,KACpEpM,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAGoD,SAoqB9BhM,EAAOC,QAAQgM,YAAwBA,GACvCjM,EAAOC,QAAQkW,YAlrBK,SAAS3Z,EAAGpG,EAAKuU,GACjC,IAAIjT,EAAI4R,EAAW9M,EAAGpG,GACtBuR,EAAUnL,EAAG9E,EAAEwU,YAAa,kBAC5B,IAAIT,EAAI,IAAIhD,EAAOtG,EAAoBwI,GAGvC,OAFA3C,EAAQmE,UAAU3P,EAAG+L,EAAO2N,SAAS1Z,EAAG9E,EAAE2I,MAAOoL,IACjD9D,EAAUnL,EAAGA,EAAEoM,KAAOpM,EAAEqM,GAAGD,IAAK,kBACzBpM,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAGoD,SA6qB9BhM,EAAOC,QAAQmW,WAtfI,SAAS5Z,EAAGpG,GAC3B,IAAIgT,EAAIE,EAAW9M,EAAGpG,GACtB,OAAQgT,EAAEsD,SACN,KAAK/J,EACL,KAAKC,EACD,OAAOwG,EAAEiN,QACb,KAAK7T,EACD,OAAO4G,EAAE/I,MAAM3B,IACnB,KAAK4D,EACD,OAAOiG,EAAO+N,UAAUlN,EAAE/I,OAC9B,QACI,OAAO,IA4enBL,EAAOC,QAAQsW,WAxuBI,SAAS/Z,EAAGpG,GAC3B0S,EAAgBtM,EAAG,GACnB,IAAI4M,EAAIE,EAAW9M,EAAGpG,GACtBuR,EAAUnL,EAAG4M,EAAE8C,YAAa,kBAC5B,IAAIT,EAAIjP,EAAE+M,MAAM/M,EAAEoM,IAAM,GACpB/J,EAAIrC,EAAE+M,MAAM/M,EAAEoM,IAAM,GACxBL,EAAOiO,aAAaha,EAAG4M,EAAE/I,MAAOoL,EAAG5M,GACnC0J,EAAOkO,kBAAkBrN,EAAE/I,cACpB7D,EAAE+M,QAAQ/M,EAAEoM,YACZpM,EAAE+M,QAAQ/M,EAAEoM,MAguBvB5I,EAAOC,QAAQyW,YA7tBK,SAASla,EAAGpG,EAAK2S,GACjCG,EAAwBH,GACxBD,EAAgBtM,EAAG,GACnB,IAAI4M,EAAIE,EAAW9M,EAAGpG,GACtBuR,EAAUnL,EAAG4M,EAAE8C,YAAa,kBAC5B3D,EAAOoO,YAAYvN,EAAE/I,MAAO0I,EAAGvM,EAAE+M,MAAM/M,EAAEoM,IAAM,WACxCpM,EAAE+M,QAAQ/M,EAAEoM,MAwtBvB5I,EAAOC,QAAQ2W,YArtBK,SAASpa,EAAGpG,EAAKuU,GACjC7B,EAAgBtM,EAAG,GACnB,IAAI4M,EAAIE,EAAW9M,EAAGpG,GACtBuR,EAAUnL,EAAG4M,EAAE8C,YAAa,kBAC5B,IAAIT,EAAI,IAAIhD,EAAOtG,EAAoBwI,GACnC9L,EAAIrC,EAAE+M,MAAM/M,EAAEoM,IAAM,GACxBL,EAAOiO,aAAaha,EAAG4M,EAAE/I,MAAOoL,EAAG5M,UAC5BrC,EAAE+M,QAAQ/M,EAAEoM,MA+sBvB5I,EAAOC,QAAQ5C,aA9lBM,SAASb,EAAGuM,EAAG4D,GAChCrB,GAAkB9O,EAAGmQ,GACrBf,GAAcpP,EAAGuM,IA6lBrB/I,EAAOC,QAAQ4W,WA/7BI,SAASra,EAAGpG,GAC3BqU,GAAWjO,EAAGpG,GAAM,GACpBsH,GAAQlB,EAAG,IA87BfwD,EAAOC,QAAQ6W,YAv7BK,SAASta,EAAGpG,GAC5ByU,GAASrO,GAAI,EAAGpG,GAChBsH,GAAQlB,EAAG,IAs7BfwD,EAAOC,QAAQwK,WAAwBA,GACvCzK,EAAOC,QAAQ8W,cAxFO,WAElB,OADAld,QAAQ6X,KAAK,kCACN,GAuFX1R,EAAOC,QAAQuH,aAhwBM,SAAShL,EAAGpG,EAAKqV,GAClCD,GAAUhP,EAAG8M,EAAW9M,EAAGpG,GAAMqV,IAgwBrCzL,EAAOC,QAAQ2L,cAAwBA,GACvC5L,EAAOC,QAAQ+W,SA9vBE,SAASxa,EAAGpG,EAAK2S,GAC9BG,EAAwBH,GACxBD,EAAgBtM,EAAG,GACnB,IAAI9E,EAAI4R,EAAW9M,EAAGpG,GACtBoG,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIH,EAAO3F,EAAaiG,GACzCJ,EAAanM,GACb8L,EAAIqD,SAASnP,EAAG9E,EAAG8E,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAIpM,EAAE+M,MAAM/M,EAAEoM,IAAM,WAEhDpM,EAAE+M,QAAQ/M,EAAEoM,YACZpM,EAAE+M,QAAQ/M,EAAEoM,MAsvBvB5I,EAAOC,QAAQgX,iBAtyBU,SAASza,EAAGuV,GAEjC,IAAIC,EADJlJ,EAAgBtM,EAAG,GAEnB,IAAIyV,EAAM3I,EAAW9M,EAAGuV,GAQxB,OAPIvV,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAGsO,UACnBlF,EAAK,MAELrK,EAAUnL,EAAGA,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAGsD,YAAa,kBAC7C8F,EAAKxV,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAGvI,OAGpB4R,EAAIjG,SACR,KAAKxJ,EACL,KAAKF,EACD2P,EAAI5R,MAAM6R,UAAYF,EACtB,MAEJ,QACIxV,EAAEgN,IAAIwI,GAAGC,EAAIjG,SAAWgG,EAMhC,cADOxV,EAAE+M,QAAQ/M,EAAEoM,MACZ,GA+wBX5I,EAAOC,QAAQkX,aA5wBM,SAAS3a,EAAGpG,GAC7B0S,EAAgBtM,EAAG,GACnB,IAAI9E,EAAI4R,EAAW9M,EAAGpG,GACtBkS,EAAIqD,SAASnP,EAAG9E,EAAG8E,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAIpM,EAAE+M,MAAM/M,EAAEoM,IAAM,WAChDpM,EAAE+M,QAAQ/M,EAAEoM,YACZpM,EAAE+M,QAAQ/M,EAAEoM,MAwwBvB5I,EAAOC,QAAQ+J,WAAwBA,GACvChK,EAAOC,QAAQmX,eA3nBQ,SAAS5a,EAAG6V,EAAWtJ,GAC1C,IAAI0D,EAAKnD,EAAW9M,EAAG6V,GACvBvJ,EAAgBtM,EAAG,GACnB,IAAI6a,EAAM7K,GAAYhQ,EAAGiQ,EAAI1D,GAC7B,GAAIsO,EAAK,CACL,IAAI/R,EAAO+R,EAAI/R,KAIf,OAHU+R,EAAIzK,IACV5B,QAAQxO,EAAE+M,MAAM/M,EAAEoM,IAAI,WACnBpM,EAAE+M,QAAQ/M,EAAEoM,KACZtD,EAEX,OAAO,MAinBXtF,EAAOC,QAAQqX,iBAxQU,SAAS9a,EAAGpG,GACjC0S,EAAgBtM,EAAG,GACnB,IAAI4M,EAAIE,EAAW9M,EAAGpG,GACtBuR,EAAUnL,EAAG4M,EAAEoJ,mBAAoB,0BACnCpJ,EAAE/I,MAAMqS,UAAU1H,QAAQxO,EAAE+M,MAAM/M,EAAEoM,IAAM,WACnCpM,EAAE+M,QAAQ/M,EAAEoM,MAoQvB5I,EAAOC,QAAQsX,WA7QI,SAAS/a,GACxB,OAAOA,EAAEkS,QA6Qb1O,EAAOC,QAAQuX,mBA/YY,SAAShb,EAAGoC,GACnC,IAAIoV,EAAK,IAAIvL,EACTgP,EAAKzP,EAAQ0P,aAAa9Y,EAAGoV,GAKjC,OAJW,IAAPyD,IACAjb,EAAE+M,MAAM/M,EAAEoM,KAAOoL,EACjBrL,EAAanM,IAEVib,GAyYXzX,EAAOC,QAAQ0X,cA7iBO,SAASnb,EAAGpG,GAE9B,OADQkT,EAAW9M,EAAGpG,GACZwhB,aA4iBd5X,EAAOC,QAAQ4X,gBA3fS,SAASrb,EAAGpG,GAChC,IAAIgT,EAAIE,EAAW9M,EAAGpG,GACtB,OAAIgT,EAAEQ,WAAaR,EAAE0J,eAAuB1J,EAAE/I,MAClC,MAyfhBL,EAAOC,QAAQ6X,eAhhBQ,SAAStb,EAAGpG,GAC/B,IAAI2hB,EAAK/K,GAAcxQ,EAAGpG,GAC1B,OAAO,IAAI4hB,SAASD,EAAGE,OAAQF,EAAGG,WAAYH,EAAGI,aA+gBrDnY,EAAOC,QAAQmY,cAvfO,SAAS5b,EAAGpG,GAC9B,IAAI2S,EAAIuE,GAAe9Q,EAAGpG,GAC1B,OAAa,IAAN2S,EAAc,EAAIA,GAsf7B/I,EAAOC,QAAQqN,eAAwBA,GACvCtN,EAAOC,QAAQhD,eA/hBQ,SAAST,EAAGpG,GAC/B,IAAIgT,EAAIE,EAAW9M,EAAGpG,GAEtB,IAAKgT,EAAE6D,aAAc,CACjB,IAAK3E,EAAI4E,QAAQ9D,GACb,OAAO,KAEXpB,EAAQmF,cAAc3Q,EAAG4M,GAE7B,OAAOA,EAAEiP,YAuhBbrY,EAAOC,QAAQ+M,cAAwBA,GACvChN,EAAOC,QAAQxC,aAlfM,SAASjB,EAAGpG,GAC7B,IAAI2S,EAAIyE,GAAchR,EAAGpG,GACzB,OAAa,IAAN2S,EAAc,EAAIA,GAif7B/I,EAAOC,QAAQuN,cAAwBA,GACvCxN,EAAOC,QAAQqY,cA3dO,SAAS9b,EAAGpG,GAC9B,IAAIgT,EAAIE,EAAW9M,EAAGpG,GACtB,OAAQgT,EAAEsD,SACN,KAAKpK,EACL,KAAKS,EACL,KAAKE,EACL,KAAKD,EACL,KAAKP,EACL,KAAKD,EACL,KAAKL,EACD,OAAOiH,EAAE/I,MACb,QACI,OAAO,OAgdnBL,EAAOC,QAAQsY,YAnbK,SAAS/b,EAAGpG,GAC5B,IAAI4d,EAAK1K,EAAW9M,EAAGpG,GAEvB,OAbiB,SAASod,EAAGle,EAAM+K,GACnC,IAAImY,EAAQ,SAAShc,GACjBmL,EAAUnL,EAAGA,aAAayL,EAAOwQ,WAAajF,IAAMhX,EAAEgN,IAAK,kCAC3DhN,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIH,EAAOnT,EAAM+K,GAClCsI,EAAanM,IAGjB,OADAkR,GAAKgL,IAAIF,EAAOhF,GACTgF,EAMAG,CAAanc,EAAEgN,IAAKwK,EAAG1e,KAAM0e,EAAG3T,QAib3CL,EAAOC,QAAQoN,aAAwBA,GACvCrN,EAAOC,QAAQ2Y,aAneM,SAASpc,EAAGpG,GAC7B,IAAIgT,EAAIE,EAAW9M,EAAGpG,GACtB,OAAOgT,EAAEyP,aAAezP,EAAE/I,MAAQ,MAketCL,EAAOC,QAAQ6Y,eA/eQ,SAAStc,EAAGpG,GAC/B,IAAIgT,EAAIE,EAAW9M,EAAGpG,GACtB,OAAQgT,EAAE4C,SACN,KAAKxJ,EACD,OAAO4G,EAAE/I,MAAM+Q,KACnB,KAAKjP,EACD,OAAOiH,EAAE/I,MACb,QAAS,OAAO,OAyexBL,EAAOC,QAAQ+N,SAAwBA,GACvChO,EAAOC,QAAQ8Y,aA5YM,SAASvc,EAAG9E,GAE7B,OADAiQ,EAAUnL,EAAGwF,GAAatK,GAAKA,EAAIgL,EAAa,eACzC2F,EAAI2Q,UAAUthB,IA2YzBsI,EAAOC,QAAQgZ,cArJO,SAASzc,EAAGgT,EAAMzG,GACpC,IAAI0D,EAAKnD,EAAW9M,EAAGgT,GACvB,OAAQ/C,EAAGC,SACP,KAAK3J,EAAU,CACX,IAAImW,EAAM3J,GAAY/S,EAAGgT,EAAMzG,GAC/B,OAAOmQ,EAAIvM,EAAEI,OAAOmM,EAAI/hB,GAE5B,KAAK8L,EAAU,CACX,IAAI0J,EAAIF,EAAGpM,MAEX,OADAsH,EAAUnL,GAAM,EAAFuM,KAASA,GAAKA,EAAI,GAAKA,GAAK4D,EAAE9C,UAAW,yBAChD8C,EAAE7C,QAAQf,EAAI,GAEzB,QAEI,OADApB,EAAUnL,GAAG,EAAO,oBACb,OAwInBwD,EAAOC,QAAQkZ,gBAnIS,SAAS3c,EAAG4c,EAAOC,EAAIC,EAAOC,GAClD,IAAIC,EAAOjK,GAAY/S,EAAG4c,EAAOC,GAC7BI,EAAOlK,GAAY/S,EAAG8c,EAAOC,GAC7BG,EAAMD,EAAK9M,EAAEI,OAAO0M,EAAKtiB,GAC7BqiB,EAAK7M,EAAEI,OAAOyM,EAAKriB,GAAKuiB,GAgI5B1Z,EAAOC,QAAQ0Z,YAjoCK,SAASnd,GACzB,OAAU,OAANA,EAAmBiF,EACXjF,EAAEgN,IAAIoQ,SAgoCtB5Z,EAAOC,QAAQ4Z,UAnjCG,SAAStb,EAAM+B,EAAIyI,GACjC,GAAIxK,IAAS+B,EAAb,CACAwI,EAAgBvK,EAAMwK,GACtBpB,EAAUpJ,EAAMA,EAAKiL,MAAQlJ,EAAGkJ,IAAK,mCACrC7B,EAAUpJ,EAAM+B,EAAGuI,GAAGD,IAAMtI,EAAGsI,KAAOG,EAAG,kBACzCxK,EAAKqK,KAAOG,EACZ,IAAK,IAAI5R,EAAI,EAAGA,EAAI4R,EAAG5R,IACnBmJ,EAAGiJ,MAAMjJ,EAAGsI,KAAO,IAAIZ,EAAQS,OAC/BT,EAAQwC,SAASlK,EAAIA,EAAGsI,IAAKrK,EAAKgL,MAAMhL,EAAKqK,IAAMzR,WAC5CoH,EAAKgL,MAAMhL,EAAKqK,IAAMzR,GAC7BmJ,EAAGsI,qCClKX,MAAM,gBACFkR,GACA,EAAQ,OACN,WACFnT,EAAU,YACV7C,EAAW,kBACXX,EAAiB,cACjB7B,EAAa,aACbY,EAAY,mBACZC,EAAkB,SAClBF,EAAQ,UACRD,EAAS,YACTI,EAAW,YACXC,EAAW,WACXC,EAAU,gBACVb,EAAe,UACf0D,EAAS,aACTuK,EAAY,YACZ1S,EAAW,SACXgB,EAAQ,eACRoS,EAAc,WACdY,EAAU,SACVnG,EAAQ,gBACRuB,EAAe,UACfkF,EAAS,aACTM,EAAY,YACZmI,EAAW,iBACXjI,EAAgB,aAChBkI,EAAY,WACZ9c,EAAU,WACVyV,EAAU,cACVK,EAAa,UACbG,EAAS,aACTG,EAAY,aACZI,EAAY,YACZC,EAAW,QACXI,EAAO,SACPG,EAAQ,aACR+F,EAAY,aACZxF,EAAY,SACZK,EAAQ,UACRE,EAAS,QACTtX,EAAO,gBACPuX,EAAe,iBACfhK,EAAgB,kBAChBK,EAAiB,gBACjB4J,EAAe,gBACf5N,EAAe,gBACfC,EAAe,gBACfkO,EAAe,YACfE,EAAW,eACX5X,EAAc,cACd+X,EAAa,iBACbC,EAAgB,aAChBC,GAAY,WACZC,GAAU,YACVhK,GAAW,WACXmK,GAAU,YACVM,GAAW,WACXG,GAAU,aACVrP,GAAY,cACZoE,GAAa,iBACbqL,GAAgB,WAChBjN,GAAU,cACV2N,GAAa,cACbS,GAAa,eACb9K,GAAc,eACdrQ,GAAc,cACd+P,GAAa,aACbvP,GAAY,cACZ+P,GAAa,cACb8K,GAAa,aACbjL,GAAY,eACZyL,GAAc,SACd9K,GAAQ,aACR+K,GAAY,YACZY,IACA,EAAQ,OACN,gBACFtY,GAAe,aACfnB,GAAY,aACZV,GAAY,aACZ2B,IACA,EAAQ,MAGN+Y,GAAcvT,EAAW,EAGzBwT,GAAmB3a,GAAa,WAGhC4a,GAAoB5a,GAAa,YAEjC6a,GAAiB7a,GAAa,SAI9B8a,GAAS9a,GAAa,UACtB+a,GAAa/a,GAAa,cAE1Bgb,GAAQ,IAAIlc,WAAW,GAE7B,MAAMmc,GACFrV,cACIlR,KAAKsI,EAAI,KACTtI,KAAKiM,EAAIqa,GACTtmB,KAAK6U,EAAI,GAIjB,MAOM2R,GAAY,SAASle,EAAGme,EAAQ1lB,GAClC,GAAc,IAAVA,IAAgB0e,EAAYnX,GAAI,GAChC,OAAO,EAIX,IAFAmZ,EAAYnZ,GAELsY,EAAStY,GAAI,IAAI,CACpB,GAAIwR,GAASxR,GAAI,KAAO6F,EAAa,CACjC,GAAI2T,GAAaxZ,EAAGme,GAAS,GAEzB,OADAjd,EAAQlB,EAAG,GACJ,EACJ,GAAIke,GAAUle,EAAGme,EAAQ1lB,EAAQ,GAKpC,OAJA4hB,GAAWra,GAAI,GACf+K,EAAgB/K,EAAG,KACnBmW,EAAWnW,GAAI,GACfwU,EAAWxU,EAAG,GACP,EAGfkB,EAAQlB,EAAG,GAGf,OAAO,GAMLoe,GAAqB,SAASpe,EAAGqe,GACnC,IAAIjS,EAAM1L,EAAWV,GAGrB,GAFAud,EAAYvd,EAAGgD,GAAa,KAAMqb,GAClCjJ,EAAapV,EAAG2G,EAAmBgX,IAC/BO,GAAUle,EAAGoM,EAAM,EAAG,GAAI,CAC1B,IAAItD,EAAO+H,GAAa7Q,GAAI,GAU5B,OATgB,KAAZ8I,EAAK,IACO,KAAZA,EAAK,IACO,KAAZA,EAAK,KAELvH,EAAevB,EAAG8I,EAAKoQ,SAAS,IAChCmB,GAAWra,GAAI,IAEnBqO,EAASrO,GAAI,EAAGoM,EAAM,GACtBlL,EAAQlB,EAAG,GACJ,EAGP,OADAwN,GAAWxN,EAAGoM,GACP,GAITkS,GAAe,SAASte,EAAGqe,GACzBD,GAAmBpe,EAAGqe,IACtB3F,EAAgB1Y,EAAGgD,GAAa,iBAAkB6N,GAAa7Q,GAAI,IACnEqa,GAAWra,GAAI,IAEa,IAAvBqe,EAAGtV,SAAS9P,OACjByf,EAAgB1Y,EAAGgD,GAAa,WAAYqb,EAAGtV,SAAUsV,EAAGvV,MACvDuV,EAAGrV,MAAuB,MAAfqV,EAAGrV,KAAK,GACxB+B,EAAgB/K,EAAG,cACdqe,EAAGrV,MAAuB,KAAfqV,EAAGrV,KAAK,GACxB0P,EAAgB1Y,EAAGgD,GAAa,oBAAqBqb,EAAG5U,UAAW4U,EAAGlV,aAEtE4B,EAAgB/K,EAAG,MA8CrBwT,GAAQ,SAASxT,GACnB,IAAIue,EAAM,gDAAkD9d,GAAeT,GAAI,GAAK,IACpF,MAAM,IAAIxI,MAAM+mB,IAGdC,GAAgB,SAASxe,EAAGye,EAAKC,GACnC,IAAIL,EAAK,IAAI1V,EAEb,OAAK6U,EAAaxd,EAAG,EAAGqe,IAGxBd,EAAYvd,EAAGgD,GAAa,KAAMqb,GAE9B3a,GAAa2a,EAAGtV,SAAU/F,GAAa,YAE3B,KADZyb,EAEWE,GAAW3e,EAAGgD,GAAa,iCAAkCqb,EAAGvV,KAAM4V,IAGrE,OAAZL,EAAGvV,OACHuV,EAAGvV,KAAOsV,GAAmBpe,EAAGqe,GAAMxN,GAAa7Q,GAAI,GAAKgD,GAAa,MAEtE2b,GAAW3e,EAAGgD,GAAa,iCAAkCyb,EAAKJ,EAAGvV,KAAM4V,KAbvEC,GAAW3e,EAAGgD,GAAa,yBAA0Byb,EAAKC,IAgBnEE,GAAY,SAAS5e,EAAGye,EAAKI,GAC/B,IAAIC,EAEAA,EADAC,GAAkB/e,EAAGye,EAAKX,MAAYjY,EAC5BgL,GAAa7Q,GAAI,GACtBwR,GAASxR,EAAGye,KAAS9Y,EAChB3C,GAAa,kBAAkB,GAE/Bgc,GAAchf,EAAGye,GAE/B,IAAIF,EAAM7F,EAAgB1Y,EAAGgD,GAAa,uBAAwB6b,EAAOC,GACzE,OAAON,GAAcxe,EAAGye,EAAKF,IAG3BU,GAAa,SAASjf,EAAGvH,GAC3B,IAAI4lB,EAAK,IAAI1V,EACT6U,EAAaxd,EAAGvH,EAAO4lB,KACvBd,EAAYvd,EAAGgD,GAAa,MAAM,GAAOqb,GACrCA,EAAGnV,YAAc,GACjBwP,EAAgB1Y,EAAGgD,GAAa,WAAYqb,EAAG5U,UAAW4U,EAAGnV,aAIrE3H,EAAevB,EAAGgD,GAAa,MAG7B2b,GAAa,SAAS3e,EAAG2Y,KAAQC,GAInC,OAHAqG,GAAWjf,EAAG,GACduZ,EAAiBvZ,EAAG2Y,EAAKC,GACzBpE,EAAWxU,EAAG,GACP8U,EAAU9U,IAIfkf,GAAkB,SAASlf,EAAGmf,EAAMC,EAAOC,GAC7C,GAAIF,EAEA,OADA1G,EAAgBzY,EAAG,GACZ,EACJ,CAEH,IAAI5C,EAASkiB,EAab,OAdAnG,EAAYnZ,GAERqf,GACAjiB,EAAUiiB,EAAEjiB,QACZkiB,GAASD,EAAEC,QAEXliB,EAAU,UACVkiB,EAAQ,GAERF,EACA1G,EAAgB1Y,EAAGgD,GAAa,UAAWoc,EAAOpc,GAAa5F,IAE/DmE,EAAevB,EAAGgD,GAAa5F,IACnC0N,EAAgB9K,EAAGsf,GACZ,IA4BTC,GAAoB,SAASvf,EAAGuM,GAClC,OAAO6I,EAAapV,EAAG2G,EAAmB4F,IAqBxCiT,GAAiB,SAASxf,EAAGqR,EAAIwN,GACnC,IAAI1Q,EAAImO,GAAetc,EAAGqR,GAC1B,OAAU,OAANlD,GACImH,EAAiBtV,EAAGqR,IACpBkO,GAAkBvf,EAAG6e,GAChBrF,GAAaxZ,GAAI,GAAI,KACtBmO,EAAI,MACRjN,EAAQlB,EAAG,GACJmO,GAGR,MAiBLsR,GAAY,SAASzf,EAAGye,EAAKnlB,GAC/BslB,GAAU5e,EAAGye,EAAKlC,GAAavc,EAAG1G,KAUhC0lB,GAAgB,SAAShf,EAAGrF,GAC9B,OAAO4hB,GAAavc,EAAGwR,GAASxR,EAAGrF,KAiBjC+kB,GAAoB,SAAS1f,EAAGye,GAClC,IAAIrc,EAAIoO,GAAcxQ,EAAGye,GAEzB,OADIrc,SAA+Bqd,GAAUzf,EAAGye,EAAK5Y,GAC9CzD,GAGLud,GAAmBD,GAEnBE,GAAkB,SAAS5f,EAAGye,EAAKoB,GACrC,OAAIrO,GAASxR,EAAGye,IAAQ,EACL,OAARoB,EAAe,KAAOhb,GAAgBgb,GACnCH,GAAkB1f,EAAGye,IAGjCqB,GAAiBF,GASjBG,GAAmB,SAAS/f,EAAGye,GACjC,IAAIuB,EAAIhP,GAAchR,EAAGye,GAGzB,OAFU,IAANuB,GACAP,GAAUzf,EAAGye,EAAK7Y,GACfoa,GAOLC,GAAoB,SAASjgB,EAAGye,GAClC,IAAIuB,EAAIlP,GAAe9Q,EAAGye,GAG1B,OAFU,IAANuB,GApBS,SAAShgB,EAAGye,GACrB3H,EAAa9W,EAAGye,GAChBD,GAAcxe,EAAGye,EAAKzb,GAAa,wCAAwC,IAE3Eyc,GAAUzf,EAAGye,EAAK7Y,GAiBlBsa,CAASlgB,EAAGye,GACTuB,GAOLG,GAAoB,SAASC,EAAGnF,GAClC,IAAIoF,EAASD,EAAE7T,EAAI0O,EACnB,GAAImF,EAAEzc,EAAE1K,OAASonB,EAAQ,CACrB,IAAIC,EAAUtc,KAAKuc,IAAiB,EAAbH,EAAEzc,EAAE1K,OAAYonB,GACnCG,EAAU,IAAI1e,WAAWwe,GAC7BE,EAAQtE,IAAIkE,EAAEzc,GACdyc,EAAEzc,EAAI6c,EAEV,OAAOJ,EAAEzc,EAAEuV,SAASkH,EAAE7T,EAAG8T,IAGvBI,GAAgB,SAASzgB,EAAGogB,GAC9BA,EAAEpgB,EAAIA,EACNogB,EAAEzc,EAAIqa,IAYJ0C,GAAkB,SAASN,EAAGhe,EAAGtB,GAC/BA,EAAI,IACJsB,EAAIyC,GAAgBzC,GACZ+d,GAAkBC,EAAGtf,GAC3Bob,IAAI9Z,EAAE8W,SAAS,EAAGpY,IACpB6f,GAAaP,EAAGtf,KAIlB8f,GAAiB,SAASR,EAAGhe,GAC/BA,EAAIyC,GAAgBzC,GACpBse,GAAgBN,EAAGhe,EAAGA,EAAEnJ,SAGtB4nB,GAAkB,SAAST,GAC7BnH,EAAgBmH,EAAEpgB,EAAGogB,EAAEzc,EAAGyc,EAAE7T,GAE5B6T,EAAE7T,EAAI,EACN6T,EAAEzc,EAAIqa,IAQJ2C,GAAe,SAASP,EAAGhe,GAC7Bge,EAAE7T,GAAKnK,GAeL0e,GAAW,SAAS9gB,EAAGmQ,EAAG5D,EAAGyT,GAC/B,OAAOxO,GAASxR,EAAGuM,IAAM,EAAIyT,EAAI7P,EAAEnQ,EAAGuM,IAGpCwU,GAAO,SAAS/gB,EAAGqR,GACrB,IAAIjP,EAAIiP,EAAG2P,OAEX,OADA3P,EAAG2P,OAAS,KACL5e,GAGL6e,GAAmB,SAASjhB,EAAGkhB,EAAM/I,EAAMrP,EAAM+O,GACnD,OAAOH,EAAS1X,EAAG+gB,GAAM,CAACC,OAAQE,GAAOpY,EAAM+O,IAG7CsJ,GAAkB,SAASnhB,EAAGoC,EAAG6Y,EAAI1O,GACvC,OAAO0U,GAAiBjhB,EAAGoC,EAAG6Y,EAAI1O,EAAG,OAGnC6U,GAAkB,SAASphB,EAAGoC,GAChC,OAAO+e,GAAgBnhB,EAAGoC,EAAGA,EAAEnJ,OAAQmJ,IAOrC2c,GAAoB,SAAS/e,EAAGyV,EAAKzZ,GACvC,GAAKsZ,EAAiBtV,EAAGyV,GAEpB,CACDlU,EAAevB,EAAGhE,GAClB,IAAIqlB,EAAK5H,GAAWzZ,GAAI,GAKxB,OAJIqhB,IAAO5b,EACPvE,EAAQlB,EAAG,GAEXqa,GAAWra,GAAI,GACZqhB,EARP,OAAO5b,GAYT6b,GAAgB,SAASthB,EAAGyV,EAAKzZ,GAEnC,OADAyZ,EAAMvC,EAAalT,EAAGyV,GAClBsJ,GAAkB/e,EAAGyV,EAAKzZ,KAAWyJ,IAGzC6T,EAActZ,EAAGyV,GACjBjU,EAASxB,EAAG,EAAG,IAER,IAYLuhB,GAAMve,GAAa,MACnBwe,GAAMxe,GAAa,MA8DnBye,GAAgB,SAASC,EAAKC,EAAQC,GACxC,IAAIjnB,EAAIinB,IAAe,EACnBC,EAAKF,EAAO1oB,OACZ6H,EAAI4gB,EAAIzoB,OAAS,EAAI4oB,EAEzBC,EAAM,KAAOnnB,EAAImG,EAAGnG,IAAK,CACrB,IAAK,IAAIonB,EAAI,EAAGA,EAAIF,EAAIE,IACpB,GAAIL,EAAI/mB,EAAEonB,KAAOJ,EAAOI,GACpB,SAASD,EACjB,OAAOnnB,EAEX,OAAQ,GAqBNqnB,GAAmB,SAAShiB,EAAGpG,EAAKwlB,GACtC,OAAIhK,EAAapV,EAAGpG,EAAKwlB,KAAWtZ,IAGhC5E,EAAQlB,EAAG,GACXpG,EAAMsZ,EAAalT,EAAGpG,GACtBqe,EAAajY,GACbsZ,EAActZ,GAAI,GAClBgL,GAAahL,EAAGpG,EAAKwlB,IACd,IAST6C,GAAgB,SAASjiB,EAAGc,EAAGohB,GACjCC,GAAgBniB,EAAGkiB,EAAKlf,GAAa,qBAAqB,IAC1D,IAAK,IAAIof,KAAOthB,EAAG,CACf,IAAK,IAAInG,EAAI,EAAGA,EAAIunB,EAAKvnB,IACrB2e,EAActZ,GAAIkiB,GACtBzT,EAAiBzO,EAAGc,EAAEshB,GAAMF,GAC5BlX,GAAahL,IAAKkiB,EAAM,GAAIlf,GAAaof,IAE7ClhB,EAAQlB,EAAGkiB,IAUTC,GAAkB,SAASniB,EAAGqiB,EAAO9D,GAClC3K,EAAe5T,EAAGqiB,KACf9D,EACAI,GAAW3e,EAAGgD,GAAa,uBAAwBub,GAEnDI,GAAW3e,EAAGgD,GAAa,kBAAkB,MAiDnDsf,GAAU,SAAStiB,EAAGgJ,EAAMuZ,EAAYjlB,GAC1C,IAAIklB,EAAOllB,EAAMF,QACbqlB,EAAW5R,GAAa7Q,EAAGuiB,GAAYrJ,SAAS,GAGpD,OAFAR,EAAgB1Y,EAAGgD,GAAa,oBAAqBA,GAAagG,GAAOyZ,EAAUzf,GAAawf,IAChGnI,GAAWra,EAAGuiB,GACP7E,IAGX,IAAIgF,GAEJ,MAAMC,GAAW,CAAC,IAAM,IAAM,KAyC9B,IAAIC,GAEgC,CAChC,MAAMC,EACFja,cACIlR,KAAK6U,EAAI1D,IACTnR,KAAKyY,EAAI,KACTzY,KAAKwpB,KAAO,IAAIpf,WAAW,MAC3BpK,KAAKwG,IAAM,EACXxG,KAAKorB,SAAM,GAInB,MAAMC,EAAO,SAAS/iB,EAAGqR,GACrB,IAAI2R,EAAK3R,EAET,GAAa,OAAT2R,EAAG7S,GAAc6S,EAAGzW,EAAI,EAAG,CAC3B,IAAI0W,EAAQD,EAAGzW,EAGf,OAFAyW,EAAGzW,EAAI,EACPyW,EAAG7S,EAAI6S,EAAG7S,EAAE+I,SAAS8J,EAAG9kB,KACjB8kB,EAAG9B,KAAKhI,SAAS,EAAG+J,GAG/B,IAAI9S,EAAI6S,EAAG7S,EAEX,OADA6S,EAAG7S,EAAI,KACAA,GAGXuS,GAAO,SAASM,GACZ,OAAOA,EAAG9kB,IAAM8kB,EAAG7S,EAAElX,OAAS+pB,EAAG7S,EAAE6S,EAAG9kB,OAAS,MAGnD0kB,GAAiB,SAAS5iB,EAAGyiB,EAAU5K,GACnC,IAAImL,EAAK,IAAIH,EACTN,EAAa7hB,EAAWV,GAAK,EACjC,GAAiB,OAAbyiB,EACA,MAAM,IAAIjrB,MAAM,mCACb,CACHkhB,EAAgB1Y,EAAGgD,GAAa,OAAQyf,GACxC,IAAIS,EAAOve,GAAa8d,GACpBU,EAAM,IAAIC,eAUd,GATAD,EAAIE,KAAK,MAAOH,GAAM,GAKA,oBAAXrmB,SACPsmB,EAAIG,aAAe,eAEvBH,EAAII,SACAJ,EAAIjR,QAAU,KAAOiR,EAAIjR,QAAU,KAQnC,OADA8Q,EAAGF,IAAMK,EAAIjR,OACNoQ,GAAQtiB,EAAG,OAAQuiB,EAAY,CAAEnlB,QAAS,GAAG+lB,EAAIjR,WAAWiR,EAAIK,eAP3C,iBAAjBL,EAAIM,SACXT,EAAG7S,EAAInN,GAAamgB,EAAIM,UAExBT,EAAG7S,EAAI,IAAIrO,WAAWqhB,EAAIM,UAOtC,IAAIC,EAhFQ,SAASV,GACzB,IAAIlgB,EAtBQ,SAASkgB,GAErB,IAAIlgB,EADJkgB,EAAGzW,EAAI,EAEP,IAAI4B,EAAI,EACR,EAAG,CAEC,GADArL,EAAI4f,GAAKM,GACC,OAANlgB,GAAcA,IAAM6f,GAASxU,GAAI,OAAOrL,EAC5CqL,IACA6U,EAAG9B,KAAK8B,EAAGzW,KAAOzJ,QACbqL,EAAIwU,GAAS1pB,QAEtB,OADA+pB,EAAGzW,EAAI,EACAmW,GAAKM,GAWJW,CAAQX,GAChB,GAAU,KAANlgB,EAAkC,CAClC,GACIA,EAAI4f,GAAKM,SACJlgB,GAAW,KAANA,GAEd,MAAO,CACH8gB,SAAS,EACT9gB,EAAG4f,GAAKM,IAGZ,MAAO,CACHY,SAAS,EACT9gB,EAAGA,GAkEG+gB,CAAYb,GAElBU,EAAI5gB,IAAMgC,EAAc,IAAM2d,GAEvBiB,EAAIE,UACXZ,EAAG9B,KAAK8B,EAAGzW,KAAO,IAER,OAAVmX,EAAI5gB,IACJkgB,EAAG9B,KAAK8B,EAAGzW,KAAOmX,EAAI5gB,GAC1B,IAAIoP,EAASwF,EAAS1X,EAAG+iB,EAAMC,EAAInS,GAAa7Q,GAAI,GAAI6X,GACpDiM,EAAad,EAAGF,IACpB,OAAIgB,GACAtW,GAAWxN,EAAGuiB,GACPD,GAAQtiB,EAAG,OAAQuiB,EAAYuB,KAE1CzJ,GAAWra,EAAGuiB,GACPrQ,IAmFf,MAAM6R,GAAgB,SAAS/jB,EAAGyiB,GAC9B,OAAOG,GAAe5iB,EAAGyiB,EAAU,OAyBjCuB,GAAqB,SAAShkB,EAAGikB,EAAKhJ,GACxC,IAAI5Y,EAAI8a,GAAYnd,GA74BD,IA84Bfib,GACA0D,GAAW3e,EAAGgD,GAAa,qDAC3BX,GAAK8a,GAAY,MACjBwB,GAAW3e,EAAGgD,GAAa,8BACtBX,IAAM4hB,GACXtF,GAAW3e,EAAGgD,GAAa,yDAA0DihB,EAAK5hB,IAQlGmB,EAAOC,QAAQia,YAAuBA,GACtCla,EAAOC,QAAQoa,eAAuBA,GACtCra,EAAOC,QAAQka,iBAAuBA,GACtCna,EAAOC,QAAQygB,WAlSK,EAmSpB1gB,EAAOC,QAAQma,kBAAuBA,GACtCpa,EAAOC,QAAQ0gB,YAnSI,EAoSnB3gB,EAAOC,QAAQwa,YAAuBA,GACtCza,EAAOC,QAAQ2gB,aA7gBM,SAAShE,EAAGtd,GAC7Bqd,GAAkBC,EAAG,GACrBA,EAAEzc,EAAEyc,EAAE7T,KAAOzJ,GA4gBjBU,EAAOC,QAAQid,gBAAuBA,GACtCld,EAAOC,QAAQkd,aAAuBA,GACtCnd,EAAOC,QAAQmd,eAAuBA,GACtCpd,EAAOC,QAAQ4gB,cAngBO,SAASjE,GAC3B,IAAIpgB,EAAIogB,EAAEpgB,EACNoC,EAAIyO,GAAa7Q,GAAI,GACzB0gB,GAAgBN,EAAGhe,EAAGA,EAAEnJ,QACxBiI,EAAQlB,EAAG,IAggBfwD,EAAOC,QAAQ6gB,cA3nBO,SAAStkB,EAAGukB,EAAM9F,EAAKC,GACpC6F,GAAM/F,GAAcxe,EAAGye,EAAKC,IA2nBrClb,EAAOC,QAAQ+a,cAAuBA,GACtChb,EAAOC,QAAQgd,cAAuBA,GACtCjd,EAAOC,QAAQ+gB,kBAnjBW,SAASxkB,EAAGogB,EAAGnF,GAErC,OADAwF,GAAczgB,EAAGogB,GACVD,GAAkBC,EAAGnF,IAkjBhCzX,EAAOC,QAAQ6d,cAAuBA,GACtC9d,EAAOC,QAAQghB,cA5nBO,SAASzkB,EAAGye,GAC1BjN,GAASxR,EAAGye,KAASjZ,GACrBgZ,GAAcxe,EAAGye,EAAKzb,GAAa,kBAAkB,KA2nB7DQ,EAAOC,QAAQwc,kBAAuBA,GACtCzc,EAAOC,QAAQic,kBAAuBA,GACtClc,EAAOC,QAAQsc,iBAAuBA,GACtCvc,EAAOC,QAAQihB,iBA3pBU,SAAS1kB,EAAGye,EAAKoB,EAAK8E,GAC3C,IAAI7b,EAAe,OAAR+W,EAAeC,GAAe9f,EAAGye,EAAKoB,GAAOF,GAAiB3f,EAAGye,GAC5E,IAAK,IAAI9jB,EAAI,EAAGgqB,EAAIhqB,GAAIA,IACpB,GAAI+I,GAAaihB,EAAIhqB,GAAImO,GACrB,OAAOnO,EACf,OAAO6jB,GAAcxe,EAAGye,EAAK/F,EAAgB1Y,EAAGgD,GAAa,uBAAwB8F,KAupBzFtF,EAAOC,QAAQ0e,gBAAuBA,GACtC3e,EAAOC,QAAQkc,iBAAuBA,GACtCnc,EAAOC,QAAQmhB,eA9nBQ,SAAS5kB,EAAGye,EAAKvjB,GAChCsW,GAASxR,EAAGye,KAASvjB,GACrBukB,GAAUzf,EAAGye,EAAKvjB,IA6nB1BsI,EAAOC,QAAQohB,gBArqBS,SAAS7kB,EAAGqR,EAAIwN,GACpC,IAAI1Q,EAAIqR,GAAexf,EAAGqR,EAAIwN,GAE9B,OADU,OAAN1Q,GAAYyQ,GAAU5e,EAAGqR,EAAIwN,GAC1B1Q,GAmqBX3K,EAAOC,QAAQqhB,kBA9BW,SAAS9kB,GAC/BgkB,GAAmBhkB,EAAGiF,EAx5BH,KAs7BvBzB,EAAOC,QAAQugB,mBAAuBA,GACtCxgB,EAAOC,QAAQshB,YAjEK,SAAS/kB,EAAGyiB,GAC5B,OAAQsB,GAAc/jB,EAAGyiB,IAAajK,EAAUxY,EAAG,EAAGsH,EAAa,IAiEvE9D,EAAOC,QAAQrC,cAxfO,SAASpB,EAAGoC,GAC9B,OAAQgf,GAAgBphB,EAAGoC,IAAMoW,EAAUxY,EAAG,EAAGsH,EAAa,IAwflE9D,EAAOC,QAAQkb,WAAuBA,GACtCnb,EAAOC,QAAQuhB,gBAtuBS,SAAShlB,EAAGqf,GAChC,IAAIrW,EAAMmW,EACV,GAAU,OAANE,EAIA,OAHA5G,EAAgBzY,EAAG,GACnB+K,EAAgB/K,EAAG,QACnB8K,EAAgB9K,EAAG,GACZ,EACJ,GAAIqf,EAAEnN,OACTlJ,EAAO,OACPmW,EAAOE,EAAEnN,WACN,KAAImN,EAAE4F,OAKT,OAAO/F,GAAgBlf,EAAG,EAAG,KAAMqf,GAJnCrW,EAAO,SACPmW,EAAOE,EAAE4F,OAQb,OAHA9L,EAAYnZ,GACZ+K,EAAgB/K,EAAGgJ,GACnB8B,EAAgB9K,EAAGmf,GACZ,GAmtBX3b,EAAOC,QAAQyb,gBAAuBA,GACtC1b,EAAOC,QAAQsb,kBAAuBA,GACtCvb,EAAOC,QAAQ8b,kBAAuBA,GACtC/b,EAAOC,QAAQue,iBAAuBA,GACtCxe,EAAOC,QAAQyhB,UA5YG,SAASllB,EAAGoC,EAAG+L,EAAGhM,GAChC,IAAIgjB,EACAxhB,EAAI,IAAIsa,GAEZ,IADAwC,GAAczgB,EAAG2D,IACTwhB,EAAO1D,GAAcrf,EAAG+L,KAAO,GACnCuS,GAAgB/c,EAAGvB,EAAG+iB,GACtBvE,GAAejd,EAAGxB,GAClBC,EAAIA,EAAE8W,SAASiM,EAAOhX,EAAElV,QAI5B,OAFA2nB,GAAejd,EAAGvB,GAClBye,GAAgBld,GACTkN,GAAa7Q,GAAI,IAkY5BwD,EAAOC,QAAQ2hB,SAneE,SAASplB,EAAGpG,GACzB2d,EAAQvX,EAAGpG,GACX,IAAIkH,EAAIgQ,GAAe9Q,GAAI,GAI3B,OAHU,IAANc,GACA6d,GAAW3e,EAAGgD,GAAa,mCAAmC,IAClE9B,EAAQlB,EAAG,GACJc,GA8dX0C,EAAOC,QAAQ0d,gBAAuBA,GACtC3d,EAAOC,QAAQwd,iBAAuBA,GACtCzd,EAAOC,QAAQsgB,cAAuBA,GACtCvgB,EAAOC,QAAQmf,eAAuBA,GACtCpf,EAAOC,QAAQ2d,gBAAuBA,GACtC5d,EAAOC,QAAQwH,YAhVK,SAASjL,EAAGc,GAC5B8O,EAAgB5P,GAChBiiB,GAAcjiB,EAAGc,EAAG,IA+UxB0C,EAAOC,QAAQ4hB,iBArVU,SAASrlB,GAC9B4P,EAAgB5P,IAqVpBwD,EAAOC,QAAQ6hB,kBAztBW,SAAStlB,EAAG6e,GAClC,OAAIU,GAAkBvf,EAAG6e,KAAWpZ,EACzB,GACXvE,EAAQlB,EAAG,GACX4P,EAAgB5P,EAAG,EAAG,GACtBuB,EAAevB,EAAG6e,GAClB7T,GAAahL,GAAI,EAAG8d,IACpBxE,EAActZ,GAAI,GAClBgL,GAAahL,EAAG2G,EAAmBkY,GAC5B,IAitBXrb,EAAOC,QAAQnD,cAxqBO,WAClB,IAAIN,EAAIyd,IAER,OADIzd,GAAGQ,EAAYR,EAAGwT,IACfxT,GAsqBXwD,EAAOC,QAAQqd,SAAuBA,GACtCtd,EAAOC,QAAQ8hB,gBAxmBS,SAASvlB,EAAGye,EAAKoB,GACrC,OAAOiB,GAAS9gB,EAAGigB,GAAmBxB,EAAKoB,IAwmB/Crc,EAAOC,QAAQmc,gBAAuBA,GACtCpc,EAAOC,QAAQ+hB,eArnBQ,SAASxlB,EAAGye,EAAKoB,GACpC,OAAOiB,GAAS9gB,EAAG+f,GAAkBtB,EAAKoB,IAqnB9Crc,EAAOC,QAAQqc,eAAuBA,GACtCtc,EAAOC,QAAQgiB,gBAnlBS,SAASrF,GAC7B,OAAOD,GAAkBC,EAAG9C,IAmlBhC9Z,EAAOC,QAAQ0c,kBAAuBA,GACtC3c,EAAOC,QAAQod,gBAAuBA,GACtCrd,EAAOC,QAAQiiB,oBApjBa,SAAStF,EAAGnF,GACpC0F,GAAaP,EAAGnF,GAChB4F,GAAgBT,IAmjBpB5c,EAAOC,QAAQkiB,SApVE,SAAS3lB,EAAG9E,GACzB,IAAIwhB,EACJ,OAAI/F,EAAU3W,GAAI,IACdkB,EAAQlB,EAAG,IALA,IAQf9E,EAAIgY,EAAalT,EAAG9E,GACpBuU,GAAYzP,EAAG9E,EAAG,GAClBwhB,EAAMd,GAAc5b,GAAI,GACxBkB,EAAQlB,EAAG,GACC,IAAR0c,GACAjN,GAAYzP,EAAG9E,EAAGwhB,GAClBxC,GAAYla,EAAG9E,EAAG,IAGlBwhB,EAAM9C,GAAW5Z,EAAG9E,GAAK,EAC7Bgf,GAAYla,EAAG9E,EAAGwhB,GACXA,IAoUXlZ,EAAOC,QAAQmiB,cAjcO,SAAS5lB,EAAG6lB,EAASC,EAAOC,GAC9C/D,GAAiBhiB,EAAG2G,EAAmBgX,IACvCvI,EAAapV,GAAI,EAAG6lB,GACf1K,GAAcnb,GAAI,KACnBkB,EAAQlB,EAAG,GACX8O,EAAkB9O,EAAG8lB,GACrBvkB,EAAevB,EAAG6lB,GAClBrkB,EAASxB,EAAG,EAAG,GACfsZ,EAActZ,GAAI,GAClBgL,GAAahL,GAAI,EAAG6lB,IAExBxL,GAAWra,GAAI,GACX+lB,IACAzM,EAActZ,GAAI,GAClBoP,GAAcpP,EAAG6lB,KAobzBriB,EAAOC,QAAQwe,cAAuBA,GACtCze,EAAOC,QAAQuiB,kBA1tBW,SAAShmB,EAAG6e,GAClCU,GAAkBvf,EAAG6e,GACrBpE,GAAiBza,GAAI,IAytBzBwD,EAAOC,QAAQ+b,eAAuBA,GACtChc,EAAOC,QAAQwiB,eAhfQ,SAASjmB,EAAGpG,GAC/B,GAAI0nB,GAActhB,EAAGpG,EAAKmkB,IACjB7G,EAAalX,GAAI,IAClB2e,GAAW3e,EAAGgD,GAAa,2CAG/B,OADQwO,GAASxR,EAAGpG,IAEhB,KAAKgM,EACG4Q,EAAcxW,EAAGpG,GACjB8e,EAAgB1Y,EAAGuhB,GAAK3F,GAAc5b,EAAGpG,IAEzC8e,EAAgB1Y,EAAGwhB,GAAKvgB,GAAajB,EAAGpG,IAC5C,MAEJ,KAAKiM,EACDyT,EAActZ,EAAGpG,GACjB,MACJ,KAAK8L,EACDqF,EAAgB/K,EAAImb,GAAcnb,EAAGpG,GAAO,OAAS,SACrD,MACJ,KAAK6L,EACDsF,EAAgB/K,EAAG,OACnB,MACJ,QAAS,CACL,IAAIqhB,EAAKtC,GAAkB/e,EAAGpG,EAAKkkB,IAC/BoI,EAAO7E,IAAOxb,EAAcgL,GAAa7Q,GAAI,GAAKgf,GAAchf,EAAGpG,GACvE8e,EAAgB1Y,EAAGgD,GAAa,UAAWkjB,EAAMpK,GAAc9b,EAAGpG,IAC9DynB,IAAO5b,GACP4U,GAAWra,GAAI,GACnB,OAKZ,OAAOwQ,GAAcxQ,GAAI,IA+c7BwD,EAAOC,QAAQ0iB,eAn3BQ,SAASnmB,EAAGomB,EAAI7H,EAAK9lB,GACxC,IAAI4lB,EAAK,IAAI1V,EACTyD,EAAM1L,EAAWV,GACjBqmB,EAlBU,SAASrmB,GACvB,IAAIqe,EAAK,IAAI1V,EACT2d,EAAK,EACLC,EAAK,EAET,KAAO/I,EAAaxd,EAAGumB,EAAIlI,IAAOiI,EAAKC,EAAIA,GAAM,EAEjD,KAAOD,EAAKC,GAAI,CACZ,IAAInY,EAAIpK,KAAKwiB,OAAOF,EAAKC,GAAI,GACzB/I,EAAaxd,EAAGoO,EAAGiQ,GAAKiI,EAAKlY,EAAI,EAChCmY,EAAKnY,EAEd,OAAOmY,EAAK,EAMDE,CAAUL,GACjBvJ,EAAKwJ,EAAO5tB,EAAQiuB,GA3FZ,IA2F2C,EAKvD,IAJInI,GACA7F,EAAgB1Y,EAAGgD,GAAa,QAASub,GAC7C4D,GAAgBniB,EAAG,GAAI,MACvB+K,EAAgB/K,EAAG,oBACZwd,EAAa4I,EAAI3tB,IAAS4lB,IAChB,GAATxB,KACA9R,EAAgB/K,EAAG,WACnBvH,EAAQ4tB,EAlGJ,GAkGqB,IAEzB9I,EAAY6I,EAAIpjB,GAAa,QAAQ,GAAOqb,GAC5C3F,EAAgB1Y,EAAGgD,GAAa,WAAYqb,EAAG5U,WAC3C4U,EAAGnV,YAAc,GACjB6B,EAAgB/K,EAAG,GAAGqe,EAAGnV,gBAC7B6B,EAAgB/K,EAAG,QACnBse,GAAate,EAAGqe,GACZA,EAAG7U,YACHuB,EAAgB/K,EAAG,yBACvBwU,EAAWxU,EAAGU,EAAWV,GAAKoM,IAGtCoI,EAAWxU,EAAGU,EAAWV,GAAKoM,IA21BlC5I,EAAOC,QAAQub,cAAuBA,GACtCxb,EAAOC,QAAQkjB,WAvUI,SAAS3mB,EAAG9E,EAAGwhB,GAC1BA,GAAO,IACPxhB,EAAIgY,EAAalT,EAAG9E,GACpBuU,GAAYzP,EAAG9E,EAAG,GAClBgf,GAAYla,EAAG9E,EAAGwhB,GAClB5R,EAAgB9K,EAAG0c,GACnBxC,GAAYla,EAAG9E,EAAG,KAkU1BsI,EAAOC,QAAQwb,WAAuBA,GACtCzb,EAAOC,QAAQmjB,qBAnGc,WACzB,IAAK,IAAIjsB,EAAE,EAAGA,EAAE8H,UAAUxJ,OAAQ0B,IAAK,CACnC,IAAIsH,EAAIQ,UAAU9H,GAGd,EAAG,CAGC,IAAIwH,EAAI,uBAAuB0kB,KAAK5kB,GACpC5E,QAAQC,MAAM6E,EAAE,IAChBF,EAAIE,EAAE,SACK,KAANF,kCCr+BrB,MAAM,YACFqF,EAAW,OACXuC,EAAM,cACN9D,EAAa,SACbN,EAAQ,UACRD,EAAS,YACTI,EAAW,YACXC,EAAW,WACXC,EAAU,YACVX,EAAW,UACX2E,EAAS,SACTtI,EAAQ,UACRqQ,EAAS,WACT2C,EAAU,UACVM,EAAS,cACTxT,EAAa,SACb+T,EAAQ,iBACRC,EAAgB,WAChB5U,EAAU,WACVyV,EAAU,UACVQ,EAAS,WACTC,EAAU,aACVM,EAAY,SACZQ,EAAQ,SACRY,EAAQ,WACR/F,EAAU,QACVrR,EAAO,gBACPuX,EAAe,kBACf3J,EAAiB,oBACjBgK,EAAmB,gBACnBhO,EAAe,gBACfC,EAAe,YACfoO,EAAW,eACX5X,EAAc,cACd+X,EAAa,aACbE,EAAY,WACZC,EAAU,WACVG,EAAU,WACVG,EAAU,WACVM,EAAU,YACVC,EAAW,WACXrM,EAAU,aACVjD,EAAY,iBACZyP,EAAgB,WAChBjN,EAAU,eACVoN,EAAc,mBACdI,EAAkB,cAClBG,EAAa,cACb3K,EAAa,aACbK,EAAY,SACZW,EAAQ,aACR+K,GACA,EAAQ,OACN,cACF+H,GAAa,cACbG,GAAa,kBACbxE,GAAiB,iBACjByE,GAAgB,gBAChBvC,GAAe,eACfyC,GAAc,WACdjG,GAAU,kBACVI,GAAiB,iBACjBkC,GAAgB,cAChB8C,GAAa,eACbnB,GAAc,gBACd2C,GAAe,eACfzF,GAAc,cACdmC,GAAa,eACbgE,GAAc,WACdhH,IACA,EAAQ,OACN,YACFrb,GAAW,aACXZ,IACA,EAAQ,MAEZ,IAAI8jB,GACAC,GAEA,GAA2B,mBAAhBC,YAA4B,CACnC,IAAI9F,EAAO,GACP+F,EAAU,IAAID,YAAY,SAC9BF,GAAkB,SAAS1kB,GACvB8e,GAAQ+F,EAAQC,OAAO9kB,EAAG,CAAC+kB,QAAQ,KAEvC,IAAInJ,EAAQ,IAAIlc,WAAW,GAC3BilB,GAAgB,WACZ7F,GAAQ+F,EAAQC,OAAOlJ,GACvB3gB,QAAQ2D,IAAIkgB,GACZA,EAAO,QAER,CACH,IAAIA,EAAO,GACX4F,GAAkB,SAAS1kB,GACvB,IAEIA,EAAIwB,GAAYxB,GAClB,MAAMid,GAEJ,IAAI+H,EAAO,IAAItlB,WAAWM,EAAEnJ,QAC5BmuB,EAAKlL,IAAI9Z,GACTA,EAAIglB,EAERlG,EAAK3oB,KAAK6J,IAEd2kB,GAAgB,WACZ1pB,QAAQ2D,IAAIqmB,MAAMhqB,QAAQ2D,IAAKkgB,GAC/BA,EAAO,IAWnB,MA6EMoG,GAAO,CACT,OAAQ,UAAW,UACnB,QAAS,OAAQ,WAAY,aAC7B,aACFrsB,KAAKokB,GAAMrc,GAAaqc,KA4BpBkI,GAAY,SAASvnB,GAGvB,OAFA4kB,GAAe5kB,EAAG,EAAG8F,GACrB0H,EAAWxN,EAAG,GACVsY,EAAStY,EAAG,GACL,GAEPmZ,EAAYnZ,GACL,IAWTwnB,GAAY,SAASxnB,GACvB,IAAIrF,EAAIslB,GAAkBjgB,EAAG,GAAK,EAElC,OADA8K,EAAgB9K,EAAGrF,GACZ0a,EAASrV,EAAG,EAAGrF,KAAO8K,EAAW,EAAI,GA0D1CgiB,GAAa,SAASznB,GACxB,IAAIvH,EAAQ8sB,GAAgBvlB,EAAG,EAAG,GAOlC,OANAwN,EAAWxN,EAAG,GACVwR,EAASxR,EAAG,KAAO6F,GAAepN,EAAQ,IAC1CwmB,GAAWjf,EAAGvH,GACd6gB,EAActZ,EAAG,GACjBwU,EAAWxU,EAAG,IAEX8U,EAAU9U,IAoCf0nB,GAAc,SAAS1nB,EAAGkS,EAAQQ,GACpC,OAAIR,IAAWrI,GAAUqI,IAAWpI,GAChC2O,EAAgBzY,EAAG,GACnBsZ,EAActZ,GAAI,GACX,GAEAU,EAAWV,GAAK0S,GA0BzBiV,GAAW,SAAS3nB,EAAGkS,EAAQ0V,GACjC,OAAI1V,IAAWrI,GACI,IAAX+d,IACAtO,EAActZ,EAAG4nB,GACZhN,EAAe5a,GAAI,EAAG,IACvBkB,EAAQlB,EAAG,IAEZ,IAEPmZ,EAAYnZ,GACZmW,EAAWnW,GAAI,GACR,IAiBT6nB,GAAiB,SAAS7nB,EAAGqR,GAI/B,OAHA8Q,GAAgBniB,EAAG,EAAG,6BACtBsZ,EAActZ,EAAG,GACjBwB,EAASxB,EAAG,EAAG,GACX2W,EAAU3W,GAAI,IACdkB,EAAQlB,EAAG,GACJ,OACCkX,EAAalX,GAAI,IACzB2e,GAAW3e,EAAGgD,GAAa,yCAC/BsX,EAAYta,EAjBK,GAkBV6Q,EAAa7Q,EAlBH,KA8Cf8nB,GAAa,SAAS9nB,EAAG+nB,EAAIC,GAC/B,OAAOtnB,EAAWV,GAAK,GAYrBioB,GAAa,CACf,OAjJgB,SAASjoB,GACzB,OAAImb,EAAcnb,EAAG,GACVU,EAAWV,IAElBykB,GAAczkB,EAAG,GACjBqa,EAAWra,EAAG,GACd+K,EAAgB/K,EAAG,qBACnBwN,EAAWxN,EAAG,GACPynB,GAAWznB,KA0ItB,eAvQwB,SAASA,GACjC0kB,GAAiB1kB,EAAG,EAAG,UAAWsnB,IAClC/B,GAAgBvlB,EAAG,EAAG,GACtB2e,GAAW3e,EAAGgD,GAAa,4BAqQ3B,OAZgB,SAAShD,GACzB,IAAIof,EAAQU,GAAe9f,EAAG,EAAG,MAEjC,OADAwN,EAAWxN,EAAG,GACV+jB,GAAc/jB,EAAGof,KAAWvV,EACrBiL,EAAU9U,IACrB6R,EAAU7R,EAAG,EAAGsH,EAAa,EAAGwgB,IACzBA,GAAW9nB,KAOlB,MAAkBynB,GAClB,aAnUsB,SAASznB,GAE/B,OADAykB,GAAczkB,EAAG,GACZsV,EAAiBtV,EAAG,IAIzB+e,GAAkB/e,EAAG,EAAGgD,GAAa,eAAe,IAC7C,IAJHmW,EAAYnZ,GACL,IAgUX,OApNgB,SAASA,GAQzB,OAJAykB,GAAczkB,EAAG,GACjB8O,EAAkB9O,EAAGwnB,IACrBlO,EAActZ,EAAG,GACjB8K,EAAgB9K,EAAG,GACZ,GA6MP,KA7Cc,SAASA,GACvB,IAGIkS,EAHA9P,EAAIyO,EAAa7Q,EAAG,GACpB6X,EAAOiI,GAAe9f,EAAG,EAAG,MAC5BzI,EAAOqf,EAAW5W,EAAG,GAAS,EAAJ,EAE9B,GAAU,OAANoC,EAAY,CACZ,IAAIwV,EAAYkI,GAAe9f,EAAG,EAAGoC,GACrC8P,EAAS+O,GAAiBjhB,EAAGoC,EAAGA,EAAEnJ,OAAQ2e,EAAWC,OAClD,CACH,IAAID,EAAYkI,GAAe9f,EAAG,EAAG,WACrC4kB,GAAe5kB,EAAG,EAAG+F,GACrByH,EAAWxN,EAhCE,GAiCbkS,EAASwF,EAAS1X,EAAG6nB,GAAgB,KAAMjQ,EAAWC,GAE1D,OAAO8P,GAAS3nB,EAAGkS,EAAQ3a,IAgC3B,SA7BkB,SAASyI,GAC3B,IAAIof,EAAQU,GAAe9f,EAAG,EAAG,MAC7B6X,EAAOiI,GAAe9f,EAAG,EAAG,MAC5BzI,EAAOqf,EAAW5W,EAAG,GAAS,EAAJ,EAC1BkS,EAAS0Q,GAAe5iB,EAAGof,EAAOvH,GACtC,OAAO8P,GAAS3nB,EAAGkS,EAAQ3a,IAyB3B,KAAkBgwB,GAClB,MAzOe,SAASvnB,GACxB,OA1Bc,SAASA,EAAGkoB,EAAQC,EAAQC,GAW1C,OAVA3D,GAAczkB,EAAG,GACb+e,GAAkB/e,EAAG,EAAGkoB,KAAYziB,GACpCqJ,EAAkB9O,EAAGooB,GACrB9O,EAActZ,EAAG,GAEZmZ,EAAYnZ,KAEjBsZ,EAActZ,EAAG,GACjBwB,EAASxB,EAAG,EAAG,IAEZ,EAeAqoB,CAAUroB,EAAGgD,GAAa,WAAW,GAAO,EAAGukB,KAyOtD,MAjHe,SAASvnB,GACxBykB,GAAczkB,EAAG,GACjByY,EAAgBzY,EAAG,GACnBmW,EAAWnW,EAAG,GACd,IAAIkS,EAASK,EAAWvS,EAAGU,EAAWV,GAAK,EAAGsH,EAAa,EAAG,EAAGogB,IACjE,OAAOA,GAAY1nB,EAAGkS,EAAQ,IA6G9B,MAnWe,SAASlS,GACxB,IAAIuM,EAAI7L,EAAWV,GACnBsB,EAActB,EAAGgD,GAAa,YAAY,IAC1C,IAAK,IAAIrI,EAAI,EAAGA,GAAK4R,EAAG5R,IAAK,CACzB2e,EAActZ,GAAI,GAClBsZ,EAActZ,EAAGrF,GACjB6G,EAASxB,EAAG,EAAG,GACf,IAAIoC,EAAIoO,EAAcxQ,GAAI,GAC1B,GAAU,OAANoC,EACA,OAAOuc,GAAW3e,EAAGgD,GAAa,+CAClCrI,EAAI,GAAGmsB,GAAgB9jB,GAAa,OACxC8jB,GAAgB1kB,GAChBlB,EAAQlB,EAAG,GAGf,OADA+mB,KACO,GAqVP,SAtTkB,SAAS/mB,GAI3B,OAHAykB,GAAczkB,EAAG,GACjBykB,GAAczkB,EAAG,GACjByY,EAAgBzY,EAAGwZ,EAAaxZ,EAAG,EAAG,IAC/B,GAmTP,OAzSgB,SAASA,GAKzB,OAJA4kB,GAAe5kB,EAAG,EAAG8F,GACrB2e,GAAczkB,EAAG,GACjBwN,EAAWxN,EAAG,GACdyZ,EAAWzZ,EAAG,GACP,GAqSP,OAjTgB,SAASA,GACzB,IAAI9E,EAAIsW,EAASxR,EAAG,GAGpB,OAFAskB,GAActkB,EAAG9E,IAAM4K,GAAc5K,IAAM2K,EAAa,EAAG,4BAC3DiF,EAAgB9K,EAAG4Z,EAAW5Z,EAAG,IAC1B,GA8SP,OAnSgB,SAASA,GAMzB,OALA4kB,GAAe5kB,EAAG,EAAG8F,GACrB2e,GAAczkB,EAAG,GACjBykB,GAAczkB,EAAG,GACjBwN,EAAWxN,EAAG,GACd+Z,EAAW/Z,EAAG,GACP,GA8RP,OArJgB,SAASA,GACzB,IAAIuM,EAAI7L,EAAWV,GACnB,GAAIwR,EAASxR,EAAG,KAAO6F,GAAyC,KAA1BgL,EAAa7Q,EAAG,GAAG,GAErD,OADA8K,EAAgB9K,EAAGuM,EAAI,GAChB,EACJ,CACH,IAAI5R,EAAIslB,GAAkBjgB,EAAG,GAI7B,OAHIrF,EAAI,EAAGA,EAAI4R,EAAI5R,EACVA,EAAI4R,IAAG5R,EAAI4R,GACpB+X,GAActkB,EAAG,GAAKrF,EAAG,EAAG,sBACrB4R,EAAI5R,IA4If,aAtUsB,SAASqF,GAC/B,IAAI9E,EAAIsW,EAASxR,EAAG,GAGpB,OAFA4kB,GAAe5kB,EAAG,EAAG8F,GACrBwe,GAActkB,EAAG9E,IAAMuK,GAAYvK,IAAM4K,EAAY,EAAG,yBACpDiZ,GAAkB/e,EAAG,EAAGgD,GAAa,eAAe,MAAWyC,EACxDkZ,GAAW3e,EAAGgD,GAAa,yCACtCwK,EAAWxN,EAAG,GACdya,EAAiBza,EAAG,GACb,IA+TP,SAzMkB,SAASA,GAC3B,GAAIwR,EAASxR,EAAG,IAAM,EAAG,CAErB,GADAykB,GAAczkB,EAAG,GACbwR,EAASxR,EAAG,KAAO4F,EAEnB,OADA4H,EAAWxN,EAAG,GACP,EACJ,CACH,IAAIoC,EAAIyO,EAAa7Q,EAAG,GACxB,GAAU,OAANoC,GAAc4Y,EAAmBhb,EAAGoC,KAAOA,EAAEnJ,OAAO,EACpD,OAAO,OAEZ,CACH,IAAIqvB,EAAOrI,GAAkBjgB,EAAG,GAChC4kB,GAAe5kB,EAAG,EAAG6F,GACrB,IAAIzD,EAAIyO,EAAa7Q,EAAG,GACxBskB,GAActkB,EAAG,GAAKsoB,GAAQA,GAAQ,GAAI,EAAG,qBAC7C,IAAI/b,EA7BM,SAASnK,EAAGkmB,GAC1B,IACIlmB,EAAIwB,GAAYxB,GAClB,MAAOid,GACL,OAAO,KAEX,IAAIld,EAAI,wDAAwD0kB,KAAKzkB,GACrE,IAAKD,EAAG,OAAO,KACf,IAAIE,EAAIkmB,SAASpmB,EAAE,GAAGA,EAAE,GAAImmB,GAC5B,OAAIE,MAAMnmB,GAAW,KACZ,EAAFA,EAmBKomB,CAAUrmB,EAAGkmB,GACrB,GAAU,OAAN/b,EAEA,OADAzB,EAAgB9K,EAAGuM,GACZ,EAKf,OADA4M,EAAYnZ,GACL,GAkLP,SAzVkB,SAASA,GAI3B,OAHAykB,GAAczkB,EAAG,GACjBimB,GAAejmB,EAAG,GAEX,GAsVP,KApRc,SAASA,GACvB,IAAI9E,EAAIsW,EAASxR,EAAG,GAGpB,OAFAskB,GAActkB,EAAG9E,IAAMsK,EAAW,EAAG,kBACrCjE,EAAevB,EAAGuc,EAAavc,EAAG9E,IAC3B,GAiRP,OA/GgB,SAAS8E,GACzB,IAAIuM,EAAI7L,EAAWV,GACnB4kB,GAAe5kB,EAAG,EAAG+F,GACrB0S,EAAgBzY,EAAG,GACnBsZ,EAActZ,EAAG,GACjBiO,EAAWjO,EAAG,EAAG,GACjB,IAAIkS,EAASK,EAAWvS,EAAGuM,EAAI,EAAGjF,EAAa,EAAG,EAAGogB,IACrD,OAAOA,GAAY1nB,EAAGkS,EAAQ,KAwHlC1O,EAAOC,QAAQilB,aAbM,SAAS1oB,GAU1B,OARA8Y,EAAoB9Y,GACpBiiB,GAAcjiB,EAAGioB,GAAY,GAE7B3O,EAActZ,GAAI,GAClBgL,EAAahL,GAAI,EAAGgD,GAAa,OAEjC+H,EAAgB/K,EAAGmF,GACnB6F,EAAahL,GAAI,EAAGgD,GAAa,aAC1B,gCChfX,MAAM,YACFsE,EAAW,UACXC,EAAS,WACTC,EAAU,WACVC,EAAU,UACVC,EAAS,WACTC,EAAU,UACVC,EAAS,WACTE,EAAU,UACVG,EAAS,UACTG,EAAS,UACTC,EAAS,UACTE,EACAhD,gBAAgB,aACZG,EAAY,mBACZC,EAAkB,YAClBS,EAAW,SACXX,EAAQ,YACRY,EAAW,YACXC,EAAW,WACXR,GACH,aACD9C,GACA,EAAQ,OACN,WAAE2lB,GAAe,EAAQ,MACzBC,EAAW,EAAQ,MACnBpd,EAAW,EAAQ,MACnBqd,EAAW,EAAQ,MACnBC,EAAW,EAAQ,MACnB/c,EAAW,EAAQ,MACnBD,EAAW,EAAQ,MAEnBid,EAAWF,EAASE,SACpB9c,EAAWT,EAAQS,OASnB+c,GAAW,EAEXC,EAAS,CACXC,QAAc,EACdC,QAAc,EACdC,QAAc,EACdC,QAAc,EACdC,QAAc,EACdC,QAAc,EACdC,SAAc,EACdC,SAAc,EACdC,QAAc,EACdC,SAAc,EACdC,QAAc,GACdC,QAAc,GACdC,WAAc,GACdC,OAAc,GACdC,OAAc,GACdC,OAAc,GACdC,OAAc,GACdC,OAAc,GACdC,OAAc,GACdC,QAAc,GACdC,OAAc,GACdC,aAAc,IAGZC,EAAQ,CACVC,UAAc,EACdC,SAAc,EACdC,QAAc,EACdC,QAAc,EACdC,YAAc,GAGZC,EAAW,SAASzL,GACtB,OAAOA,EAAEnkB,IAAMmkB,EAAElP,GAOf4a,EAAY,SAAS1L,EAAG2L,GAC1B,IAAIC,EAAKnC,EAAQoC,QACjB,GAAIJ,EAASzL,GACT,OAAO,EACX,OAAQA,EAAEpQ,GACN,KAAKgc,EAAGE,MACJ,OAAIH,GACO,IAAI/e,EAAO3F,EAAa+Y,EAAE9b,EAAE6nB,MAG3C,KAAKH,EAAGI,MACJ,OAAIL,GACO,IAAI/e,EAAO5F,EAAagZ,EAAE9b,EAAE+nB,MAG3C,QAAS,OAAO,IAUlBC,EAAW,SAASC,EAAIzpB,EAAMwK,GAChC,IAAIkf,EACA3qB,EAAIiB,EAAOwK,EAAI,EACnB,GAAIif,EAAGE,GAAKF,EAAGG,aACXF,EAAWD,EAAGrb,EAAE7Q,KAAKksB,EAAGE,GAAG,GACvBD,EAASG,SAAW7C,EAAS8C,YAAY,CACzC,IAAIC,EAAQL,EAASM,EACjBC,EAAKF,EAAQL,EAASrL,EAC1B,GAAK0L,GAAS/pB,GAAQA,GAAQiqB,EAAK,GAC1BjqB,GAAQ+pB,GAASA,GAAShrB,EAAI,EAKnC,OAJIgrB,EAAQ/pB,IAAMA,EAAO+pB,GACrBE,EAAKlrB,IAAGA,EAAIkrB,GAChBnD,EAASoD,SAASR,EAAU1pB,QAC5B8mB,EAASqD,SAAST,EAAU3qB,EAAIiB,GAK5CoqB,EAAaX,EAAIzC,EAAS8C,WAAY9pB,EAAMwK,EAAI,EAAG,IAGjD6f,EAAiB,SAASZ,EAAInM,GAChC,OAAOmM,EAAGrb,EAAE7Q,KAAK+f,EAAE9b,EAAE8oB,OAOnBC,EAAU,SAASd,EAAIE,GACzB,IAAIa,EAASf,EAAGrb,EAAE7Q,KAAKosB,GAAIc,IAC3B,OAAID,IAAWvD,EACJA,EAEA0C,EAAK,EAAIa,GAOlBE,EAAU,SAASjB,EAAIE,EAAIgB,GAC7B,IAAIC,EAAMnB,EAAGrb,EAAE7Q,KAAKosB,GAChBa,EAASG,GAAQhB,EAAK,GAC1B/C,EAAW+D,IAAS1D,GAChBhlB,KAAK4oB,IAAIL,GAAU1D,EAASgE,YAC5BjE,EAAKkE,iBAAiBtB,EAAGuB,GAAI/pB,EAAa,8BAA8B,IAC5E6lB,EAASmE,WAAWL,EAAKJ,IAMvBU,EAAc,SAASzB,EAAI0B,EAAIC,GACjC,GAAIA,IAAOnE,EAAS,OAAOkE,EACtB,GAAIA,IAAOlE,EACZkE,EAAKC,MACJ,CACD,IAAIC,EAAOF,EACPG,EAAOf,EAAQd,EAAI4B,GACvB,KAAOC,IAASrE,GACZoE,EAAOC,EACPA,EAAOf,EAAQd,EAAI4B,GAEvBX,EAAQjB,EAAI4B,EAAMD,GAGtB,OAAOD,GASLI,EAAY,SAAU9B,GACxB,IAAI+B,EAAM/B,EAAG+B,IACb/B,EAAG+B,IAAMvE,EACT,IAAIjH,EAAIyL,GAAchC,EAAIzC,EAAS0E,OAAQ,EAAGzE,GAE9C,OADAjH,EAAIkL,EAAYzB,EAAIzJ,EAAGwL,GAChBxL,GAkBL2L,EAAW,SAASlC,EAAIpY,EAAI2Y,EAAG3L,EAAGuN,GAEpC,OADAxB,EAAaX,EAAIpY,EAAI2Y,EAAG3L,EAAGuN,GACpBL,EAAU9B,IAOfoC,EAAgB,SAASpC,GAE3B,OADAA,EAAGG,WAAaH,EAAGE,GACZF,EAAGE,IAQRmC,EAAuB,SAASrC,EAAIE,GACtC,OAAIA,GAAM,GAAK7C,EAASiF,UAAUtC,EAAGrb,EAAE7Q,KAAKosB,EAAK,GAAGE,QACzCF,EAAK,EAELA,GAETqC,EAAiB,SAASvC,EAAIE,GAChC,OAAOF,EAAGrb,EAAE7Q,KAAKuuB,EAAqBrC,EAAIE,KAUxCsC,EAAe,SAASxC,EAAI5wB,EAAMqzB,GACpC,IAAIvC,EAAKmC,EAAqBrC,EAAI5wB,GAC9BD,EAAI6wB,EAAGrb,EAAE7Q,KAAKosB,GAClB,OAAI/wB,EAAEixB,SAAW7C,EAASmF,aAEtBD,IAAQpF,EAASsF,QAAUF,IAAQtzB,EAAEylB,EACrCyI,EAASoD,SAAStxB,EAAGszB,GAIrBzC,EAAGrb,EAAE7Q,KAAKosB,GAAM7C,EAASuF,WAAWrF,EAASsF,QAAS1zB,EAAEylB,EAAG,EAAGzlB,EAAEgzB,IAE7D,IAMLW,EAAe,SAAS9C,EAAI4B,GAC9B,KAAOA,IAASpE,EAASoE,EAAOd,EAAQd,EAAI4B,GACxCY,EAAaxC,EAAI4B,EAAMvE,EAASsF,SAQlCI,EAAe,SAAS/C,EAAI4B,EAAMoB,EAASP,EAAKQ,GAClD,KAAOrB,IAASpE,GAAS,CACrB,IAAIqE,EAAOf,EAAQd,EAAI4B,GACnBY,EAAaxC,EAAI4B,EAAMa,GACvBxB,EAAQjB,EAAI4B,EAAMoB,GAElB/B,EAAQjB,EAAI4B,EAAMqB,GACtBrB,EAAOC,IAkBTqB,EAAmB,SAASlD,EAAI4B,GAClCQ,EAAcpC,GACdA,EAAG+B,IAAMN,EAAYzB,EAAIA,EAAG+B,IAAKH,IAQ/BuB,EAAiB,SAASnD,EAAI4B,EAAM3wB,GAClCA,IAAW+uB,EAAGE,GACdgD,EAAiBlD,EAAI4B,IAErBzE,EAAWlsB,EAAS+uB,EAAGE,IACvB6C,EAAa/C,EAAI4B,EAAM3wB,EAAQosB,EAASsF,OAAQ1xB,KAsBlDmyB,EAAY,SAASpD,EAAI7wB,GAC3B,IAAIwV,EAAIqb,EAAGrb,EAKX,OApDiB,SAASqb,GAC1B+C,EAAa/C,EAAIA,EAAG+B,IAAK/B,EAAGE,GAAI7C,EAASsF,OAAQ3C,EAAGE,IACpDF,EAAG+B,IAAMvE,EA8CT6F,CAAarD,GAEbrb,EAAE7Q,KAAKksB,EAAGE,IAAM/wB,EAChBwV,EAAE2e,SAAStD,EAAGE,IAAMF,EAAGuB,GAAGgC,SACnBvD,EAAGE,MAORS,EAAe,SAASX,EAAI5e,EAAG3K,EAAG0B,EAAGb,GAKvC,OAJA6lB,EAAWE,EAASmG,UAAUpiB,KAAOic,EAASoG,MAC9CtG,EAAWE,EAASqG,SAAStiB,KAAOic,EAASsG,QAAgB,IAANxrB,GACvDglB,EAAWE,EAASuG,SAASxiB,KAAOic,EAASsG,QAAgB,IAANrsB,GACvD6lB,EAAW1mB,GAAK4mB,EAASwG,UAAY1rB,GAAKklB,EAASyG,UAAYxsB,GAAK+lB,EAAS0G,UACtEX,EAAUpD,EAAI3C,EAASuF,WAAWxhB,EAAG3K,EAAG0B,EAAGb,KAMhD0sB,GAAe,SAAShE,EAAI5e,EAAG3K,EAAGwtB,GAIpC,OAHA9G,EAAWE,EAASmG,UAAUpiB,KAAOic,EAAS6G,MAAQ7G,EAASmG,UAAUpiB,KAAOic,EAAS8G,OACzFhH,EAAWE,EAASuG,SAASxiB,KAAOic,EAASsG,QAC7CxG,EAAW1mB,GAAK4mB,EAASwG,UAAYI,GAAM5G,EAAS+G,WAC7ChB,EAAUpD,EAAI3C,EAASgH,WAAWjjB,EAAG3K,EAAGwtB,KAG7CjC,GAAgB,SAAShC,EAAG5e,EAAEmf,EAAES,GAClC,OAAOgD,GAAahE,EAAI5e,EAAGmf,EAAG,EAAQlD,EAASgE,aAM7CiD,GAAe,SAAStE,EAAIvpB,GAE9B,OADA0mB,EAAW1mB,GAAK4mB,EAASkH,WAClBnB,EAAUpD,EAAI3C,EAASmH,UAAUjH,EAASkH,YAAahuB,KAQ5DiuB,GAAa,SAAS1E,EAAIyC,EAAKhf,GACjC,GAAIA,GAAK4Z,EAAS+G,UACd,OAAOJ,GAAahE,EAAIzC,EAASoH,SAAUlC,EAAKhf,GAC/C,CACD,IAAId,EAAIqhB,GAAahE,EAAIzC,EAASqH,UAAWnC,EAAK,GAElD,OADA6B,GAAatE,EAAIvc,GACVd,IAQTkiB,GAAkB,SAAS7E,EAAIjf,GACjC,IAAI+jB,EAAW9E,EAAG+E,QAAUhkB,EACxB+jB,EAAW9E,EAAGrb,EAAEqgB,eACZF,GA5WI,KA6WJ1H,EAAKkE,iBAAiBtB,EAAGuB,GAAI/pB,EAAa,mDAAmD,IACjGwoB,EAAGrb,EAAEqgB,aAAeF,IAOtBG,GAAmB,SAASjF,EAAIjf,GAClC8jB,GAAgB7E,EAAIjf,GACpBif,EAAG+E,SAAWhkB,GAOZgkB,GAAU,SAAS/E,EAAIyC,IACpBpF,EAAS6H,IAAIzC,IAAQA,GAAOzC,EAAGmF,UAChCnF,EAAG+E,UACH5H,EAAWsF,IAAQzC,EAAG+E,WAOxBK,GAAU,SAASpF,EAAInM,GACrBA,EAAEpQ,IAAM6Z,EAAQoC,QAAQ2F,WACxBN,GAAQ/E,EAAInM,EAAE9b,EAAE8oB,OAOlByE,GAAW,SAAStF,EAAIuF,EAAIC,GAC9B,IAAIC,EAAMF,EAAG9hB,IAAM6Z,EAAQoC,QAAQ2F,UAAaE,EAAGxtB,EAAE8oB,MAAQ,EACzD6E,EAAMF,EAAG/hB,IAAM6Z,EAAQoC,QAAQ2F,UAAaG,EAAGztB,EAAE8oB,MAAQ,EACzD4E,EAAKC,GACLX,GAAQ/E,EAAIyF,GACZV,GAAQ/E,EAAI0F,KAGZX,GAAQ/E,EAAI0F,GACZX,GAAQ/E,EAAIyF,KAYdE,GAAO,SAAS3F,EAAI4F,EAAK/uB,GAC3B,IAAI8N,EAAIqb,EAAGrb,EACPvW,EAAMmS,EAAO2N,SAAS8R,EAAGxrB,EAAGwrB,EAAGuB,GAAGsE,EAAGD,GACzC,GAAIx3B,EAAI6c,cAAe,CACnB,IAAIxH,EAAIrV,EAAIiK,MAEZ,GAAIoL,EAAIuc,EAAG8F,IAAMnhB,EAAElB,EAAEA,GAAGiB,UAAY7N,EAAE6N,SAAWC,EAAElB,EAAEA,GAAGpL,QAAUxB,EAAEwB,MAChE,OAAOoL,EAGf,IAAIA,EAAIuc,EAAG8F,GAIX,OAHAvlB,EAAOiO,aAAawR,EAAGxrB,EAAGwrB,EAAGuB,GAAGsE,EAAGD,EAAK,IAAI5lB,EAAQS,OAAO3F,EAAa2I,IACxEkB,EAAElB,EAAEA,GAAK5M,EACTmpB,EAAG8F,KACIriB,GAiBLsiB,GAAY,SAAS/F,EAAIjf,GAC3B,IAAI0C,EAAI,IAAIhD,EAAOtG,EAAoB4G,GACnCK,EAAI,IAAIX,EAAO3F,EAAaiG,GAChC,OAAO4kB,GAAK3F,EAAIvc,EAAGrC,IAMjB4kB,GAAe,SAAShG,EAAIrpB,GAC9B,IAAIyK,EAAI,IAAIX,EAAO5F,EAAalE,GAChC,OAAOgvB,GAAK3F,EAAI5e,EAAGA,IAOjB6kB,GAAQ,SAASjG,EAAI7nB,GACvB,IAAIiJ,EAAI,IAAIX,EAAOvG,EAAc/B,GACjC,OAAOwtB,GAAK3F,EAAI5e,EAAGA,IAmBjB8kB,GAAkB,SAASlG,EAAInM,EAAG9N,GACpC,IAAI0Z,EAAKnC,EAAQoC,QACjB,GAAI7L,EAAEpQ,IAAMgc,EAAG0G,MACX9I,EAAS+I,SAASxF,EAAeZ,EAAInM,GAAI9N,EAAW,QAEnD,GAAI8N,EAAEpQ,IAAMgc,EAAG4G,QAAS,CACzB,IAAInG,EAAKU,EAAeZ,EAAInM,GAC5BwJ,EAASqD,SAASR,EAAIna,EAAW,GACjCsX,EAASoD,SAASP,EAAIF,EAAG+E,SACzBE,GAAiBjF,EAAI,QAEpB7C,EAAWpX,IAAajK,IAiB3BwqB,GAAiB,SAAStG,EAAInM,GAChC,IAAI4L,EAAKnC,EAAQoC,QACb7L,EAAEpQ,IAAMgc,EAAG0G,OAEXhJ,EAAuC,IAA5ByD,EAAeZ,EAAInM,GAAGsO,GACjCtO,EAAEpQ,EAAIgc,EAAG4F,UACTxR,EAAE9b,EAAE8oB,KAAOD,EAAeZ,EAAInM,GAAG0M,GAC1B1M,EAAEpQ,IAAMgc,EAAG4G,UAClBhJ,EAASqD,SAASE,EAAeZ,EAAInM,GAAI,GACzCA,EAAEpQ,EAAIgc,EAAG8G,aAOXC,GAAqB,SAASxG,EAAInM,GACpC,IAAI4L,EAAKnC,EAAQoC,QAEjB,OAAQ7L,EAAEpQ,GACN,KAAKgc,EAAGgH,OACJ5S,EAAEpQ,EAAKgc,EAAG4F,UACV,MAEJ,KAAK5F,EAAGiH,OACJ7S,EAAE9b,EAAE8oB,KAAOF,EAAaX,EAAIzC,EAASoJ,YAAa,EAAG9S,EAAE9b,EAAE8oB,KAAM,GAC/DhN,EAAEpQ,EAAIgc,EAAG8G,WACT,MAEJ,KAAK9G,EAAGmH,SAAU,CACd,IAAIhf,EACJmd,GAAQ/E,EAAInM,EAAE9b,EAAE8uB,IAAIz4B,KAChBylB,EAAE9b,EAAE8uB,IAAIC,KAAOrH,EAAGgH,QAClB1B,GAAQ/E,EAAInM,EAAE9b,EAAE8uB,IAAIn3B,GACpBkY,EAAK2V,EAASwJ,cAEd5J,EAAWtJ,EAAE9b,EAAE8uB,IAAIC,KAAOrH,EAAGiH,QAC7B9e,EAAK2V,EAASyJ,aAElBnT,EAAE9b,EAAE8oB,KAAOF,EAAaX,EAAIpY,EAAI,EAAGiM,EAAE9b,EAAE8uB,IAAIn3B,EAAGmkB,EAAE9b,EAAE8uB,IAAIz4B,KACtDylB,EAAEpQ,EAAIgc,EAAG8G,WACT,MAEJ,KAAK9G,EAAG4G,QAAS,KAAK5G,EAAG0G,MACrBG,GAAetG,EAAInM,KAOzBoT,GAAgB,SAASjH,EAAIO,EAAGpoB,EAAG+uB,GAErC,OADA9E,EAAcpC,GACPW,EAAaX,EAAIzC,EAAS4J,YAAa5G,EAAGpoB,EAAG+uB,IAOlDE,GAAgB,SAASpH,EAAInM,EAAG4O,GAClC,IAAIhD,EAAKnC,EAAQoC,QAEjB,OADA8G,GAAmBxG,EAAInM,GACfA,EAAEpQ,GACN,KAAKgc,EAAG4H,KACJtH,EAASC,EAAIyC,EAAK,GAClB,MAEJ,KAAKhD,EAAG6H,OAAQ,KAAK7H,EAAG8H,MACpB5G,EAAaX,EAAIzC,EAAS4J,YAAa1E,EAAK5O,EAAEpQ,IAAMgc,EAAG8H,MAAO,GAC9D,MAEJ,KAAK9H,EAAG+H,GACJ9C,GAAW1E,EAAIyC,EAAK5O,EAAE9b,EAAE8oB,MACxB,MAEJ,KAAKpB,EAAGI,MACJ6E,GAAW1E,EAAIyC,EAAKuD,GAAahG,EAAInM,EAAE9b,EAAE+nB,OACzC,MAEJ,KAAKL,EAAGE,MACJ+E,GAAW1E,EAAIyC,EAAKsD,GAAU/F,EAAInM,EAAE9b,EAAE6nB,OACtC,MAEJ,KAAKH,EAAG8G,WAAY,CAChB,IAAIrG,EAAKU,EAAeZ,EAAInM,GAC5BwJ,EAASoD,SAASP,EAAIuC,GACtB,MAEJ,KAAKhD,EAAG4F,UACA5C,IAAQ5O,EAAE9b,EAAE8oB,MACZF,EAAaX,EAAIzC,EAASkK,QAAShF,EAAK5O,EAAE9b,EAAE8oB,KAAM,GACtD,MAEJ,QAEI,YADA1D,EAAWtJ,EAAEpQ,IAAMgc,EAAGiI,MAI9B7T,EAAE9b,EAAE8oB,KAAO4B,EACX5O,EAAEpQ,EAAIgc,EAAG4F,WAMPsC,GAAmB,SAAS3H,EAAInM,GAC9BA,EAAEpQ,IAAM6Z,EAAQoC,QAAQ2F,YACxBJ,GAAiBjF,EAAI,GACrBoH,GAAcpH,EAAInM,EAAGmM,EAAG+E,QAAQ,KAQlC6C,GAAa,SAAS5H,EAAI4B,GAC5B,KAAOA,IAASpE,EAASoE,EAAOd,EAAQd,EAAI4B,GAExC,GADQW,EAAevC,EAAI4B,GACrBxB,SAAW7C,EAASmF,WAAY,OAAO,EAEjD,OAAO,GAULmF,GAAU,SAAS7H,EAAInM,EAAG4O,GAC5B,IAAIhD,EAAKnC,EAAQoC,QAIjB,GAHA0H,GAAcpH,EAAInM,EAAG4O,GACjB5O,EAAEpQ,IAAMgc,EAAGiI,OACX7T,EAAEnkB,EAAI+xB,EAAYzB,EAAInM,EAAEnkB,EAAGmkB,EAAE9b,EAAE8oB,OAC/BvB,EAASzL,GAAI,CACb,IAAIiU,EACA9R,EAAMwH,EACNuK,EAAMvK,EACV,GAAIoK,GAAW5H,EAAInM,EAAEnkB,IAAMk4B,GAAW5H,EAAInM,EAAElP,GAAI,CAC5C,IAAIqjB,EAAMnU,EAAEpQ,IAAMgc,EAAGiI,KAAQlK,EAAUsE,EAAU9B,GACjDhK,EAAMiR,GAAcjH,EAAIyC,EAAK,EAAG,GAChCsF,EAAMd,GAAcjH,EAAIyC,EAAK,EAAG,GAChCS,EAAiBlD,EAAIgI,GAEzBF,EAAQ1F,EAAcpC,GACtB+C,EAAa/C,EAAInM,EAAElP,EAAGmjB,EAAOrF,EAAKzM,GAClC+M,EAAa/C,EAAInM,EAAEnkB,EAAGo4B,EAAOrF,EAAKsF,GAEtClU,EAAElP,EAAIkP,EAAEnkB,EAAI8tB,EACZ3J,EAAE9b,EAAE8oB,KAAO4B,EACX5O,EAAEpQ,EAAIgc,EAAG4F,WAOP4C,GAAmB,SAASjI,EAAInM,GAClC2S,GAAmBxG,EAAInM,GACvBuR,GAAQpF,EAAInM,GACZoR,GAAiBjF,EAAI,GACrB6H,GAAQ7H,EAAInM,EAAGmM,EAAG+E,QAAU,IAQ1BmD,GAAkB,SAASlI,EAAInM,GAEjC,GADA2S,GAAmBxG,EAAInM,GACnBA,EAAEpQ,IAAM6Z,EAAQoC,QAAQ2F,UAAW,CACnC,IAAK/F,EAASzL,GACV,OAAOA,EAAE9b,EAAE8oB,KACf,GAAIhN,EAAE9b,EAAE8oB,MAAQb,EAAGmF,QAEf,OADA0C,GAAQ7H,EAAInM,EAAGA,EAAE9b,EAAE8oB,MACZhN,EAAE9b,EAAE8oB,KAInB,OADAoH,GAAiBjI,EAAInM,GACdA,EAAE9b,EAAE8oB,MAgBTsH,GAAe,SAASnI,EAAInM,GAC1ByL,EAASzL,GACTqU,GAAgBlI,EAAInM,GAEpB2S,GAAmBxG,EAAInM,IASzBuU,GAAc,SAASpI,EAAInM,GAC7B,IAAI4L,EAAKnC,EAAQoC,QACb2I,GAAK,EAET,OADAF,GAAanI,EAAInM,GACTA,EAAEpQ,GACN,KAAKgc,EAAG8H,MAAO1T,EAAE9b,EAAE8oB,KAAOoF,GAAMjG,GAAI,GAAOqI,GAAK,EAAM,MACtD,KAAK5I,EAAG6H,OAAQzT,EAAE9b,EAAE8oB,KAAOoF,GAAMjG,GAAI,GAAQqI,GAAK,EAAM,MACxD,KAAK5I,EAAG4H,KAAMxT,EAAE9b,EAAE8oB,KAnQb,SAASb,GAClB,IAAInpB,EAAI,IAAI4J,EAAOxG,EAAU,MACzBwJ,EAAI,IAAIhD,EAAOnG,EAAY0lB,EAAGuB,GAAGsE,GAErC,OAAOF,GAAK3F,EAAIvc,EAAG5M,GA+PUyxB,CAAKtI,GAAKqI,GAAK,EAAM,MAC9C,KAAK5I,EAAGE,MAAO9L,EAAE9b,EAAE8oB,KAAOkF,GAAU/F,EAAInM,EAAE9b,EAAE6nB,MAAOyI,GAAK,EAAM,MAC9D,KAAK5I,EAAGI,MAAOhM,EAAE9b,EAAE8oB,KAAOmF,GAAahG,EAAInM,EAAE9b,EAAE+nB,MAAOuI,GAAK,EAAM,MACjE,KAAK5I,EAAG+H,GAAIa,GAAK,EAIrB,OAAIA,IACAxU,EAAEpQ,EAAIgc,EAAG+H,GACL3T,EAAE9b,EAAE8oB,MAAQxD,EAASkL,YACdlL,EAASmL,MAAM3U,EAAE9b,EAAE8oB,MAI3BqH,GAAgBlI,EAAInM,IA+CzB4U,GAAkB,SAASzI,EAAInM,GACjC,IAAIqM,EAAKqC,EAAevC,EAAInM,EAAE9b,EAAE8oB,MAChC1D,EAAWE,EAASiF,UAAUpC,EAAGE,SAAWF,EAAGE,SAAW7C,EAASmF,YAAcxC,EAAGE,SAAW7C,EAASsF,SACxGxF,EAASoD,SAASP,GAAMA,EAAI,IAS1BwI,GAAa,SAAS1I,EAAInM,EAAGkF,GAC/B,GAAIlF,EAAEpQ,IAAM6Z,EAAQoC,QAAQ6G,WAAY,CACpC,IAAIoC,EAAK/H,EAAeZ,EAAInM,GAC5B,GAAI8U,EAAGvI,SAAW7C,EAASqL,OAEvB,OADA5I,EAAGE,KACIgC,EAASlC,EAAIzC,EAASsF,QAAS8F,EAAG/T,EAAG,GAAImE,GAMxD,OAFA4O,GAAiB3H,EAAInM,GACrBuR,GAAQpF,EAAInM,GACLqO,EAASlC,EAAIzC,EAASmF,WAAYrF,EAASsF,OAAQ9O,EAAE9b,EAAE8oB,KAAM9H,IAMlE8P,GAAgB,SAAS7I,EAAInM,GAC/B,IACIqM,EADAT,EAAKnC,EAAQoC,QAGjB,OADA8G,GAAmBxG,EAAInM,GACfA,EAAEpQ,GACN,KAAKgc,EAAGiI,KACJe,GAAgBzI,EAAInM,GACpBqM,EAAKrM,EAAE9b,EAAE8oB,KACT,MAEJ,KAAKpB,EAAG+H,GAAI,KAAK/H,EAAGI,MAAO,KAAKJ,EAAGE,MAAO,KAAKF,EAAG8H,MAC9CrH,EAAK1C,EACL,MAEJ,QACI0C,EAAKwI,GAAW1I,EAAInM,EAAG,GAI/BA,EAAElP,EAAI8c,EAAYzB,EAAInM,EAAElP,EAAGub,GAC3BgD,EAAiBlD,EAAInM,EAAEnkB,GACvBmkB,EAAEnkB,EAAI8tB,GAMJsL,GAAiB,SAAS9I,EAAInM,GAChC,IACIqM,EADAT,EAAKnC,EAAQoC,QAGjB,OADA8G,GAAmBxG,EAAInM,GACfA,EAAEpQ,GACN,KAAKgc,EAAGiI,KACJxH,EAAKrM,EAAE9b,EAAE8oB,KACT,MAEJ,KAAKpB,EAAG4H,KAAM,KAAK5H,EAAG6H,OAClBpH,EAAK1C,EACL,MAEJ,QACI0C,EAAKwI,GAAW1I,EAAInM,EAAG,GAI/BA,EAAEnkB,EAAI+xB,EAAYzB,EAAInM,EAAEnkB,EAAGwwB,GAC3BgD,EAAiBlD,EAAInM,EAAElP,GACvBkP,EAAElP,EAAI6Y,GAuEJuL,GAAe,SAASnhB,EAAI2d,EAAIC,GAClC,IACIwD,EAAIC,EADJxJ,EAAKnC,EAAQoC,QAEjB,KAAMsJ,EAAKzJ,EAAUgG,GAAI,OAAY0D,EAAK1J,EAAUiG,GAAI,MAnB5C,SAAS5d,EAAIohB,EAAIC,GAC7B,OAAQrhB,GACJ,KAAK5L,EAAY,KAAKE,EAAW,KAAKC,EACtC,KAAKS,EAAW,KAAKC,EAAW,KAAKZ,EACjC,OAA8B,IAAtBqE,EAAIiF,UAAUyjB,KAAuC,IAAtB1oB,EAAIiF,UAAU0jB,GAEzD,KAAK7sB,EAAW,KAAKE,EAAY,KAAKG,EAClC,OAAqB,IAAbwsB,EAAG5wB,MACf,QAAS,OAAO,GAW+C6wB,CAAQthB,EAAIohB,EAAIC,GAC/E,OAAO,EACX,IAAI5gB,EAAM,IAAI5H,EAEd,GADAT,EAAQ6H,WAAW,KAAMD,EAAIohB,EAAIC,EAAI5gB,GACjCA,EAAI4C,cACJsa,EAAG9hB,EAAIgc,EAAGE,MACV4F,EAAGxtB,EAAE6nB,KAAOvX,EAAIhQ,UAEf,CACD,IAAI0I,EAAIsH,EAAIhQ,MACZ,GAAI2kB,MAAMjc,IAAY,IAANA,EACZ,OAAO,EACXwkB,EAAG9hB,EAAIgc,EAAGI,MACV0F,EAAGxtB,EAAE+nB,KAAO/e,EAEhB,OAAO,GAyBLooB,GAAgB,SAASnJ,EAAIpY,EAAI2d,EAAIC,EAAI4D,GAC3C,IAAIC,EAAMjB,GAAYpI,EAAIwF,GACtB8D,EAAMlB,GAAYpI,EAAIuF,GAC1BD,GAAStF,EAAIuF,EAAIC,GACjBD,EAAGxtB,EAAE8oB,KAAOF,EAAaX,EAAIpY,EAAI,EAAG0hB,EAAKD,GACzC9D,EAAG9hB,EAAI6Z,EAAQoC,QAAQ6G,WACvBgD,GAAavJ,EAAIoJ,IA4JfG,GAAe,SAASvJ,EAAIoJ,GAC9BpJ,EAAGrb,EAAE2e,SAAStD,EAAGE,GAAK,GAAKkJ,GA0B/BpxB,EAAOC,QAAQwlB,OAAqBA,EACpCzlB,EAAOC,QAAQulB,QAAqBA,EACpCxlB,EAAOC,QAAQ+mB,MAAqBA,EACpChnB,EAAOC,QAAQ2oB,eAAqBA,EACpC5oB,EAAOC,QAAQ4sB,gBAAqBA,GACpC7sB,EAAOC,QAAQmrB,UAAqBA,EACpCprB,EAAOC,QAAQ0oB,aAAqBA,EACpC3oB,EAAOC,QAAQ+rB,aAAqBA,GACpChsB,EAAOC,QAAQ+pB,cAAqBA,GACpChqB,EAAOC,QAAQysB,WAAqBA,GACpC1sB,EAAOC,QAAQwpB,YAAqBA,EACpCzpB,EAAOC,QAAQuuB,mBAAqBA,GACpCxuB,EAAOC,QAAQmwB,YAAqBA,GACpCpwB,EAAOC,QAAQiwB,gBAAqBA,GACpClwB,EAAOC,QAAQuxB,kBAneW,SAASxJ,EAAInM,IAC/BA,EAAEpQ,IAAM6Z,EAAQoC,QAAQgH,QAAUpH,EAASzL,KAC3CqU,GAAgBlI,EAAInM,IAke5B7b,EAAOC,QAAQgwB,iBAAqBA,GACpCjwB,EAAOC,QAAQkwB,aAAqBA,GACpCnwB,EAAOC,QAAQsxB,aAAqBA,GACpCvxB,EAAOC,QAAQmqB,cAAqBA,EACpCpqB,EAAOC,QAAQ6wB,eAAqBA,GACpC9wB,EAAOC,QAAQ4wB,cAAqBA,GACpC7wB,EAAOC,QAAQwxB,aA3RM,SAASzJ,EAAItwB,EAAG+T,GACjC,IAAIgc,EAAKnC,EAAQoC,QACjBvC,GAAYmC,EAAS5vB,KAAO4tB,EAAQoM,UAAUh6B,EAAE+T,IAAM/T,EAAE+T,IAAMgc,EAAGiH,SACjEh3B,EAAEqI,EAAE8uB,IAAIn3B,EAAIA,EAAEqI,EAAE8oB,KAChBnxB,EAAEqI,EAAE8uB,IAAIz4B,IAAMg6B,GAAYpI,EAAIvc,GAC9B/T,EAAEqI,EAAE8uB,IAAIC,GAAMp3B,EAAE+T,IAAMgc,EAAGiH,OAAUjH,EAAGiH,OAASjH,EAAGgH,OAClD/2B,EAAE+T,EAAIgc,EAAGmH,UAsRb5uB,EAAOC,QAAQ0xB,WA3II,SAAS3J,EAAIpY,EAAI/Q,GAChC,OAAQ+Q,GACJ,KAAK6V,EAAOoB,QACRgK,GAAc7I,EAAInpB,GAClB,MAEJ,KAAK4mB,EAAOqB,OACRgK,GAAe9I,EAAInpB,GACnB,MAEJ,KAAK4mB,EAAOa,WACR2J,GAAiBjI,EAAInpB,GACrB,MAEJ,KAAK4mB,EAAOC,QAAS,KAAKD,EAAOE,QACjC,KAAKF,EAAOG,QAAS,KAAKH,EAAOM,QAAS,KAAKN,EAAOO,SACtD,KAAKP,EAAOI,QAAS,KAAKJ,EAAOK,QACjC,KAAKL,EAAOQ,SAAU,KAAKR,EAAOS,QAAS,KAAKT,EAAOU,SACvD,KAAKV,EAAOW,QAAS,KAAKX,EAAOY,QACxBkB,EAAU1oB,GAAG,IACduxB,GAAYpI,EAAInpB,GAEpB,MAEJ,QACIuxB,GAAYpI,EAAInpB,KAmH5BmB,EAAOC,QAAQ8tB,UAAqBA,GACpC/tB,EAAOC,QAAQ6pB,UAAqBA,EACpC9pB,EAAOC,QAAQ2xB,YAthCK,SAAS5J,EAAItwB,GAC7B,OAAOyzB,EAAenD,EAAI8B,EAAU9B,GAAKtwB,IAshC7CsI,EAAOC,QAAQ8nB,SAAqBA,EACpC/nB,EAAOC,QAAQ+tB,aAAqBA,GACpChuB,EAAOC,QAAQ4xB,gBAz5BS,SAAS7J,EAAI4B,EAAM30B,GAEvC,IADAA,IACO20B,IAASpE,EAASoE,EAAOd,EAAQd,EAAI4B,GAAO,CAC/C,IAAIkI,EAAM9J,EAAGrb,EAAE7Q,KAAK8tB,GACpBzE,EAAW2M,EAAI1J,SAAW7C,EAAS0E,SAAqB,IAAV6H,EAAIvJ,GAAWuJ,EAAIvJ,GAAKtzB,IACtEowB,EAASoD,SAASqJ,EAAK78B,KAq5B/B+K,EAAOC,QAAQkrB,eAAqBA,EACpCnrB,EAAOC,QAAQirB,iBAAqBA,EACpClrB,EAAOC,QAAQ8xB,YA/GK,SAAS/J,EAAIpY,EAAI2d,EAAIC,EAAI4D,GACzC,IAAI3J,EAAKnC,EAAQoC,QACjB,OAAQ9X,GACJ,KAAK6V,EAAOoB,QACR1B,EAAWoI,EAAG71B,IAAM8tB,GACpBgJ,GAAmBxG,EAAIwF,GACvBA,EAAG7gB,EAAI8c,EAAYzB,EAAIwF,EAAG7gB,EAAG4gB,EAAG5gB,GAChC4gB,EAAGjtB,GAAGktB,GACN,MAEJ,KAAK/H,EAAOqB,OACR3B,EAAWoI,EAAG5gB,IAAM6Y,GACpBgJ,GAAmBxG,EAAIwF,GACvBA,EAAG91B,EAAI+xB,EAAYzB,EAAIwF,EAAG91B,EAAG61B,EAAG71B,GAChC61B,EAAGjtB,GAAGktB,GACN,MAEJ,KAAK/H,EAAOa,WAAY,CACpB6J,GAAanI,EAAIwF,GACjB,IAAIsE,EAAMlJ,EAAeZ,EAAIwF,GACzBA,EAAG/hB,IAAMgc,EAAG8G,YAAcuD,EAAI1J,SAAW7C,EAASyM,WAClD7M,EAAWoI,EAAGxtB,EAAE8oB,OAASiJ,EAAIlV,EAAI,GACjCwQ,GAAQpF,EAAIuF,GACZlI,EAASqD,SAASoJ,EAAKvE,EAAGxtB,EAAE8oB,MAC5B0E,EAAG9hB,EAAIgc,EAAG8G,WAAYhB,EAAGxtB,EAAE8oB,KAAO2E,EAAGztB,EAAE8oB,OAGvCoH,GAAiBjI,EAAIwF,GACrB2D,GAAcnJ,EAAIzC,EAASyM,UAAWzE,EAAIC,EAAI4D,IAElD,MAEJ,KAAK3L,EAAOC,QAAS,KAAKD,EAAOE,QAAS,KAAKF,EAAOG,QAAS,KAAKH,EAAOM,QAC3E,KAAKN,EAAOO,SAAU,KAAKP,EAAOI,QAAS,KAAKJ,EAAOK,QACvD,KAAKL,EAAOQ,SAAU,KAAKR,EAAOS,QAAS,KAAKT,EAAOU,SACvD,KAAKV,EAAOW,QAAS,KAAKX,EAAOY,QACxB0K,GAAanhB,EAAK7L,EAAWwpB,EAAIC,IAClC2D,GAAcnJ,EAAIpY,EAAK2V,EAAS0M,OAAQ1E,EAAIC,EAAI4D,GACpD,MAEJ,KAAK3L,EAAOc,OAAQ,KAAKd,EAAOe,OAAQ,KAAKf,EAAOgB,OACpD,KAAKhB,EAAOiB,OAAQ,KAAKjB,EAAOkB,OAAQ,KAAKlB,EAAOmB,QAxI3C,SAASoB,EAAIkK,EAAK3E,EAAIC,GACnC,IAEI8D,EAFA7J,EAAKnC,EAAQoC,QAGb6F,EAAG9hB,IAAMgc,EAAG+H,GACZ8B,EAAMjM,EAASmL,MAAMjD,EAAGxtB,EAAE8oB,OAE1B1D,EAAWoI,EAAG9hB,IAAMgc,EAAG4F,WACvBiE,EAAM/D,EAAGxtB,EAAE8oB,MAGf,IAAIwI,EAAMjB,GAAYpI,EAAIwF,GAE1B,OADAF,GAAStF,EAAIuF,EAAIC,GACT0E,GACJ,KAAKzM,EAAOiB,OACR6G,EAAGxtB,EAAE8oB,KAAOqB,EAASlC,EAAIzC,EAAS4M,MAAO,EAAGb,EAAKD,GACjD,MAEJ,KAAK5L,EAAOkB,OAAQ,KAAKlB,EAAOmB,OAAQ,CAEpC,IAAIhX,EAAMsiB,EAAMzM,EAAOiB,OAAUnB,EAAS4M,MAC1C5E,EAAGxtB,EAAE8oB,KAAOqB,EAASlC,EAAIpY,EAAI,EAAGyhB,EAAKC,GACrC,MAEJ,QAAS,CACL,IAAI1hB,EAAMsiB,EAAMzM,EAAOc,OAAUhB,EAAS4M,MAC1C5E,EAAGxtB,EAAE8oB,KAAOqB,EAASlC,EAAIpY,EAAI,EAAG0hB,EAAKD,GACrC,OAGR9D,EAAG9hB,EAAIgc,EAAGiI,KA2GF0C,CAASpK,EAAIpY,EAAI2d,EAAIC,GAK7B,OAAOD,GAiEXvtB,EAAOC,QAAQoyB,YA3KK,SAASrK,EAAIpY,EAAIiM,EAAGuV,GACpC,IAAIkB,EAAK,IAAIhN,EAAQiN,QAKrB,OAJAD,EAAG7mB,EAAI6Z,EAAQoC,QAAQC,MACvB2K,EAAGvyB,EAAE6nB,KAAO0K,EAAGvyB,EAAE+nB,KAAOwK,EAAGvyB,EAAE8oB,KAAO,EACpCyJ,EAAG56B,EAAI8tB,EACP8M,EAAG3lB,EAAI6Y,EACC5V,GACJ,KAAKoX,EAAMC,UAAW,KAAKD,EAAME,SAC7B,GAAI6J,GAAanhB,EAAK7K,EAAW8W,EAAGyW,GAChC,MAER,KAAKtL,EAAMI,SA9EE,SAASY,EAAIpY,EAAIiM,EAAGuV,GACrC,IAAIzyB,EAAIuxB,GAAgBlI,EAAInM,GAC5BuR,GAAQpF,EAAInM,GACZA,EAAE9b,EAAE8oB,KAAOF,EAAaX,EAAIpY,EAAI,EAAGjR,EAAG,GACtCkd,EAAEpQ,EAAI6Z,EAAQoC,QAAQ6G,WACtBgD,GAAavJ,EAAIoJ,GA0EToB,CAAaxK,EAAIpY,EAAK2V,EAASkN,OAAQ5W,EAAGuV,GAC1C,MACJ,KAAKpK,EAAMG,SA5KH,SAASa,EAAInM,GACzB,IAAI4L,EAAKnC,EAAQoC,QAEjB,OADA8G,GAAmBxG,EAAInM,GACfA,EAAEpQ,GACN,KAAKgc,EAAG4H,KAAM,KAAK5H,EAAG6H,OAClBzT,EAAEpQ,EAAIgc,EAAG8H,MACT,MAEJ,KAAK9H,EAAG+H,GAAI,KAAK/H,EAAGI,MAAO,KAAKJ,EAAGE,MAAO,KAAKF,EAAG8H,MAC9C1T,EAAEpQ,EAAIgc,EAAG6H,OACT,MAEJ,KAAK7H,EAAGiI,KACJe,GAAgBzI,EAAInM,GACpB,MAEJ,KAAK4L,EAAG8G,WACR,KAAK9G,EAAG4F,UACJsC,GAAiB3H,EAAInM,GACrBuR,GAAQpF,EAAInM,GACZA,EAAE9b,EAAE8oB,KAAOF,EAAaX,EAAIzC,EAASqL,OAAQ,EAAG/U,EAAE9b,EAAE8oB,KAAM,GAC1DhN,EAAEpQ,EAAIgc,EAAG8G,WAKjB,CAAE,IAAIjkB,EAAOuR,EAAElP,EAAGkP,EAAElP,EAAIkP,EAAEnkB,EAAGmkB,EAAEnkB,EAAI4S,EACnCwgB,EAAa9C,EAAInM,EAAElP,GACnBme,EAAa9C,EAAInM,EAAEnkB,GAgJKg7B,CAAQ1K,EAAInM,KA8JxC7b,EAAOC,QAAQgtB,iBAAqBA,GACpCjtB,EAAOC,QAAQ0yB,SAxhCE,SAAS3K,EAAI4K,EAAOC,GACjClK,EAAaX,EAAIzC,EAASuN,UAAWF,EAAOC,EAAO,EAAG,IAwhC1D7yB,EAAOC,QAAQ8yB,UA5aG,SAAS/K,EAAInM,EAAG+R,GAC9BsC,GAAgBlI,EAAInM,GACpB,IAAImX,EAAOnX,EAAE9b,EAAE8oB,KACfuE,GAAQpF,EAAInM,GACZA,EAAE9b,EAAE8oB,KAAOb,EAAG+E,QACdlR,EAAEpQ,EAAI6Z,EAAQoC,QAAQ2F,UACtBJ,GAAiBjF,EAAI,GACrBW,EAAaX,EAAIzC,EAAS0N,QAASpX,EAAE9b,EAAE8oB,KAAMmK,EAAM5C,GAAYpI,EAAI4F,IACnER,GAAQpF,EAAI4F,IAqahB5tB,EAAOC,QAAQizB,aApDM,SAASlL,EAAIlD,EAAMqO,EAAQC,GAC5C,IAAI9zB,GAAM6zB,EAAS,GAAG9N,EAASgO,kBAAoB,EAC/ClzB,EAAKizB,IAAYtvB,EAAe,EAAIsvB,EACxCjO,EAAuB,IAAZiO,GAAiBA,GAAW/N,EAASgO,mBAC5C/zB,GAAK+lB,EAAS0G,SACdpD,EAAaX,EAAIzC,EAAS+N,WAAYxO,EAAM3kB,EAAGb,GAC1CA,GAAK+lB,EAASkH,WACnB5D,EAAaX,EAAIzC,EAAS+N,WAAYxO,EAAM3kB,EAAG,GAC/CmsB,GAAatE,EAAI1oB,IAGjB8lB,EAAKkE,iBAAiBtB,EAAGuB,GAAI/pB,EAAa,wBAAwB,IACtEwoB,EAAG+E,QAAUjI,EAAO,GAyCxB9kB,EAAOC,QAAQszB,gBAtsBS,SAASvL,EAAInM,GACjCqS,GAAgBlG,EAAInM,EAAG/X,IAssB3B9D,EAAOC,QAAQquB,eAAqBA,GACpCtuB,EAAOC,QAAQiuB,gBAAqBA,GACpCluB,EAAOC,QAAQuzB,cA5cO,SAASxL,EAAIyL,EAAIC,GACnC,IAAIjM,EAAKnC,EAAQoC,QACjB,OAAQ+L,EAAGhoB,GACP,KAAKgc,EAAGgH,OAGJ,OAFArB,GAAQpF,EAAI0L,QACZ7D,GAAQ7H,EAAI0L,EAAID,EAAG1zB,EAAE8oB,MAGzB,KAAKpB,EAAGiH,OAAQ,CACZ,IAAI7S,EAAIqU,GAAgBlI,EAAI0L,GAC5B/K,EAAaX,EAAIzC,EAASoO,YAAa9X,EAAG4X,EAAG1zB,EAAE8oB,KAAM,GACrD,MAEJ,KAAKpB,EAAGmH,SAAU,CACd,IAAIhf,EAAM6jB,EAAG1zB,EAAE8uB,IAAIC,KAAOrH,EAAGgH,OAAUlJ,EAASqO,YAAcrO,EAASsO,YACnEhY,EAAIuU,GAAYpI,EAAI0L,GACxB/K,EAAaX,EAAIpY,EAAI6jB,EAAG1zB,EAAE8uB,IAAIn3B,EAAG+7B,EAAG1zB,EAAE8uB,IAAIz4B,IAAKylB,GAC/C,OAGRuR,GAAQpF,EAAI0L,IAybhB1zB,EAAOC,QAAQ6zB,aA1wBM,SAAS9L,EAAIppB,GAC9B,IAAIwK,EAAI,IAAIX,EAAO7F,EAAahE,GAChC,OAAO+uB,GAAK3F,EAAI5e,EAAGA,iCChevB,MAAM,OACF/C,EAAM,cACN9D,EAAa,YACbF,EAAW,UACXiE,EAAS,UACTnB,EAAS,eACTiL,EAAc,WACdY,EAAU,UACVM,EAAS,aACT0I,EAAY,WACZ9c,EAAU,WACVyV,EAAU,gBACVohB,EAAe,cACfC,EAAa,QACbt2B,EAAO,gBACPuX,EAAe,iBACfhK,EAAgB,gBAChB1D,EAAe,eACfqO,EAAc,cACdE,EAAa,WACbme,EAAU,WACV1c,EAAU,aACVqB,EAAY,SACZ5K,EAAQ,iBACR7H,EAAgB,UAChB0T,EAAS,UACTqa,GACA,EAAQ,OACN,cACFpT,EAAa,eACbM,EAAc,YACd3Z,EAAW,WACXgU,GACA,EAAQ,MAEN0Y,EAAQ,SAAS33B,GACnB,IAAI43B,EAAKxb,EAAapc,EAAG,GAEzB,OADAskB,EAActkB,EAAG43B,EAAI,EAAG,mBACjBA,GAGLC,EAAY,SAAS73B,EAAG43B,EAAIE,GAC9B,IAAKlkB,EAAegkB,EAAIE,GAEpB,OADA/sB,EAAgB/K,EAAG,iCACX,EAGZ,GAAI+a,EAAW6c,KAAQ/tB,GAA6B,IAAnBnJ,EAAWk3B,GAExC,OADA7sB,EAAgB/K,EAAG,iCACX,EAGZqd,EAAUrd,EAAG43B,EAAIE,GACjB,IAAI5lB,EAASulB,EAAWG,EAAI53B,EAAG83B,GAC/B,GAAI5lB,IAAWrI,GAAUqI,IAAWpI,EAAW,CAC3C,IAAIiuB,EAAOr3B,EAAWk3B,GACtB,OAAKhkB,EAAe5T,EAAG+3B,EAAO,IAM9B1a,EAAUua,EAAK53B,EAAG+3B,GACXA,IANH72B,EAAQ02B,EAAIG,GACZhtB,EAAgB/K,EAAG,+BACX,GAOZ,OADAqd,EAAUua,EAAI53B,EAAG,IACT,GAkBVg4B,EAAe,SAASh4B,GAC1B,IAAI43B,EAAKxb,EAAapc,EAAG2J,EAAiB,IACtCxH,EAAI01B,EAAU73B,EAAG43B,EAAIl3B,EAAWV,IACpC,OAAImC,EAAI,GACAqP,EAASxR,GAAI,KAAO6F,IACpBoZ,EAAWjf,EAAG,GACdmW,EAAWnW,GAAI,GACfwU,EAAWxU,EAAG,IAGX8U,EAAU9U,IAGdmC,GAGL81B,EAAgB,SAASj4B,GAC3B4kB,EAAe5kB,EAAG,EAAG+F,GACrB,IAAImyB,EAAKV,EAAcx3B,GAGvB,OAFAsZ,EAActZ,EAAG,GACjBqd,EAAUrd,EAAGk4B,EAAI,GACV,GAkDLC,EAAW,CACb,OAAeF,EACf,YAZmB,SAASj4B,GAE5B,OADAyY,EAAgBzY,EAAGu3B,EAAgBv3B,IAC5B,GAWP,OAxFkB,SAASA,GAC3B,IAAI43B,EAAKD,EAAM33B,GACXmC,EAAI01B,EAAU73B,EAAG43B,EAAIl3B,EAAWV,GAAK,GACzC,OAAImC,EAAI,GACJsW,EAAgBzY,EAAG,GACnBmW,EAAWnW,GAAI,GACR,IAEPyY,EAAgBzY,EAAG,GACnBmW,EAAWnW,IAAKmC,EAAI,IACbA,EAAI,IA+Ef,QATmB,SAASnC,GAE5B,OADAyY,EAAgBzY,EAAGoZ,EAAepZ,IAC3B,GAQP,OA1CkB,SAASA,GAC3B,IAAI43B,EAAKD,EAAM33B,GACf,GAAIA,IAAM43B,EAAI7sB,EAAgB/K,EAAG,gBAE7B,OAAQ+a,EAAW6c,IACf,KAAK9tB,EACDiB,EAAgB/K,EAAG,aACnB,MACJ,KAAK6J,EAAQ,CACT,IAAIwU,EAAK,IAAI1V,EACT6U,EAAaoa,EAAI,EAAGvZ,GAAM,EAC1BtT,EAAgB/K,EAAG,UACK,IAAnBU,EAAWk3B,GAChB7sB,EAAgB/K,EAAG,QAEnB+K,EAAgB/K,EAAG,aACvB,MAEJ,QACI+K,EAAgB/K,EAAG,QAK/B,OAAO,GAmBP,KArDgB,SAASA,GAGzB,OAFAi4B,EAAcj4B,GACdyO,EAAiBzO,EAAGg4B,EAAc,GAC3B,GAmDP,MAhDe,SAASh4B,GACxB,OAAO03B,EAAU13B,EAAGU,EAAWV,MAuDnCwD,EAAOC,QAAQ20B,kBALW,SAASp4B,GAE/B,OADAiL,EAAYjL,EAAGm4B,GACR,gCCvKX,MAAM,aACFlxB,EAAY,cACZC,EAAa,aACbC,EAAY,YACZC,EAAW,kBACXT,EAAiB,cACjBZ,EAAa,SACbN,EAAQ,WACRK,EAAU,cACVE,EAAa,UACb2C,EAAS,SACTnH,EAAQ,eACRoS,EAAc,YACdykB,EAAW,iBACXC,EAAgB,gBAChBC,EAAe,YACfhb,EAAW,aACXib,EAAY,iBACZljB,EAAgB,aAChBkI,EAAY,eACZ5H,EAAc,iBACdG,EAAgB,WAChBI,EAAU,gBACVE,EAAe,eACfE,EAAc,gBACdM,EAAe,aACfO,EAAY,aACZa,EAAY,UACZO,EAAS,QACTtX,EAAO,gBACPuX,EAAe,gBACfC,EAAe,gBACf5N,EAAe,sBACfiO,EAAqB,gBACrBhO,EAAe,YACfoO,EAAW,eACX5X,EAAc,cACd+X,EAAa,YACbK,EAAW,YACXS,EAAW,WACXnM,EAAU,aACVjD,EAAY,YACZytB,EAAW,aACXC,EAAY,iBACZje,EAAgB,WAChBjN,EAAU,eACVoN,EAAc,iBACdE,EAAgB,eAChBra,EAAc,YACdsb,EAAW,aACXlL,EAAY,aACZuL,EAAY,eACZE,GAAc,SACd9K,GAAQ,cACRiL,GAAa,gBACbE,GAAe,UACfU,IACA,EAAQ,OACN,cACFiH,GAAa,cACb9F,GAAa,cACbiG,GAAa,kBACbxE,GAAiB,iBACjBN,GAAgB,eAChBiF,GAAc,WACdjG,GAAU,gBACVwC,GAAe,YACflW,GAAW,gBACXsa,GAAe,eACfzF,GAAc,eACdqG,GAAc,qBACdS,IACA,EAAQ,MACNjmB,GAAS,EAAQ,OACjB,kBACFiB,GAAiB,aACjBoB,IACA,EAAQ,MAON21B,GAAa,SAAS34B,EAAGomB,EAAI7Z,GAC3BvM,IAAMomB,GAAOxS,EAAewS,EAAI7Z,IAChCoS,GAAW3e,EAAGgD,GAAa,kBAAkB,KA+C/C41B,GAAY,SAAS54B,GACvB,OAAIoX,EAAapX,EAAG,GACT,CACHye,IAAK,EACLoa,OAAQzc,EAAapc,EAAG,IAGrB,CACHye,IAAK,EACLoa,OAAQ74B,IAUd84B,GAAW,SAAS94B,EAAGiP,EAAG5M,GAC5Bd,EAAevB,EAAGqC,GAClB2I,EAAahL,GAAI,EAAGiP,IAGlB8pB,GAAW,SAAS/4B,EAAGiP,EAAG5M,GAC5ByI,EAAgB9K,EAAGqC,GACnB2I,EAAahL,GAAI,EAAGiP,IAGlB+pB,GAAW,SAASh5B,EAAGiP,EAAG5M,GAC5BoW,EAAgBzY,EAAGqC,GACnB2I,EAAahL,GAAI,EAAGiP,IAWlBgqB,GAAmB,SAASj5B,EAAGomB,EAAIhH,GACjCpf,GAAKomB,EACLnY,EAAWjO,GAAI,EAAG,GAElBqd,GAAU+I,EAAIpmB,EAAG,GACrBgL,EAAahL,GAAI,EAAGof,IA6GlB8Z,GAAa,SAASl5B,EAAGiX,GAC3B,IAAI1K,EAAI0T,GAAkBjgB,EAAG,GAC7B4kB,GAAe5kB,EAAG,EAAG+F,GACrB,IAAI+C,EAAOmO,EAAMrB,EAAe5V,EAAG,EAAGuM,GAAKqO,EAAe5a,EAAG,EAAGuM,GAChE,OAAa,OAATzD,EAAsB,GAC1BvH,EAAevB,EAAG8I,GAClBqN,EAAWnW,IAAKiX,EAAI,IACbA,EAAM,IAiBXkiB,GAAa,SAASn5B,EAAGo5B,EAAMC,GACjC,IAAInX,EAAMjC,GAAkBjgB,EAAGq5B,GAG/B,OAFAzU,GAAe5kB,EAAGo5B,EAAMrzB,GACxBue,GAActkB,EAAqC,OAAjC4V,EAAe5V,EAAGo5B,EAAMlX,GAAgBmX,EAAQ,yBAC3DnX,GAsBLoX,GAAUt2B,GAAa,aAAa,GAEpCu2B,GAAY,CAAC,OAAQ,SAAU,OAAQ,QAAS,aAAat+B,KAAIokB,GAAKrc,GAAaqc,KAMnFma,GAAQ,SAASx5B,EAAGqe,GACtB1E,EAAY3Z,EAAG2G,EAAmB2yB,IAClC,IACItd,EADYM,GAAetc,GAAI,GACbiX,IAAIjX,GACtBgc,IACAA,EAAMhc,GACNuB,EAAevB,EAAGu5B,GAAUlb,EAAGriB,QAC3BqiB,EAAGnV,aAAe,EAClB4B,EAAgB9K,EAAGqe,EAAGnV,aACrBiQ,EAAYnZ,GACjBW,GAAOgoB,WAAWpL,EAAYvd,EAAGgD,GAAa,MAAOqb,IACrD7c,EAASxB,EAAG,EAAG,KA4FjBy5B,GAAQ,CACV,QApCe,SAASz5B,GACxB,IACIomB,EADSwS,GAAU54B,GACP64B,OACZ3X,EAAO,IAAIpf,WAAW,GACtB43B,EAAOnB,EAAgBnS,GACvBuT,EAAOtB,EAAYjS,GAavB,OAZa,OAATuT,EACAxgB,EAAYnZ,GACP25B,IAASH,GACdzuB,EAAgB/K,EAAG,kBAEnB2Z,EAAY3Z,EAAG2G,EAAmB2yB,IAClBhd,GAAetc,GAAI,GACbiX,IAAImP,EAC1BpK,CAAMhc,IAEVuB,EAAevB,EAtDA,SAAS05B,EAAME,GAC9B,IAAIj/B,EAAI,EAIR,OAHI++B,EAAOzyB,IAAc2yB,EAAMj/B,KAAO,IAClC++B,EAAOtyB,IAAawyB,EAAMj/B,KAAO,KACjC++B,EAAOvyB,IAAcyyB,EAAMj/B,KAAO,KAC/Bi/B,EAAM1gB,SAAS,EAAGve,GAiDPk/B,CAAWH,EAAMxY,IACnCpW,EAAgB9K,EAAGs4B,EAAiBlS,IAC7B,GAmBP,QAvQe,SAASpmB,GACxB,IAAIqe,EAAK,IAAI1V,EACTkwB,EAASD,GAAU54B,GACnBye,EAAMoa,EAAOpa,IACb2H,EAAKyS,EAAOA,OACZliC,EAAUmpB,GAAe9f,EAAGye,EAAM,EAAG,UAEzC,GADAka,GAAW34B,EAAGomB,EAAI,GACd7P,EAAevW,EAAGye,EAAM,GACxB9nB,EAAU+hB,EAAgB1Y,EAAGgD,GAAa,OAAQrM,GAClD2iB,EAActZ,EAAGye,EAAM,GACvBpB,GAAUrd,EAAGomB,EAAI,QAEjB,IAAK5I,EAAa4I,EAAInG,GAAkBjgB,EAAGye,EAAM,GAAIJ,GAEjD,OADAlF,EAAYnZ,GACL,EA+Bf,OA3BKud,EAAY6I,EAAIzvB,EAAS0nB,IAC1BG,GAAcxe,EAAGye,EAAM,EAAG,kBAC9BxG,EAAajY,GACT4B,GAAkBjL,EAAS,KAA+B,IAC1DmiC,GAAS94B,EAAGgD,GAAa,UAAU,GAAOqb,EAAGpV,QAC7C6vB,GAAS94B,EAAGgD,GAAa,aAAa,GAAOqb,EAAG5U,WAChDsvB,GAAS/4B,EAAGgD,GAAa,eAAe,GAAOqb,EAAGlV,aAClD4vB,GAAS/4B,EAAGgD,GAAa,mBAAmB,GAAOqb,EAAGjV,iBACtD0vB,GAAS94B,EAAGgD,GAAa,QAAQ,GAAOqb,EAAGrV,OAE3CpH,GAAkBjL,EAAS,MAAgC,GAC3DoiC,GAAS/4B,EAAGgD,GAAa,eAAe,GAAOqb,EAAGnV,aAClDtH,GAAkBjL,EAAS,MAAgC,IAC3DoiC,GAAS/4B,EAAGgD,GAAa,QAAQ,GAAOqb,EAAGhV,MAC3C0vB,GAAS/4B,EAAGgD,GAAa,WAAW,GAAOqb,EAAG/U,SAC9C0vB,GAASh5B,EAAGgD,GAAa,YAAY,GAAOqb,EAAG9U,WAE/C3H,GAAkBjL,EAAS,MAAgC,IAC3DmiC,GAAS94B,EAAGgD,GAAa,QAAQ,GAAOqb,EAAGvV,MAC3CgwB,GAAS94B,EAAGgD,GAAa,YAAY,GAAOqb,EAAGtV,WAE/CnH,GAAkBjL,EAAS,MAAgC,GAC3DqiC,GAASh5B,EAAGgD,GAAa,cAAc,GAAOqb,EAAG7U,YACjD5H,GAAkBjL,EAAS,KAA+B,GAC1DsiC,GAAiBj5B,EAAGomB,EAAIpjB,GAAa,eAAe,IACpDpB,GAAkBjL,EAAS,MAAgC,GAC3DsiC,GAAiBj5B,EAAGomB,EAAIpjB,GAAa,QAAQ,IAC1C,GA2NP,SAxNgB,SAAShD,GACzB,IAAI64B,EAASD,GAAU54B,GACnBomB,EAAKyS,EAAOA,OACZpa,EAAMoa,EAAOpa,IACbJ,EAAK,IAAI1V,EACTmxB,EAAO7Z,GAAkBjgB,EAAGye,EAAM,GACtC,GAAIlI,EAAevW,EAAGye,EAAM,GAGxB,OAFAnF,EAActZ,EAAGye,EAAM,GACvBld,EAAevB,EAAGw4B,EAAax4B,EAAG,KAAM85B,IACjC,EACJ,CACH,IAAIrhC,EAAQwnB,GAAkBjgB,EAAGye,EAAM,GACvC,IAAKjB,EAAa4I,EAAI3tB,EAAO4lB,GACzB,OAAOG,GAAcxe,EAAGye,EAAI,EAAG,sBACnCka,GAAW34B,EAAGomB,EAAI,GAClB,IAAItd,EAAO0vB,EAAapS,EAAI/H,EAAIyb,GAChC,OAAIhxB,GACAuU,GAAU+I,EAAIpmB,EAAG,GACjBuB,EAAevB,EAAG8I,GAClBmF,EAAWjO,GAAI,EAAG,GACX,IAGPmZ,EAAYnZ,GACL,KAiMf,aAxWoB,SAASA,GAK7B,OAJAykB,GAAczkB,EAAG,GACZsV,EAAiBtV,EAAG,IACrBmZ,EAAYnZ,GAET,GAoWP,YA9WmB,SAASA,GAE5B,OADAsZ,EAActZ,EAAG2G,GACV,GA6WP,WA5JkB,SAAS3G,GAC3B,OAAOk5B,GAAWl5B,EAAG,IA4JrB,aA3VoB,SAASA,GAK7B,OAJIwR,GAASxR,EAAG,KAAOgG,EACnBmT,EAAYnZ,GAEZ+V,EAAiB/V,EAAG,GACjB,GAuVP,QAzEe,SAASA,GACxB,IAAI05B,EAAMK,EAAO5sB,EAeb6sB,EAdAnB,EAASD,GAAU54B,GACnBomB,EAAKyS,EAAOA,OACZpa,EAAMoa,EAAOpa,IACjB,GAAI5H,EAAgB7W,EAAGye,EAAI,GACvBjR,EAAWxN,EAAGye,EAAI,GAClBtR,EAAO,KAAMusB,EAAO,EAAGK,EAAQ,MAE9B,CACD,MAAMH,EAAQja,GAAiB3f,EAAGye,EAAM,GACxCmG,GAAe5kB,EAAGye,EAAI,EAAG1Y,GACzBg0B,EAAQxU,GAAgBvlB,EAAGye,EAAM,EAAG,GACpCtR,EAAOqsB,GAAOE,EAjCL,SAASE,EAAOG,GAC7B,IAAIL,EAAO,EAKX,OAJI93B,GAAkBg4B,EAAO,KAA+B,IAAGF,GAAQzyB,GACnErF,GAAkBg4B,EAAO,MAAgC,IAAGF,GAAQtyB,GACpExF,GAAkBg4B,EAAO,MAAgC,IAAGF,GAAQvyB,GACpE4yB,EAAQ,IAAGL,GAAQxyB,GAChBwyB,EA2BkBO,CAASL,EAAOG,GAIrCpgB,EAAY3Z,EAAG2G,EAAmB2yB,MAAa7zB,GAC/Cu0B,EAAY,IAAI7oB,QAChB4H,EAAsB/Y,EAAGg6B,GACzB5f,EAAYpa,EAAG2G,EAAmB2yB,KAElCU,EAAY1d,GAAetc,GAAI,GAEnC,IAAIgc,EAAQD,EAAY/b,EAAGye,EAAM,GAGjC,OAFAub,EAAU9d,IAAIkK,EAAIpK,GAClByc,EAAYrS,EAAIjZ,EAAMusB,EAAMK,GACrB,GA+CP,SAjMgB,SAAS/5B,GACzB,IAAI64B,EAASD,GAAU54B,GACnBomB,EAAKyS,EAAOA,OACZpa,EAAMoa,EAAOpa,IACbJ,EAAK,IAAI1V,EACTlQ,EAAQwnB,GAAkBjgB,EAAGye,EAAM,GACnCqb,EAAO7Z,GAAkBjgB,EAAGye,EAAM,GACtC,IAAKjB,EAAa4I,EAAI3tB,EAAO4lB,GACzB,OAAOG,GAAcxe,EAAGye,EAAM,EAAG,sBACrCgG,GAAczkB,EAAGye,EAAM,GACvBjR,EAAWxN,EAAGye,EAAM,GACpBka,GAAW34B,EAAGomB,EAAI,GAClB/I,GAAUrd,EAAGomB,EAAI,GACjB,IAAItd,EAAO4vB,EAAatS,EAAI/H,EAAIyb,GAIhC,OAHa,OAAThxB,GACA5H,EAAQklB,EAAI,GAChB7kB,EAAevB,EAAG8I,GACX,GAiLP,aAtWoB,SAAS9I,GAC7B,MAAM9E,EAAIsW,GAASxR,EAAG,GAItB,OAHAskB,GAActkB,EAAG9E,GAAKuK,GAAYvK,GAAK4K,EAAY,EAAG,yBACtD0H,EAAWxN,EAAG,GACdya,EAAiBza,EAAG,GACb,GAkWP,WA7JkB,SAASA,GAE3B,OADAykB,GAAczkB,EAAG,GACVk5B,GAAWl5B,EAAG,IA4JrB,aAvVoB,SAASA,GAK7B,OAJA4kB,GAAe5kB,EAAG,EAAGgG,GACrBye,GAAczkB,EAAG,GACjBwN,EAAWxN,EAAG,GACd8a,EAAiB9a,EAAG,GACb,GAmVP,UA3BiB,SAASA,GAC1B,IAAI64B,EAASD,GAAU54B,GACnBomB,EAAKyS,EAAOA,OACZpa,EAAMoa,EAAOpa,IACbF,EAAM1N,EAAa7Q,EAAGye,EAAM,GAChC,GAAY,OAARF,GAAiB1H,EAAgB7W,EAAGye,EAAM,GAEzC,CACD,IAAIhmB,EAAQ8sB,GAAgBvlB,EAAGye,EAAM,EAAGze,IAAMomB,EAAK,EAAI,GACvDD,GAAenmB,EAAGomB,EAAI7H,EAAK9lB,QAH3B6gB,EAActZ,EAAGye,EAAM,GAK3B,OAAO,GAiBP,UAhJiB,SAASze,GAC1B,IAAIuM,EAAI4sB,GAAWn5B,EAAG,EAAG,GAEzB,OADA+Y,EAAsB/Y,EAAGyc,GAAczc,EAAG,EAAGuM,IACtC,GA8IP,YA3ImB,SAASvM,GAC5B,IAAI6c,EAAKsc,GAAWn5B,EAAG,EAAG,GACtB+c,EAAKoc,GAAWn5B,EAAG,EAAG,GAI1B,OAHAskB,GAActkB,GAAIqW,EAAgBrW,EAAG,GAAI,EAAG,yBAC5CskB,GAActkB,GAAIqW,EAAgBrW,EAAG,GAAI,EAAG,yBAC5C2c,GAAgB3c,EAAG,EAAG6c,EAAI,EAAGE,GACtB,IAwIX,IAAImd,GASyB,oBAAXr9B,SAIdq9B,GAAW,WACP,IAAIjiC,EAAQkiC,OAAO,aAAc,IACjC,OAAkB,OAAVliC,EAAkBA,EAAQ,KAGtCiiC,KACAT,GAAMW,MAAQ,SAASp6B,GACnB,OAAS,CACL,IAAI/H,EAAQiiC,KAEZ,GAAc,SAAVjiC,EACA,OAAO,EAEX,GAAqB,IAAjBA,EAAMgB,OACN,SAEJ,IAAIwiB,EAASzY,GAAa/K,IACtBkpB,GAAgBnhB,EAAGyb,EAAQA,EAAOxiB,OAAQ+J,GAAa,oBAAoB,KACxEwV,EAAUxY,EAAG,EAAG,EAAG,KACtB4mB,GAAqBnmB,EAAeT,GAAI,GAAI,MAEhDwN,EAAWxN,EAAG,MAU1BwD,EAAOC,QAAQ42B,cALO,SAASr6B,GAE3B,OADAiL,GAAYjL,EAAGy5B,IACR,gCC7fX,MAAM,cACF5yB,EAAa,aACbC,EAAY,cACZI,EAAa,aACbC,EACA5B,gBAAgB,aACZG,EAAY,SACZD,EAAQ,WACRK,GAEJ8D,eAAe,WACXG,EAAU,UACVD,GACH,gBACDjF,EAAe,aACfnB,EAAY,kBACZ9B,EAAiB,aACjBoB,GACA,EAAQ,OACN,UACFmI,EAAS,WACTwd,GACA,EAAQ,OACN,WAAE2R,GAAe,EAAQ,MACzBC,EAAW,EAAQ,MACnBlvB,EAAW,EAAQ,MACnBE,EAAW,EAAQ,MACnBqd,EAAW,EAAQ,MACnBpd,EAAW,EAAQ,MACnBqd,EAAW,EAAQ,MACnBpd,EAAW,EAAQ,MACnBM,EAAW,EAAQ,MACnBF,EAAW,EAAQ,MACnBC,EAAW,EAAQ,MAEnB0uB,EAAY,SAASnuB,GAEvB,OADAsc,EAAWtc,EAAG2F,WAAavG,EAAOwG,UAC3B5F,EAAGouB,UAAY,GAGpBvxB,EAAc,SAASmD,GACzB,OAA2C,IAApCA,EAAGc,KAAKtJ,MAAMsK,EAAE2gB,SAAS71B,OAAeoT,EAAGc,KAAKtJ,MAAMsK,EAAE2gB,SAAS0L,EAAUnuB,KAAQ,GASxFquB,EAAY,SAAS16B,GACvB,GAAIA,EAAEkS,SAAWpI,EAAW,CACxB,IAAIuC,EAAKrM,EAAEqM,GACPyB,EAAOzB,EAAGG,QACdH,EAAGc,KAAOnN,EAAE+M,MAAMV,EAAGqG,OACrBrG,EAAGG,QAAUH,EAAGqG,MAChBrG,EAAGqG,MAAQ5E,IA6Cb6sB,EAAY,SAASxsB,EAAG8H,GAC1B0S,EAAW1S,EAAK9H,EAAEkC,SAASpX,QAC3B,IAAImJ,EAAI+L,EAAEkC,SAAS4F,GAAInN,KACvB,OAAU,OAAN1G,EAAmBY,EAAa,KAAK,GAClCZ,EAAEkO,UAePsqB,EAAY,SAAS56B,EAAGqM,EAAIE,GAC9B,IAAI+b,EAAMxf,EAAO,KAEjB,GAAIuD,EAAG2F,WAAavG,EAAOwG,SAAU,CACjC,GAAI1F,EAAI,EACJ,OAjBO,SAASF,EAAIE,GAC5B,IAAIjD,EAAU+C,EAAGc,KAAKtJ,MAAMsK,EAAE0sB,UAC9B,OAAItuB,GAAKF,EAAGyuB,OAASzuB,EAAGG,QAAUlD,EACvB,KAEA,CACHpL,IAAKmO,EAAGG,QAAUlD,EAAUiD,EAC5BzD,KAAM9F,EAAa,aAAa,IAUzB+3B,CAAW1uB,GAAKE,GAEvB+b,EAAOjc,EAAGyuB,OACVhyB,EAAOyC,EAAMyvB,kBAAkB3uB,EAAGc,KAAKtJ,MAAMsK,EAAG5B,EAAGiuB,EAAUnuB,SAGjEic,EAAOjc,EAAGG,QAAU,EAExB,GAAa,OAAT1D,EAAe,CAEf,MADYuD,IAAOrM,EAAEqM,GAAKrM,EAAEoM,IAAMC,EAAGghB,KAAK7gB,SAC9B8b,GAAQ/b,GAAKA,EAAI,GAGzB,OAAO,KAFPzD,EAAO9F,EAAa,gBAAgB,GAI5C,MAAO,CACH9E,IAAKoqB,GAAQ/b,EAAI,GACjBzD,KAAMA,IAyCRmyB,EAAW,SAAS5c,EAAI1P,GAC1B,GAAW,OAAPA,GAAeA,aAAcnD,EAAQU,SACrCmS,EAAGpV,OAASjG,EAAa,SAAS,GAClCqb,EAAGlV,aAAe,EAClBkV,EAAGjV,iBAAmB,EACtBiV,EAAGrV,KAAOhG,EAAa,KAAK,OACzB,CACH,IAAImL,EAAIQ,EAAGR,EACXkQ,EAAGpV,OAASkF,EAAElF,OAASkF,EAAElF,OAAOqH,SAAWtN,EAAa,MAAM,GAC9Dqb,EAAGlV,YAAcgF,EAAEhF,YACnBkV,EAAGjV,gBAAkB+E,EAAE/E,gBACvBiV,EAAGrV,KAA0B,IAAnBqV,EAAGlV,YAAoBnG,EAAa,QAAQ,GAAQA,EAAa,OAAO,GAGtFqb,EAAG5U,UAAY+B,EAAQ0vB,aAAa7c,EAAGpV,OAAQqxB,IAkB7Ca,EAAc,SAASn7B,EAAGqM,GAC5B,IAAIlK,EAAI,CACJ2G,KAAM,KACNsyB,SAAU,MAEd,OAAW,OAAP/uB,EACO,KACFA,EAAG2F,WAAavG,EAAO4vB,UAC5Bl5B,EAAE2G,KAAO9F,EAAa,QAAQ,GAC9Bb,EAAEi5B,SAAWp4B,EAAa,cAAc,GACjCb,KAGAkK,EAAG2F,WAAavG,EAAO6vB,YAAcjvB,EAAGof,SAASzZ,WAAavG,EAAOwG,SACrEspB,EAAiBv7B,EAAGqM,EAAGof,UACtB,MAiFV+P,EAAQ,SAASrtB,EAAGud,EAAI5oB,GAC1B,IAAIX,EAAI,CACJ2G,KAAM,KACNsyB,SAAU,MAGd,GAAIvS,EAAS6H,IAAI5tB,GAAI,CACjB,IAAI24B,EAASttB,EAAEc,EAAE4Z,EAAS6S,OAAO54B,IACjC,GAAI24B,EAAOhrB,aAEP,OADAtO,EAAE2G,KAAO2yB,EAAO7qB,SACTzO,MAGR,CACH,IAAI6G,EAAO2yB,EAAWxtB,EAAGud,EAAI5oB,GAC7B,GAAIkG,GAA6B,KAArBA,EAAKoyB,SAAS,GACtB,OAAOpyB,EAKf,OADA7G,EAAE2G,KAAO9F,EAAa,KAAK,GACpBb,GAGLy5B,EAAW,SAASlQ,EAAImQ,GAC1B,OAAInQ,EAAKmQ,GACG,EACAnQ,GAoDViQ,EAAa,SAASxtB,EAAG2tB,EAAQ7N,GACnC,IAAI9rB,EAAI,CACJ2G,KAAMyC,EAAMyvB,kBAAkB7sB,EAAG8f,EAAM,EAAG6N,GAC1CV,SAAU,MAGd,GAAIj5B,EAAE2G,KAEF,OADA3G,EAAEi5B,SAAWp4B,EAAa,SAAS,GAC5Bb,EAIX,IAAIupB,EA1DW,SAASvd,EAAG2tB,EAAQ7N,GACnC,IAAI8N,GAAU,EACVF,EAAY,EACZG,EAAMnT,EAASE,SACnB,IAAK,IAAI2C,EAAK,EAAGA,EAAKoQ,EAAQpQ,IAAM,CAChC,IAAI/wB,EAAIwT,EAAE7O,KAAKosB,GACXzpB,EAAItH,EAAEoxB,EACV,OAAQpxB,EAAEixB,QACN,KAAKoQ,EAAInQ,WAAY,CACjB,IAAIloB,EAAIhJ,EAAEylB,EACNne,GAAKgsB,GAAOA,GAAOhsB,EAAI0B,IACvBo4B,EAASH,EAASlQ,EAAImQ,IAC1B,MAEJ,KAAKG,EAAIC,YACDhO,GAAOhsB,EAAI,IACX85B,EAASH,EAASlQ,EAAImQ,IAC1B,MAEJ,KAAKG,EAAIE,QACT,KAAKF,EAAIG,YACDlO,GAAOhsB,IACP85B,EAASH,EAASlQ,EAAImQ,IAC1B,MAEJ,KAAKG,EAAIvO,OAAQ,CACb,IACIf,EAAOhB,EAAK,EADR/wB,EAAE6xB,IAGNd,EAAKgB,GAAQA,GAAQoP,GACjBpP,EAAOmP,IACPA,EAAYnP,GAEpB,MAEJ,QACQ7D,EAASuT,UAAUzhC,EAAEixB,SAAWqC,IAAQhsB,IACxC85B,EAASH,EAASlQ,EAAImQ,KAKtC,OAAOE,EAgBEM,CAAWluB,EAAG2tB,EAAQ7N,GAC3B+N,EAAMnT,EAASE,SACnB,IAAY,IAAR2C,EAAW,CACX,IAAI/wB,EAAIwT,EAAE7O,KAAKosB,GACf,OAAQ/wB,EAAEixB,QACN,KAAKoQ,EAAI/I,QAAS,CACd,IAAItvB,EAAIhJ,EAAEylB,EACV,GAAIzc,EAAIhJ,EAAEoxB,EACN,OAAO4P,EAAWxtB,EAAGud,EAAI/nB,GAC7B,MAEJ,KAAKq4B,EAAIxJ,YACT,KAAKwJ,EAAIzJ,YAAa,CAClB,IAAItjB,EAAItU,EAAEgzB,EACNzyB,EAAIP,EAAEylB,EACNkc,EAAK3hC,EAAEixB,SAAWoQ,EAAIzJ,YAAchnB,EAAMyvB,kBAAkB7sB,EAAGjT,EAAI,EAAGwwB,GAAMiP,EAAUxsB,EAAGjT,GAG7F,OAFAiH,EAAE2G,KAAO0yB,EAAMrtB,EAAGud,EAAIzc,GAAGnG,KACzB3G,EAAEi5B,SAAYkB,GAAM54B,EAAa44B,EAAI1T,EAAK2T,SAAYv5B,EAAa,UAAU,GAAQA,EAAa,SAAS,GACpGb,EAEX,KAAK65B,EAAI7J,YAGL,OAFAhwB,EAAE2G,KAAO6xB,EAAUxsB,EAAGxT,EAAEylB,GACxBje,EAAEi5B,SAAWp4B,EAAa,WAAW,GAC9Bb,EAEX,KAAK65B,EAAI7L,SACT,KAAK6L,EAAI5L,UAAW,CAChB,IAAIzsB,EAAIhJ,EAAEixB,SAAWoQ,EAAI7L,SAAWx1B,EAAE6hC,GAAKruB,EAAE7O,KAAKosB,EAAK,GAAG+Q,GAC1D,GAAItuB,EAAEc,EAAEtL,GAAG8M,aAGP,OAFAtO,EAAE2G,KAAOqF,EAAEc,EAAEtL,GAAGiN,SAChBzO,EAAEi5B,SAAWp4B,EAAa,YAAY,GAC/Bb,EAEX,MAEJ,KAAK65B,EAAIvF,QAAS,CACd,IAAIxnB,EAAItU,EAAEgzB,EAGV,OAFAxrB,EAAE2G,KAAO0yB,EAAMrtB,EAAGud,EAAIzc,GAAGnG,KACzB3G,EAAEi5B,SAAWp4B,EAAa,UAAU,GAC7Bb,IAMnB,OAAO,MASLo5B,EAAmB,SAASv7B,EAAGqM,GACjC,IAAIlK,EAAI,CACJ2G,KAAM,KACNsyB,SAAU,MAGVsB,EAAK,EACLvuB,EAAI9B,EAAGc,KAAKtJ,MAAMsK,EAClBud,EAAK8O,EAAUnuB,GACf1R,EAAIwT,EAAE7O,KAAKosB,GACXsQ,EAAMnT,EAASE,SAEnB,GAAI1c,EAAG2F,WAAavG,EAAOkxB,YAGvB,OAFAx6B,EAAE2G,KAAO9F,EAAa,KAAK,GAC3Bb,EAAEi5B,SAAWp4B,EAAa,QAAQ,GAC3Bb,EAGX,OAAQxH,EAAEixB,QACN,KAAKoQ,EAAIE,QACT,KAAKF,EAAIG,YACL,OAAOR,EAAWxtB,EAAGud,EAAI/wB,EAAEoxB,GAC/B,KAAKiQ,EAAIC,YAGL,OAFA95B,EAAE2G,KAAO9F,EAAa,gBAAgB,GACtCb,EAAEi5B,SAAWp4B,EAAa,gBAAgB,GACnCb,EAEX,KAAK65B,EAAIvF,QACT,KAAKuF,EAAIxJ,YACT,KAAKwJ,EAAIzJ,YACLmK,EAAK7wB,EAAI+wB,IAAIC,SACb,MACJ,KAAKb,EAAI3E,YACT,KAAK2E,EAAI5E,YACLsF,EAAK7wB,EAAI+wB,IAAIE,YACb,MACJ,KAAKd,EAAIvG,OAAWiH,EAAK7wB,EAAI+wB,IAAIG,OAAW,MAC5C,KAAKf,EAAIgB,OAAWN,EAAK7wB,EAAI+wB,IAAIK,OAAW,MAC5C,KAAKjB,EAAIkB,OAAWR,EAAK7wB,EAAI+wB,IAAIO,OAAW,MAC5C,KAAKnB,EAAIoB,OAAWV,EAAK7wB,EAAI+wB,IAAIS,OAAW,MAC5C,KAAKrB,EAAIsB,OAAWZ,EAAK7wB,EAAI+wB,IAAIW,OAAW,MAC5C,KAAKvB,EAAIwB,OAAWd,EAAK7wB,EAAI+wB,IAAIa,OAAW,MAC5C,KAAKzB,EAAI0B,QAAWhB,EAAK7wB,EAAI+wB,IAAIe,QAAW,MAC5C,KAAK3B,EAAI4B,QAAWlB,EAAK7wB,EAAI+wB,IAAIiB,QAAW,MAC5C,KAAK7B,EAAI8B,OAAWpB,EAAK7wB,EAAI+wB,IAAImB,OAAW,MAC5C,KAAK/B,EAAIgC,QAAWtB,EAAK7wB,EAAI+wB,IAAIqB,QAAW,MAC5C,KAAKjC,EAAIkC,OAAWxB,EAAK7wB,EAAI+wB,IAAIuB,OAAW,MAC5C,KAAKnC,EAAIoC,OAAW1B,EAAK7wB,EAAI+wB,IAAIyB,OAAW,MAC5C,KAAKrC,EAAI/F,OAAWyG,EAAK7wB,EAAI+wB,IAAI0B,OAAW,MAC5C,KAAKtC,EAAIuC,QAAW7B,EAAK7wB,EAAI+wB,IAAI4B,QAAW,MAC5C,KAAKxC,EAAIyC,OAAW/B,EAAK7wB,EAAI+wB,IAAI8B,OAAW,MAC5C,KAAK1C,EAAIxG,UAAWkH,EAAK7wB,EAAI+wB,IAAI+B,UAAW,MAC5C,KAAK3C,EAAIrG,MAAW+G,EAAK7wB,EAAI+wB,IAAIgC,MAAW,MAC5C,KAAK5C,EAAI6C,MAAWnC,EAAK7wB,EAAI+wB,IAAIkC,MAAW,MAC5C,KAAK9C,EAAI+C,MAAWrC,EAAK7wB,EAAI+wB,IAAIoC,MAAW,MAC5C,QACI,OAAO,KAKf,OAFA78B,EAAE2G,KAAO9I,EAAEgN,IAAIiyB,OAAOvC,GAAIpsB,SAC1BnO,EAAEi5B,SAAWp4B,EAAa,cAAc,GACjCb,GA+BL+8B,EAAU,SAASl/B,EAAG4M,GACxB,IAAIP,EAAKrM,EAAEqM,GACP6Z,EAAO,KACX,GAAI7Z,EAAG2F,WAAavG,EAAOwG,SAAU,CACjCiU,EAlBa,SAASlmB,EAAGqM,EAAIO,GACjC,IAAI9J,EAAIuJ,EAAGc,KAAKtJ,MAChB,IAAK,IAAIlJ,EAAI,EAAGA,EAAImI,EAAEuK,UAAW1S,IAC7B,GAAImI,EAAEyN,OAAO5V,KAAOiS,EAChB,MAAO,CACH9D,KAAM6xB,EAAU73B,EAAEqL,EAAGxT,GACrBygC,SAAUp4B,EAAa,WAAW,IAK9C,OAAO,KAOIm8B,CAAan/B,EAAGqM,EAAIO,GAC3B,IAAIwyB,EAjCM,SAASp/B,EAAGqM,EAAIO,GAC9B,IAAK,IAAIjS,EAAI0R,EAAGyuB,OAAQngC,EAAI0R,EAAGD,IAAKzR,IAChC,GAAIqF,EAAE+M,MAAMpS,KAAOiS,EACf,OAAOjS,EAGf,OAAO,EA2BS0kC,CAAUr/B,EAAGqM,EAAIO,IACxBsZ,GAAQkZ,IACTlZ,EAAOyV,EAAWtvB,EAAGc,KAAKtJ,MAAMsK,EAAGqsB,EAAUnuB,GAAK+yB,EAAQ/yB,EAAGyuB,SAGrE,OAAO5U,EAAO1a,EAAQ8zB,iBAAiBt/B,EAAGgD,EAAa,cAAc,GAAOkjB,EAAKkV,SAAUlV,EAAKpd,MAAQ9F,EAAa,IAAI,IAGvHu8B,EAAiB,SAASv/B,EAAG4M,EAAGwG,GAClC,IAAIlY,EAAI2Q,EAAI2zB,iBAAiBx/B,EAAG4M,GAChC6yB,EAAcz/B,EAAGgD,EAAa,8BAA8B,GAAOoQ,EAAIlY,EAAGgkC,EAAQl/B,EAAG4M,KA2BnF8yB,EAAe,SAAS1/B,EAAGue,EAAKjnB,EAAKs9B,GACvC,IAAI1T,EAMJ,OAJIA,EADA5pB,EACOkU,EAAQ0vB,aAAa5jC,EAAIgZ,SAAUgqB,GAEnCt3B,EAAa,KAAK,GAEtBwI,EAAQ8zB,iBAAiBt/B,EAAGgD,EAAa,aAAa,GAAOke,EAAM0T,EAAMrW,IAG9EkhB,EAAgB,SAASz/B,EAAG2Y,KAAQC,GACtC,IAAIvM,EAAKrM,EAAEqM,GACPkS,EAAM/S,EAAQqN,kBAAkB7Y,EAAG2Y,EAAKC,GACxCvM,EAAG2F,WAAavG,EAAOwG,UACvBytB,EAAa1/B,EAAGue,EAAKlS,EAAGc,KAAKtJ,MAAMsK,EAAElF,OAAQC,EAAYmD,IAC7D0I,EAAc/U,IAGZ+U,EAAgB,SAAS/U,GAC3B,GAAkB,IAAdA,EAAEwS,QAAe,CACjB,IAAIA,EAAUxS,EAAEwS,QAChBhH,EAAQmE,UAAU3P,EAAGA,EAAE+M,MAAM/M,EAAEoM,IAAM,IACrCZ,EAAQuC,UAAU/N,EAAGA,EAAEoM,IAAM,EAAGoG,GAChCnH,EAAIiG,iBAAiBtR,EAAGA,EAAEoM,IAAM,EAAG,GAGvCf,EAAIs0B,WAAW3/B,EAAG+J,IAgDtBvG,EAAOC,QAAQi8B,aAAmBA,EAClCl8B,EAAOC,QAAQm8B,iBAnGU,SAAS5/B,EAAG6/B,EAAIC,IACjCD,EAAGpvB,cAAgB3E,EAAI4E,QAAQmvB,MAAKA,EAAKC,GAC7CP,EAAev/B,EAAG6/B,EAAI78B,EAAa,eAAe,KAkGtDQ,EAAOC,QAAQsR,cAAmBA,EAClCvR,EAAOC,QAAQs8B,gBA7FS,SAAS//B,EAAG6/B,EAAIC,EAAIvhB,IACf,IAArBzS,EAAImF,SAAS4uB,KACbC,EAAKD,GACTN,EAAev/B,EAAG8/B,EAAIvhB,IA2F1B/a,EAAOC,QAAQu8B,gBAxFS,SAAShgC,EAAG6/B,EAAIC,GACpC,IAAIG,EAAKp0B,EAAI2zB,iBAAiBx/B,EAAG6/B,GAC7BK,EAAKr0B,EAAI2zB,iBAAiBx/B,EAAG8/B,GAC7Bp8B,EAAau8B,EAAIC,GACjBT,EAAcz/B,EAAGgD,EAAa,oCAAoC,GAAOi9B,GAEzER,EAAcz/B,EAAGgD,EAAa,iCAAiC,GAAOi9B,EAAIC,IAmFlF18B,EAAOC,QAAQg8B,cAAmBA,EAClCj8B,EAAOC,QAAQ08B,gBAhDS,SAASngC,EAAG6/B,EAAIC,IAEvB,IADFh0B,EAAIiF,UAAU8uB,KAErBC,EAAKD,GACTJ,EAAcz/B,EAAGgD,EAAa,0CAA0C,GAAOk8B,EAAQl/B,EAAG8/B,KA6C9Ft8B,EAAOC,QAAQ28B,eA1CQ,SAASpgC,GAC5B,IAAIqM,EAAKrM,EAAEqM,GACPqtB,EAAO15B,EAAEqgC,SACTC,EAA+B,KAAhBtgC,EAAEugC,WAAoB7G,EAAOxyB,EAChD,GAAIo5B,EACAtgC,EAAEugC,UAAYvgC,EAAEwgC,mBACf,KAAM9G,EAAOvyB,GACd,OACJ,GAAIkF,EAAG2F,WAAavG,EAAOg1B,eACvBp0B,EAAG2F,aAAevG,EAAOg1B,mBAD7B,CAMA,GAFIH,GACAj1B,EAAIq1B,UAAU1gC,EAAG6G,GAAgB,GACjC6yB,EAAOvyB,EAAc,CACrB,IAAIgH,EAAI9B,EAAGc,KAAKtJ,MAAMsK,EAClBwyB,EAAMt0B,EAAGouB,UAAY,EACrBmG,EAAgC,IAAtBzyB,EAAE2gB,SAAS71B,OAAekV,EAAE2gB,SAAS6R,IAAQ,GAC/C,IAARA,GACAt0B,EAAGouB,WAAaz6B,EAAE6gC,OAClBD,KAAmC,IAAtBzyB,EAAE2gB,SAAS71B,OAAekV,EAAE2gB,SAAS9uB,EAAE6gC,MAAQ,IAAM,KAClEx1B,EAAIq1B,UAAU1gC,EAAG8G,EAAc85B,GAEvC5gC,EAAE6gC,MAAQx0B,EAAGouB,UACTz6B,EAAEkS,SAAWpI,IACTw2B,IACAtgC,EAAEugC,UAAY,GAClBl0B,EAAGouB,YACHpuB,EAAG2F,YAAcvG,EAAOg1B,eACxBp0B,EAAGG,QAAUxM,EAAEoM,IAAM,EACrBC,EAAGc,KAAOnN,EAAE+M,MAAMV,EAAGG,SACrBnB,EAAIs0B,WAAW3/B,EAAG8J,MAY1BtG,EAAOC,QAAQ87B,eAAmBA,EAClC/7B,EAAOC,QAAQ40B,YAxlBK,SAASr4B,GACzB,OAAOA,EAAE25B,MAwlBbn2B,EAAOC,QAAQ60B,iBA/kBU,SAASt4B,GAC9B,OAAOA,EAAEwgC,eA+kBbh9B,EAAOC,QAAQ80B,gBArlBS,SAASv4B,GAC7B,OAAOA,EAAEqgC,UAqlBb78B,EAAOC,QAAQ8Z,YA3YK,SAASvd,EAAGgJ,EAAMqV,GAElC,IAAInM,EAAQvD,EAAItC,EAAIc,EAyBpB,OA1BAnE,EAAOnE,EAAgBmE,GAEvB0xB,EAAU16B,GACM,KAAZgJ,EAAK,IACLqD,EAAK,KACLc,EAAOnN,EAAE+M,MAAM/M,EAAEoM,IAAM,GACvBjB,EAAUnL,EAAGmN,EAAK2zB,eAAgB,qBAClC93B,EAAOA,EAAKkQ,SAAS,GACrBlZ,EAAEoM,QAEFC,EAAKgS,EAAG3U,KACRyD,EAAOd,EAAGc,KACVwb,EAAWtc,EAAGc,KAAK2zB,iBAGvBnyB,EAAKxB,EAAK4zB,cAAgB5zB,EAAKtJ,MAAQ,KACvCqO,EAjEe,SAASlS,EAAGgJ,EAAMqV,EAAIlO,EAAG9D,GACxC,IAAI6F,EAAS,EACb,KAAOlJ,EAAK/P,OAAS,EAAG+P,EAAOA,EAAKkQ,SAAS,GACzC,OAAQlQ,EAAK,IACT,KAAK,GACDiyB,EAAS5c,EAAIlO,GACb,MAEJ,KAAK,IACDkO,EAAGnV,YAAcmD,GAAMA,EAAG2F,WAAavG,EAAOwG,SAAW/I,EAAYmD,IAAO,EAC5E,MAEJ,KAAK,IACDgS,EAAGhV,KAAa,OAAN8G,EAAa,EAAIA,EAAE9C,UACnB,OAAN8C,GAAcA,aAAa3E,EAAQU,UACnCmS,EAAG9U,UAAW,EACd8U,EAAG/U,QAAU,IAEb+U,EAAG9U,SAAW4G,EAAEhC,EAAE6yB,UAClB3iB,EAAG/U,QAAU6G,EAAEhC,EAAE0sB,WAErB,MAEJ,KAAK,IACDxc,EAAG7U,WAAa6C,EAAKA,EAAG2F,WAAavG,EAAO6vB,UAAY,EACxD,MAEJ,KAAK,IAA+B,CAChC,IAAIn5B,EAAIg5B,EAAYn7B,EAAGqM,GACb,OAANlK,GACAkc,EAAGtV,SAAW/F,EAAa,IAAI,GAC/Bqb,EAAGvV,KAAO,OAEVuV,EAAGtV,SAAW5G,EAAEi5B,SAChB/c,EAAGvV,KAAO3G,EAAE2G,MAEhB,MAEJ,KAAK,GACL,KAAK,IACD,MACJ,QAASoJ,EAAS,EAI1B,OAAOA,EAoBE+uB,CAAWjhC,EAAGgJ,EAAMqV,EAAI1P,EAAItC,GACjCzK,EAAkBoH,EAAM,MAAkC,IAC1DwC,EAAQmE,UAAU3P,EAAGmN,GACrBhC,EAAUnL,EAAGA,EAAEoM,KAAOpM,EAAEqM,GAAGD,IAAK,mBAGpCsuB,EAAU16B,GACN4B,EAAkBoH,EAAM,KAAiC,GAzGvC,SAAShJ,EAAGmQ,GAClC,GAAU,OAANA,GAAcA,aAAa3E,EAAQU,SACnClM,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIZ,EAAQS,OAAOxG,EAAU,MAC9C80B,EAAKpuB,aAAanM,OACf,CACH,IAAI8uB,EAAW3e,EAAEhC,EAAE2gB,SACf5zB,EAAI6Q,EAAOgE,SAAS/P,GACxBA,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIZ,EAAQS,OAAOnG,EAAY5K,GAChDq/B,EAAKpuB,aAAanM,GAClB,IAAIqC,EAAI,IAAImJ,EAAQS,OAAOvG,GAAc,GACzC,IAAK,IAAI/K,EAAI,EAAGA,EAAIm0B,EAAS71B,OAAQ0B,IACjCoR,EAAOoO,YAAYjf,EAAG4zB,EAASn0B,GAAI0H,IA+FvC6+B,CAAkBlhC,EAAG2O,GAElBuD,GAiXX1O,EAAOC,QAAQ+0B,aAnhBM,SAASx4B,EAAGqe,EAAI9R,GACjC,IAAIzD,EAEJ,GADA4xB,EAAU16B,GACC,OAAPqe,EAIIvV,EAHC9I,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAG6G,eAGb1H,EAAMyvB,kBAAkBh7B,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAGvI,MAAMsK,EAAG5B,EAAG,GAFvD,SAGR,CACH,IAAI40B,EAAQvG,EAAU56B,EAAGqe,EAAG3U,KAAM6C,GAC9B40B,GACAr4B,EAAOq4B,EAAMr4B,KACb0C,EAAQmE,UAAU3P,EAAGA,EAAE+M,MAAMo0B,EAAMjjC,MACnCiN,EAAUnL,EAAGA,EAAEoM,KAAOpM,EAAEqM,GAAGD,IAAK,mBAEhCtD,EAAO,KAIf,OADA4xB,EAAU16B,GACH8I,GAigBXtF,EAAOC,QAAQ+Z,aA/kBM,SAASxd,EAAGvH,EAAO4lB,GACpC,IAAIhS,EACA6F,EACJ,GAAIzZ,EAAQ,EAAG,OAAO,EACtB,IAAK4T,EAAKrM,EAAEqM,GAAI5T,EAAQ,GAAK4T,IAAOrM,EAAEohC,QAAS/0B,EAAKA,EAAGof,SACnDhzB,IAMJ,OALc,IAAVA,GAAe4T,IAAOrM,EAAEohC,SACxBlvB,EAAS,EACTmM,EAAG3U,KAAO2C,GAEV6F,EAAS,EACNA,GAqkBX1O,EAAOC,QAAQg1B,YA3mBK,SAASz4B,EAAGmN,EAAMusB,EAAMK,GAC3B,OAAT5sB,GAA0B,IAATusB,IACjBA,EAAO,EACPvsB,EAAO,MAEPnN,EAAEqM,GAAG2F,WAAavG,EAAOwG,WACzBjS,EAAE6gC,MAAQ7gC,EAAEqM,GAAGouB,WACnBz6B,EAAE25B,KAAOxsB,EACTnN,EAAEwgC,cAAgBzG,EAClB/5B,EAAEugC,UAAYvgC,EAAEwgC,cAChBxgC,EAAEqgC,SAAW3G,GAkmBjBl2B,EAAOC,QAAQi1B,aAhgBM,SAAS14B,EAAGqe,EAAI9R,GACjC,IAAIzD,EACJ4xB,EAAU16B,GACV,IAAImhC,EAAQvG,EAAU56B,EAAGqe,EAAG3U,KAAM6C,GASlC,OARI40B,GACAr4B,EAAOq4B,EAAMr4B,KACb0C,EAAQuC,UAAU/N,EAAGmhC,EAAMjjC,IAAK8B,EAAEoM,IAAM,UACjCpM,EAAE+M,QAAQ/M,EAAEoM,MAEnBtD,EAAO,KAEX4xB,EAAU16B,GACH8I,gCCpLX,MAAM,aACFlC,EAAY,YACZG,EAAW,iBACXC,EAAgB,aAChBC,EAAY,aACZE,EAAY,YACZC,EAAW,aACXC,EAAY,YACZC,EAAW,cACXxC,EACAS,gBAAgB,SACZkB,EAAQ,SACRD,EAAQ,SACRD,EAAQ,SACRd,GAEJmE,eAAe,WACXK,EAAU,WACVE,EAAU,WACVJ,EAAU,cACVC,EAAa,OACbH,EAAM,UACNC,GACH,UACDnB,EAAS,kBACT/G,EAAiB,aACjBoB,GACA,EAAQ,MACNu3B,EAAW,EAAQ,MACnBnvB,EAAW,EAAQ,MACnBG,EAAW,EAAQ,OACnB,UACFJ,EAAS,WACTwd,EAAU,eACV0Y,GACA,EAAQ,MACN71B,EAAW,EAAQ,MACnBqd,EAAW,EAAQ,MACnBC,EAAW,EAAQ,MACnBrd,EAAW,EAAQ,OACnB,gBAAEG,GAAoB,EAAQ,MAC9BC,EAAW,EAAQ,OACnB,cAAEnF,GAAkB,EAAQ,MAC5B46B,EAAW,EAAQ,MACnBx1B,EAAW,EAAQ,OACnB,QAAEy1B,GAAY,EAAQ,MAEtB5zB,EAAa,SAAS3N,EAAGyN,GAC3B,GAAIzN,EAAEoM,IAAMqB,EACR,KAAOzN,EAAEoM,IAAMqB,GACXzN,EAAE+M,MAAM/M,EAAEoM,OAAS,IAAIZ,EAAQS,OAAOxG,EAAU,WAEpD,KAAOzF,EAAEoM,IAAMqB,UACJzN,EAAE+M,QAAQ/M,EAAEoM,MAIzBo1B,EAAc,SAASxhC,EAAGyhC,EAASC,GACrC,IAAIC,EAAc3hC,EAAEoM,IAGpB,KAAOpM,EAAEoM,IAAMs1B,EAAS,GACpB1hC,EAAE+M,MAAM/M,EAAEoM,OAAS,IAAIZ,EAAQS,OAAOxG,EAAU,MAEpD,OAAQg8B,GACJ,KAAKx3B,EACDuB,EAAQo2B,YAAY5hC,EAAG0hC,EAAQ91B,EAAgB5L,EAAG,sBAClD,MAEJ,KAAKmK,EACDqB,EAAQo2B,YAAY5hC,EAAG0hC,EAAQ91B,EAAgB5L,EAAG,4BAClD,MAEJ,QACIwL,EAAQuC,UAAU/N,EAAG0hC,EAAQC,EAAc,GAInD,KAAO3hC,EAAEoM,IAAMs1B,EAAS,UACb1hC,EAAE+M,QAAQ/M,EAAEoM,MAGrBy1B,EAAiBn7B,EAAgB,IAEjCo7B,EAAoB,SAAS9hC,EAAGsgB,GAClCqI,EAAWrI,GAAW5Z,GAAiB4Z,GAAWuhB,GAClDlZ,EAAW3oB,EAAE0N,YAAc1N,EAAE+M,MAAM9T,OAASwS,EAAOqI,aACnD9T,EAAE+M,MAAM9T,OAASqnB,EACjBtgB,EAAE0N,WAAa4S,EAAU7U,EAAOqI,aAG9BC,EAAiB,SAAS/T,EAAGuM,GAC/B,IAAI4L,EAAOnY,EAAE+M,MAAM9T,OACnB,GAAIkf,EAAOzR,EACPi5B,GAAW3/B,EAAGmK,OACb,CACD,IAAI43B,EAAS/hC,EAAEoM,IAAMG,EAAId,EAAOqI,YAC5BwM,EAAU,EAAInI,EACdmI,EAAU5Z,IAAe4Z,EAAU5Z,GACnC4Z,EAAUyhB,IAAQzhB,EAAUyhB,GAC5BzhB,EAAU5Z,GACVo7B,EAAkB9hC,EAAG6hC,GACrBz2B,EAAOq0B,cAAcz/B,EAAGgD,EAAa,kBAAkB,KAGvD8+B,EAAkB9hC,EAAGsgB,KAI3B0hB,EAAkB,SAAShiC,EAAGuM,GAC5BvM,EAAE0N,WAAa1N,EAAEoM,KAAOG,GACxBwH,EAAe/T,EAAGuM,IAYpB01B,EAAmB,SAASjiC,GAC9B,IAAIkiC,EAVW,SAASliC,GACxB,IAAImiC,EAAMniC,EAAEoM,IACZ,IAAK,IAAIC,EAAKrM,EAAEqM,GAAW,OAAPA,EAAaA,EAAKA,EAAGof,SACjC0W,EAAM91B,EAAGD,MAAK+1B,EAAM91B,EAAGD,KAG/B,OADAuc,EAAWwZ,GAAOniC,EAAE0N,YACby0B,EAAM,EAIDC,CAAWpiC,GACnBqiC,EAAWH,EAAQl+B,KAAKwiB,MAAM0b,EAAQ,GAAK,EAAEz2B,EAAOqI,YACpDuuB,EAAW37B,IACX27B,EAAW37B,GACX1G,EAAE+M,MAAM9T,OAASyN,GACjB+E,EAAO62B,YAAYtiC,GAGnBkiC,GAAUx7B,EAAgB+E,EAAOqI,aAAgBuuB,EAAWriC,EAAE+M,MAAM9T,QACpE6oC,EAAkB9hC,EAAGqiC,IAevBE,EAAe,SAASviC,EAAGwiC,EAAKjxB,GAClC,IAAIpE,EAAOnN,EAAE+M,MAAMy1B,GAEnB,OAAOr1B,EAAKrU,MACR,KAAK2N,EACL,KAAKD,EAAU,CACX,IAAI2J,EAAIhD,EAAKrU,OAAS2N,EAAW0G,EAAKtJ,MAAMsM,EAAIhD,EAAKtJ,MAErDm+B,EAAgBhiC,EAAGqH,GACnB,IAAIgF,EAAKZ,EAAOg3B,cAAcziC,GAC9BqM,EAAGG,QAAUg2B,EACbn2B,EAAGkF,SAAWA,EACdlF,EAAGc,KAAOA,EACVd,EAAGD,IAAMpM,EAAEoM,IAAM/E,EACjBshB,EAAWtc,EAAGD,KAAOpM,EAAE0N,YACvBrB,EAAG2F,WAAa,EACZhS,EAAEqgC,SAAWp5B,GACby5B,EAAU1gC,EAAG4G,GAAe,GAChC,IAAI2F,EAAI4D,EAAEnQ,GACV,GAAiB,iBAANuM,GAAkBA,EAAI,IAAQ,EAAFA,KAASA,EAC5C,MAAM/U,MAAM,4DAKhB,OAJA+iC,EAAKjuB,gBAAgBtM,EAAGuM,GAExBm2B,EAAa1iC,EAAGqM,EAAIrM,EAAEoM,IAAMG,EAAGA,IAExB,EAEX,KAAKhG,EAAU,CACX,IAAI+hB,EACAna,EAAIhB,EAAKtJ,MAAMsK,EACf5B,EAAIvM,EAAEoM,IAAMo2B,EAAM,EAClBG,EAAQx0B,EAAEqiB,aAEd,GADAwR,EAAgBhiC,EAAG2iC,GACfx0B,EAAE6yB,UACF1Y,EAAOsa,EAAe5iC,EAAGmO,EAAG5B,OACzB,CACH,KAAOA,EAAI4B,EAAE0sB,UAAWtuB,IACpBvM,EAAE+M,MAAM/M,EAAEoM,OAAS,IAAIZ,EAAQS,OAAOxG,EAAU,MACpD6iB,EAAOka,EAAM,EAGjB,IAAIn2B,EAAKZ,EAAOg3B,cAAcziC,GAY9B,OAXAqM,EAAGG,QAAUg2B,EACbn2B,EAAGkF,SAAWA,EACdlF,EAAGc,KAAOA,EACVd,EAAGyuB,OAASxS,EACZjc,EAAGD,IAAMkc,EAAOqa,EAChBh1B,EAAW3N,EAAGqM,EAAGD,KACjBC,EAAGw2B,OAAS10B,EAAE7O,KACd+M,EAAGouB,UAAY,EACfpuB,EAAG2F,WAAavG,EAAOwG,SACnBjS,EAAEqgC,SAAWp5B,GACb67B,EAAS9iC,EAAGqM,IACT,EAEX,QAGI,OAFA21B,EAAgBhiC,EAAG,GACnB+iC,GAAU/iC,EAAGwiC,EAAKr1B,GACXo1B,EAAaviC,EAAGwiC,EAAKjxB,KAIlCmxB,EAAe,SAAS1iC,EAAGqM,EAAI22B,EAAajL,GAC9C,IAAIkL,EAAS52B,EAAGkF,SAEZvR,EAAEqgC,UAAYj5B,EAAcD,KACxBnH,EAAEqgC,SAAWj5B,GACbs5B,EAAU1gC,EAAG+G,GAAc,GAC/B/G,EAAE6gC,MAAQx0B,EAAGof,SAASgP,WAG1B,IAAI5mB,EAAMxH,EAAGG,QAGb,OAFAxM,EAAEqM,GAAKA,EAAGof,SACVzrB,EAAEqM,GAAGghB,KAAO,KACL6V,EAAYljC,EAAGgjC,EAAanvB,EAAKkkB,EAAMkL,IAG5CC,EAAc,SAASljC,EAAGgjC,EAAanvB,EAAKkkB,EAAMkL,GACpD,OAAQA,GACJ,KAAK,EACD,MACJ,KAAK,EACY,IAATlL,EACA/3B,EAAE+M,MAAM8G,GAAKsvB,cAEb33B,EAAQuC,UAAU/N,EAAG6T,EAAKmvB,GAE9B,MAEJ,KAAK17B,EACD,IAAK,IAAI3M,EAAI,EAAGA,EAAIo9B,EAAMp9B,IACtB6Q,EAAQuC,UAAU/N,EAAG6T,EAAMlZ,EAAGqoC,EAAcroC,GAChD,IAAK,IAAIA,EAAEqF,EAAEoM,IAAKzR,GAAIkZ,EAAMkkB,EAAOp9B,WACxBqF,EAAE+M,MAAMpS,GAEnB,OADAqF,EAAEoM,IAAMyH,EAAMkkB,GACP,EAEX,QAAS,CACL,IAAIp9B,EACJ,GAAIsoC,GAAUlL,EACV,IAAKp9B,EAAI,EAAGA,EAAIsoC,EAAQtoC,IACpB6Q,EAAQuC,UAAU/N,EAAG6T,EAAMlZ,EAAGqoC,EAAcroC,OAC7C,CACH,IAAKA,EAAI,EAAGA,EAAIo9B,EAAMp9B,IAClB6Q,EAAQuC,UAAU/N,EAAG6T,EAAMlZ,EAAGqoC,EAAcroC,GAChD,KAAOA,EAAIsoC,EAAQtoC,IACXkZ,EAAIlZ,GAAKqF,EAAEoM,IACXpM,EAAE+M,MAAM8G,EAAMlZ,GAAK,IAAI6Q,EAAQS,OAAOxG,EAAU,MAEhDzF,EAAE+M,MAAM8G,EAAMlZ,GAAGwoC,cAG7B,OAGR,IAAI11B,EAASoG,EAAMovB,EACnB,IAAK,IAAItoC,EAAEqF,EAAEoM,IAAKzR,GAAG8S,EAAQ9S,WAClBqF,EAAE+M,MAAMpS,GAEnB,OADAqF,EAAEoM,IAAMqB,GACD,GAQLizB,EAAY,SAAS1gC,EAAGhE,EAAO44B,GACjC,IAAI+E,EAAO35B,EAAE25B,KACb,GAAIA,GAAQ35B,EAAE6S,UAAW,CACrB,IAAIxG,EAAKrM,EAAEqM,GACPD,EAAMpM,EAAEoM,IACRg3B,EAAS/2B,EAAGD,IACZiS,EAAK,IAAI1V,EACb0V,EAAGriB,MAAQA,EACXqiB,EAAGnV,YAAc0rB,EACjBvW,EAAG3U,KAAO2C,EACV21B,EAAgBhiC,EAAGqH,GACnBgF,EAAGD,IAAMpM,EAAEoM,IAAM/E,EACjBshB,EAAWtc,EAAGD,KAAOpM,EAAE0N,YACvB1N,EAAE6S,UAAY,EACdxG,EAAG2F,YAAcvG,EAAOkxB,YACxBhD,EAAK35B,EAAGqe,GACRsK,GAAY3oB,EAAE6S,WACd7S,EAAE6S,UAAY,EACdxG,EAAGD,IAAMg3B,EACTz1B,EAAW3N,EAAGoM,GACdC,EAAG2F,aAAevG,EAAOkxB,cAI3BmG,EAAW,SAAS9iC,EAAGqM,GACzB,IAAIstB,EAAO/yB,EACXyF,EAAGouB,YACEpuB,EAAGof,SAASzZ,WAAavG,EAAOwG,UACnC5F,EAAGof,SAASoX,OAAOx2B,EAAGof,SAASgP,UAAY,GAAG7O,QAAU/C,EAASE,SAASoT,cACxE9vB,EAAG2F,YAAcvG,EAAO6vB,UACxB3B,EAAO3yB,GAEX05B,EAAU1gC,EAAG25B,GAAO,GACpBttB,EAAGouB,aAGDmI,EAAiB,SAAS5iC,EAAGmO,EAAGk1B,GAClC,IAKI1oC,EALA2oC,EAAWn1B,EAAE0sB,UAEb0I,EAAQvjC,EAAEoM,IAAMi3B,EAChB/a,EAAOtoB,EAAEoM,IAGb,IAAKzR,EAAI,EAAGA,EAAI2oC,GAAY3oC,EAAI0oC,EAAQ1oC,IACpC6Q,EAAQmE,UAAU3P,EAAGA,EAAE+M,MAAMw2B,EAAQ5oC,IACrCqF,EAAE+M,MAAMw2B,EAAQ5oC,GAAGwoC,cAGvB,KAAOxoC,EAAI2oC,EAAU3oC,IACjBqF,EAAE+M,MAAM/M,EAAEoM,OAAS,IAAIZ,EAAQS,OAAOxG,EAAU,MAEpD,OAAO6iB,GAGLya,GAAY,SAAS/iC,EAAGwiC,EAAKr1B,GAC/B,IAAIuvB,EAAK7wB,EAAI23B,gBAAgBxjC,EAAGmN,EAAMtB,EAAI+wB,IAAI6G,SACzC/G,EAAGoE,aAAapE,IACjBtxB,EAAOm0B,eAAev/B,EAAGmN,EAAMnK,EAAa,QAAQ,IAExDwI,EAAQmE,UAAU3P,EAAGA,EAAE+M,MAAM/M,EAAEoM,IAAI,IACnC,IAAK,IAAI+B,EAAInO,EAAEoM,IAAI,EAAG+B,EAAIq0B,EAAKr0B,IAC3B3C,EAAQuC,UAAU/N,EAAGmO,EAAGA,EAAE,GAC9B3C,EAAQwC,SAAShO,EAAGwiC,EAAK9F,IAuBvBpqB,GAAY,SAAStS,EAAGwiC,EAAKkB,KACzB1jC,EAAE2jC,SAAWtC,GAdJ,SAASrhC,GACpBA,EAAE2jC,UAAYtC,EACdj2B,EAAOq0B,cAAcz/B,EAAGgD,EAAa,qBAAqB,IACrDhD,EAAE2jC,SAAWtC,GAAkBA,GAAkB,IACtD1B,GAAW3/B,EAAGmK,GAWdy5B,CAAW5jC,GACVuiC,EAAaviC,EAAGwiC,EAAKkB,IACtB53B,EAAI+3B,aAAa7jC,GACrBA,EAAE2jC,WAGAhE,GAAa,SAAS3/B,EAAGyhC,GAC3B,GAAIzhC,EAAE8jC,SAEF,MADA9jC,EAAE8jC,SAAS5xB,OAASuvB,EACdzhC,EAAE8jC,SACL,CACH,IAAIC,EAAI/jC,EAAEgN,IAEV,GADAhN,EAAEkS,OAASuvB,GACPsC,EAAE1qB,WAAWyqB,SAGV,CACH,IAAItwB,EAAQuwB,EAAEvwB,MAOd,MANIA,IACAguB,EAAYxhC,EAAGyhC,EAASzhC,EAAEoM,KACtBpM,EAAEqM,GAAGD,IAAMpM,EAAEoM,MACbpM,EAAEqM,GAAGD,IAAMpM,EAAEoM,KACjBoH,EAAMxT,IAEJ,IAAIxI,MAAM,WAAWiqC,KAV3BsC,EAAE1qB,WAAWtM,MAAMg3B,EAAE1qB,WAAWjN,OAASpM,EAAE+M,MAAM/M,EAAEoM,IAAM,GACzDuzB,GAAWoE,EAAE1qB,WAAYooB,KAc/BuC,GAAuB,SAAShkC,EAAGmQ,EAAGkB,GACxC,IAAI4yB,EAAajkC,EAAE2jC,QACfO,EAAK,CACLhyB,OAAQrI,EACR4hB,SAAUzrB,EAAE8jC,UAEhB9jC,EAAE8jC,SAAWI,EAEb,IACI/zB,EAAEnQ,EAAGqR,GACP,MAAOgO,GACL,GAAI6kB,EAAGhyB,SAAWrI,EAAQ,CAGtB,IAAI8J,EAAgB3T,EAAEgN,IAAI2G,cAC1B,GAAIA,EACA,IASI,GARAuwB,EAAGhyB,OAASrI,EAEZ0wB,EAAKzrB,kBAAkB9O,EAAG2T,GAC1B4mB,EAAKxhB,sBAAsB/Y,EAAGqf,GAC9B/N,GAAiBtR,EAAGA,EAAEoM,IAAM,EAAG,GAIb,IAAdpM,EAAEwS,QAAe,CACjB,IAAIA,EAAUxS,EAAEwS,QAChBhH,EAAQmE,UAAU3P,EAAGA,EAAE+M,MAAM/M,EAAEoM,IAAM,IACrCZ,EAAQuC,UAAU/N,EAAGA,EAAEoM,IAAM,EAAGoG,GAChClB,GAAiBtR,EAAGA,EAAEoM,IAAM,EAAG,GAGnC83B,EAAGhyB,OAASnI,EACd,MAAMinB,GACAkT,EAAGhyB,SAAWrI,IAEdq6B,EAAGhyB,QAAU,QAIrBgyB,EAAGhyB,QAAU,GAQzB,OAHAlS,EAAE8jC,SAAWI,EAAGzY,SAChBzrB,EAAE2jC,QAAUM,EAELC,EAAGhyB,QAQRiyB,GAAc,SAASnkC,EAAGkS,GAC5B,IAAI7F,EAAKrM,EAAEqM,GAGXsc,EAAsB,OAAXtc,EAAG+F,KAA0B,IAAVpS,EAAEmS,KAEhCwW,EAAWtc,EAAG2F,WAAavG,EAAOqH,aAAeZ,IAAWpI,GAExDuC,EAAG2F,WAAavG,EAAOqH,cACvBzG,EAAG2F,aAAevG,EAAOqH,YACzB9S,EAAEwS,QAAUnG,EAAGsG,eAKftG,EAAGkF,WAAajK,GAAetH,EAAEqM,GAAGD,IAAMpM,EAAEoM,MAAKpM,EAAEqM,GAAGD,IAAMpM,EAAEoM,KAClE,IACIG,GAAI6F,EADE/F,EAAG+F,KACDpS,EAAGkS,EAAQ7F,EAAGgG,OAC1BkoB,EAAKjuB,gBAAgBtM,EAAGuM,GACxBm2B,EAAa1iC,EAAGqM,EAAIrM,EAAEoM,IAAMG,EAAGA,IAW7B63B,GAAS,SAASpkC,EAAGqR,GAIvB,IAHW,OAAPA,GACA8yB,GAAYnkC,EAAGqR,GAEZrR,EAAEqM,KAAOrM,EAAEohC,SACRphC,EAAEqM,GAAG2F,WAAavG,EAAOwG,UAG3BnG,EAAIu4B,cAAcrkC,GAClB8L,EAAI+3B,aAAa7jC,IAHjBmkC,GAAYnkC,EAAG8J,IA0BrBw6B,GAAU,SAAStkC,EAAGkS,GACxB,IAAI7F,EAfU,SAASrM,GACvB,IAAK,IAAIqM,EAAKrM,EAAEqM,GAAW,OAAPA,EAAaA,EAAKA,EAAGof,SACrC,GAAIpf,EAAG2F,WAAavG,EAAOqH,YACvB,OAAOzG,EAGf,OAAO,KASEk4B,CAAUvkC,GACnB,GAAW,OAAPqM,EAAa,OAAO,EAExB,IAAIq1B,EAASr1B,EAAGqG,MAQhB,OAPAnH,EAAMi5B,WAAWxkC,EAAG0hC,GACpBF,EAAYxhC,EAAGkS,EAAQwvB,GACvB1hC,EAAEqM,GAAKA,EACPrM,EAAE6S,UAAYxG,EAAG2F,WAAavG,EAAOmH,SACrC5S,EAAEmS,IAAM,EACR8vB,EAAiBjiC,GACjBA,EAAEwS,QAAUnG,EAAGsG,cACR,GAQL8xB,GAAe,SAASzkC,EAAGue,EAAKuZ,GAClC,IAAI9e,EAAKpN,EAAgB5L,EAAGue,GAC5B,GAAa,IAATuZ,EACAtsB,EAAQ0D,aAAalP,EAAGgZ,GACxB7N,EAAUnL,EAAGA,EAAEoM,KAAOpM,EAAEqM,GAAGD,IAAK,sBAC7B,CAEH,IAAK,IAAIzR,EAAE,EAAGA,EAAEm9B,EAAMn9B,WACXqF,EAAE+M,QAAQ/M,EAAEoM,KACvBZ,EAAQo2B,YAAY5hC,EAAGA,EAAEoM,IAAI,EAAG4M,GAEpC,OAAOjP,GAUL26B,GAAS,SAAS1kC,EAAGuM,GACvB,IAAIo4B,EAAW3kC,EAAEoM,IAAMG,EACnBF,EAAKrM,EAAEqM,GACPrM,EAAEkS,SAAWrI,EACR04B,EAAaviC,EAAG2kC,EAAW,EAAGr9B,IAC/BwE,EAAI+3B,aAAa7jC,IAErB2oB,EAAW3oB,EAAEkS,SAAWpI,GACxB9J,EAAEkS,OAASrI,EACXwC,EAAGG,QAAUH,EAAGqG,MAChBrG,EAAGc,KAAOnN,EAAE+M,MAAMV,EAAGG,SAEjBH,EAAG2F,WAAavG,EAAOwG,SACvBnG,EAAI+3B,aAAa7jC,IAEF,OAAXqM,EAAG+F,MACH7F,EAAIF,EAAG+F,IAAIpS,EAAG8J,EAAWuC,EAAGgG,OAC5BkoB,EAAKjuB,gBAAgBtM,EAAGuM,GACxBo4B,EAAW3kC,EAAEoM,IAAMG,GAGvBm2B,EAAa1iC,EAAGqM,EAAIs4B,EAAUp4B,IAGlC63B,GAAOpkC,EAAG,QAgDZ4kC,GAAa,SAAS5kC,EAAGuR,EAAUQ,EAAK9C,GAC1C,IAAI5C,EAAKrM,EAAEqM,GAwBX,OAvBAkuB,EAAKjuB,gBAAgBtM,EAAGuR,GAEpBvR,EAAEmS,IAAM,IACJnS,IAAMA,EAAEgN,IAAIqM,WACZjO,EAAOq0B,cAAcz/B,EAAGgD,EAAa,8CAA8C,IAEnFoI,EAAOq0B,cAAcz/B,EAAGgD,EAAa,6CAA6C,KAG1FhD,EAAEkS,OAASpI,EACXuC,EAAGqG,MAAQrG,EAAGG,QACVH,EAAG2F,WAAavG,EAAOwG,SACvB9G,EAAUnL,EAAS,OAANiP,EAAY,yCAEzB5C,EAAG+F,IAAMnD,EACC,OAANA,IACA5C,EAAGgG,MAAQN,GACf1F,EAAGG,QAAUxM,EAAEoM,IAAMmF,EAAW,EAChClF,EAAGc,KAAOnN,EAAE+M,MAAMV,EAAGG,SACrBmzB,GAAW3/B,EAAG8J,IAGlB6e,EAAWtc,EAAG2F,WAAavG,EAAOkxB,aAC3B,GAOLlqB,GAAa,SAASzS,EAAGmN,EAAM5J,EAAGshC,EAAS/O,GAC7C,IAAIgP,EAAS9kC,EAAEqM,GACX04B,EAAiB/kC,EAAE6S,UACnBmyB,EAAUhlC,EAAEmS,IACZ8yB,EAAcjlC,EAAEwS,QACpBxS,EAAEwS,QAAUsjB,EAEZ,IAAI5jB,EAAS8xB,GAAqBhkC,EAAGmN,EAAM5J,GAa3C,OAXI2O,IAAWrI,IACX0B,EAAMi5B,WAAWxkC,EAAG6kC,GACpBrD,EAAYxhC,EAAGkS,EAAQ2yB,GACvB7kC,EAAEqM,GAAKy4B,EACP9kC,EAAE6S,UAAYkyB,EACd/kC,EAAEmS,IAAM6yB,EACR/C,EAAiBjiC,IAGrBA,EAAEwS,QAAUyyB,EAEL/yB,GAMLZ,GAAmB,SAAStR,EAAGwiC,EAAKkB,GACtC1jC,EAAEmS,MACFG,GAAUtS,EAAGwiC,EAAKkB,GAClB1jC,EAAEmS,OAMN,MAAM+yB,GACFt8B,YAAYkP,EAAGhP,EAAM+O,GACjBngB,KAAKogB,EAAIA,EACTpgB,KAAKwpB,KAAO,IAAIqgB,EAChB7pC,KAAKytC,IAAM,IAAIrc,EAAQsc,QACvB1tC,KAAKmgB,KAAOA,EACZngB,KAAKoR,KAAOA,GAIpB,MAAMu8B,GAAY,SAASrlC,EAAG6X,EAAM1W,GAC5B0W,IAA2C,IAAnCjW,EAAkBiW,EAAM1W,EAAE,MAClCqK,EAAQ8zB,iBAAiBt/B,EACrBgD,EAAa,6CAA8C7B,EAAG0W,GAClE8nB,GAAW3/B,EAAGgK,KAIhBs7B,GAAW,SAAStlC,EAAGmO,GACzB,IAAIQ,EACA7L,EAAIqL,EAAE2J,EAAEytB,QACRziC,IAAMgC,EAAc,IACpBugC,GAAUrlC,EAAGmO,EAAE0J,KAAM7U,EAAa,UAAU,IAC5C2L,EAAK2yB,EAAQkE,YAAYxlC,EAAGmO,EAAE2J,EAAG3J,EAAErF,QAEnCu8B,GAAUrlC,EAAGmO,EAAE0J,KAAM7U,EAAa,QAAQ,IAC1C2L,EAAKma,EAAQ2c,YAAYzlC,EAAGmO,EAAE2J,EAAG3J,EAAE+S,KAAM/S,EAAEg3B,IAAKh3B,EAAErF,KAAMhG,IAG5D6lB,EAAWha,EAAGtB,YAAcsB,EAAGR,EAAEkC,SAASpX,QAC1CsS,EAAMm6B,gBAAgB1lC,EAAG2O,IAW7BnL,EAAOC,QAAQkK,WAAuBA,EACtCnK,EAAOC,QAAQ6O,UAAuBA,GACtC9O,EAAOC,QAAQ6N,iBAAuBA,GACtC9N,EAAOC,QAAQu+B,gBAAuBA,EACtCx+B,EAAOC,QAAQsQ,eAAuBA,EACtCvQ,EAAOC,QAAQi9B,UAAuBA,EACtCl9B,EAAOC,QAAQkiC,YAxlBK,SAAS3lC,GACzBgiC,EAAgBhiC,EAAG,GACnBA,EAAE+M,MAAM/M,EAAEoM,OAAS,IAAIZ,EAAQS,OAAOxG,EAAU,OAulBpDjC,EAAOC,QAAQgP,WAAuBA,GACtCjP,EAAOC,QAAQi/B,aAAuBA,EACtCl/B,EAAOC,QAAQ8+B,aAAuBA,EACtC/+B,EAAOC,QAAQsU,qBAlBc,SAAS/X,EAAG8X,EAAGhP,EAAM+O,GAC9C,IAAI1J,EAAI,IAAI+2B,GAAQptB,EAAGhP,EAAM+O,GAC7B7X,EAAEmS,MACF,IAAID,EAASO,GAAWzS,EAAGslC,GAAUn3B,EAAGnO,EAAEoM,IAAKpM,EAAEwS,SAEjD,OADAxS,EAAEmS,MACKD,GAcX1O,EAAOC,QAAQugC,qBAAuBA,GACtCxgC,EAAOC,QAAQq+B,kBAAuBA,EACtCt+B,EAAOC,QAAQk8B,WAAuBA,GACtCn8B,EAAOC,QAAQ8zB,gBA9HS,SAASv3B,GAC7B,OAAiB,IAAVA,EAAEmS,KA8Hb3O,EAAOC,QAAQg0B,WAvKI,SAASz3B,EAAG+B,EAAM+P,GACjC,IAAI8zB,EAAS5lC,EAAEmS,IAEf,GAAInS,EAAEkS,SAAWrI,GACb,GAAI7J,EAAEqM,KAAOrM,EAAEohC,QACX,OAAOqD,GAAazkC,EAAG,wCAAyC8R,QACjE,GAAI9R,EAAEkS,SAAWpI,EACpB,OAAO26B,GAAazkC,EAAG,+BAAgC8R,GAG3D,GADA9R,EAAE2jC,QAAU5hC,EAAOA,EAAK4hC,QAAU,EAAI,EAClC3jC,EAAE2jC,SAAWtC,EACb,OAAOoD,GAAazkC,EAAG,oBAAqB8R,GAEhD9R,EAAEmS,IAAM,EAERooB,EAAKjuB,gBAAgBtM,EAAGA,EAAEkS,SAAWrI,EAASiI,EAAQ,EAAGA,GAEzD,IAAII,EAAS8xB,GAAqBhkC,EAAG0kC,GAAQ5yB,GAC7C,IAAgB,IAAZI,EACAA,EAASnI,MACR,CACD,KAAOmI,EAASpI,GAAaw6B,GAAQtkC,EAAGkS,IAEpCA,EAAS8xB,GAAqBhkC,EAAGokC,GAAQlyB,GAGzCA,EAASpI,GACT9J,EAAEkS,OAASA,EACXsvB,EAAYxhC,EAAGkS,EAAQlS,EAAEoM,KACzBpM,EAAEqM,GAAGD,IAAMpM,EAAEoM,KAEbuc,EAAWzW,IAAWlS,EAAEkS,QAMhC,OAHAlS,EAAEmS,IAAMyzB,EACR5lC,EAAE2jC,UACFhb,EAAW3oB,EAAE2jC,WAAa5hC,EAAOA,EAAK4hC,QAAU,IACzCzxB,GAmIX1O,EAAOC,QAAQi0B,UAhGG,SAAS13B,EAAGuM,GAC1Bq4B,GAAW5kC,EAAGuM,EAAG,EAAG,OAgGxB/I,EAAOC,QAAQmhC,WAAuBA,gCC3uBtC,MAAM,cACF9/B,EAAa,kBACbC,EAAiB,kBACjBC,EACAO,gBAAgB,aACZG,EAAY,YACZU,EAAW,SACXX,EAAQ,YACRY,EAAW,YACXC,EAAW,YACXH,GACH,aACDtE,GACA,EAAQ,MAENgkC,EAAehkC,EAAa,GAAI,IAAK,GAAI,GAAI,GAAI,IAGjDikC,EAA2C,GAA5BppC,OAAOqI,GAA0BrI,OAAOsI,GAG7D,MAAM+gC,EACFn9B,cACIlR,KAAKsI,EAAI,KACTtI,KAAKsuC,MAAQ,KACbtuC,KAAKkd,KAAO,KACZld,KAAKmd,MAAQhM,IACbnR,KAAKwa,OAASrJ,KAItB,MAAMo9B,EAAY,SAAStiC,EAAGwU,EAAM+tB,GACf,IAAbA,EAAEh0B,QAAgBiG,EAAO,IACzB+tB,EAAEh0B,OAASg0B,EAAEvxB,OAAOuxB,EAAElmC,EAAG2D,EAAGwU,EAAM+tB,EAAEtxB,QAGtCuxB,EAAW,SAASC,EAAGF,GACzBD,EAAUpkC,EAAaukC,GAAI,EAAGF,IAG5BG,EAAU,SAASllC,EAAG+kC,GACxB,IAAII,EAAK,IAAIC,YAAY,GAChB,IAAI/qB,SAAS8qB,GACnBE,SAAS,EAAGrlC,GAAG,GAClB,IAAIjG,EAAI,IAAI4G,WAAWwkC,GACvBL,EAAU/qC,EAAG,EAAGgrC,IAGdO,EAAc,SAAStlC,EAAG+kC,GAC5B,IAAII,EAAK,IAAIC,YAAY,GAChB,IAAI/qB,SAAS8qB,GACnBE,SAAS,EAAGrlC,GAAG,GAClB,IAAIjG,EAAI,IAAI4G,WAAWwkC,GACvBL,EAAU/qC,EAAG,EAAGgrC,IAGdQ,EAAa,SAASvlC,EAAG+kC,GAC3B,IAAII,EAAK,IAAIC,YAAY,GAChB,IAAI/qB,SAAS8qB,GACnBK,WAAW,EAAGxlC,GAAG,GACpB,IAAIjG,EAAI,IAAI4G,WAAWwkC,GACvBL,EAAU/qC,EAAG,EAAGgrC,IAGdU,EAAa,SAASxkC,EAAG8jC,GAC3B,GAAU,OAAN9jC,EACA+jC,EAAS,EAAGD,OACX,CACD,IAAI/tB,EAAO/V,EAAEykC,SAAW,EACpBvuC,EAAM8J,EAAEkO,SACR6H,EAAO,IACPguB,EAAShuB,EAAM+tB,IAEfC,EAAS,IAAMD,GACfO,EAAYtuB,EAAM+tB,IAEtBD,EAAU3tC,EAAK6f,EAAO,EAAG+tB,KAwE3BY,EAAe,SAAS32B,EAAG42B,EAASb,GAClCA,EAAErxB,OAAS1E,EAAElH,SAAW89B,EACxBH,EAAW,KAAMV,GAEjBU,EAAWz2B,EAAElH,OAAQi9B,GACzBG,EAAQl2B,EAAEhH,YAAa+8B,GACvBG,EAAQl2B,EAAE/G,gBAAiB88B,GAC3BC,EAASh2B,EAAE0qB,UAAWqL,GACtBC,EAASh2B,EAAE6wB,UAAU,EAAE,EAAGkF,GAC1BC,EAASh2B,EAAEqgB,aAAc0V,GA7EZ,SAAS/1B,EAAG+1B,GACzB,IAAI9jC,EAAI+N,EAAE7Q,KAAKrE,KAAIokB,GAAKA,EAAE/f,OAC1B+mC,EAAQjkC,EAAEnJ,OAAQitC,GAElB,IAAK,IAAIvrC,EAAI,EAAGA,EAAIyH,EAAEnJ,OAAQ0B,IAC1B0rC,EAAQjkC,EAAEzH,GAAIurC,GAyElBc,CAAS72B,EAAG+1B,GAtEM,SAAS/1B,EAAG+1B,GAC9B,IAAI35B,EAAI4D,EAAElB,EAAEhW,OACZotC,EAAQ95B,EAAG25B,GACX,IAAK,IAAIvrC,EAAI,EAAGA,EAAI4R,EAAG5R,IAAK,CACxB,IAAIiS,EAAIuD,EAAElB,EAAEtU,GAEZ,OADAwrC,EAASv5B,EAAEsD,QAASg2B,GACZt5B,EAAEsD,SACN,KAAKzK,EACD,MACJ,KAAKC,EACDygC,EAASv5B,EAAE/I,MAAQ,EAAI,EAAGqiC,GAC1B,MACJ,KAAK7/B,EACDqgC,EAAW95B,EAAE/I,MAAOqiC,GACpB,MACJ,KAAK5/B,EACDmgC,EAAY75B,EAAE/I,MAAOqiC,GACrB,MACJ,KAAK//B,EACL,KAAKC,EACDwgC,EAAWh6B,EAAEq6B,UAAWf,KAmDpCgB,CAAc/2B,EAAG+1B,GAtCA,SAAS/1B,EAAG+1B,GAC7B,IAAI35B,EAAI4D,EAAEE,SAASpX,OACnBotC,EAAQ95B,EAAG25B,GACX,IAAK,IAAIvrC,EAAI,EAAGA,EAAI4R,EAAG5R,IACnBwrC,EAASh2B,EAAEE,SAAS1V,GAAGwsC,QAAU,EAAI,EAAGjB,GACxCC,EAASh2B,EAAEE,SAAS1V,GAAGf,IAAKssC,GAkChCkB,CAAaj3B,EAAG+1B,GA9CD,SAAS/1B,EAAG+1B,GAC3B,IAAI35B,EAAI4D,EAAEhC,EAAElV,OACZotC,EAAQ95B,EAAG25B,GACX,IAAK,IAAIvrC,EAAI,EAAGA,EAAI4R,EAAG5R,IACnBmsC,EAAa32B,EAAEhC,EAAExT,GAAIwV,EAAElH,OAAQi9B,GA2CnCmB,CAAWl3B,EAAG+1B,GA/BA,SAAS/1B,EAAG+1B,GAC1B,IAAI35B,EAAI25B,EAAErxB,MAAQ,EAAI1E,EAAE2e,SAAS71B,OACjCotC,EAAQ95B,EAAG25B,GACX,IAAK,IAAIvrC,EAAI,EAAGA,EAAI4R,EAAG5R,IACnB0rC,EAAQl2B,EAAE2e,SAASn0B,GAAIurC,GAC3B35B,EAAI25B,EAAErxB,MAAQ,EAAI1E,EAAEm3B,QAAQruC,OAC5BotC,EAAQ95B,EAAG25B,GACX,IAAK,IAAIvrC,EAAI,EAAGA,EAAI4R,EAAG5R,IACnBisC,EAAWz2B,EAAEm3B,QAAQ3sC,GAAG4sC,QAASrB,GACjCG,EAAQl2B,EAAEm3B,QAAQ3sC,GAAG6sC,QAAStB,GAC9BG,EAAQl2B,EAAEm3B,QAAQ3sC,GAAG8sC,MAAOvB,GAEhC35B,EAAI25B,EAAErxB,MAAQ,EAAI1E,EAAEE,SAASpX,OAC7BotC,EAAQ95B,EAAG25B,GACX,IAAK,IAAIvrC,EAAI,EAAGA,EAAI4R,EAAG5R,IACnBisC,EAAWz2B,EAAEE,SAAS1V,GAAGmO,KAAMo9B,GAiBnCwB,CAAUv3B,EAAG+1B,IAiCjB1iC,EAAOC,QAAQ6H,UAbG,SAAStL,EAAGmQ,EAAGw3B,EAAG/yB,EAAMC,GACtC,IAAIqxB,EAAI,IAAIH,EASZ,OARAG,EAAElmC,EAAIA,EACNkmC,EAAEvxB,OAASgzB,EACXzB,EAAEtxB,KAAOA,EACTsxB,EAAErxB,MAAQA,EACVqxB,EAAEh0B,OAAS,EAvBI,SAASg0B,GACxBD,EAAUnhC,EAAeA,EAAc7L,OAAQitC,GAC/CC,EAASL,EAAcI,GACvBC,EArJiB,EAqJKD,GACtBD,EAAUJ,EAAWA,EAAU5sC,OAAQitC,GACvCC,EAAS,EAAGD,GACZC,EAAS,EAAGD,GACZC,EAAS,EAAGD,GACZC,EAAS,EAAGD,GACZC,EAAS,EAAGD,GACZO,EA/JiB,MA+JKP,GACtBQ,EA/JiB,MA+JIR,GAarB0B,CAAW1B,GACXC,EAASh2B,EAAEE,SAASpX,OAAQitC,GAC5BY,EAAa32B,EAAG,KAAM+1B,GACfA,EAAEh0B,qCChMb,MAAQ3M,gBAAgB,SAAEE,IAAe,EAAQ,MAC3C+F,EAAU,EAAQ,MA8DxBhI,EAAOC,QAAQyJ,SAAoB,IACnC1J,EAAOC,QAAQokC,MA7Df,MACIj/B,YAAY5I,GACRtI,KAAKiF,GAAKqD,EAAEgN,IAAI86B,aAChBpwC,KAAKuX,EAAI,GACTvX,KAAKyW,EAAI,GACTzW,KAAK4H,KAAO,GACZ5H,KAAKuL,MAAQ,KACbvL,KAAKo3B,SAAW,GAChBp3B,KAAK2Y,SAAW,GAChB3Y,KAAKmjC,UAAY,EACjBnjC,KAAKspC,WAAY,EACjBtpC,KAAK84B,aAAe,EACpB94B,KAAK4vC,QAAU,GACf5vC,KAAKyR,YAAc,EACnBzR,KAAK0R,gBAAkB,EACvB1R,KAAKuR,OAAS,OA+CtBzF,EAAOC,QAAQskC,eAtCQ,SAAS/nC,EAAGvH,GAC/B,OAAOuH,EAAE+M,MAAMtU,IAsCnB+K,EAAOC,QAAQ+gC,WAnCI,SAASxkC,EAAGvH,GAG3B,IAAK,IAAIkC,EAAElC,EAAOkC,EAAEqF,EAAEoM,IAAKzR,IAAK,CAC5B,IAAI4Y,EAAMvT,EAAE+M,MAAMpS,GAClBqF,EAAE+M,MAAMpS,GAAK,IAAI6Q,EAAQS,OAAOsH,EAAIza,KAAMya,EAAI1P,SA+BtDL,EAAOC,QAAQu3B,kBAfW,SAAS7qB,EAAG63B,EAActc,GAChD,IAAK,IAAI/wB,EAAI,EAAGA,EAAIwV,EAAEm3B,QAAQruC,QAAUkX,EAAEm3B,QAAQ3sC,GAAG6sC,SAAW9b,EAAI/wB,IAChE,GAAI+wB,EAAKvb,EAAEm3B,QAAQ3sC,GAAG8sC,OAEG,KADrBO,EAEI,OAAO73B,EAAEm3B,QAAQ3sC,GAAG4sC,QAAQj3B,SAGxC,OAAO,MAQX9M,EAAOC,QAAQiiC,gBAzBS,SAAS1lC,EAAG2O,GAChC,IAAK,IAAIhU,EAAI,EAAGA,EAAIgU,EAAGtB,UAAW1S,IAC9BgU,EAAG4B,OAAO5V,GAAK,IAAI6Q,EAAQS,OAAOxG,EAAU,OAwBpDjC,EAAOC,QAAQwkC,iBA/CU,SAASjoC,EAAGuM,GACjC,OAAO,IAAIf,EAAQ08B,SAASloC,EAAGuM,iCCvBnC,MAAM,QAAErL,GAAY,EAAQ,OACtB,cAAE0kB,GAAkB,EAAQ,OAC5B,aAAE5iB,GAAiB,EAAQ,MAE3BmlC,EAAa,GAUnB3kC,EAAOC,QAAQ7C,cAPO,SAASZ,GAE3B,IAAK,IAAIoiB,KAAO+lB,EACZviB,EAAc5lB,EAAGgD,EAAaof,GAAM+lB,EAAW/lB,GAAM,GACrDlhB,EAAQlB,EAAG,IAKnB,MAAMW,EAAS,EAAQ,OACjB,aAAE+nB,GAAsB,EAAQ,OAChC,kBAAE0P,GAAsB,EAAQ,OAChC,cAAEiC,GAAsB,EAAQ,OAChC,aAAE+N,GAAsB,EAAQ,OAChC,gBAAEC,GAAsB,EAAQ,OAChC,WAAEC,GAAsB,EAAQ,OAChC,eAAEC,GAAsB,EAAQ,MAChC,cAAEC,GAAsB,EAAQ,OAChC,aAAEC,GAAsB,EAAQ,MAEtCN,EAAe,GAAIzf,EACnByf,EAAWxnC,EAAO+nC,iBAAmBL,EACrCF,EAAWxnC,EAAOgoC,eAAiBvQ,EACnC+P,EAAWxnC,EAAOioC,gBAAkBJ,EACpCL,EAAWxnC,EAAOkoC,eAAiBP,EACnCH,EAAWxnC,EAAOmoC,gBAAkBP,EACpCJ,EAAWxnC,EAAOooC,iBAAmBX,EACrCD,EAAWxnC,EAAOqoC,iBAAmBP,EACrCN,EAAWxnC,EAAOsoC,eAAiB5O,EAKnC,MAAM,gBAAEnvB,GAAoB,EAAQ,MACpCi9B,EAAWxnC,EAAOuoC,oBAAsBh+B,+BCzCxC,MAAM,aAAErJ,GAAiB,EAAQ,MAE3BsnC,EAActnC,EAChB,EACA,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,GAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GACjD,GAAO,GAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EACjD,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,EAAO,GAiCrD2B,EAAOC,QAAQ2lC,SAxBE,SAAStmC,GACtB,OAA8C,IAAnB,EAAnBqmC,EAAYrmC,EAAE,KAwB1BU,EAAOC,QAAQ4lC,UALG,SAASvmC,GACvB,OAA8D,IAAnC,EAAnBqmC,EAAYrmC,EAAE,KAK1BU,EAAOC,QAAQ6lC,UAVG,SAASxmC,GACvB,OAA8C,IAAnB,EAAnBqmC,EAAYrmC,EAAE,KAU1BU,EAAOC,QAAQ8lC,SAnBE,SAASzmC,GACtB,OAA8C,IAAnB,EAAnBqmC,EAAYrmC,EAAE,KAmB1BU,EAAOC,QAAQ+lC,SAhBE,SAAS1mC,GACtB,OAA8C,IAAnB,EAAnBqmC,EAAYrmC,EAAE,KAgB1BU,EAAOC,QAAQgmC,UAzBG,SAAS3mC,GACvB,OAA+C,IAApB,GAAnBqmC,EAAYrmC,EAAE,kCCjD1B,MACIyC,gBAAgB,aAAEG,EAAY,YAAEU,GAChCwD,eAAe,cAAEI,GAAe,aAChChH,GACA,EAAQ,OACN,cACF0mC,EAAa,QACbC,EAAO,WACPhhB,GACA,EAAQ,MACNvd,EAAW,EAAQ,MACnBC,EAAW,EAAQ,OACnB,SACF+9B,EAAQ,UACRC,EAAS,UACTC,EAAS,SACTE,EAAQ,UACRC,GACA,EAAQ,MACNj+B,EAAW,EAAQ,OACnB,WACFE,EAAU,UACVk+B,EAAS,iBACTC,EAAgB,SAChBl+B,GACA,EAAQ,MACNI,EAAW,EAAQ,OACnB,IACF+9B,EAAG,YACHC,EAAW,gBACXC,EAAe,iBACfC,EAAgB,kBAChBC,GACA,EAAQ,MAENC,EAAiB,IAEjB5N,EAAUv5B,EAAa,QAAQ,GAoC/BonC,EAAcD,IACdE,EAAcF,IAGdG,EAAcH,IAEdI,EAAW,CACb,OAxCgBJ,IAyChB,SAxCgBA,IAyChB,MAxCgBA,IAyChB,QAxCgBA,IAyChB,UAxCgBA,IAyChB,OAxCgBA,IAyChB,SAxCgBA,IAyChB,OAxCgBA,IAyChB,YAxCgBA,IAyChB,QAxCgBA,IAyChB,MAxCgBA,IAyChB,MAxCgBA,IAyChB,SAxCgBA,IAyChB,OAxCgBA,IAyChB,OAxCgBA,IAyChB,MAxCgBA,IAyChB,UAxCgBA,IAyChB,UAxCgBA,IAyChB,QAxCgBA,IAyChB,QAxCgBA,IAyChB,SAxCgBA,IAyChB,SAxCgBA,IAyChB,QAvCgBA,IAwChB,UAvCgBA,IAwChB,QAvCgBA,IAwChB,MAvCgBA,IAwChB,MAvCgBA,IAwChB,MAvCgBA,IAwChB,MAvCgBA,IAwChB,OAvCgBA,IAwChB,OAvCgBA,IAwChB,WAvCgBA,IAwChB,OAAeC,EACf,OAAeC,EACf,OAvCgBF,IAwChB,QAvCgBA,IAwChB,UAAeG,GAGbE,EAAc,CAChB,MAAO,QAAS,KAAM,OAAQ,SAC9B,MAAO,QAAS,MAAO,WAAY,OAAQ,KAC3C,KAAM,QAAS,MAAO,MAAO,KAAM,SACnC,SAAU,OAAQ,OAAQ,QAAS,QACnC,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KACrC,KAAM,KAAM,KAAM,QAClB,WAAY,YAAa,SAAU,YACrCvvC,KAAI,CAACokB,EAAG1kB,IAAIqI,EAAaqc,KAE3B,MAAMorB,EACF7hC,cACIlR,KAAKyK,EAAI0G,IACTnR,KAAKiD,EAAIkO,IACTnR,KAAKshB,GAAK,MAIlB,MAAM0xB,EACF9hC,cACIlR,KAAKgC,MAAQmP,IACbnR,KAAKizC,QAAU,IAAIF,GAwB3B,MAAMG,EAAO,SAAS7d,EAAIjqB,GACtB,IAAIa,EAAIopB,EAAG7L,KACX,GAAIvd,EAAE4I,EAAI,EAAI5I,EAAE8X,OAAOxiB,OAAQ,CACvB0K,EAAE8X,OAAOxiB,QAAU0wC,EAAQ,GAC3BkB,EAAS9d,EAAI/pB,EAAa,4BAA4B,GAAO,GACjE,IAAIsd,EAA0B,EAAhB3c,EAAE8X,OAAOxiB,OACvBixC,EAAkBnd,EAAG/sB,EAAG2D,EAAG2c,GAE/B3c,EAAE8X,OAAO9X,EAAE4I,KAAOzJ,EAAI,EAAI,IAAMA,EAAI,EAAIA,GAGtCgoC,EAAiB,SAAS/d,EAAIrzB,GAChC,GAAIA,EAAQywC,EACR,OAAO3+B,EAAQ8zB,iBAAiBvS,EAAG/sB,EAAGgD,EAAa,QAAQ,GAAOtJ,GAC/D,CACH,IAAI0I,EAAIooC,EAAY9wC,EAAQywC,GAC5B,OAAIzwC,EAAQ0wC,EACD5+B,EAAQ8zB,iBAAiBvS,EAAG/sB,EAAGgD,EAAa,QAAQ,GAAOZ,GAE3DA,IAIb2oC,EAAgB,SAAShe,GAC3B,OAAsB,KAAfA,EAAGie,SAA4D,KAAfje,EAAGie,SAGxD3d,EAAO,SAASN,GAClBA,EAAGie,QAAUje,EAAGjV,EAAEytB,SAGhB0F,EAAgB,SAASle,GAC3B6d,EAAK7d,EAAIA,EAAGie,SACZ3d,EAAKN,IAQHme,EAAS,IAAI1/B,EAAQS,OAAOvG,GAAc,GAC1CylC,EAAiB,SAASpe,EAAIz0B,GAChC,IAAI0H,EAAI+sB,EAAG/sB,EACPgZ,EAAKrN,EAAS3L,EAAG1H,GAEjB8yC,EAAQre,EAAGsE,EAAEga,OAAOp0B,IAAI4yB,EAAiB7wB,IAC7C,GAAKoyB,EAIDpyB,EAAKoyB,EAAMha,IAAI6V,cAJP,CACR,IAAI7V,EAAM,IAAI5lB,EAAQS,OAAO7F,EAAa4S,GAC1CjN,EAAOiO,aAAaha,EAAG+sB,EAAGsE,EAAGD,EAAK8Z,GAItC,OAAOlyB,GAOLsyB,EAAgB,SAASve,GAC3B,IAAIxZ,EAAMwZ,EAAGie,QACbriB,EAAWoiB,EAAche,IACzBM,EAAKN,GACDge,EAAche,IAAOA,EAAGie,UAAYz3B,GACpC8Z,EAAKN,KACHA,EAAGwe,YAAc5B,GACnBkB,EAAS9d,EAAI/pB,EAAa,4BAA4B,GAAO,IAuB/DwoC,EAAc,SAASze,EAAIjqB,GAC7B,OAAIiqB,EAAGie,UAAYloC,IACfuqB,EAAKN,IACE,IAUT0e,EAAc,SAAS1e,EAAI7Q,GAC7B,OAAI6Q,EAAGie,UAAY9uB,EAAI,GAAG/iB,WAAW,IAAM4zB,EAAGie,UAAY9uB,EAAI,GAAG/iB,WAAW,MACxE8xC,EAAcle,IACP,IAMT2e,EAAe,SAAS3e,EAAI4d,GAC9B,IAAIgB,EAAO,KACPvV,EAAQrJ,EAAGie,QAMf,IALAriB,EAAWygB,EAASrc,EAAGie,UACvBC,EAAcle,GACA,KAAVqJ,GAA0CqV,EAAY1e,EAAI,QAC1D4e,EAAO,QAKP,GAFIF,EAAY1e,EAAI4e,IAChBF,EAAY1e,EAAI,MAChB0c,EAAU1c,EAAGie,SACbC,EAAcle,OACb,IAAmB,KAAfA,EAAGie,QAEP,MADDC,EAAcle,GAMtB,IAAItX,EAAM,IAAIjK,EAAQS,OAGtB,OAFwD,IAApDT,EAAQ0P,aAAa6uB,EAAYhd,EAAG7L,MAAOzL,IAC3Co1B,EAAS9d,EAAI/pB,EAAa,oBAAoB,GAAOqnC,GACrD50B,EAAIgB,eACJk0B,EAAQhwC,EAAI8a,EAAI5R,MAjOJsmC,MAoOZxhB,EAAWlT,EAAIm2B,aACfjB,EAAQxoC,EAAIsT,EAAI5R,MACTwmC,IAeTQ,EAAW,SAAS9d,EAAIxO,EAAK7kB,GAC/B6kB,EAAMnT,EAAOs0B,aAAa3S,EAAG/sB,EAAGue,EAAKwO,EAAG9jB,OAAQ8jB,EAAGwe,YAC/C7xC,GACA8R,EAAQ8zB,iBAAiBvS,EAAG/sB,EAAGgD,EAAa,cAAeub,EAdlD,SAASwO,EAAIrzB,GAC1B,OAAQA,GACJ,KA3OYywC,IA2OE,KAAKG,EACnB,KAAKD,EAAQ,KA7ODF,IA+OR,OAAO3+B,EAAQ8zB,iBAAiBvS,EAAG/sB,EAAGgD,EAAa,QAAQ,GAAO+mC,EAAYhd,EAAG7L,OACrF,QACI,OAAO4pB,EAAe/d,EAAIrzB,IAOkCmyC,CAAS9e,EAAIrzB,IACjF2R,EAAIs0B,WAAW5S,EAAG/sB,EAAGgK,IAYnB8hC,EAAW,SAAS/e,GACtB,IAAIgN,EAAQ,EACR33B,EAAI2qB,EAAGie,QAGX,IAFAriB,EAAiB,KAANvmB,GAA4C,KAANA,GACjD6oC,EAAcle,GACQ,KAAfA,EAAGie,SACNC,EAAcle,GACdgN,IAEJ,OAAOhN,EAAGie,UAAY5oC,EAAI23B,GAAUA,EAAS,GAG3CgS,EAAmB,SAAShf,EAAI4d,EAASqB,GAC3C,IAAIpX,EAAO7H,EAAGwe,WACdN,EAAcle,GAEVge,EAAche,IACdue,EAAcve,GAElB,IAAIkf,GAAO,EACX,MAAQA,GACJ,OAAQlf,EAAGie,SACP,KAAKlB,EAGDe,EAAS9d,EAAI/pB,EADH,mBADC2nC,EAAU,SAAW,+BACuB/V,MACvBwV,GAChC,MAEJ,KAAK,GACG0B,EAAS/e,KAAQif,IACjBf,EAAcle,GACdkf,GAAO,GAEX,MAEJ,KAAK,GACL,KAAK,GACDrB,EAAK7d,EAAI,IACTue,EAAcve,GACT4d,GAASV,EAAiBld,EAAG7L,MAClC,MAEJ,QACQypB,EAASM,EAAcle,GACtBM,EAAKN,GAKlB4d,IACAA,EAAQ3xB,GAAKmyB,EAAepe,EAAIA,EAAG7L,KAAKzF,OAAOvC,SAAS,EAAI8yB,EAAKjf,EAAG7L,KAAK3U,GAAK,EAAIy/B,OAGpFE,EAAW,SAASnf,EAAIjqB,EAAGyb,GACxBzb,IACGiqB,EAAGie,UAAYlB,GACfmB,EAAcle,GAClB8d,EAAS9d,EAAIxO,EAAK+rB,KAIpB6B,EAAU,SAASpf,GAGrB,OAFAke,EAAcle,GACdmf,EAASnf,EAAI0c,EAAU1c,EAAGie,SAAUhoC,EAAa,8BAA8B,IACxEwI,EAAQ4gC,eAAerf,EAAGie,UAG/BqB,EAAc,SAAStf,GACzB,IAAI5qB,EAAIgqC,EAAQpf,GAGhB,OAFA5qB,GAAKA,GAAK,GAAKgqC,EAAQpf,GACvBid,EAAgBjd,EAAG7L,KAAM,GAClB/e,GAsBLmqC,GAAU,SAASvf,GACrB,IAAI7L,EAAO,IAAIpf,WAAW0J,EAAQ+gC,YAC9BhgC,EAAIf,EAAQghC,aAAatrB,EArBZ,SAAS6L,GAC1B,IAAIpyB,EAAI,EACRswC,EAAcle,GACdmf,EAASnf,EAAmB,MAAfA,EAAGie,QAA2ChoC,EAAa,eAAe,IACvF,IAAIb,EAAIgqC,EAAQpf,GAGhB,IADAke,EAAcle,GACP0c,EAAU1c,EAAGie,UAChBrwC,IACAwH,GAAKA,GAAK,GAAKqJ,EAAQ4gC,eAAerf,EAAGie,SACzCkB,EAASnf,EAAI5qB,GAAK,QAAUa,EAAa,yBAAyB,IAClEioC,EAAcle,GAKlB,OAHAmf,EAASnf,EAAmB,MAAfA,EAAGie,QAA2ChoC,EAAa,eAAe,IACvFqqB,EAAKN,GACLid,EAAgBjd,EAAG7L,KAAMvmB,GAClBwH,EAK4BsqC,CAAa1f,IAChD,KAAOxgB,EAAI,EAAGA,IACVq+B,EAAK7d,EAAI7L,EAAK1V,EAAQ+gC,WAAahgC,KAGrCmgC,GAAa,SAAS3f,GACxB,IACIpyB,EADAwH,EAAI,EAER,IAAKxH,EAAI,EAAGA,EAAI,GAAKyuC,EAASrc,EAAGie,SAAUrwC,IACvCwH,EAAI,GAAKA,EAAI4qB,EAAGie,QAAU,GAC1BC,EAAcle,GAIlB,OAFAmf,EAASnf,EAAI5qB,GAAK,IAAKa,EAAa,4BAA4B,IAChEgnC,EAAgBjd,EAAG7L,KAAMvmB,GAClBwH,GAGLwqC,GAAc,SAAS5f,EAAI6f,EAAKjC,GAGlC,IAFAM,EAAcle,GAEPA,EAAGie,UAAY4B,GAClB,OAAQ7f,EAAGie,SACP,KAAKlB,EACDe,EAAS9d,EAAI/pB,EAAa,qBAAqB,GAAOonC,GACtD,MACJ,KAAK,GACL,KAAK,GACDS,EAAS9d,EAAI/pB,EAAa,qBAAqB,GAAOsnC,GACtD,MACJ,KAAK,GAA+B,CAEhC,IAAIuC,EACA/pC,EACJ,OAHAmoC,EAAcle,GAGPA,EAAGie,SACN,KAAK,GAA8BloC,EAAI,EAA2B+pC,EAAO,YAAa,MACtF,KAAK,GAA8B/pC,EAAI,EAA8B+pC,EAAO,YAAa,MACzF,KAAK,IAA+B/pC,EAAI,GAA+B+pC,EAAO,YAAa,MAC3F,KAAK,IAA+B/pC,EAAI,GAA+B+pC,EAAO,YAAa,MAC3F,KAAK,IAA+B/pC,EAAI,GAA+B+pC,EAAO,YAAa,MAC3F,KAAK,IAA+B/pC,EAAI,EAA8B+pC,EAAO,YAAa,MAC1F,KAAK,IAA+B/pC,EAAI,GAA+B+pC,EAAO,YAAa,MAC3F,KAAK,IAA+B/pC,EAAIupC,EAAYtf,GAAK8f,EAAO,YAAa,MAC7E,KAAK,IAA+BP,GAAQvf,GAAK8f,EAAO,UAAW,MACnE,KAAK,GACL,KAAK,GACDvB,EAAcve,GAAKjqB,EAAI,GAA+B+pC,EAAO,YAAa,MAC9E,KAAK,GACL,KAAK,GACL,KAAK,GACD/pC,EAAIiqB,EAAGie,QAAS6B,EAAO,YAAa,MACxC,KAAK/C,EAAK+C,EAAO,UAAW,MAC5B,KAAK,IAGD,IAFA7C,EAAgBjd,EAAG7L,KAAM,GACzBmM,EAAKN,GACEyc,EAASzc,EAAGie,UACXD,EAAche,GAAKue,EAAcve,GAChCM,EAAKN,GAEd8f,EAAO,UAAW,MAEtB,QACIX,EAASnf,EAAIqc,EAASrc,EAAGie,SAAUhoC,EAAa,2BAA2B,IAC3EF,EAAI4pC,GAAW3f,GACf8f,EAAO,YAIF,cAATA,GACAxf,EAAKN,GAEI,cAAT8f,GAAiC,cAATA,IACxB7C,EAAgBjd,EAAG7L,KAAM,GACzB0pB,EAAK7d,EAAIjqB,IAGb,MAEJ,QACImoC,EAAcle,GAG1Bke,EAAcle,GAEd4d,EAAQ3xB,GAAKmyB,EAAepe,EAAIA,EAAG7L,KAAKzF,OAAOvC,SAAS,EAAG6T,EAAG7L,KAAK3U,EAAE,KAGnEugC,GAAiBC,OAAOC,OAAO,MACrCxC,EAAYyC,SAAQ,CAAC5tB,EAAG1kB,IAAImyC,GAAelD,EAAUvqB,IAAM1kB,IAE3D,MAKMiuB,GAAO,SAASmE,EAAI4d,GAEtB,IADAV,EAAiBld,EAAG7L,QAGhB,OADAyH,EAAgC,iBAAdoE,EAAGie,SACbje,EAAGie,SACP,KAAK,GACL,KAAK,GACDM,EAAcve,GACd,MAEJ,KAAK,GACL,KAAK,GACL,KAAK,EACL,KAAK,GACDM,EAAKN,GACL,MAEJ,KAAK,GAED,GADAM,EAAKN,GACc,KAAfA,EAAGie,QAA0C,OAAO,GAGxD,GADA3d,EAAKN,GACc,KAAfA,EAAGie,QAA0C,CAC7C,IAAIgB,EAAMF,EAAS/e,GAEnB,GADAkd,EAAiBld,EAAG7L,MAChB8qB,GAAO,EAAG,CACVD,EAAiBhf,EAAI,KAAMif,GAC3B/B,EAAiBld,EAAG7L,MACpB,OAKR,MAAQ6pB,EAAche,IAAOA,EAAGie,UAAYlB,GACxCzc,EAAKN,GACT,MAEJ,KAAK,GAA8B,CAC/B,IAAIif,EAAMF,EAAS/e,GACnB,OAAIif,GAAO,GACPD,EAAiBhf,EAAI4d,EAASqB,GACvB1B,KACS,IAAT0B,GACPnB,EAAS9d,EAAI/pB,EAAa,iCAAiC,GAAOsnC,GAC/D,IAEX,KAAK,GAED,OADAjd,EAAKN,GACDye,EAAYze,EAAI,IA3fhBod,IA4fQ,GAEhB,KAAK,GAED,OADA9c,EAAKN,GACDye,EAAYze,EAAI,IA9fhBod,IA+fKqB,EAAYze,EAAI,IA7frBod,IA8fQ,GAEhB,KAAK,GAED,OADA9c,EAAKN,GACDye,EAAYze,EAAI,IArgBhBod,IAsgBKqB,EAAYze,EAAI,IAlgBrBod,IAmgBQ,GAEhB,KAAK,GAED,OADA9c,EAAKN,GACDye,EAAYze,EAAI,IA/gBhBod,IAghBQ,GAEhB,KAAK,IAED,OADA9c,EAAKN,GACDye,EAAYze,EAAI,IA9gBhBod,IA+gBQ,IAEhB,KAAK,GAED,OADA9c,EAAKN,GACDye,EAAYze,EAAI,IAhhBhBod,IAihBQ,GAEhB,KAAK,GACL,KAAK,GAED,OADAwC,GAAY5f,EAAIA,EAAGie,QAASL,GACrBL,EAEX,KAAK,GAED,OADAW,EAAcle,GACVye,EAAYze,EAAI,IACZye,EAAYze,EAAI,IAliBpBod,IADAA,IAuiBMf,EAASrc,EAAGie,SACVU,EAAa3e,EAAI4d,GADU,GAG3C,KAAK,GAA8B,KAAK,GAA8B,KAAK,GAA8B,KAAK,GAA8B,KAAK,GACjJ,KAAK,GAA8B,KAAK,GAA8B,KAAK,GAA8B,KAAK,GAA8B,KAAK,GAC7I,OAAOe,EAAa3e,EAAI4d,GAE5B,KAAKb,EACD,OAAOM,EAEX,QACI,GAAId,EAAUvc,EAAGie,SAAU,CACvB,GACIC,EAAcle,SACTsc,EAAUtc,EAAGie,UACtB,IAAIhyB,EAAKmyB,EAAepe,EAAIgd,EAAYhd,EAAG7L,OAC3CypB,EAAQ3xB,GAAKA,EACb,IAAIk0B,EAAOJ,GAAejD,EAAiB7wB,IAC3C,YAAa,IAATk0B,GAAmBA,GAAQ,GACpBA,EAAO/C,EA9iBlBA,IAijBG,CACH,IAAIrnC,EAAIiqB,EAAGie,QAEX,OADA3d,EAAKN,GACEjqB,KAyB3BU,EAAOC,QAAQ0mC,eAAmBA,EAClC3mC,EAAOC,QAAQ84B,QAAmBA,EAClC/4B,EAAOC,QAAQ0pC,SAzgBf,MACIvkC,cACIlR,KAAKszC,QAAUniC,IACfnR,KAAK6zC,WAAa1iC,IAClBnR,KAAKq3B,SAAWlmB,IAChBnR,KAAKwD,EAAI,IAAIwvC,EACbhzC,KAAK01C,UAAY,IAAI1C,EACrBhzC,KAAK8zB,GAAK,KACV9zB,KAAKsI,EAAI,KACTtI,KAAKogB,EAAI,KACTpgB,KAAKwpB,KAAO,KACZxpB,KAAK25B,EAAI,KACT35B,KAAKytC,IAAM,KACXztC,KAAKuR,OAAS,KACdvR,KAAK21C,KAAO,OA4fpB7pC,EAAOC,QAAQ8mC,SAAmBA,EAClC/mC,EAAOC,QAAQ6pC,WArJI,SAAS3F,GACxB,IAAIuF,EAAOJ,GAAejD,EAAiBlC,IAC3C,YAAgB,IAATuF,GAAmBA,GAAQ,IAoJtC1pC,EAAOC,QAAQ8pC,eAXQ,SAASxgB,GAG5B,OAFApE,EAAWoE,EAAGqgB,UAAU1zC,QAAU0wC,GAClCrd,EAAGqgB,UAAU1zC,MAAQkvB,GAAKmE,EAAIA,EAAGqgB,UAAUzC,SACpC5d,EAAGqgB,UAAU1zC,OASxB8J,EAAOC,QAAQ0nC,eAAmBA,EAClC3nC,EAAOC,QAAQ+pC,UAzBG,SAASzgB,GACvBA,EAAGgC,SAAWhC,EAAGwe,WACbxe,EAAGqgB,UAAU1zC,QAAU0wC,GACvBrd,EAAG7xB,EAAExB,MAAQqzB,EAAGqgB,UAAU1zC,MAC1BqzB,EAAG7xB,EAAEyvC,QAAQhwC,EAAIoyB,EAAGqgB,UAAUzC,QAAQhwC,EACtCoyB,EAAG7xB,EAAEyvC,QAAQxoC,EAAI4qB,EAAGqgB,UAAUzC,QAAQxoC,EACtC4qB,EAAG7xB,EAAEyvC,QAAQ3xB,GAAK+T,EAAGqgB,UAAUzC,QAAQ3xB,GACvC+T,EAAGqgB,UAAU1zC,MAAQ0wC,GAErBrd,EAAG7xB,EAAExB,MAAQkvB,GAAKmE,EAAIA,EAAG7xB,EAAEyvC,UAiBnCnnC,EAAOC,QAAQgqC,cAvbO,SAASztC,EAAG+sB,EAAIjV,EAAG7O,EAAQykC,GAC7C3gB,EAAG7xB,EAAI,CACHxB,MAAO,EACPixC,QAAS,IAAIF,GAEjB1d,EAAG/sB,EAAIA,EACP+sB,EAAGie,QAAU0C,EACb3gB,EAAGqgB,UAAY,CACX1zC,MAAO0wC,EACPO,QAAS,IAAIF,GAEjB1d,EAAGjV,EAAIA,EACPiV,EAAGvB,GAAK,KACRuB,EAAGwe,WAAa,EAChBxe,EAAGgC,SAAW,EACdhC,EAAG9jB,OAASA,EACZ8jB,EAAGsgB,KAAO3hC,EAAW1L,EAAGu8B,GACxB2N,EAAkBlqC,EAAG+sB,EAAG7L,KAAMwoB,IAualClmC,EAAOC,QAAQqpB,iBA3VU,SAASC,EAAIxO,GAClCssB,EAAS9d,EAAIxO,EAAKwO,EAAG7xB,EAAExB,QA2V3B8J,EAAOC,QAAQqnC,eAAmBA,EAClCtnC,EAAOC,QAAQ+mC,YAAmBA,+BCpqBlC,MAAM,cAAEmD,GAAkB,EAAQ,MAE5BhlB,EAAa,SAAS7lB,GACxB,IAAKA,EAAG,MAAMtL,MAAM,qBAExBgM,EAAOC,QAAQklB,WAAaA,EAE5BnlB,EAAOC,QAAQkqC,cAAgBA,GAAiB,SAAS7sC,EAAGue,GAAK,OAAOsJ,EAAWtJ,IAKnF7b,EAAOC,QAAQ0H,UAHG,SAASrK,EAAGue,EAAGd,GAC7B,OAAOovB,EAAc7sC,EAAGue,GAAKd,IAKjC/a,EAAOC,QAAQ49B,eADQ,IAKvB79B,EAAOC,QAAQimC,cADO,GAStBlmC,EAAOC,QAAQmqC,YANK,SAAS5tC,EAAGiC,EAAG0B,GAC/B,IAAIyK,EAAInM,EAAI0B,EAGZ,OAFKyK,EAAEzK,EAAK,IACRyK,GAAKzK,GACFyK,GAMX5K,EAAOC,QAAQkmC,QADC,WAGhBnmC,EAAOC,QAAQoqC,SADE,wCChCjB,MAAM,SACF7lC,EAAQ,YACRpC,EAAW,YACXoO,EAAW,WACXtT,EAAU,cACV8V,EAAa,gBACbK,EAAe,gBACf4B,EAAe,gBACf3N,EAAe,gBACfC,EAAe,YACfoO,EAAW,eACXzX,EAAc,cACd4X,EAAa,aACbtO,EAAY,WACZwC,EAAU,cACVoO,EAAa,eACb9K,EAAc,SACdU,GACA,EAAQ,OACN,cACF8S,EAAa,cACb9F,EAAa,cACbiG,EAAa,kBACbxE,EAAiB,iBACjBF,EAAgB,WAChBpB,EAAU,YACV1T,EAAW,eACXua,GACA,EAAQ,OACN,eACFsoB,EAAc,eACdC,EAAc,oBACdC,GACA,EAAQ,OACN,aAAEhrC,GAAiB,EAAQ,MAEjC,IAAIirC,EAEJ,MAAMC,EAAS,WAEX,OADAD,EAAc,WAAaA,EAAa,MAAS,WAC1CA,GAmGLE,EAAa,SAASnuC,EAAGggB,GAC3B,IAAIzT,EAAIyhC,EAAoBhuB,IAClB,IAANzT,EACAzB,EAAgB9K,EAAGuM,GAEnB7K,EAAe1B,EAAGggB,IAoIpBouB,EAAU,CACZ,IAhMa,SAASpuC,GACtB,GAAIwW,EAAcxW,EAAG,GAAI,CACrB,IAAIuM,EAAIqP,EAAc5b,EAAG,GACrBuM,EAAI,IAAGA,EAAS,GAAHA,GACjBzB,EAAgB9K,EAAGuM,QAGnB7K,EAAe1B,EAAGgE,KAAK4oB,IAAI7M,EAAiB/f,EAAG,KACnD,OAAO,GAyLP,KAlKc,SAASA,GAEvB,OADA0B,EAAe1B,EAAGgE,KAAKqqC,KAAKtuB,EAAiB/f,EAAG,KACzC,GAiKP,KAxKc,SAASA,GAEvB,OADA0B,EAAe1B,EAAGgE,KAAKsqC,KAAKvuB,EAAiB/f,EAAG,KACzC,GAuKP,KA/Jc,SAASA,GACvB,IAAIomC,EAAIrmB,EAAiB/f,EAAG,GACxBmB,EAAIqkB,EAAexlB,EAAG,EAAG,GAE7B,OADA0B,EAAe1B,EAAGgE,KAAKuqC,MAAMnI,EAAGjlC,IACzB,GA4JP,KA7Hc,SAASnB,GAMvB,OALIwW,EAAcxW,EAAG,GACjBwN,EAAWxN,EAAG,GAEdmuC,EAAWnuC,EAAGgE,KAAKwqC,KAAKzuB,EAAiB/f,EAAG,KAEzC,GAwHP,IArLa,SAASA,GAEtB,OADA0B,EAAe1B,EAAGgE,KAAKyqC,IAAI1uB,EAAiB/f,EAAG,KACxC,GAoLP,IAnFa,SAASA,GAEtB,OADA0B,EAAe1B,EAAG+f,EAAiB/f,EAAG,IAAM,IAAMgE,KAAK0qC,KAChD,GAkFP,IAzFa,SAAS1uC,GAEtB,OADA0B,EAAe1B,EAAGgE,KAAK2qC,IAAI5uB,EAAiB/f,EAAG,KACxC,GAwFP,MA1Ie,SAASA,GAMxB,OALIwW,EAAcxW,EAAG,GACjBwN,EAAWxN,EAAG,GAEdmuC,EAAWnuC,EAAGgE,KAAKwiB,MAAMzG,EAAiB/f,EAAG,KAE1C,GAqIP,KAvCc,SAASA,GACvB,GAAIwW,EAAcxW,EAAG,IAAMwW,EAAcxW,EAAG,GAAI,CAC5C,IAAIggB,EAAIpE,EAAc5b,EAAG,GAEf,IAANggB,EACAxB,EAAcxe,EAAG,EAAG,QAEpB8K,EAAgB9K,EAAI4b,EAAc5b,EAAG,GAAKggB,EAAG,OAC9C,CACH,IAAI/d,EAAI8d,EAAiB/f,EAAG,GACxB2D,EAAIoc,EAAiB/f,EAAG,GAC5B0B,EAAe1B,EAAGiC,EAAE0B,GAExB,OAAO,GA2BP,IA9Ga,SAAS3D,GACtB,IACI6T,EADA1S,EAAI4e,EAAiB/f,EAAG,GAE5B,GAAI6W,EAAgB7W,EAAG,GACnB6T,EAAM7P,KAAKhD,IAAIG,OACd,CACD,IAAImnB,EAAOvI,EAAiB/f,EAAG,GAE3B6T,EADS,IAATyU,EACMtkB,KAAK4qC,KAAKztC,GACF,KAATmnB,EACCtkB,KAAK6qC,MAAM1tC,GAEX6C,KAAKhD,IAAIG,GAAG6C,KAAKhD,IAAIsnB,GAGnC,OADA5mB,EAAe1B,EAAG6T,GACX,GAgGP,IAlEa,SAAS7T,GACtB,IAAIuM,EAAI7L,EAAWV,GACf8uC,EAAO,EACXxqB,EAActkB,EAAGuM,GAAK,EAAG,EAAG,kBAC5B,IAAK,IAAI5R,EAAI,EAAGA,GAAK4R,EAAG5R,IAChBqZ,EAAYhU,EAAG8uC,EAAMn0C,EAAGqN,KACxB8mC,EAAOn0C,GAGf,OADA2e,EAActZ,EAAG8uC,GACV,GA0DP,IA/Ea,SAAS9uC,GACtB,IAAIuM,EAAI7L,EAAWV,GACf+uC,EAAO,EACXzqB,EAActkB,EAAGuM,GAAK,EAAG,EAAG,kBAC5B,IAAK,IAAI5R,EAAI,EAAGA,GAAK4R,EAAG5R,IAChBqZ,EAAYhU,EAAGrF,EAAGo0C,EAAM/mC,KACxB+mC,EAAOp0C,GAGf,OADA2e,EAActZ,EAAG+uC,GACV,GAuEP,KA3Bc,SAAS/uC,GACvB,GAAIwW,EAAcxW,EAAG,GACjBwN,EAAWxN,EAAG,GACd0B,EAAe1B,EAAG,OACf,CACH,IAAIuM,EAAIwT,EAAiB/f,EAAG,GACxBgvC,EAAKziC,EAAI,EAAIvI,KAAKwqC,KAAKjiC,GAAKvI,KAAKwiB,MAAMja,GAC3C4hC,EAAWnuC,EAAGgvC,GACdttC,EAAe1B,EAAGuM,IAAMyiC,EAAK,EAAIziC,EAAIyiC,GAEzC,OAAO,GAkBP,IAtFa,SAAShvC,GAEtB,OADA0B,EAAe1B,EAAG+f,EAAiB/f,EAAG,IAAMgE,KAAK0qC,GAAK,MAC/C,GAqFP,OApPgB,SAAS1uC,GACzB,IAAIivC,EAAKn5B,EAEL3T,OAAoB,IAAf8rC,EAAuBjqC,KAAKkrC,SAAUhB,IAAW,WAC1D,OAAQxtC,EAAWV,IACf,KAAK,EAED,OADA0B,EAAe1B,EAAGmC,GACX,EACX,KAAK,EACD8sC,EAAM,EACNn5B,EAAKmK,EAAkBjgB,EAAG,GAC1B,MAEJ,KAAK,EACDivC,EAAMhvB,EAAkBjgB,EAAG,GAC3B8V,EAAKmK,EAAkBjgB,EAAG,GAC1B,MAEJ,QAAS,OAAO2e,EAAW3e,EAAG,6BAUlC,OANAskB,EAActkB,EAAGivC,GAAOn5B,EAAI,EAAG,qBAC/BwO,EAActkB,EAAGivC,GAAO,GAAKn5B,GAAMg4B,EAAiBmB,EAAK,EACrD,sBAEJ9sC,GAAM2T,EAAKm5B,EAAO,EAClBnkC,EAAgB9K,EAAGgE,KAAKwiB,MAAMrkB,GAAK8sC,GAC5B,GAyNP,WAtNoB,SAASjvC,GArCjB,IAASmB,EAwCrB,OAxCqBA,EAsCb4e,EAAiB/f,EAAG,GArC5BiuC,EAAe,EAAF9sC,EACM,IAAf8sC,IACAA,EAAa,GAoCjBC,IACO,GAoNP,IAtMa,SAASluC,GAEtB,OADA0B,EAAe1B,EAAGgE,KAAKmrC,IAAIpvB,EAAiB/f,EAAG,KACxC,GAqMP,KAlIc,SAASA,GAEvB,OADA0B,EAAe1B,EAAGgE,KAAKorC,KAAKrvB,EAAiB/f,EAAG,KACzC,GAiIP,IA9La,SAASA,GAEtB,OADA0B,EAAe1B,EAAGgE,KAAKqrC,IAAItvB,EAAiB/f,EAAG,KACxC,GA6LP,UAzKe,SAASA,GACxB,IAAIuM,EAAIuE,EAAe9Q,EAAG,GAO1B,OANU,IAANuM,EACAzB,EAAgB9K,EAAGuM,IAEnBkY,EAAczkB,EAAG,GACjBmZ,EAAYnZ,IAET,GAkKP,KAhEc,SAASA,GAUvB,OATIwR,EAASxR,EAAG,KAAO4F,EACf4Q,EAAcxW,EAAG,GACjB+K,EAAgB/K,EAAG,WAEnB+K,EAAgB/K,EAAG,UAEvBykB,EAAczkB,EAAG,GACjBmZ,EAAYnZ,IAET,GAuDP,IAjIa,SAASA,GACtB,IAAIiC,EAAIge,EAAkBjgB,EAAG,GACzB2D,EAAIsc,EAAkBjgB,EAAG,GAE7B,OADAyY,EAAgBzY,EAAIiC,GAAK,EAAI0B,EAAE,GAAK1B,EAAE0B,EAAIA,EAAE,GAAK1B,EAAE0B,GAC5C,IA6IXH,EAAOC,QAAQ2kC,aAbM,SAASpoC,GAU1B,OATAiL,EAAYjL,EAAGouC,GACf1sC,EAAe1B,EAAGgE,KAAK0qC,IACvB1jC,EAAahL,GAAI,EAAGgD,EAAa,MAAM,IACvCtB,EAAe1B,EAAGsvC,KAClBtkC,EAAahL,GAAI,EAAGgD,EAAa,QAAQ,IACzC8H,EAAgB9K,EAAG8tC,GACnB9iC,EAAahL,GAAI,EAAGgD,EAAa,cAAc,IAC/C8H,EAAgB9K,EAAG+tC,GACnB/iC,EAAahL,GAAI,EAAGgD,EAAa,cAAc,IACxC,gCCxTX,MAAM,WACFusC,EAAU,aACVC,EAAY,mBACZC,EAAkB,iBAClBC,EAAgB,cAChBC,EAAa,aACbC,GACA,EAAQ,OACN,OACF/lC,EAAM,kBACNlD,EAAiB,SACjBlB,EAAQ,WACRK,EAAU,UACV+L,EAAS,gBACTjC,EAAe,aACfwF,EAAY,WACZe,EAAU,eACVI,EAAc,UACdI,EAAS,aACTO,EAAY,aACZe,EAAY,QACZ/W,EAAO,gBACPuX,EAAe,iBACfhK,EAAgB,kBAChBK,EAAiB,gBACjB4J,EAAe,oBACfI,EAAmB,sBACnBC,EAAqB,gBACrBhO,EAAe,gBACfkO,EAAe,YACfE,EAAW,eACX5X,EAAc,cACd+X,EAAa,YACb7J,EAAW,YACXkK,EAAW,YACXO,EAAW,YACXE,EAAW,WACXC,EAAU,aACVrP,EAAY,iBACZyP,EAAgB,WAChBjN,EAAU,cACV2N,EAAa,aACbtK,EAAY,eACZyL,EAAc,iBACd3S,GACA,EAAQ,OACN,iBACFgU,EAAgB,kBAChBC,EAAiB,YACjBK,EAAW,cACXoG,EAAa,cACb5D,EAAa,iBACbd,EAAgB,WAChBhB,EAAU,iBACVqD,EAAgB,UAChBkD,EAAS,SACTE,GAAQ,cACRrB,GAAa,YACb9Y,GAAW,eACX6U,GAAc,gBACde,GAAe,cACfoB,IACA,EAAQ,MACNthB,GAAS,EAAQ,OACjB,kBACFiB,GAAiB,YACjBgC,GAAW,aACXZ,GAAY,aACZ2B,IACA,EAAQ,MACNkrC,GAAW,EAAQ,MAEnBC,GAI2B,oBAAXjzC,OAEPA,OAC6B,oBAAtBkzC,mBAAqCC,gBAAgBD,kBAE5DC,MAGA,EAAIC,MAAM,QAInBC,GAASltC,GAAa,cAYtBmtC,GAAcZ,EACda,GAAcb,EAGdc,GAAUrtC,GAAa,YAGvBstC,GAAYttC,GAAa,KAGzButC,GAAUvtC,GAAa,KAS7B,IAAIwtC,GA2EAC,GAzEAD,GAAY,SAASxwC,EAAGkjB,EAAMwtB,GAC1BxtB,EAAOve,GAAaue,GACpB,IAAIC,EAAM,IAAIC,eAId,GAHAD,EAAIE,KAAK,MAAOH,GAAM,GACtBC,EAAII,OAEAJ,EAAIjR,OAAS,KAAOiR,EAAIjR,QAAU,IAElC,OADA3Q,EAAevB,EAAGgD,GAAa,GAAGmgB,EAAIjR,WAAWiR,EAAIK,eAC9C,KAGX,IAIIrW,EAJA7N,EAAO6jB,EAAIM,SAEV,sBAAsBktB,KAAKrxC,KAC5BA,GAAQ,kBAAoB4jB,GAEhC,IACI/V,EAAOyjC,SAAS,UAAWtxC,GAC7B,MAAO+f,GAEL,OADA9d,EAAevB,EAAGgD,GAAa,GAAGqc,EAAEvW,SAASuW,EAAEjiB,YACxC,KAEX,IAAIyW,EAAM1G,EAAK0iC,IACf,MAAmB,mBAARh8B,GAAsC,iBAARA,GAA4B,OAARA,EAClDA,OACQ,IAARA,EACAi8B,IAEPvuC,EAAevB,EAAGgD,GAAa,4CAA4C6Q,OACpE,OA0Df48B,GAAW,SAASvtB,GAChBA,EAAOve,GAAaue,GACpB,IAAIC,EAAM,IAAIC,eAKd,OAHAD,EAAIE,KAAK,MAAOH,GAAM,GACtBC,EAAII,OAEGJ,EAAIjR,QAAU,KAAOiR,EAAIjR,QAAU,KAMlD,MAcM2+B,GAAc,SAAS7wC,EAAGkjB,EAAM4tB,GAClC,IAAI7iB,EAAM8iB,GAAW/wC,EAAGkjB,GACxB,GAAY,OAAR+K,EAAc,CAEd,GADAA,EAAMuiB,GAAUxwC,EAAGkjB,GAAM4tB,EAAI,GAAO,IAAI33C,WAAW,KACvC,OAAR80B,EAAc,OAlBV,EAmBR+iB,GAAWhxC,EAAGkjB,EAAM+K,GAExB,GAAI6iB,EAAI,KAAO,IAAI33C,WAAW,GAE1B,OADAsf,EAAgBzY,EAAG,GACZ,EAEN,CACD,IAAImQ,EA1EK,SAASnQ,EAAGoiB,EAAK0uB,GAC9B,IAAI3gC,EAAIiS,EAAIxe,GAAYktC,IAExB,OAAI3gC,GAAkB,mBAANA,EACLA,GAEPuI,EAAgB1Y,EAAGgD,GAAa,wBAAyB8tC,GAClD,MAmECG,CAASjxC,EAAGiuB,EAAK6iB,GACzB,OAAU,OAAN3gC,EA1BI,GA4BRrB,EAAkB9O,EAAGmQ,GACd,KAkBT5Y,GAKSu4C,GAOToB,GAAU,SAASlxC,EAAGmxC,EAAWC,EAASC,GAC5C,IAAIC,EAAO,GAAGF,IAAUzwC,GAAO4wC,gBAC/BhwC,EAAevB,EAAGgD,GAAasuC,IAC/B,IAAIpuB,EAAO3rB,GAAI+5C,QACFE,IAATtuB,IACAA,EAAO3rB,GAAI65C,SACFI,IAATtuB,GApGM,SAASljB,GACnBoV,EAAapV,EAAG2G,EAAmB3D,GAAa,cAChD,IAAIW,EAAIwX,EAAcnb,GAAI,GAE1B,OADAkB,EAAQlB,EAAG,GACJ2D,EAgGmB8tC,CAAMzxC,GAC5BuB,EAAevB,EAAGqxC,IAGlBnuB,EAAOgC,EACHllB,EACAgD,GAAakgB,GACblgB,GAAa4sC,EAAeA,GAAc,GAC1C5sC,GAAa4sC,EAAehsC,GAAY2sC,IAAWX,GAAc,IAErE1qB,EAAUllB,EAAGkjB,EAAMqtB,GAASc,GAC5Bh3B,EAAWra,GAAI,IAEnBgL,EAAahL,GAAI,EAAGmxC,GACpBjwC,EAAQlB,EAAG,IAMT+wC,GAAa,SAAS/wC,EAAGkjB,GAC3BvJ,EAAY3Z,EAAG2G,EAAmBupC,IAClC96B,EAAapV,GAAI,EAAGkjB,GACpB,IAAIwuB,EAAOp1B,EAAetc,GAAI,GAE9B,OADAkB,EAAQlB,EAAG,GACJ0xC,GAOLV,GAAa,SAAShxC,EAAGkjB,EAAMwuB,GACjC/3B,EAAY3Z,EAAG2G,EAAmBupC,IAClCn3B,EAAsB/Y,EAAG0xC,GACzBp4B,EAActZ,GAAI,GAClBgL,EAAahL,GAAI,EAAGkjB,GACpBhJ,EAAYla,GAAI,EAAGolB,GAASplB,GAAI,GAAK,GACrCkB,EAAQlB,EAAG,IAGT2xC,GAAmB,SAAS3xC,EAAGkjB,GACjC,KAAOA,EAAK,KAAO0sB,EAAaz2C,WAAW,IAAI+pB,EAAOA,EAAKhK,SAAS,GACpE,GAAoB,IAAhBgK,EAAKjqB,OAAc,OAAO,KAC9B,IAAI6H,EAAIc,GAAkBshB,EAAM0sB,EAAaz2C,WAAW,IAGxD,OAFI2H,EAAI,IAAGA,EAAIoiB,EAAKjqB,QACpBggB,EAAgBjZ,EAAGkjB,EAAMpiB,GAClBoiB,EAAKhK,SAASpY,IAGnB8wC,GAAa,SAAS5xC,EAAG8I,EAAMoa,EAAM8oB,EAAK6F,GAC5C,IAAItzB,EAAM,IAAIN,EAId,IAHAwC,EAAczgB,EAAGue,GACF,IAAXytB,EAAI,KACJljC,EAAOoc,EAAUllB,EAAG8I,EAAMkjC,EAAK6F,IACW,QAAtC3uB,EAAOyuB,GAAiB3xC,EAAGkjB,KAAiB,CAChD,IAAIT,EAAWyC,EAAUllB,EAAG6Q,EAAa7Q,GAAI,GAAIgD,GAAa2sC,GAAe,GAAO7mC,GAEpF,GADAuR,EAAWra,GAAI,GACXywC,GAAShuB,GACT,OAAOA,EACX/J,EAAgB1Y,EAAGgD,GAAa,oBAAqByf,GACrDpI,EAAWra,GAAI,GACfqkB,EAAc9F,GAGlB,OADAsC,GAAgBtC,GACT,MAmBLuzB,GAAW,SAAS9xC,EAAG8I,EAAMipC,EAAOF,GACtCz8B,EAAapV,EAAG2J,EAAiB,GAAIooC,GACrC,IAAI7uB,EAAOrS,EAAa7Q,GAAI,GAG5B,OAFa,OAATkjB,GACAvE,EAAW3e,EAAGgD,GAAa,iCAAkC+uC,GAC1DH,GAAW5xC,EAAG8I,EAAMoa,EAAMlgB,GAAa,KAAM6uC,IAGlDG,GAAY,SAAShyC,EAAGmf,EAAMsD,GAChC,OAAItD,GACA5d,EAAevB,EAAGyiB,GACX,GAEA9D,EAAW3e,EAAGgD,GAAa,mDAC9B6N,EAAa7Q,EAAG,GAAIyiB,EAAU5R,EAAa7Q,GAAI,KAGrDiyC,GAAe,SAASjyC,GAC1B,IAAI8I,EAAO6W,EAAiB3f,EAAG,GAC3ByiB,EAAWqvB,GAAS9xC,EAAG8I,EAAM9F,GAAa,QAAQ,GAAOA,GAAaotC,IAAa,IACvF,OAAiB,OAAb3tB,EAA0B,EACvBuvB,GAAUhyC,EAAG+jB,GAAc/jB,EAAGyiB,KAAc5Y,EAAQ4Y,IAWzDyvB,GAAW,SAASlyC,EAAGyiB,EAAUoD,GACnC,IAAIssB,EACJtsB,EAAUX,EAAUllB,EAAG6lB,EAAS7iB,GAAa,KAAMstC,IACnD,IAAI8B,EAAOxwC,GAAkBikB,EA1Td,IA0TkC1sB,WAAW,IAC5D,GAAIi5C,GAAQ,EAAG,CACXD,EAAWl5B,EAAgBjZ,EAAG6lB,EAASusB,GACvCD,EAAWz5B,EAAgB1Y,EAAGgD,GAAa,QAASqtC,GAAS8B,GAC7D,IAAIhzB,EAAO0xB,GAAY7wC,EAAGyiB,EAAU0vB,GACpC,GA7LQ,IA6LJhzB,EAAkB,OAAOA,EAC7B0G,EAAUusB,EAAO,EAGrB,OADAD,EAAWz5B,EAAgB1Y,EAAGgD,GAAa,QAASqtC,GAASxqB,GACtDgrB,GAAY7wC,EAAGyiB,EAAU0vB,IAG9BE,GAAa,SAASryC,GACxB,IAAI8I,EAAO6W,EAAiB3f,EAAG,GAC3ByiB,EAAWqvB,GAAS9xC,EAAG8I,EAAM9F,GAAa,UAAU,GAAOA,GAAamtC,IAAa,IACzF,OAAiB,OAAb1tB,EAA0B,EACvBuvB,GAAUhyC,EAAoC,IAAhCkyC,GAASlyC,EAAGyiB,EAAU3Z,GAAc2Z,IAGvD6vB,GAAiB,SAAStyC,GAC5B,IAEImf,EAFArW,EAAO6W,EAAiB3f,EAAG,GAC3BmO,EAAIvM,GAAkBkH,EAAM,IAAI3P,WAAW,IAE/C,GAAIgV,EAAI,EAAG,OAAO,EAClB8K,EAAgBjZ,EAAG8I,EAAMqF,GACzB,IAAIsU,EAAWqvB,GAAS9xC,EAAG6Q,EAAa7Q,GAAI,GAAIgD,GAAa,UAAU,GAAOA,GAAamtC,IAAa,IACxG,OAAiB,OAAb1tB,EAA0B,EACe,KAAxCtD,EAAO+yB,GAASlyC,EAAGyiB,EAAU3Z,IAnNtB,GAoNJqW,EACO6yB,GAAUhyC,EAAG,EAAGyiB,IAEvBlhB,EAAevB,EAAGgD,GAAa,mCAAoC8F,EAAM2Z,GAClE,IAGflhB,EAAevB,EAAGyiB,GACX,IAGL8vB,GAAmB,SAASvyC,GAC9B,IAAI8I,EAAO6W,EAAiB3f,EAAG,GAI/B,OAHAoV,EAAapV,EAAG2G,EAAmBiX,GAC/BxI,EAAapV,GAAI,EAAG8I,KAAUrD,GAC9BiT,EAAgB1Y,EAAGgD,GAAa,sCAAuC8F,GACpE,GAaL0pC,GAAkB,SAASxyC,EAAGkS,EAAQH,GAExC,KACQG,IAAWrI,GACP4F,EAAYzP,EAAG,EAAG+R,EAAIpX,KAAO8K,IAC7BvE,EAAQlB,EAAG,GACX6gB,GAAgB9O,EAAIwM,KACpBI,EAAW3e,EAAGgD,GAAa,4BAA6B+O,EAAIjJ,KAAM+H,EAAa7Q,GAAI,KAEvFuB,EAAevB,EAAG+R,EAAIjJ,MACtB+I,EAAU7R,EAAG,EAAG,EAAG+R,EAAKygC,KAExBtgC,EAASrI,GAET0M,EAAevW,GAAI,GAZlB+R,EAAIpX,IAcAuc,EAAalX,GAAI,IACtBkB,EAAQlB,EAAG,GACXqkB,EAActS,EAAIwM,MAGlBrd,EAAQlB,EAAG,GAEnB,OAAO+R,EAAI9C,EAAEjP,EAAG6J,EAAQkI,EAAIA,MAgB1B0gC,GAAkB,SAASzyC,EAAGkS,EAAQH,GAKxC,OAHAxQ,EAAevB,EADJ+R,GAEXoE,EAAWnW,GAAI,GACf6R,EAAU7R,EAAG,EAAG,EAAG+R,EAAK2gC,IACjBA,GAAiB1yC,EAAG6J,EAAQkI,IAGjC2gC,GAAmB,SAAS1yC,EAAGkS,EAAQH,GACzC,IAAIjJ,EAAOiJ,EAQX,OAPK4E,EAAU3W,GAAI,IACfgL,EAAahL,EAAG,EAAG8I,GACnBsM,EAAapV,EAAG,EAAG8I,IAASrD,IAC5BgT,EAAgBzY,EAAG,GACnBsZ,EAActZ,GAAI,GAClBgL,EAAahL,EAAG,EAAG8I,IAEhB,GAGL6pC,GAAW,CACb,QA5Qe,SAAS3yC,GACxB,IAAIkjB,EAAOvD,EAAiB3f,EAAG,GAC3B4yC,EAAOjzB,EAAiB3f,EAAG,GAC3Bmf,EAAO0xB,GAAY7wC,EAAGkjB,EAAM0vB,GAChC,OAAa,IAATzzB,EACO,GAEPhG,EAAYnZ,GACZmW,EAAWnW,GAAI,GACf+K,EAAgB/K,EA3CR,IA2CYmf,EA5JX,OA4JyC,QAC3C,IAmQX,WAzKkB,SAASnf,GAQ3B,OAAU,OAPF4xC,GACJ5xC,EACA2f,EAAiB3f,EAAG,GACpB2f,EAAiB3f,EAAG,GACpB8f,GAAe9f,EAAG,EAAG,KACrB8f,GAAe9f,EAAG,EAAGuvC,IAEF,GAEnBp2B,EAAYnZ,GACZmW,EAAWnW,GAAI,GACR,KAgKT6yC,GAAW,CACb,QAvCe,SAAS7yC,GACxB,IAAI8I,EAAO6W,EAAiB3f,EAAG,GAI/B,OAHAwN,EAAWxN,EAAG,GACdoV,EAAapV,EAAG2G,EAAmBgX,GACnCvI,EAAapV,EAAG,EAAG8I,GACfqS,EAAcnb,GAAI,GACX,GAEXkB,EAAQlB,EAAG,GA5CI,SAASA,EAAG8I,EAAMiJ,EAAK9C,GACtC,IAAIsP,EAAM,IAAIN,EAMd,OALAwC,EAAczgB,EAAGue,GAEbnJ,EAAapV,EAAG2J,EAAiB,GAAI3G,GAAa,aAAa,MAAW8C,GAC1E6Y,EAAW3e,EAAGgD,GAAa,wCAExBwvC,GAAgBxyC,EAAG6J,EADf,CAACf,KAAMA,EAAMnO,EAAG,EAAG4jB,IAAKA,EAAKxM,IAAKA,EAAK9C,EAAGA,IAwC9C6jC,CAAW9yC,EAAG8I,EADXA,EACsB2pC,OAgFpCjvC,EAAOC,QAAQ4kC,gBAxBS,SAASroC,GAqB7B,OA5BsB,SAASA,GAC/BiY,EAAajY,GACb4P,EAAgB5P,EAAG,EAAG,GACtBya,EAAiBza,GAAI,GACrBoa,EAAYpa,EAAG2G,EAAmBupC,IAIlC6C,CAAkB/yC,GAClBiL,GAAYjL,EAAG2yC,IA1BU,SAAS3yC,GAClC,IAAIgzC,EAAY,CAACT,GAAkBN,GAAcI,GAAYC,GAAgB,MAE7E1iC,EAAgB5P,GAEhB,IAAK,IAAIrF,EAAI,EAAGq4C,EAAUr4C,GAAIA,IAC1B2e,EAActZ,GAAI,GAClByO,EAAiBzO,EAAGgzC,EAAUr4C,GAAI,GAClCuf,EAAYla,GAAI,EAAGrF,EAAE,GAEzBqQ,EAAahL,GAAI,EAAGgD,GAAa,aAAa,IAiB9CiwC,CAAqBjzC,GAErBkxC,GAAQlxC,EAAGgD,GAAa,QAAQ,GAvdf,WAudoC0sC,GACrDwB,GAAQlxC,EAAGgD,GAAa,UAAU,GAvdf,aAudsCysC,GAEzD1kC,EAAgB/K,EAAGuvC,EAAa,KAAOK,EAAe,KAAOD,EAAgB,KACzDH,EADDD,SAEnBvkC,EAAahL,GAAI,EAAGgD,GAAa,UAAU,IAE3Cgf,EAAiBhiB,EAAG2G,EAAmBgX,GACvC3S,EAAahL,GAAI,EAAGgD,GAAa,UAAU,IAE3Cgf,EAAiBhiB,EAAG2G,EAAmBiX,GACvC5S,EAAahL,GAAI,EAAGgD,GAAa,WAAW,IAC5C8V,EAAoB9Y,GACpBsZ,EAActZ,GAAI,GAClBiiB,GAAcjiB,EAAG6yC,GAAU,GAC3B3xC,EAAQlB,EAAG,GACJ,gCChkBX,MAAM,UACFuH,EAAS,WACTC,EAAU,WACVC,EAAU,UACVC,EAAS,WACTC,EAAU,UACVC,EAAS,WACTE,EAAU,UACVG,EAAS,UACTC,EAAS,UACTC,EAAS,UACTC,EAAS,UACTC,EAAS,UACTC,EAAS,UACTC,EACAhD,gBAAgB,YACZW,EAAW,aACXR,EAAY,SACZe,EAAQ,cACRV,EAAa,SACbS,EAAQ,SACRD,EAAQ,mBACRZ,EAAkB,YAClBS,EAAW,SACXX,EAAQ,YACRG,EAAW,YACXS,EAAW,YACXC,EAAW,YACXH,EAAW,YACXN,EAAW,WACXC,EAAU,YACVG,EAAW,cACXD,GACH,gBACDnB,EAAe,kBACfjD,EAAiB,aACjBC,EAAY,YACZ+B,EAAW,aACXZ,GACA,EAAQ,OACN,SACFomC,EAAQ,SACRG,EAAQ,SACRC,EAAQ,UACRC,GACA,EAAQ,MACNr+B,EAAU,EAAQ,MAClBC,EAAU,EAAQ,MAClBI,EAAU,EAAQ,OAClB,WACFC,EAAU,SACVC,GACA,EAAQ,MACNI,EAAU,EAAQ,OAClB,uBACFmnC,EAAsB,MACtBC,EAAK,gBACLC,EAAe,eACfC,GACA,EAAQ,MACNvnC,EAAU,EAAQ,OAClB,QACF69B,GAAO,YACPiE,GAAW,WACXjlB,IACA,EAAQ,MACN9c,GAAU,EAAQ,MAElBynC,GAAaptC,EACbqtC,GAAertC,EAAY,EAEjC,MAAM+F,GAEFrD,YAAY9P,EAAM+K,GACdnM,KAAKoB,KAAOA,EACZpB,KAAKmM,MAAQA,EAIjBqM,QACI,OAAmB,GAAZxY,KAAKoB,KAIhB0W,QACI,OAAmB,GAAZ9X,KAAKoB,KAGhB06C,SAASt4C,GACL,OAAOxD,KAAKoB,OAASoC,EAGzBu4C,UAAUv4C,GACN,OAAOxD,KAAK8X,UAAYtU,EAG5Bw4C,aACI,OAAOh8C,KAAK+7C,UAAU7tC,GAG1BgmC,YACI,OAAOl0C,KAAK87C,SAASntC,GAGzBoQ,cACI,OAAO/e,KAAK87C,SAASltC,GAGzBoU,UACI,OAAOhjB,KAAK87C,SAAS/tC,GAGzBkuC,cACI,OAAOj8C,KAAK87C,SAAS9tC,GAGzB4R,oBACI,OAAO5f,KAAK87C,SAAS7tC,GAGzB8K,aACI,OAAO/Y,KAAK+7C,UAAU5tC,GAG1B+tC,gBACI,OAAOl8C,KAAK87C,SAASrtC,GAGzB0tC,gBACI,OAAOn8C,KAAK87C,SAASptC,GAGzBsJ,YACI,OAAOhY,KAAK87C,SAAS1tC,GAGzBg7B,eACI,OAAOppC,KAAK+7C,UAAU1tC,GAG1Bg7B,cACI,OAAoB,GAAZrpC,KAAKoB,QAAiBiN,EAGlCuQ,eACI,OAAO5e,KAAK87C,SAAS/sC,GAGzBwM,eACI,OAAOvb,KAAK87C,SAASjtC,GAGzB6G,UACI,OAAO1V,KAAK87C,SAAShtC,GAGzBwP,mBACI,OAAOte,KAAK87C,SAASxtC,GAGzBqW,aACI,OAAO3kB,KAAK87C,SAASvtC,GAGzB6tC,cACI,OAAOp8C,KAAK87C,SAASD,IAGzBn4B,YACI,OAAO1jB,KAAKgjB,WAAchjB,KAAKi8C,gBAAgC,IAAfj8C,KAAKmM,MAGzDkwC,YAAY5yC,GACRzJ,KAAKoB,KAAOuN,EACZ3O,KAAKmM,MAAQ1C,EAGjB6yC,YAAY7yC,GACRwnB,GAAWjxB,KAAKoB,MAAQuN,GACxB3O,KAAKmM,MAAQ1C,EAGjB8yC,UAAU9yC,GACNzJ,KAAKoB,KAAOwN,EACZ5O,KAAKmM,MAAQ1C,EAGjB+yC,UAAU/yC,GACNwnB,GAAWjxB,KAAKoB,MAAQwN,GACxB5O,KAAKmM,MAAQ1C,EAGjBgiC,cACIzrC,KAAKoB,KAAO2M,EACZ/N,KAAKmM,MAAQ,KAGjBswC,UAAUhzC,GACNzJ,KAAKoB,KAAO0N,EACZ9O,KAAKmM,MAAQ1C,EAGjBizC,UAAUjzC,GACNzJ,KAAKoB,KAAO6M,EACZjO,KAAKmM,MAAQ1C,EAGjBkzC,UAAUlzC,GACNzJ,KAAKoB,KAAO4M,EACZhO,KAAKmM,MAAQ1C,EAGjBmzC,UAAUnzC,GACNzJ,KAAKoB,KAAOsN,EACZ1O,KAAKmM,MAAQ1C,EAGjBozC,UAAUpzC,GACNzJ,KAAKoB,KAAOkN,EACZtO,KAAKmM,MAAQ1C,EAGjBqzC,WAAWrzC,GACPzJ,KAAKoB,KAAOmN,EACZvO,KAAKmM,MAAQ1C,EAGjBszC,YAAYtzC,GACRzJ,KAAKoB,KAAOyN,EACZ7O,KAAKmM,MAAQ1C,EAGjByN,YAAYzN,GACRzJ,KAAKoB,KAAO2N,EACZ/O,KAAKmM,MAAQ1C,EAGjBuzC,UAAUvzC,GACNzJ,KAAKoB,KAAOgN,EACZpO,KAAKmM,MAAQ1C,EAGjBwzC,eACIj9C,KAAKoB,KAAOy6C,GACZ77C,KAAKmM,MAAQ,KAGjB2K,QAAQgJ,GACJ9f,KAAKoB,KAAO0e,EAAG1e,KACfpB,KAAKmM,MAAQ2T,EAAG3T,MAGpBojC,UAEI,OADAte,GAAWjxB,KAAK+Y,cACT/Y,KAAKmM,MAGhB+M,SACI,OAAOlZ,KAAKuvC,UAAU32B,SAG1BuJ,QACI,OAAOniB,KAAKuvC,UAAUJ,SAG1BhrB,SAAS9Z,EAAM+B,GACX,OAAOF,EAAYlM,KAAKkZ,SAAU7O,EAAM+B,GAAI,IAIpD,MAcM89B,GAAc,SAAS5hC,EAAG40C,EAAQ57B,GACpChZ,EAAE+M,MAAM6nC,GAAQN,UAAUt7B,IAGxBnM,GAAiB,IAAIZ,GAAOxG,EAAU,MAC5CsnC,OAAO8H,OAAOhoC,IACdrJ,EAAOC,QAAQoJ,eAAiBA,GAEhC,MAAMq7B,GAEFt/B,YAAY5I,EAAGuM,GACX7U,KAAKiF,GAAKqD,EAAEgN,IAAI86B,aAEhBpwC,KAAKyW,EAAI,KACTzW,KAAK2V,UAAYd,EACjB7U,KAAK6Y,OAAS,IAAIlN,MAAMkJ,IAKhC,MAAML,GAEFtD,YAAY5I,EAAGmQ,EAAG5D,GAMd,IALA7U,KAAKiF,GAAKqD,EAAEgN,IAAI86B,aAEhBpwC,KAAKyY,EAAIA,EACTzY,KAAK2V,UAAYd,EACjB7U,KAAK4V,QAAU,IAAIjK,MAAMkJ,GAClBA,KACH7U,KAAK4V,QAAQf,GAAK,IAAIN,GAAOxG,EAAU,OAMnD,MAAM2S,GAEFxP,YAAY5I,EAAGmY,GACXzgB,KAAKiF,GAAKqD,EAAEgN,IAAI86B,aAEhBpwC,KAAKge,UAAY,KACjBhe,KAAKwe,UAAY,IAAIjK,GAAOxG,EAAU,MACtC/N,KAAKwK,IAAMiW,EACXzgB,KAAKkd,KAAOm4B,OAAOC,OAAO,OAiBlC,MAAM8H,GAAO9xC,EAAa,OACpB+xC,GAAO/xC,EAAa,aACpBgyC,GAAOhyC,EAAa,MA+CpBopC,GAAiB,SAAStpC,GAC5B,OAAIsmC,EAAStmC,GAAWA,EAAI,IACX,IAAJA,GAAY,IAKvB0pC,GAAe,SAAStrB,EAAM/f,GAChC,IAAIoL,EAAI,EAER,GADAoc,GAAWxnB,GAAK,SACZA,EAAI,IACJ+f,EAAKqrB,GAAkBprC,MACtB,CACD,IAAI8zC,EAAM,GACV,GACI/zB,EAVO,EAUY3U,KAAQ,IAAY,GAAJpL,EACnCA,IAAM,EACN8zC,IAAQ,QACH9zC,EAAI8zC,GACb/zB,EAdW,EAcO3U,IAAO0oC,GAAO,EAAK9zC,EAEzC,OAAOoL,GAmFL2oC,GAAS,CACX,GACA,IACA,GACA,IACA,IAEEC,GAAQ,CACV,GAAO,IACP,IAAO,IACP,GAAO,IACP,IAAO,IACP,GAAO,KAsBLC,GAAWpxC,KAAKwiB,MAAMmjB,GAAU,IAChC0L,GAAW1L,GAAU,GAmDrBh5B,GAAgB,SAAS3Q,EAAGyV,GAC9B,IAAIyL,EACJ,GAAIzL,EAAIgB,cACJyK,EAAOle,EAAaowC,EAAgB39B,EAAI5R,YACvC,CACD,IAAIvL,EAAM+6C,EAAe59B,EAAI5R,QACxBqvC,GAA0B,mBAAmBvC,KAAKr4C,KACnDA,GAAO,MAEX4oB,EAAOle,EAAa1K,GAExBmd,EAAI6+B,UAAU5oC,EAAW1L,EAAGkhB,KAG1Bo0B,GAAU,SAASt1C,EAAG1H,GACxB+S,EAAIs6B,YAAY3lC,GAChB4hC,GAAY5hC,EAAGA,EAAEoM,IAAI,EAAGT,EAAS3L,EAAG1H,KAGlCugB,GAAoB,SAAS7Y,EAAG2Y,EAAKC,GACvC,IAGIyG,EAHA9S,EAAI,EACJ5R,EAAI,EACJsH,EAAI,EAER,KACIod,EAAIzd,EAAkB+W,EAAK,GAA8Bhe,IAC/C,GAAN0kB,GAFC,CAIL,OADAi2B,GAAQt1C,EAAG2Y,EAAIO,SAASve,EAAG0kB,IACpB1G,EAAI0G,EAAE,IACT,KAAK,IAA+B,CAChC,IAAIjd,EAAIwW,EAAK3W,KACb,GAAU,OAANG,EAAYA,EAAIY,EAAa,UAAU,OACtC,CACDZ,EAAIyC,EAAgBzC,GAEpB,IAAIzH,EAAIiH,EAAkBQ,EAAG,IAClB,IAAPzH,IACAyH,EAAIA,EAAE8W,SAAS,EAAGve,IAE1B26C,GAAQt1C,EAAGoC,GACX,MAEJ,KAAK,GAA8B,CAC/B,IAAI8e,EAAOtI,EAAK3W,KACZsnC,EAASroB,GACTo0B,GAAQt1C,EAAG6B,EAAaqf,IAExBoe,GAAiBt/B,EAAGgD,EAAa,UAAU,GAAOke,GACtD,MAEJ,KAAK,IACL,KAAK,GACD7V,EAAIs6B,YAAY3lC,GAChBA,EAAE+M,MAAM/M,EAAEoM,IAAI,GAAG6nC,UAAUr7B,EAAK3W,MAChC0O,GAAc3Q,EAAGA,EAAE+M,MAAM/M,EAAEoM,IAAI,IAC/B,MACJ,KAAK,IACDf,EAAIs6B,YAAY3lC,GAChBA,EAAE+M,MAAM/M,EAAEoM,IAAI,GAAG2nC,YAAYn7B,EAAK3W,MAClC0O,GAAc3Q,EAAGA,EAAE+M,MAAM/M,EAAEoM,IAAI,IAC/B,MACJ,KAAK,IAA+B,CAChC,IAAI/J,EAAIuW,EAAK3W,KACb,GAAII,aAAaoJ,EAAOwQ,WACpB5Z,aAAa0J,EAAOwpC,OACpBlzC,aAAa+V,IACb/V,aAAa6lC,IACb7lC,aAAa6J,GACbopC,GAAQt1C,EAAGgD,EAAa,KAAKX,EAAE1F,GAAGiI,SAAS,WAE3C,cAAcvC,GACV,IAAK,YACDizC,GAAQt1C,EAAGgD,EAAa,cACxB,MACJ,IAAK,SACDsyC,GAAQt1C,EAAGgD,EAAa,UAAUX,EAAE,MACpC,MACJ,IAAK,SACDizC,GAAQt1C,EAAGgD,EAAa,UAAUwyC,KAAKC,UAAUpzC,GAAG,MACpD,MACJ,IAAK,UACDizC,GAAQt1C,EAAGgD,EAAaX,EAAE,gBAAgB,mBAC1C,MACJ,IAAK,SACD,GAAU,OAANA,EAAY,CACZizC,GAAQt1C,EAAGgD,EAAa,SACxB,MAGR,IAAK,WAAY,CACb,IAAIrG,EAAKqD,EAAEgN,IAAI0oC,IAAIz+B,IAAI5U,GAClB1F,IACDA,EAAKqD,EAAEgN,IAAI86B,aACX9nC,EAAEgN,IAAI0oC,IAAIx5B,IAAI7Z,EAAG1F,IAErB24C,GAAQt1C,EAAGgD,EAAa,KAAKrG,EAAGiI,SAAS,MACzC,MAEJ,QAEI0wC,GAAQt1C,EAAGgD,EAAa,aAGpC,MAEJ,KAAK,GAA8B,CAC/B,IAAIke,EAAO,IAAIpf,WAnSZ,GAoSChB,EAAI0rC,GAAatrB,EAAMtI,EAAK3W,MAChCqzC,GAAQt1C,EAAGkhB,EAAKhI,SArSb,EAqSmCpY,IACtC,MAEJ,KAAK,GACDw0C,GAAQt1C,EAAGgD,EAAa,KAAK,IAC7B,MACJ,QACIoI,EAAOq0B,cAAcz/B,EAAGgD,EAAa,8CAA+C2V,EAAI0G,EAAI,IAEpG9S,GAAK,EACL5R,EAAI0kB,EAAI,EAKZ,OAHAhU,EAAI22B,gBAAgBhiC,EAAG,GACvBs1C,GAAQt1C,EAAG2Y,EAAIO,SAASve,IACpB4R,EAAI,GAAGT,EAAI2I,YAAYzU,EAAGuM,EAAE,GACzBvM,EAAE+M,MAAM/M,EAAEoM,IAAI,GAAGwE,UAGtB0uB,GAAmB,SAASt/B,EAAG2Y,KAAQC,GACzC,OAAOC,GAAkB7Y,EAAG2Y,EAAKC,IAuB/B+8B,GAAW,SAAS31C,EAAGoT,EAAIohB,EAAIC,GACjC,OAAQrhB,GACJ,KAAK7L,EAAY,OAAQitB,EAAKC,EAAI,EAClC,KAAKnsB,EAAY,OAAQksB,EAAKC,EAAI,EAClC,KAAKvsB,EAAY,OAAO4D,EAAI8pC,UAAUphB,EAAIC,GAC1C,KAAKxsB,EAAY,OAAO6D,EAAI+pC,SAAS71C,EAAGw0B,EAAIC,GAC5C,KAAK3sB,EAAY,OAAOgE,EAAIgqC,SAAS91C,EAAGw0B,EAAIC,GAC5C,KAAKjtB,EAAY,OAAQgtB,EAAKC,EAC9B,KAAK/sB,EAAY,OAAQ8sB,EAAKC,EAC9B,KAAK9sB,EAAY,OAAQ6sB,EAAKC,EAC9B,KAAKrsB,EAAY,OAAO0D,EAAIiqC,YAAYvhB,EAAIC,GAC5C,KAAKpsB,EAAY,OAAOyD,EAAIiqC,YAAYvhB,GAAKC,GAC7C,KAAKlsB,EAAY,OAAQ,EAAIisB,EAAI,EACjC,KAAK/sB,EAAY,OAAQ,EAAK+sB,EAC9B,QAAS7L,GAAW,KAKtBqtB,GAAW,SAASh2C,EAAGoT,EAAIohB,EAAIC,GACjC,OAAQrhB,GACJ,KAAK7L,EAAY,OAAOitB,EAAKC,EAC7B,KAAKnsB,EAAY,OAAOksB,EAAKC,EAC7B,KAAKvsB,EAAY,OAAOssB,EAAKC,EAC7B,KAAK7sB,EAAY,OAAO4sB,EAAKC,EAC7B,KAAKtsB,EAAY,OAAOnE,KAAKiyC,IAAIzhB,EAAIC,GACrC,KAAK3sB,EAAY,OAAO9D,KAAKwiB,MAAMgO,EAAKC,GACxC,KAAKlsB,EAAY,OAAQisB,EACzB,KAAKvsB,EAAY,OAAO2lC,GAAY5tC,EAAGw0B,EAAIC,GAC3C,QAAS9L,GAAW,KA6C5BnlB,EAAOC,QAAQyI,SAAoBA,GACnC1I,EAAOC,QAAQykC,SAAoBA,GACnC1kC,EAAOC,QAAQ8vC,aAAoBA,GACnC/vC,EAAOC,QAAQ6vC,WAAoBA,GACnC9vC,EAAOC,QAAQyyC,OA3df,MACIttC,cACIlR,KAAK6vC,QAAU,KACf7vC,KAAK8vC,QAAU3+B,IACfnR,KAAK+vC,MAAQ5+B,MAwdrBrF,EAAOC,QAAQwI,OAAoBA,GACnCzI,EAAOC,QAAQ2U,MAAoBA,GACnC5U,EAAOC,QAAQ8oC,WAhaI,EAianB/oC,EAAOC,QAAQ4P,WAjDI,SAASrT,EAAGoT,EAAIysB,EAAIC,EAAIqW,GACvC,IAAItiC,EAAqB,iBAAPsiC,EAAmBn2C,EAAE+M,MAAMopC,GAAMA,EAEnD,OAAQ/iC,GACJ,KAAK5L,EAAY,KAAKE,EAAW,KAAKC,EACtC,KAAKS,EAAW,KAAKC,EACrB,KAAKZ,EAAY,CACb,IAAIzN,EAAIE,EACR,IAAiC,KAA5BF,EAAK8R,EAAIiF,UAAU8uB,MAA+C,KAA5B3lC,EAAK4R,EAAIiF,UAAU+uB,IAE1D,YADAjsB,EAAIogC,UAAU0B,GAAS31C,EAAGoT,EAAIpZ,EAAIE,IAGjC,MAET,KAAK0N,EAAW,KAAKO,EAAW,CAC5B,IAAI0U,EAAIE,EACR,IAAgC,KAA3BF,EAAK/Q,EAAImF,SAAS4uB,MAA8C,KAA3B9iB,EAAKjR,EAAImF,SAAS6uB,IAExD,YADAjsB,EAAIkgC,YAAYiC,GAASh2C,EAAGoT,EAAIyJ,EAAIE,IAGnC,MAET,QAAS,CACL,IAAIF,EAAIE,EACR,GAAI8iB,EAAGppB,eAAiBqpB,EAAGrpB,cAEvB,YADA5C,EAAIogC,UAAU0B,GAAS31C,EAAGoT,EAAIysB,EAAGh8B,MAAOi8B,EAAGj8B,QAG1C,IAAgC,KAA3BgZ,EAAK/Q,EAAImF,SAAS4uB,MAA8C,KAA3B9iB,EAAKjR,EAAImF,SAAS6uB,IAE7D,YADAjsB,EAAIkgC,YAAYiC,GAASh2C,EAAGoT,EAAIyJ,EAAIE,IAGnC,OAIb4L,GAAiB,OAAN3oB,GACX6L,GAAIuqC,cAAcp2C,EAAG6/B,EAAIC,EAAIqW,EAAK/iC,EAAK7L,EAAasE,GAAI+wB,IAAIG,SAahEv5B,EAAOC,QAAQy3B,aApdM,SAASjyB,EAAQotC,GAClC,IACIx8C,EADAiH,EAAImI,EAAOhQ,OAEf,GAAkB,KAAdgQ,EAAO,GACHnI,EAAIu1C,GACJx8C,EAAM,IAAIiI,WAAWhB,EAAE,GACvBjH,EAAIqiB,IAAIjT,EAAOiQ,SAAS,MAExBrf,EAAM,IAAIiI,WAAWu0C,GACrBx8C,EAAIqiB,IAAIjT,EAAOiQ,SAAS,EAAGm9B,EAAQ,UAEpC,GAAkB,KAAdptC,EAAO,GACVnI,GAAKu1C,GACLx8C,EAAM,IAAIiI,WAAWhB,EAAE,GACvBjH,EAAIqiB,IAAIjT,EAAOiQ,SAAS,MAExBrf,EAAM,IAAIiI,WAAWu0C,GACrBx8C,EAAIqiB,IAAI44B,IACRuB,GAAWvB,GAAK77C,OAChBY,EAAIqiB,IAAIjT,EAAOiQ,SAASpY,EAAIu1C,GAAUvB,GAAK77C,aAE5C,CACHY,EAAM,IAAIiI,WAAWu0C,GACrB,IAAIC,EAAM10C,EAAkBqH,EAAQ,IACpCpP,EAAIqiB,IAAI64B,IACR,IAAIwB,EAAQxB,GAAI97C,OAEZ6H,GADJu1C,GAAWtB,GAAI97C,OAAS67C,GAAK77C,OAAS+7C,GAAI/7C,UACd,IAATq9C,GACfz8C,EAAIqiB,IAAIjT,EAAQstC,GAChBA,GAASttC,EAAOhQ,UAEH,IAATq9C,IAAYx1C,EAAIw1C,GAChBx1C,EAAIu1C,IAASv1C,EAAIu1C,GACrBx8C,EAAIqiB,IAAIjT,EAAOiQ,SAAS,EAAGpY,GAAIy1C,GAC/BA,GAASz1C,EACTjH,EAAIqiB,IAAI44B,GAAMyB,GACdA,GAASzB,GAAK77C,QAElBY,EAAIqiB,IAAI84B,GAAKuB,GACbA,GAASvB,GAAI/7C,OACbY,EAAMA,EAAIqf,SAAS,EAAGq9B,GAE1B,OAAO18C,GA2aX2J,EAAOC,QAAQ2oC,eAAoBA,GACnC5oC,EAAOC,QAAQ+yC,YAnGK,SAASr1C,GACzB,IAAIke,EAAI,EACR,GAAIle,EAAI,EAAG,OAAOA,EAClB,KAAOA,GAAK,KACRA,EAAKA,EAAI,IAAQ,EACjBke,GAAK,EAET,KAAOle,GAAK,IACRA,EAAKA,EAAI,GAAM,EACfke,IAEJ,OAASA,EAAE,GAAM,EAAMle,EAAI,GAyF/BqC,EAAOC,QAAQ67B,iBAAoBA,GACnC97B,EAAOC,QAAQoV,kBAAoBA,GACnCrV,EAAOC,QAAQyX,aA7PM,SAAS9Y,EAAGwK,GAC7B,IAAI6pC,EAnCU,SAASr0C,GACvB,IAGIs0C,EAHA/7C,EAAI,EACJsH,EAAI,EACJ+b,GAAQ,EAGZ,KAAOwrB,EAASpnC,EAAEzH,KAAKA,IAGvB,KAFK+7C,EAAgB,KAATt0C,EAAEzH,KACI,KAATyH,EAAEzH,KAD0CA,IAExC,KAATyH,EAAEzH,IAAmD,MAAXyH,EAAEzH,EAAE,IAAmD,KAAXyH,EAAEzH,EAAE,GAO1F,KAAOA,EAAIyH,EAAEnJ,QAAUmwC,EAAShnC,EAAEzH,IAAKA,IAAK,CACxC,IAAIqlB,EAAI5d,EAAEzH,GAAK,GACf,GAAIsH,GAAKmzC,KAAYnzC,EAAImzC,IAAWp1B,EAAIq1B,GAAWqB,GAC/C,OAAO,KACXz0C,EAAS,GAAJA,EAAS+d,EAAG,EACjBhC,GAAQ,OAVZ,IADArjB,GAAK,EACEA,EAAIyH,EAAEnJ,QAAUwwC,EAAUrnC,EAAEzH,IAAKA,IACpCsH,EAAS,GAAJA,EAASmqC,GAAehqC,EAAEzH,IAAK,EACpCqjB,GAAQ,EAWhB,KAAOrjB,EAAIyH,EAAEnJ,QAAUuwC,EAASpnC,EAAEzH,KAAKA,IACvC,OAAIqjB,GAAUrjB,IAAMyH,EAAEnJ,QAAmB,IAATmJ,EAAEzH,GAAkB,KAEzC,CACH4R,EAAkB,GAAdmqC,GAAOz0C,EAAIA,GACftH,EAAGA,GAMDg8C,CAAUv0C,GACpB,OAAY,OAARq0C,GACA7pC,EAAEqnC,UAAUwC,EAAIlqC,GACTkqC,EAAI97C,EAAE,IAEb87C,EA/DQ,SAASr0C,GACrB,IAAItB,EAAIsB,EAAEnJ,OACN29C,EAAQ,EACZ,IAAK,IAAIj8C,EAAE,EAAGA,EAAEmG,EAAGnG,IAAK,CACpB,IAAI0H,EAAID,EAAEzH,GACV,IAA2B,IAAvBu6C,GAAOj7C,QAAQoI,GAAW,CAC1Bu0C,EAAQv0C,EACR,OAGR,IAAIwV,EAAOs9B,GAAMyB,GACjB,MAAa,MAAT/+B,EACO,KAjCI,SAASzV,EAAGyV,GAC3B,IAAIg/B,EAAkB,MAATh/B,EAlEO,SAASzV,GAC7B,IAKIs0C,EALA/7C,EAAI,EACJwH,EAAI,EACJ20C,EAAS,EACTC,EAAW,EACX13B,EAAI,EAEJ23B,GAAS,EACb,KAAOxN,EAASpnC,EAAEzH,KAAKA,IAGvB,KAFK+7C,EAAgB,KAATt0C,EAAEzH,KACI,KAATyH,EAAEzH,KAD0CA,IAEtC,KAATyH,EAAEzH,IAAmD,MAAXyH,EAAEzH,EAAE,IAAmD,KAAXyH,EAAEzH,EAAE,GAC5F,OAAO,KACX,IAAKA,GAAK,GAAKA,IACX,GAAa,KAATyH,EAAEzH,GAAuE,CACzE,GAAIq8C,EAAQ,MACPA,GAAS,MACX,KAAIvN,EAAUrnC,EAAEzH,IAOhB,MANY,IAAXm8C,GAAyB,KAAT10C,EAAEzH,GAClBo8C,MACOD,GA1BL,GA2BF30C,EAAS,GAAJA,EAAUiqC,GAAehqC,EAAEzH,IAC/B0kB,IACD23B,GAAQ33B,IAIpB,GAAI03B,EAAWD,IAAW,EACtB,OAAO,KAEX,GADAz3B,GAAK,EACQ,MAATjd,EAAEzH,IAAiD,KAATyH,EAAEzH,GAAqC,CACjF,IACIs8C,EADAC,EAAO,EAKX,GAHAv8C,MACKs8C,EAAiB,KAAT70C,EAAEzH,KACG,KAATyH,EAAEzH,KAD2CA,KAEjDyuC,EAAShnC,EAAEzH,IACZ,OAAO,KACX,KAAOyuC,EAAShnC,EAAEzH,KACdu8C,EAAc,GAAPA,EAAY90C,EAAEzH,KAAO,GAC5Bs8C,IAAMC,GAAQA,GAClB73B,GAAK63B,EAGT,OADIR,IAAKv0C,GAAKA,GACP,CACHoK,EAAG4mC,EAAMhxC,EAAGkd,GACZ1kB,EAAGA,GAoBqBw8C,CAAgB/0C,GAhBzB,SAASA,GAC5B,IACIA,EAAIwB,EAAYxB,GAClB,MAAOid,GACL,OAAO,KAIX,IAAIld,EAAI,uEAAuE0kB,KAAKzkB,GACpF,IAAKD,EACD,OAAO,KACX,IAAIi1C,EAAMC,WAAWl1C,EAAE,IACvB,OAAQqmB,MAAM4uB,GAAoC,KAA7B,CAAE7qC,EAAQ5R,EAAGwH,EAAE,GAAGlJ,QAIUq+C,CAAel1C,GAChE,GAAe,OAAXy0C,EAAiB,OAAO,KAC5B,KAAOrN,EAASpnC,EAAEy0C,EAAOl8C,KAAKk8C,EAAOl8C,IACrC,OAAQk8C,EAAOl8C,IAAMyH,EAAEnJ,QAA0B,IAAhBmJ,EAAEy0C,EAAOl8C,GAAYk8C,EAAS,KA8BrDU,CAAWn1C,EAAGyV,GAkDd2/B,CAAQp1C,GACF,OAARq0C,GACA7pC,EAAEmnC,YAAY0C,EAAIlqC,GACXkqC,EAAI97C,EAAE,GAEN,IAmPnB6I,EAAOC,QAAQkN,cAAoBA,GACnCnN,EAAOC,QAAQ+oC,aAAoBA,GACnChpC,EAAOC,QAAQuyC,SAAoBA,GACnCxyC,EAAOC,QAAQkM,UA3iBG,SAAS3P,EAAGwX,GAC1BxX,EAAE+M,MAAM/M,EAAEoM,OAAS,IAAIH,GAAOuL,EAAG1e,KAAM0e,EAAG3T,QA2iB9CL,EAAOC,QAAQyL,aAziBM,SAASlP,EAAGgZ,GAC7BhZ,EAAE+M,MAAM/M,EAAEoM,OAAS,IAAIH,GAAO7F,EAAa4S,IAyiB/CxV,EAAOC,QAAQsK,UAtiBG,SAAS/N,EAAG40C,EAAQ6C,GAClCz3C,EAAE+M,MAAM6nC,GAAQpmC,QAAQxO,EAAE+M,MAAM0qC,KAsiBpCj0C,EAAOC,QAAQuK,SAniBE,SAAShO,EAAG40C,EAAQ8C,GACjC13C,EAAE+M,MAAM6nC,GAAQpmC,QAAQkpC,IAmiB5Bl0C,EAAOC,QAAQm+B,YAAoBA,0BC7zBnC,MAuHM+V,EAAe,CACjB,GACA,IACA,GACA,GACA,GACA,GACA,GACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,IAyBEC,EAAa,GAMbC,EAAa,GAEbC,EAAaD,EAGbhrB,EAAa,OAiCbkrB,EAAQ,SAASxrC,EAAG4B,GACtB,SAAW,GAAM,IAAO,GAItB6pC,EAAQ,SAASzrC,EAAG4B,GACtB,OAAS4pC,EAAMxrC,EAAG4B,IAYhB8pC,EAAS,SAASt9C,EAAG0H,EAAGnE,EAAKia,GAE/B,OADAxd,EAAE2E,KAAQ3E,EAAE2E,KAAO04C,EAAM7/B,EAAMja,GAAUmE,GAAKnE,EAAO65C,EAAM5/B,EAAMja,GAC1Dg6C,EAAQv9C,IA+Bbw9C,EAAY,SAASx9C,EAAE0H,GACzB,OAAO41C,EAAOt9C,EAAG0H,EAAGy1C,EAAQF,IAsB1BM,EAAU,SAAS5iB,GACrB,GAAmB,iBAARA,EACP,MAAO,CACHh2B,KAAQg2B,EACR1J,OAAS0J,GAtHF,EAsHmByiB,EAvHnB,EAuHkC,GACzChsB,EAASuJ,GAtHF,EAsHmByiB,EA1HnB,EA0HkC,GACzC33B,EAASkV,GArHF,GAqHmByiB,EA7HnB,EA6HkC,GACzCpqB,EAAS2H,GAAOuiB,EAAUE,EA/HnB,EA+HkC,GACzCvb,GAASlH,GAAOwiB,EAAUC,EAAMH,EAAS,GACzCnb,GAASnH,GA1HF,EA0HmByiB,EA7HnB,GA6HkC,GACzCvrB,KAAU8I,GAAOwiB,EAAUC,EAAMH,EAAS,IAAM/qB,GAEjD,CACH,IAAIlyB,EAAI26B,EAAIh2B,KAQZ,OAPAg2B,EAAI1J,OAAUjxB,GAhIH,EAgIkBo9C,EAjIlB,EAiIiC,GAC5CziB,EAAIvJ,EAAUpxB,GAhIH,EAgIkBo9C,EApIlB,EAoIiC,GAC5CziB,EAAIlV,EAAUzlB,GA/HH,GA+HkBo9C,EAvIlB,EAuIiC,GAC5CziB,EAAI3H,EAAUhzB,GAAKk9C,EAAUE,EAzIlB,EAyIiC,GAC5CziB,EAAIkH,GAAU7hC,GAAKm9C,EAAUC,EAAMH,EAAS,GAC5CtiB,EAAImH,GAAU9hC,GApIH,EAoIkBo9C,EAvIlB,GAuIiC,GAC5CziB,EAAI9I,KAAW7xB,GAAKm9C,EAAUC,EAAMH,EAAS,IAAM/qB,EAC5CyI,IAmBf9xB,EAAOC,QAAQ20C,MA5II,IA6InB50C,EAAOC,QAAQ2qB,WAhBI,SAASxhB,EAAG3K,EAAG0B,EAAGb,GACjC,OAAOo1C,EAAQtrC,GA5IA,EA4Ic3K,GA3Id,EA2I2B0B,GAzI3B,GAyIwCb,GAAK+0C,IAgBhEr0C,EAAOC,QAAQosB,WAbI,SAASjjB,EAAG3K,EAAGwtB,GAC9B,OAAOyoB,EAAQtrC,GAhJA,EAgJc3K,GA/Id,EA+I2BwtB,GAAMqoB,IAapDt0C,EAAOC,QAAQusB,UAVG,SAASpjB,EAAG3K,GAC1B,OAAOi2C,EAAQtrC,GApJA,EAoJc3K,GAnJd,IA6JnBuB,EAAOC,QAAQ40C,WA7GI,SAAS19C,GACxB,OAAOA,EAAEixB,QA6GbpoB,EAAOC,QAAQ60C,SAhGE,SAAS39C,GACtB,OAAOA,EAAEoxB,GAgGbvoB,EAAOC,QAAQ80C,SAzFE,SAAS59C,GACtB,OAAOA,EAAEylB,GAyFb5c,EAAOC,QAAQ+0C,SAlFE,SAAS79C,GACtB,OAAOA,EAAEgzB,GAkFbnqB,EAAOC,QAAQg1C,UA3EG,SAAS99C,GACvB,OAAOA,EAAE6hC,IA2Ebh5B,EAAOC,QAAQi1C,UApEG,SAAS/9C,GACvB,OAAOA,EAAE8hC,IAoEbj5B,EAAOC,QAAQk1C,WA7DI,SAASh+C,GACxB,OAAOA,EAAE6xB,KA6DbhpB,EAAOC,QAAQi4B,OAxIA,SAAUv5B,GACrB,OAAW,IAAJA,GAwIXqB,EAAOC,QAAQitB,IA9IH,SAAUvvB,GAClB,OAXe,IAWRA,GA8IXqC,EAAOC,QAAQozB,kBAfW,GAgB1BrzB,EAAOC,QAAQ4rB,SA/JI,IAgKnB7rB,EAAOC,QAAQssB,UAjKI,SAkKnBvsB,EAAOC,QAAQ6rB,SAhKI,IAiKnB9rB,EAAOC,QAAQmsB,UArKI,OAsKnBpsB,EAAOC,QAAQ8rB,SAjKI,IAkKnB/rB,EAAOC,QAAQopB,WAAsBA,EACrCrpB,EAAOC,QAAQswB,WA9JI,IA+JnBvwB,EAAOC,QAAQ0qB,OAtKI,IAuKnB3qB,EAAOC,QAAQm1C,OApQA,EAqQfp1C,EAAOC,QAAQ0rB,OAxQA,EAyQf3rB,EAAOC,QAAQo1C,OAvQA,EAwQfr1C,EAAOC,QAAQq1C,OAzQA,EA0Qft1C,EAAOC,QAAQs1C,QAvXC,CACZ,OACA,QACA,SACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,SACA,MACA,KACA,KACA,KACA,OACA,UACA,OACA,WACA,SACA,UACA,UACA,WACA,WACA,UACA,UACA,SACA,YAyUJv1C,EAAOC,QAAQslB,SAtUE,CACbkK,QAAa,EACb9C,SAAa,EACbC,UAAa,EACbuC,YAAa,EACb9G,WAAa,EACbsG,YAAa,EACbK,YAAa,EACbD,YAAa,EACb8E,YAAa,EACbF,YAAa,EACbC,YAAa,GACb4hB,YAAa,GACbviB,QAAa,GACbhB,OAAa,GACbuH,OAAa,GACbE,OAAa,GACbE,OAAa,GACbE,OAAa,GACbE,OAAa,GACbE,QAAa,GACbE,QAAa,GACbE,OAAa,GACbE,QAAa,GACbE,OAAa,GACbE,OAAa,GACbnI,OAAa,GACbsI,QAAa,GACbnK,OAAa,GACbqK,OAAa,GACbjJ,UAAa,GACb/H,OAAa,GACbkI,MAAa,GACbkJ,MAAa,GACbE,MAAa,GACb1Q,QAAa,GACbH,WAAa,GACbgO,QAAa,GACbC,YAAa,GACb7F,UAAa,GACb2iB,WAAa,GACbC,WAAa,GACbjd,YAAa,GACbkd,YAAa,GACbriB,WAAa,GACbsiB,WAAa,GACbC,UAAa,GACbppB,YAAa,IAwRjBzsB,EAAOC,QAAQ61C,MArLI,EAsLnB91C,EAAOC,QAAQ81C,OAtLI,EAuLnB/1C,EAAOC,QAAQ+1C,MArLI,GAsLnBh2C,EAAOC,QAAQq0C,OAAsBA,EACrCt0C,EAAOC,QAAQo0C,MAAsBA,EACrCr0C,EAAOC,QAAQg2C,OA3LI,EA4LnBj2C,EAAOC,QAAQuwB,MA1JD,SAAS7yB,GACnB,OArBe,IAqBRA,GA0JXqC,EAAOC,QAAQwoB,SA1HE,SAAStxB,EAAE0H,GACxB,OAAO41C,EAAOt9C,EAAG0H,EAnEF,EAJA,IAiMnBmB,EAAOC,QAAQi2C,UA3FG,SAAS/+C,EAAE0H,GACzB,OAAO41C,EAAOt9C,EAAG0H,EAnGF,EAHA,KAiMnBmB,EAAOC,QAAQyoB,SApHE,SAASvxB,EAAE0H,GACxB,OAAO41C,EAAOt9C,EAAG0H,EAzEF,GARA,IAqMnBmB,EAAOC,QAAQ00C,UAAsBA,EACrC30C,EAAOC,QAAQmuB,SA9GE,SAASj3B,EAAE0H,GACxB,OAAO41C,EAAOt9C,EAAG0H,EAAGw1C,EA1FL,IAwMnBr0C,EAAOC,QAAQupB,WAvFI,SAASryB,EAAGgJ,GAC3B,OAAOw0C,EAAUx9C,EAAGgJ,EAAIkpB,IAuF5BrpB,EAAOC,QAAQk2C,WA9II,SAASh/C,EAAGiS,GAE3B,OADAjS,EAAE2E,KAAQ3E,EAAE2E,KAAO04C,EAvDJ,EACA,GAsDgCprC,GAtDhC,EAsD+CmrC,EAvD/C,EACA,GAuDRG,EAAQv9C,IA6InB6I,EAAOC,QAAQm2C,OAvMI,EAwMnBp2C,EAAOC,QAAQo2C,QAvMI,GAwMnBr2C,EAAOC,QAAQq2C,OA3MI,EA4MnBt2C,EAAOC,QAAQm0C,QAAsBA,EACrCp0C,EAAOC,QAAQs2C,OA9MI,EA+MnBv2C,EAAOC,QAAQu2C,QA1MI,EA2MnBx2C,EAAOC,QAAQy0C,QAAsBA,EACrC10C,EAAOC,QAAQyrB,SAjOE,SAAS9gB,GACtB,OAAQupC,EAAavpC,IAAM,EAAK,GAiOpC5K,EAAOC,QAAQ2rB,SA9NE,SAAShhB,GACtB,OAAQupC,EAAavpC,IAAM,EAAK,GA8NpC5K,EAAOC,QAAQurB,UAvOG,SAAS5gB,GACvB,OAAyB,EAAlBupC,EAAavpC,IAuOxB5K,EAAOC,QAAQwrB,KA/RD,EAgSdzrB,EAAOC,QAAQisB,KA/RD,EAgSdlsB,EAAOC,QAAQksB,MA/RD,EAgSdnsB,EAAOC,QAAQw2C,IA/RD,EAgSdz2C,EAAOC,QAAQ24B,UAhOG,SAAShuB,GACvB,OAAyB,GAAlBupC,EAAavpC,IAgOxB5K,EAAOC,QAAQqqB,UA7NG,SAAS1f,GACvB,OAAyB,IAAlBupC,EAAavpC,iCC1LxB,MAAM,SACF3I,EAAQ,WACRK,EAAU,UACVo0C,EAAS,gBACTtqC,EAAe,aACfwF,EAAY,cACZgB,EAAa,gBACbS,EAAe,QACf3V,EAAO,gBACPuX,EAAe,gBACfC,EAAe,gBACf5N,EAAe,gBACfC,EAAe,YACfoO,EAAW,eACXzX,EAAc,eACdH,EAAc,aACdyJ,EAAY,WACZwC,EAAU,cACV2N,EAAa,eACbrK,GACA,EAAQ,OACN,YACFmN,EAAW,aACXmG,EAAY,eACZxD,EAAc,cAEdpC,EAAa,cACbiC,EAAa,kBACbR,EAAiB,iBACjBN,EAAgB,eAChBiF,EAAc,WACdjG,EAAU,gBACVqG,EAAe,gBACf9F,EAAe,YACfjU,EAAW,gBACXsa,EAAe,gBACf3F,EAAe,eACfE,EAAc,gBACde,GACA,EAAQ,OACN,aACFnd,EAAY,YACZE,EAAW,aACXZ,GACA,EAAQ,MAwBNm3C,EAAsBn3C,EAAa,yCAGnCo3C,EAAW,SAASp6C,EAAGoxB,EAAKvtB,GAC9BiH,EAAgB9K,EAAG6D,GACnBmH,EAAahL,GAAI,EAAGgD,EAAaouB,GAAK,KAGpCipB,EAAe,SAASr6C,EAAGlC,EAAMw8C,GACnCF,EAASp6C,EAAG,MAASs6C,EAAMx8C,EAAKy8C,gBAAmBz8C,EAAK08C,cACxDJ,EAASp6C,EAAG,MAASs6C,EAAMx8C,EAAK28C,gBAAmB38C,EAAK48C,cACxDN,EAASp6C,EAAG,OAASs6C,EAAMx8C,EAAK68C,cAAmB78C,EAAK88C,YACxDR,EAASp6C,EAAG,MAASs6C,EAAMx8C,EAAK+8C,aAAmB/8C,EAAKg9C,WACxDV,EAASp6C,EAAG,SAAUs6C,EAAMx8C,EAAKi9C,cAAkBj9C,EAAKk9C,YAAc,GACtEZ,EAASp6C,EAAG,OAASs6C,EAAMx8C,EAAKm9C,iBAAmBn9C,EAAKo9C,eACxDd,EAASp6C,EAAG,QAAUs6C,EAAMx8C,EAAKq9C,YAAkBr9C,EAAKs9C,UAAY,GACpEhB,EAASp6C,EAAG,OAAQgE,KAAKwiB,OAAO1oB,EAAO,IAAKu9C,KAAKv9C,EAAKo9C,cAAe,EAAG,IAA4C,SAIlHI,EAAkB5+C,OAAO6+C,iBAAmB,EAE5CC,EAAW,SAASx7C,EAAGoxB,EAAKpR,EAAGy7B,GACjC,IAAIvgD,EAAIka,EAAapV,GAAI,EAAGgD,EAAaouB,GAAK,IAC1Cvd,EAAM/C,EAAe9Q,GAAI,GAC7B,IAAY,IAAR6T,EAAe,CACf,GAAI3Y,IAAMuK,EACN,OAAOkZ,EAAW3e,EAAGgD,EAAa,gCAAiCouB,GAClE,GAAIpR,EAAI,EACT,OAAOrB,EAAW3e,EAAGgD,EAAa,oCAAqCouB,GAC3Evd,EAAMmM,MAEL,CACD,MAAOs7B,GAAkBznC,GAAOA,GAAOynC,GACnC,OAAO38B,EAAW3e,EAAGgD,EAAa,8BAA+BouB,GACrEvd,GAAO4nC,EAGX,OADAv6C,EAAQlB,EAAG,GACJ6T,GAIL6nC,EAAS,CACXC,KAAM,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAAa1gD,KAAKmH,GAAMY,EAAaZ,KAC9Gw5C,UAAW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAO3gD,KAAKmH,GAAMY,EAAaZ,KACrFy5C,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAAY5gD,KAAKmH,GAAMY,EAAaZ,KAC3J05C,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAO7gD,KAAKmH,GAAMY,EAAaZ,KAC1H25C,GAAI/4C,EAAa,MACjBg5C,GAAIh5C,EAAa,MACjBi5C,GAAIj5C,EAAa,MACjBk5C,GAAIl5C,EAAa,MACjBm5C,QAAS,CACLr5C,EAAGE,EAAa,wBAChBkjC,EAAGljC,EAAa,YAChBo5C,EAAGp5C,EAAa,YAChBq5C,EAAGr5C,EAAa,SAChBb,EAAGa,EAAa,eAChBs5C,EAAGt5C,EAAa,YAChBu5C,EAAGv5C,EAAa,MAChB7B,EAAG6B,EAAa,QAIlBw5C,EAAc,SAASC,EAAMC,GAG/B,IAAIC,EAAUF,EAAKrB,SACG,WAAlBsB,IACgB,IAAZC,EACAA,EAAU,EAEVA,KAER,IAAIC,GAAQH,EAAO,IAAIpB,KAAKoB,EAAKvB,cAAe,EAAG,IAAM,MACzD,OAAOl3C,KAAKwiB,OAAOo2B,EAAO,EAAID,GAAW,IAGvCE,EAAa,SAASl5C,EAAG4I,EAAGuwC,GAC1BvwC,EAAI,IACJ6X,EAAazgB,EAAGm5C,GACpBl8B,EAAejd,EAAGX,EAAamB,OAAOoI,MAGpCwwC,EAAW,SAAS/8C,EAAG2D,EAAGvB,EAAGq6C,GAC/B,IAAI9hD,EAAI,EACR,KAAOA,EAAIyH,EAAEnJ,QACT,GAAa,KAATmJ,EAAEzH,GACFypB,EAAazgB,EAAGvB,EAAEzH,UACf,CACHA,IACA,IAAIuH,EAAM86C,EAAYh9C,EAAGoC,EAAGzH,GAE5B,OAAOyH,EAAEzH,IAEL,KAAK,GACDypB,EAAazgB,EAAG,IAChB,MAGJ,KAAK,GACDid,EAAejd,EAAG+3C,EAAOC,KAAKc,EAAKrB,WACnC,MAGJ,KAAK,GACDx6B,EAAejd,EAAG+3C,EAAOG,OAAOY,EAAKzB,aACrC,MAGJ,KAAK,GACD6B,EAAWl5C,EAAGK,KAAKwiB,MAAMi2B,EAAKvB,cAAgB,KAAM,IACpD,MAGJ,KAAK,GACD6B,EAAS/8C,EAAG2D,EAAG+3C,EAAOS,QAAQjW,EAAGuW,GACjC,MAGJ,KAAK,GACDM,EAAS/8C,EAAG2D,EAAG+3C,EAAOS,QAAQC,EAAGK,GACjC,MAGJ,KAAK,GACDI,EAAWl5C,EAAG84C,EAAK7B,WAAY,IAC/B,MAGJ,KAAK,GACDiC,EAAWl5C,GAAI84C,EAAK7B,WAAa,IAAM,GAAK,EAAG,IAC/C,MAGJ,KAAK,GACDiC,EAAWl5C,EAAG84C,EAAK/B,aAAc,IACjC,MAGJ,KAAK,GACD95B,EAAejd,EAAG84C,EAAK7B,WAAa,GAAKc,EAAOO,GAAKP,EAAOQ,IAC5D,MAGJ,KAAK,GACDa,EAAS/8C,EAAG2D,EAAG+3C,EAAOS,QAAQE,EAAGI,GACjC,MAGJ,KAAK,GACDI,EAAWl5C,EAAG84C,EAAKjC,aAAc,IACjC,MAGJ,KAAK,GACDuC,EAAS/8C,EAAG2D,EAAG+3C,EAAOS,QAAQG,EAAGG,GACjC,MAGJ,KAAK,GACDI,EAAWl5C,EAAG64C,EAAYC,EAAM,UAAW,IAC3C,MAGJ,KAAK,GACDI,EAAWl5C,EAAG64C,EAAYC,EAAM,UAAW,IAC3C,MAGJ,KAAK,GACDM,EAAS/8C,EAAG2D,EAAG+3C,EAAOS,QAAQI,EAAGE,GACjC,MAGJ,KAAK,GACD77B,EAAejd,EAAGX,EAAamB,OAAOs4C,EAAKvB,iBAC3C,MAGJ,KAAK,GAAY,CACb,IAAI+B,EAAWR,EAAK73C,WAAWs4C,MAAM,iBACjCD,GACAr8B,EAAejd,EAAGX,EAAai6C,EAAS,KAC5C,MAIJ,KAAK,GACDr8B,EAAejd,EAAG+3C,EAAOE,UAAUa,EAAKrB,WACxC,MAGJ,KAAK,GACL,KAAK,IACDx6B,EAAejd,EAAG+3C,EAAOI,YAAYW,EAAKzB,aAC1C,MAGJ,KAAK,GACD+B,EAAS/8C,EAAG2D,EAAG+3C,EAAOS,QAAQr5C,EAAG25C,GACjC,MAGJ,KAAK,IACDI,EAAWl5C,EAAG84C,EAAK3B,UAAW,IAC9B,MAGJ,KAAK,IACD+B,EAAWl5C,EAAG84C,EAAK3B,UAAW,IAC9B,MAGJ,KAAK,IAAa,CACd,IAAI8B,EAAO54C,KAAKwiB,OAAOi2B,EAAO,IAAIpB,KAAKoB,EAAKvB,cAAe,EAAG,IAAM,OAChE0B,EAAO,MACHA,EAAO,IACPx4B,EAAazgB,EAAG,IACpBygB,EAAazgB,EAAG,KAEpBid,EAAejd,EAAGX,EAAamB,OAAOy4C,KACtC,MAIJ,KAAK,IACDC,EAAWl5C,EAAG84C,EAAK7B,WAAY,IAC/B,MAGJ,KAAK,IACDiC,EAAWl5C,GAAI84C,EAAK7B,WAAa,IAAM,GAAK,EAAG,IAC/C,MAGJ,KAAK,IACDiC,EAAWl5C,EAAG84C,EAAKzB,WAAa,EAAG,IACnC,MAGJ,KAAK,IACD52B,EAAazgB,EAAG,IAChB,MAGJ,KAAK,IACDid,EAAejd,EAAG84C,EAAK7B,WAAa,GAAKc,EAAOK,GAAKL,EAAOM,IAC5D,MAGJ,KAAK,IACDe,EAAS/8C,EAAG2D,EAAG+3C,EAAOS,QAAQh6C,EAAGs6C,GACjC,MAGJ,KAAK,IACD77B,EAAejd,EAAGX,EAAamB,OAAOH,KAAKwiB,MAAMi2B,EAAO,QACxD,MAGJ,KAAK,IACDr4B,EAAazgB,EAAG,GAChB,MAGJ,KAAK,IAAa,CACd,IAAIw5C,EAAMV,EAAKrB,SACfx6B,EAAejd,EAAGX,EAAamB,OAAe,IAARg5C,EAAY,EAAIA,KACtD,MAIJ,KAAK,IACDv8B,EAAejd,EAAGX,EAAamB,OAAOs4C,EAAKrB,YAC3C,MAGJ,KAAK,IACD2B,EAAS/8C,EAAG2D,EAAG+3C,EAAOS,QAAQh7C,EAAGs7C,GACjC,MAGJ,KAAK,IACDI,EAAWl5C,EAAG84C,EAAKvB,cAAgB,IAAK,IACxC,MAGJ,KAAK,IAAa,CACd,IAAI1Y,EAAMia,EAAKW,oBACX5a,EAAM,EACNpe,EAAazgB,EAAG,KAEhB6+B,GAAOA,EACPpe,EAAazgB,EAAG,KAEpBk5C,EAAWl5C,EAAGK,KAAKwiB,MAAMgc,EAAI,IAAK,IAClCqa,EAAWl5C,EAAG6+B,EAAM,GAAI,IACxB,OAGR7nC,GAAKuH,IAMX86C,EAAc,SAASh9C,EAAGq9C,EAAM1iD,GAClC,IAAI2iD,EAASnD,EACTvtC,EAAI,EACJ2wC,EAAQ,EACZ,KAAO3wC,EAAI0wC,EAAOrkD,QAAUskD,GAAUF,EAAKpkD,OAAS0B,EAAIiS,GAAK2wC,EACzD,GAAID,EAAO1wC,KAAO,IAAIzT,WAAW,GAC7BokD,SACC,GAAI75C,EAAa25C,EAAKnkC,SAASve,EAAGA,EAAE4iD,GAAQD,EAAOpkC,SAAStM,EAAGA,EAAE2wC,IAClE,OAAOA,EAGf/+B,EAAcxe,EAAG,EACb0Y,EAAgB1Y,EAAGgD,EAAa,uCAAwCq6C,KAoD1EG,EAAc,SAASx9C,EAAGye,GAG5B,OAFQwB,EAAkBjgB,EAAGye,IAY3Bg/B,EAAS,CACX,KA3DY,SAASz9C,GACrB,IAAIoC,EAAIwd,EAAgB5f,EAAG,EAAG,MAC1B09C,EAAM7mC,EAAgB7W,EAAG,GAAK,IAAIq7C,KAAS,IAAIA,KAAyB,IAApBmC,EAAYx9C,EAAG,IACnEs6C,GAAM,EACN3/C,EAAI,EAKR,GAJIyH,EAAEzH,KAAO,IAAIxB,WAAW,KACxBmhD,GAAM,EACN3/C,KAEAyH,EAAEzH,KAAO,IAAIxB,WAAW,IAAMiJ,EAAEzH,EAAE,KAAO,IAAIxB,WAAW,GACxDyW,EAAgB5P,EAAG,EAAG,GACtBq6C,EAAar6C,EAAG09C,EAAKpD,OAClB,CACM,IAAIx4C,WAAW,GACrB,GAAK,IAAI3I,WAAW,GACvB,IAAIwK,EAAI,IAAIsa,EACZwC,EAAczgB,EAAG2D,GACjBo5C,EAAS/8C,EAAG2D,EAAGvB,EAAGs7C,GAClB78B,EAAgBld,GAEpB,OAAO,GAwCP,SATgB,SAAS3D,GACzB,IAAIigC,EAAKud,EAAYx9C,EAAG,GACpBkgC,EAAKsd,EAAYx9C,EAAG,GAExB,OADA0B,EAAe1B,EAAGigC,EAAKC,GAChB,GAMP,KAtCY,SAASlgC,GACrB,IAAI9E,EAkBJ,OAjBI2b,EAAgB7W,EAAG,GACnB9E,EAAI,IAAImgD,MAERz2B,EAAe5kB,EAAG,EAAG8F,GACrB0H,EAAWxN,EAAG,GACd9E,EAAI,IAAImgD,KACJG,EAASx7C,EAAG,QAAS,EAAG,GACxBw7C,EAASx7C,EAAG,SAAU,EAAG,GACzBw7C,EAASx7C,EAAG,OAAQ,EAAG,GACvBw7C,EAASx7C,EAAG,OAAQ,GAAI,GACxBw7C,EAASx7C,EAAG,MAAO,EAAG,GACtBw7C,EAASx7C,EAAG,MAAO,EAAG,IAE1Bq6C,EAAar6C,EAAG9E,IAGpB4P,EAAgB9K,EAAGgE,KAAKwiB,MAAMtrB,EAAI,MAC3B,GAuBPuiD,MAAe,SAASz9C,GAEpB,OADA0B,EAAe1B,EAAGrC,YAAYC,MAAM,KAC7B,IA4Gf4F,EAAOC,QAAQ6kC,WALI,SAAStoC,GAExB,OADAiL,EAAYjL,EAAGy9C,GACR,gCCrjBX,MAAM,YACFn2C,EAAW,aACXtE,GACA,EAAQ,OAERimB,QAAQ,QACJC,EAAO,QACPmB,EAAO,SACPZ,EAAQ,QACRC,EAAO,SACPC,EAAQ,WACRG,EAAU,QACVP,EAAO,OACPQ,EAAM,OACNK,EAAM,OACND,EAAM,SACNX,EAAQ,OACRS,EAAM,OACND,EAAM,QACNX,EAAO,QACPD,EAAO,OACPc,EAAM,aACNK,EAAY,OACZD,EAAM,QACNhB,EAAO,QACPM,EAAO,QACPC,EAAO,QACPV,GAEJqB,OAAO,SACHE,EAAQ,QACRE,EAAO,UACPH,EAAS,QACTE,EAAO,YACPE,GACH,QACD7B,EAAO,eACPoD,EAAc,gBACdiE,EAAe,aACflE,EAAY,aACZqD,EAAY,cACZhC,EAAa,WACb0C,EAAU,YACVjD,EAAW,mBACX+E,EAAkB,YAClB4B,EAAW,gBACXF,EAAe,kBACfsB,EAAiB,iBACjBvB,EAAgB,aAChBE,EAAY,aACZoB,EAAY,cACZnH,EAAa,eACb0G,EAAc,cACdD,EAAa,aACbY,EAAY,WACZE,EAAU,UACV5D,EAAS,UACTjE,EAAS,YACT8H,GAAW,SACX7J,GAAQ,gBACR8J,GAAe,eACf1G,GAAc,iBACdD,GAAgB,YAChB6G,GAAW,YACXM,GAAW,iBACXpF,GAAgB,SAChB0F,GAAQ,UACRI,GAAS,aACTG,GAAY,gBACZK,GAAe,eACfjF,GAAc,gBACdJ,GAAe,cACfsF,GAAa,aACbM,IACA,EAAQ,MACNjsB,GAAW,EAAQ,MACnBE,GAAW,EAAQ,MACnBqd,GAAW,EAAQ,OACnB,eACFyY,GAAc,QACdsI,GAAO,WACPhhB,IACC,EAAQ,MACPnd,GAAW,EAAQ,OAErBud,UAAU,QACNmT,GAAO,WACPkd,GAAU,WACVH,GAAU,WACVC,GAAU,YACV/mB,GAAW,QACXc,GAAO,YACP+lB,GAAW,YACX5hB,GAAW,YACX+E,GAAW,YACXF,GAAW,YACXkd,GAAW,UACXE,IACH,kBACDxiB,GAAiB,SACjB3K,GAAQ,SACR0F,GAAQ,WACR+nB,IACA,EAAQ,OACN,cACFgE,GAAa,SACbhyC,GAAQ,gBACRC,IACA,EAAQ,MACNG,GAAW,EAAQ,MACnB87B,GAAWt8B,GAAMs8B,MACjBwU,GAAWzzB,GAAK2hB,SAIhBqT,GAAa,SAAS3uC,GACxB,OAAOA,IAAMic,GAAQyG,OAAS1iB,IAAMic,GAAQ2G,SAG1CgsB,GAAQ,SAAS57C,EAAG0B,GAEtB,OAAOg6C,GAAc17C,EAAG0B,IAG5B,MAAMm6C,GACFl1C,cACIlR,KAAK+zB,SAAW,KAChB/zB,KAAKqmD,WAAal1C,IAClBnR,KAAKsmD,UAAYn1C,IACjBnR,KAAKi5B,QAAU9nB,IACfnR,KAAKumD,MAAQp1C,IACbnR,KAAKwmD,OAASr1C,KAItB,MAAMqiB,GAAU,CACZizB,MAAO,EAEPtrB,KAAM,EACNE,MAAO,EACPD,OAAQ,EACRE,GAAI,EACJ3H,MAAO,EACPF,MAAO,EACP0F,UAAW,EAEXoB,OAAQ,EACRC,OAAQ,EACRE,SAAU,GAIVc,KAAM,GAENnB,WAAY,GAEZJ,MAAO,GACPE,QAAS,IAWb,MAAMkE,GACFntB,cACIlR,KAAKuX,EAAIpG,IACTnR,KAAK6L,EAAI,CACL6nB,KAAMviB,IACNyiB,KAAMziB,IACNwjB,KAAMxjB,IACNwpB,IAAK,CACDz4B,IAAKiP,IACL3N,EAAG2N,IACHypB,GAAIzpB,MAGZnR,KAAKwD,EAAI2N,IACTnR,KAAKyY,EAAItH,IAGb/E,GAAGub,GACC3nB,KAAKuX,EAAIoQ,EAAEpQ,EACXvX,KAAK6L,EAAI8b,EAAE9b,EACX7L,KAAKwD,EAAImkB,EAAEnkB,EACXxD,KAAKyY,EAAIkP,EAAElP,GAInB,MAAMiuC,GACFx1C,cACIlR,KAAKyY,EAAI,KACTzY,KAAK2mD,KAAO,KACZ3mD,KAAKq1B,GAAK,KACVr1B,KAAK4mD,GAAK,KACV5mD,KAAKg0B,GAAK7iB,IACVnR,KAAKi0B,WAAa9iB,IAClBnR,KAAK61B,IAAM1kB,IACXnR,KAAK45B,GAAKzoB,IACVnR,KAAK6mD,GAAK11C,IACVnR,KAAK8mD,WAAa31C,IAClBnR,KAAK+mD,SAAW51C,IAChBnR,KAAKi5B,QAAU9nB,IACfnR,KAAK2R,KAAOR,IACZnR,KAAK64B,QAAU1nB,KAKvB,MAAM61C,GACF91C,cACIlR,KAAKkC,IAAMiP,KAMnB,MAAM81C,GACF/1C,cACIlR,KAAKoR,KAAO,KACZpR,KAAKg0B,GAAK7iB,IACVnR,KAAKk9B,KAAO/rB,IACZnR,KAAKi5B,QAAU9nB,KAMvB,MAAM+1C,GACFh2C,cACIlR,KAAKgqB,IAAM,GACXhqB,KAAK6U,EAAI1D,IACTnR,KAAKygB,KAAOtP,KAiBpB,MAAMg2C,GAAW,SAAS9xB,EAAIxO,GAC1BwO,EAAG7xB,EAAExB,MAAQ,EACbkvB,GAAKkE,iBAAiBC,EAAIxO,IAGxBugC,GAAiB,SAAS/xB,EAAIrzB,GAChCkvB,GAAKkE,iBAAiBC,EAAIvhB,GAAQ8zB,iBAAiBvS,EAAG/sB,EAAGgD,EAAa,eAAe,GAAO4lB,GAAKkiB,eAAe/d,EAAIrzB,MAclHqlD,GAAa,SAASvzB,EAAInpB,EAAGvB,EAAGkI,GAC9B3G,EAAIvB,GAZO,SAAS0qB,EAAIwzB,EAAOh2C,GACnC,IAAIhJ,EAAIwrB,EAAGuB,GAAG/sB,EACV40B,EAAOpJ,EAAGrb,EAAEhH,YACZ81C,EAAkB,IAATrqB,EACP5xB,EAAa,iBAAiB,GAC9BwI,GAAQ8zB,iBAAiBt/B,EAAGgD,EAAa,uBAAuB,GAAO4xB,GACzErW,EAAM/S,GAAQ8zB,iBAAiBt/B,EAAGgD,EAAa,mCAAmC,GAClFgG,EAAMg2C,EAAOC,GACjBr2B,GAAKkE,iBAAiBtB,EAAGuB,GAAIxO,GAIlB2gC,CAAW1zB,EAAI1qB,EAAGkI,IAG3Bm2C,GAAW,SAASpyB,EAAIjqB,GAC1B,OAAIiqB,EAAG7xB,EAAExB,QAAUoJ,IACf8lB,GAAK4kB,UAAUzgB,IACR,IAMTqyB,GAAQ,SAASryB,EAAIjqB,GACnBiqB,EAAG7xB,EAAExB,QAAUoJ,GACfg8C,GAAe/xB,EAAIjqB,IAGrBu8C,GAAY,SAAStyB,EAAIjqB,GAC3Bs8C,GAAMryB,EAAIjqB,GACV8lB,GAAK4kB,UAAUzgB,IAGbuyB,GAAkB,SAASvyB,EAAIjqB,EAAGyb,GAC/Bzb,GACD8lB,GAAKkE,iBAAiBC,EAAIxO,IAG5BghC,GAAc,SAASxyB,EAAI/jB,EAAMw2C,EAAKP,GACnCE,GAASpyB,EAAI/jB,KACVi2C,IAAUlyB,EAAGwe,WACbuT,GAAe/xB,EAAI/jB,GAEnB4f,GAAKkE,iBAAiBC,EAAIvhB,GAAQ8zB,iBAAiBvS,EAAG/sB,EAClDgD,EAAa,wCACb4lB,GAAKkiB,eAAe/d,EAAI/jB,GAAO4f,GAAKkiB,eAAe/d,EAAIyyB,GAAMP,MAIvEQ,GAAgB,SAAS1yB,GAC3BqyB,GAAMryB,EAAIsvB,GAAEqD,SACZ,IAAI1mC,EAAK+T,EAAG7xB,EAAEyvC,QAAQ3xB,GAEtB,OADA4P,GAAK4kB,UAAUzgB,GACR/T,GAGL2mC,GAAW,SAAStgC,EAAGpQ,EAAGtU,GAC5B0kB,EAAElP,EAAIkP,EAAEnkB,EAAI8tB,EACZ3J,EAAEpQ,EAAIA,EACNoQ,EAAE9b,EAAE8oB,KAAO1xB,GAGTilD,GAAa,SAAS7yB,EAAI1N,EAAGjd,GAC/Bu9C,GAAStgC,EAAG6L,GAAQ8H,GAAIsE,GAAavK,EAAGvB,GAAIppB,KAG1Cy9C,GAAY,SAAS9yB,EAAI1N,GAC3BugC,GAAW7yB,EAAI1N,EAAGogC,GAAc1yB,KAW9B+yB,GAAe,SAAS/yB,EAAIjkB,GAC9B,IAAI0iB,EAAKuB,EAAGvB,GACR2Z,EAAMpY,EAAGoY,IACTlX,EAXiB,SAASlB,EAAIwa,GAClC,IAAI/b,EAAKuB,EAAGvB,GACRrb,EAAIqb,EAAGrb,EAGX,OAFAA,EAAEm3B,QAAQ9b,EAAGizB,UAAY,IAAIjzC,GAAQ0qC,OACrC/lC,EAAEm3B,QAAQ9b,EAAGizB,UAAUlX,QAAUA,EAC1B/b,EAAGizB,WAMAsB,CAAiBhzB,EAAIjkB,GAC/Bi2C,GAAWvzB,EAAI2Z,EAAI6a,OAAOzzC,EAAI,EAAIif,EAAGgzB,WAxOzB,IAwO8Cx7C,EAAa,mBAAmB,IAC1FmiC,EAAI6a,OAAOt+B,IAAIyjB,EAAI6a,OAAOzzC,GAAK,IAAImyC,GACnCvZ,EAAI6a,OAAOt+B,IAAIyjB,EAAI6a,OAAOzzC,GAAG3S,IAAMq0B,EACnCkX,EAAI6a,OAAOzzC,KAGT0zC,GAAsB,SAASlzB,EAAIjkB,GACrCg3C,GAAa/yB,EAAInE,GAAKuiB,eAAepe,EAAI/pB,EAAa8F,GAAM,MAG1Do3C,GAAY,SAAS10B,EAAI7wB,GAC3B,IAAIf,EAAM4xB,EAAGuB,GAAGoY,IAAI6a,OAAOt+B,IAAI8J,EAAGgzB,WAAa7jD,GAAGf,IAElD,OADA+uB,GAAW/uB,EAAM4xB,EAAGizB,UACbjzB,EAAGrb,EAAEm3B,QAAQ1tC,IAGlBumD,GAAkB,SAASpzB,EAAIqzB,GACjC,IAAI50B,EAAKuB,EAAGvB,GAEZ,IADAA,EAAGmF,QAAUnF,EAAGmF,QAAUyvB,EACnBA,EAAOA,IACVF,GAAU10B,EAAIA,EAAGmF,QAAUyvB,GAAO5Y,QAAUhc,EAAGE,IAkBjD20B,GAAa,SAAS70B,EAAI1iB,EAAMzG,GAClC,IAAI8N,EAAIqb,EAAGrb,EAOX,OANA4uC,GAAWvzB,EAAIA,EAAGniB,KAAO,EAAGkC,GAAM2B,SAAUlK,EAAa,YAAY,IACrEmN,EAAEE,SAASmb,EAAGniB,MAAQ,CAClB89B,QAAS9kC,EAAE4M,IAAMic,GAAQ+G,OACzBr4B,IAAKyI,EAAEkB,EAAE8oB,KACTvjB,KAAMA,GAEH0iB,EAAGniB,QA2BRi3C,GAAe,SAAS90B,EAAIjf,EAAG0qB,EAAI3O,GACrC,GAAW,OAAPkD,EACAm0B,GAAS1oB,EAAI/L,GAAQizB,MAAO,OAC3B,CACD,IAAI97C,EA5BM,SAASmpB,EAAIjf,GAC3B,IAAK,IAAI5R,EAAI6wB,EAAGmF,QAAU,EAAGh2B,GAAK,EAAGA,IACjC,GAAIkjD,GAAMtxC,EAAG2zC,GAAU10B,EAAI7wB,GAAG4sC,SAC1B,OAAO5sC,EAGf,OAAQ,EAsBI4lD,CAAU/0B,EAAIjf,GACtB,GAAIlK,GAAK,EACLs9C,GAAS1oB,EAAI/L,GAAQ+G,OAAQ5vB,GACxBimB,GAlBC,SAASkD,EAAI/yB,GAC3B,IAAI6lD,EAAK9yB,EAAG8yB,GACZ,KAAOA,EAAG3tB,QAAUl4B,GAChB6lD,EAAKA,EAAG7yB,SACZ6yB,EAAGL,MAAQ,EAeCuC,CAAUh1B,EAAInpB,OACf,CACH,IAAIzI,EAtDM,SAAS4xB,EAAI1iB,GAC/B,IAAIgN,EAAK0V,EAAGrb,EAAEE,SACd,IAAK,IAAI1V,EAAI,EAAGA,EAAI6wB,EAAGniB,KAAM1O,IACzB,GAAIkjD,GAAM/nC,EAAGnb,GAAGmO,KAAMA,GAClB,OAAOnO,EAEf,OAAQ,EAgDU8lD,CAAcj1B,EAAIjf,GAC5B,GAAI3S,EAAM,EAAG,CAET,GADA0mD,GAAa90B,EAAG6yB,KAAM9xC,EAAG0qB,EAAI,GACzBA,EAAGhoB,IAAMic,GAAQizB,MACjB,OAEJvkD,EAAMymD,GAAW70B,EAAIjf,EAAG0qB,GAE5B0oB,GAAS1oB,EAAI/L,GAAQgH,OAAQt4B,MAKnC8mD,GAAY,SAAS3zB,EAAIkK,GAC3B,IAAIsQ,EAAUkY,GAAc1yB,GACxBvB,EAAKuB,EAAGvB,GAEZ,GADA80B,GAAa90B,EAAI+b,EAAStQ,EAAI,GAC1BA,EAAGhoB,IAAMic,GAAQizB,MAAO,CACxB,IAAI/sB,EAAM,IAAI2E,GACduqB,GAAa90B,EAAIuB,EAAGsgB,KAAMpW,EAAI,GAC9BtO,GAAWsO,EAAGhoB,IAAMic,GAAQizB,OAC5ByB,GAAW7yB,EAAIqE,EAAKmW,GACpBtS,EAAazJ,EAAIyL,EAAI7F,KAIvBuvB,GAAgB,SAAS5zB,EAAIqzB,EAAOQ,EAAOvhC,GAC7C,IAAImM,EAAKuB,EAAGvB,GACR9Y,EAAQ0tC,EAAQQ,EACpB,GAAIhD,GAAWv+B,EAAEpQ,GACbyD,IACIA,EAAQ,IAAGA,EAAQ,GACvBgf,GAAgBlG,EAAInM,EAAG3M,GACnBA,EAAQ,GAAG+d,GAAiBjF,EAAI9Y,EAAQ,QAG5C,GADI2M,EAAEpQ,IAAMic,GAAQizB,OAAO1qB,EAAiBjI,EAAInM,GAC5C3M,EAAQ,EAAG,CACX,IAAIub,EAAMzC,EAAG+E,QACbE,GAAiBjF,EAAI9Y,GACrB6Y,GAASC,EAAIyC,EAAKvb,GAGtBkuC,EAAQR,IACRrzB,EAAGvB,GAAG+E,SAAWqwB,EAAQR,IAG3BS,GAAa,SAAS9zB,GACxB,IAAI/sB,EAAI+sB,EAAG/sB,IACTA,EAAE2jC,QACJob,GAAWhyB,EAAGvB,GAAIxrB,EAAE2jC,QAAStC,GAAgBr+B,EAAa,aAAa,KAGrE89C,GAAa,SAAS/zB,GACxB,OAAOA,EAAG/sB,EAAE2jC,WAGVod,GAAY,SAASh0B,EAAIgX,EAAGid,GAC9B,IAAIx1B,EAAKuB,EAAGvB,GACRy1B,EAAKl0B,EAAGoY,IAAIntB,GACZA,EAAKipC,EAAGv/B,IAAIqiB,GAEhB,GADApb,GAAWk1B,GAAM7lC,EAAGlP,KAAMk4C,EAAMl4C,OAC5BkP,EAAG2Y,QAAUqwB,EAAMrwB,QAAS,CAC5B,IAAIuwB,EAAQhB,GAAU10B,EAAIxT,EAAG2Y,SAAS4W,QAClChpB,EAAM/S,GAAQ8zB,iBAAiBvS,EAAG/sB,EAClCgD,EAAa,2DACbgV,EAAGlP,KAAKwH,SAAU0H,EAAG4c,KAAMssB,EAAM5wC,UACrCuuC,GAAS9xB,EAAIxO,GAEjBoQ,GAAenD,EAAIxT,EAAG0T,GAAIs1B,EAAMt1B,IAEhC,IAAK,IAAI/wB,EAAIopC,EAAGppC,EAAIsmD,EAAG10C,EAAI,EAAG5R,IAC1BsmD,EAAGv/B,IAAI/mB,GAAKsmD,EAAGv/B,IAAI/mB,EAAI,GAC3BsmD,EAAG10C,KAMD40C,GAAY,SAASp0B,EAAIgX,GAC3B,IAAIua,EAAKvxB,EAAGvB,GAAG8yB,GACXnZ,EAAMpY,EAAGoY,IACTntB,EAAKmtB,EAAIntB,GAAG0J,IAAIqiB,GAEpB,IAAK,IAAIppC,EAAI2jD,EAAGP,WAAYpjD,EAAIwqC,EAAI6b,MAAMz0C,EAAG5R,IAAK,CAC9C,IAAIymD,EAAKjc,EAAI6b,MAAMt/B,IAAI/mB,GACvB,GAAIkjD,GAAMuD,EAAGt4C,KAAMkP,EAAGlP,MAIlB,OAHIkP,EAAG2Y,QAAUywB,EAAGzwB,UAAY2tB,EAAGL,OAAS9Y,EAAI6b,MAAMz0C,EAAI+xC,EAAGP,aACzD1oB,GAAgBtI,EAAGvB,GAAIxT,EAAG0T,GAAI01B,EAAGzwB,SACrCowB,GAAUh0B,EAAIgX,EAAGqd,IACV,EAGf,OAAO,GAGLC,GAAgB,SAASt0B,EAAIjsB,EAAGgI,EAAM8rB,EAAMlJ,GAC9C,IAAInf,EAAIzL,EAAEyL,EAOV,OANAzL,EAAE4gB,IAAInV,GAAK,IAAIoyC,GACf79C,EAAE4gB,IAAInV,GAAGzD,KAAOA,EAChBhI,EAAE4gB,IAAInV,GAAGqoB,KAAOA,EAChB9zB,EAAE4gB,IAAInV,GAAGokB,QAAU5D,EAAGvB,GAAGmF,QACzB7vB,EAAE4gB,IAAInV,GAAGmf,GAAKA,EACd5qB,EAAEyL,EAAIA,EAAI,EACHA,GAOL+0C,GAAY,SAASv0B,EAAIq0B,GAC3B,IAAIH,EAAKl0B,EAAGoY,IAAIntB,GACZrd,EAAIoyB,EAAGvB,GAAG8yB,GAAGN,UACjB,KAAOrjD,EAAIsmD,EAAG10C,GACNsxC,GAAMoD,EAAGv/B,IAAI/mB,GAAGmO,KAAMs4C,EAAGt4C,MACzBi4C,GAAUh0B,EAAIpyB,EAAGymD,GAEjBzmD,KA2BN4mD,GAAa,SAAS/1B,EAAI8yB,EAAIJ,GAChCI,EAAGJ,OAASA,EACZI,EAAG3tB,QAAUnF,EAAGmF,QAChB2tB,EAAGP,WAAavyB,EAAGuB,GAAGoY,IAAI6b,MAAMz0C,EAChC+xC,EAAGN,UAAYxyB,EAAGuB,GAAGoY,IAAIntB,GAAGzL,EAC5B+xC,EAAGL,MAAQ,EACXK,EAAG7yB,SAAWD,EAAG8yB,GACjB9yB,EAAG8yB,GAAKA,EACR31B,GAAW6C,EAAG+E,UAAY/E,EAAGmF,UA6C3B6wB,GAAY,SAASz0B,EAAIvB,EAAI8yB,GAC/B9yB,EAAG6yB,KAAOtxB,EAAGvB,GACbA,EAAGuB,GAAKA,EACRA,EAAGvB,GAAKA,EACRA,EAAGE,GAAK,EACRF,EAAGG,WAAa,EAChBH,EAAG+B,IAAMvE,EACTwC,EAAG+E,QAAU,EACb/E,EAAG8F,GAAK,EACR9F,EAAG+yB,GAAK,EACR/yB,EAAGniB,KAAO,EACVmiB,EAAGizB,SAAW,EACdjzB,EAAGmF,QAAU,EACbnF,EAAGgzB,WAAazxB,EAAGoY,IAAI6a,OAAOzzC,EAC9Bif,EAAG8yB,GAAK,KACR,IAAInuC,EAAIqb,EAAGrb,EACXA,EAAElH,OAAS8jB,EAAG9jB,OACdkH,EAAEqgB,aAAe,EACjB+wB,GAAW/1B,EAAI8yB,GAAI,IAGjBmD,GAAa,SAASj2B,GACxB,IAAI8yB,EAAK9yB,EAAG8yB,GACRvxB,EAAKvB,EAAGuB,GACZ,GAAIuxB,EAAG7yB,UAAY6yB,EAAGL,MAAO,CAEzB,IAAIl8B,EAAIuL,EAAU9B,GAClB6J,GAAgB7J,EAAIzJ,EAAIu8B,EAAG3tB,SAC3BjC,GAAiBlD,EAAIzJ,GAGrBu8B,EAAGJ,QAtEQ,SAASnxB,GACxB,IAAIxgB,EAAIX,GAAgBmhB,EAAG/sB,EAAG,SAC1Bc,EAAIugD,GAAct0B,EAAIA,EAAGoY,IAAI6b,MAAOz0C,EAAG,EAAGwgB,EAAGvB,GAAGE,IACpD41B,GAAUv0B,EAAIA,EAAGoY,IAAI6b,MAAMt/B,IAAI5gB,IAoE3B4gD,CAAW30B,GAEfvB,EAAG8yB,GAAKA,EAAG7yB,SAnSI,SAASD,EAAIm2B,GAE5B,IADAn2B,EAAGuB,GAAGoY,IAAI6a,OAAOzzC,GAAKif,EAAGmF,QAAUgxB,EAC5Bn2B,EAAGmF,QAAUgxB,GAChBzB,GAAU10B,IAAMA,EAAGmF,SAAS8W,MAAQjc,EAAGE,GAiS3Ck2B,CAAWp2B,EAAI8yB,EAAG3tB,SAClBhI,GAAW21B,EAAG3tB,UAAYnF,EAAGmF,SAC7BnF,EAAG+E,QAAU/E,EAAGmF,QAChB5D,EAAGoY,IAAI6b,MAAMz0C,EAAI+xC,EAAGP,WAChBO,EAAG7yB,SA7GU,SAASD,EAAI8yB,GAC9B,IAAI3jD,EAAI2jD,EAAGN,UACPiD,EAAKz1B,EAAGuB,GAAGoY,IAAIntB,GAGnB,KAAOrd,EAAIsmD,EAAG10C,GAAG,CACb,IAAIyL,EAAKipC,EAAGv/B,IAAI/mB,GACZqd,EAAG2Y,QAAU2tB,EAAG3tB,UACZ2tB,EAAGL,OACH5oB,GAAgB7J,EAAIxT,EAAG0T,GAAI4yB,EAAG3tB,SAClC3Y,EAAG2Y,QAAU2tB,EAAG3tB,SAEfwwB,GAAU31B,EAAGuB,GAAIpyB,IAClBA,KAiGJknD,CAAar2B,EAAI8yB,GACZA,EAAGN,UAAYjxB,EAAGoY,IAAIntB,GAAGzL,GAtEpB,SAASwgB,EAAI/U,GAC3B,IAAIuG,EAAMqK,GAAK0kB,WAAWt1B,EAAGlP,MACvB,oCACA,8CACNyV,EAAM/S,GAAQ8zB,iBAAiBvS,EAAG/sB,EAAGgD,EAAaub,GAAMvG,EAAGlP,KAAKwH,SAAU0H,EAAG4c,MAC7EiqB,GAAS9xB,EAAIxO,GAkETujC,CAAU/0B,EAAIA,EAAGoY,IAAIntB,GAAG0J,IAAI48B,EAAGN,aAGjC+D,GAAa,SAASh1B,GACxB,IAAIvB,EAAKuB,EAAGvB,GACZ2K,GAAS3K,EAAI,EAAG,GAChBi2B,GAAWj2B,GACX7C,GAAqB,OAAV6C,EAAG8yB,IACdvxB,EAAGvB,GAAKA,EAAG6yB,MAOT2D,GAAe,SAASj1B,EAAIk1B,GAC9B,OAAQl1B,EAAG7xB,EAAExB,OACT,KAAK2iD,GAAE6F,QAAS,KAAK7F,GAAE8F,UACvB,KAAK9F,GAAE+F,OAAQ,KAAK/F,GAAEjS,OAClB,OAAO,EACX,KAAKiS,GAAEgG,SAAU,OAAOJ,EACxB,QAAS,OAAO,IAIlBK,GAAW,SAASv1B,GAEtB,MAAQi1B,GAAaj1B,EAAI,IAAI,CACzB,GAAIA,EAAG7xB,EAAExB,QAAU2iD,GAAEkG,UAEjB,YADAC,GAAUz1B,GAGdy1B,GAAUz1B,KAIZ01B,GAAW,SAAS11B,EAAI1qB,GAE1B,IAAImpB,EAAKuB,EAAGvB,GACR4F,EAAM,IAAI2E,GACdf,EAAkBxJ,EAAInpB,GACtBumB,GAAK4kB,UAAUzgB,GACf8yB,GAAU9yB,EAAIqE,GACd6D,EAAazJ,EAAInpB,EAAG+uB,IAGlBsxB,GAAS,SAAS31B,EAAI1qB,GAExBumB,GAAK4kB,UAAUzgB,GACf41B,GAAK51B,EAAI1qB,GACTsxB,EAAa5G,EAAGvB,GAAInpB,GACpBg9C,GAAUtyB,EAAI,KASlB,MAAM61B,GACFh6C,cACIlR,KAAK2K,EAAI,IAAI0zB,GACbr+B,KAAKwD,EAAI,IAAI66B,GACbr+B,KAAKmrD,GAAKh6C,IACVnR,KAAKia,GAAK9I,IACVnR,KAAKk/B,QAAU/tB,KAIvB,MAAMi6C,GAAW,SAAS/1B,EAAIg2B,GAE1B,IAAIv3B,EAAKuB,EAAGvB,GACRyC,EAAMlB,EAAGvB,GAAG+E,QACZa,EAAM,IAAI2E,GACV3lB,EAAM,IAAI2lB,GAEVhJ,EAAG7xB,EAAExB,QAAU2iD,GAAEqD,SACjBX,GAAWvzB,EAAIu3B,EAAGF,GAAIlZ,GAAS3mC,EAAa,0BAA0B,IACtE68C,GAAU9yB,EAAIqE,IAEdsxB,GAAO31B,EAAIqE,GACf2xB,EAAGF,KACHxD,GAAUtyB,EAAI,IACd,IAAIi2B,EAAQpvB,EAAYpI,EAAI4F,GAC5BuxB,GAAK51B,EAAI3c,GACT+b,EAAaX,EAAI4L,GAAa2rB,EAAG7nD,EAAEqI,EAAE8oB,KAAM22B,EAAOpvB,EAAYpI,EAAIpb,IAClEob,EAAG+E,QAAUtC,GAGXg1B,GAAiB,SAASz3B,EAAIu3B,GAC5BA,EAAG1gD,EAAE4M,IAAMic,GAAQizB,QACvB1qB,EAAiBjI,EAAIu3B,EAAG1gD,GACxB0gD,EAAG1gD,EAAE4M,EAAIic,GAAQizB,MACb4E,EAAGnsB,UAAYC,KACfH,GAAalL,EAAIu3B,EAAG7nD,EAAEqI,EAAE8oB,KAAM02B,EAAGpxC,GAAIoxC,EAAGnsB,SACxCmsB,EAAGnsB,QAAU,KAiBfssB,GAAY,SAASn2B,EAAIg2B,GAE3BJ,GAAK51B,EAAIg2B,EAAG1gD,GACZ08C,GAAWhyB,EAAGvB,GAAIu3B,EAAGpxC,GAAIg4B,GAAS3mC,EAAa,0BAA0B,IACzE+/C,EAAGpxC,KACHoxC,EAAGnsB,WAGDusB,GAAQ,SAASp2B,EAAIg2B,GAEvB,OAAQh2B,EAAG7xB,EAAExB,OACT,KAAK2iD,GAAEqD,QAC6B,KAA5B92B,GAAK2kB,eAAexgB,GACpBm2B,GAAUn2B,EAAIg2B,GAEdD,GAAS/1B,EAAIg2B,GACjB,MAEJ,KAAK,GACDD,GAAS/1B,EAAIg2B,GACb,MAEJ,QACIG,GAAUn2B,EAAIg2B,KAMpBn6C,GAAc,SAASmkB,EAAI7xB,GAG7B,IAAIswB,EAAKuB,EAAGvB,GACRoJ,EAAO7H,EAAGwe,WACV7f,EAAKS,EAAaX,EAAIwtB,GAAa,EAAG,EAAG,GACzC+J,EAAK,IAAIH,GACbG,EAAGpxC,GAAKoxC,EAAGF,GAAKE,EAAGnsB,QAAU,EAC7BmsB,EAAG7nD,EAAIA,EACPykD,GAASzkD,EAAGgwB,GAAQ6G,WAAYrG,GAChCi0B,GAASoD,EAAG1gD,EAAG6oB,GAAQizB,MAAO,GAC9B1qB,EAAiB1G,EAAGvB,GAAItwB,GACxBmkD,GAAUtyB,EAAI,KACd,EAAG,CAEC,GADApE,GAAWo6B,EAAG1gD,EAAE4M,IAAMic,GAAQizB,OAAS4E,EAAGnsB,QAAU,GACjC,MAAf7J,EAAG7xB,EAAExB,MAAyC,MAClDupD,GAAez3B,EAAIu3B,GACnBI,GAAMp2B,EAAIg2B,SACL5D,GAASpyB,EAAI,KAAiCoyB,GAASpyB,EAAI,KACpEwyB,GAAYxyB,EAAI,IAA+B,IAA+B6H,GA7D5D,SAASpJ,EAAIu3B,GACZ,IAAfA,EAAGnsB,UACHgnB,GAAWmF,EAAG1gD,EAAE4M,IAChB8nB,GAAgBvL,EAAIu3B,EAAG1gD,GACvBq0B,GAAalL,EAAIu3B,EAAG7nD,EAAEqI,EAAE8oB,KAAM02B,EAAGpxC,GAAIrK,GACrCy7C,EAAGpxC,OAECoxC,EAAG1gD,EAAE4M,IAAMic,GAAQizB,OACnB1qB,EAAiBjI,EAAIu3B,EAAG1gD,GAC5Bq0B,GAAalL,EAAIu3B,EAAG7nD,EAAEqI,EAAE8oB,KAAM02B,EAAGpxC,GAAIoxC,EAAGnsB,WAqD5CwsB,CAAc53B,EAAIu3B,GAClB72B,GAASV,EAAGrb,EAAE7Q,KAAKosB,GAAKlgB,GAAQgrC,YAAYuM,EAAGpxC,KAC/CigB,GAASpG,EAAGrb,EAAE7Q,KAAKosB,GAAKlgB,GAAQgrC,YAAYuM,EAAGF,MAiC7CQ,GAAO,SAASt2B,EAAI1N,EAAGikC,EAAU1uB,GAEnC,IAAI2uB,EAAS,IAAInF,GACbE,EAAK,IAAIR,GACbyF,EAAOpzC,EArQU,SAAS4c,GAC1B,IAAI/sB,EAAI+sB,EAAG/sB,EACPwjD,EAAM,IAAI3b,GAAM7nC,GAChBwrB,EAAKuB,EAAGvB,GAGZ,OAFQA,EAAGrb,EACThC,EAAEqd,EAAG+yB,MAAQiF,EACRA,EA+PIC,CAAa12B,GACxBw2B,EAAOpzC,EAAEhH,YAAcyrB,EACvB4sB,GAAUz0B,EAAIw2B,EAAQjF,GACtBe,GAAUtyB,EAAI,IACVu2B,IACArD,GAAoBlzB,EAAI,QACxBozB,GAAgBpzB,EAAI,IAtCZ,SAASA,GAErB,IAAIvB,EAAKuB,EAAGvB,GACRrb,EAAIqb,EAAGrb,EACP7G,EAAU,EAEd,GADA6G,EAAE6wB,WAAY,EACK,KAAfjU,EAAG7xB,EAAExB,MACL,GACI,OAAQqzB,EAAG7xB,EAAExB,OACT,KAAK2iD,GAAEqD,QACHI,GAAa/yB,EAAI0yB,GAAc1yB,IAC/BzjB,IACA,MAEJ,KAAK+yC,GAAEqH,QACH96B,GAAK4kB,UAAUzgB,GACf5c,EAAE6wB,WAAY,EACd,MAEJ,QAASpY,GAAKkE,iBAAiBC,EAAI/pB,EAAa,4BAA4B,YAE3EmN,EAAE6wB,WAAame,GAASpyB,EAAI,KAEzCozB,GAAgBpzB,EAAIzjB,GACpB6G,EAAE0qB,UAAYrP,EAAGmF,QACjBF,GAAiBjF,EAAIA,EAAGmF,SAexBgzB,CAAQ52B,GACRsyB,GAAUtyB,EAAI,IACdu1B,GAASv1B,GACTw2B,EAAOpzC,EAAE/G,gBAAkB2jB,EAAGwe,WAC9BgU,GAAYxyB,EAAIsvB,GAAE+F,OAAQ/F,GAAEuH,YAAahvB,GArQzB,SAAS7H,EAAI1qB,GAC7B,IAAImpB,EAAKuB,EAAGvB,GAAG6yB,KACfsB,GAASt9C,EAAG6oB,GAAQ6G,WAAYvC,EAAahE,EAAI4tB,GAAY,EAAG5tB,EAAG+yB,GAAI,IACvE9qB,EAAiBjI,EAAInpB,GAmQrBwhD,CAAY92B,EAAI1N,GAChB0iC,GAAWh1B,IAGT+2B,GAAU,SAAS/2B,EAAI1qB,GAEzB,IAAIkK,EAAI,EAER,IADAo2C,GAAK51B,EAAI1qB,GACF88C,GAASpyB,EAAI,KAChB0G,EAAiB1G,EAAGvB,GAAInpB,GACxBsgD,GAAK51B,EAAI1qB,GACTkK,IAEJ,OAAOA,GAGLw3C,GAAW,SAASh3B,EAAI5c,EAAGykB,GAC7B,IA4BItrB,EA5BAkiB,EAAKuB,EAAGvB,GACRzqB,EAAO,IAAIg1B,GACf,OAAQhJ,EAAG7xB,EAAExB,OACT,KAAK,GACDkvB,GAAK4kB,UAAUzgB,GACI,KAAfA,EAAG7xB,EAAExB,MACLqH,EAAKkO,EAAIic,GAAQizB,OAEjB2F,GAAQ/2B,EAAIhsB,GACZg2B,GAAgBvL,EAAIzqB,IAExBw+C,GAAYxyB,EAAI,GAA8B,GAA8B6H,GAC5E,MAEJ,KAAK,IACDhsB,GAAYmkB,EAAIhsB,GAChB,MAEJ,KAAKs7C,GAAE/R,UACHsV,GAAW7yB,EAAIhsB,EAAMgsB,EAAG7xB,EAAEyvC,QAAQ3xB,IAClC4P,GAAK4kB,UAAUzgB,GACf,MAEJ,QACInE,GAAKkE,iBAAiBC,EAAI/pB,EAAa,+BAA+B,IAG9E2lB,GAAWxY,EAAElB,IAAMic,GAAQ2F,WAE3B,IAAIvI,EAAOnY,EAAE5M,EAAE8oB,KACXuxB,GAAW78C,EAAKkO,GAChB3F,EAAUhC,GAENvG,EAAKkO,IAAMic,GAAQizB,OACnB1qB,EAAiBjI,EAAIzqB,GACzBuI,EAAUkiB,EAAG+E,SAAWjI,EAAK,IAEjCq3B,GAASxvC,EAAG+a,GAAQyG,MAAOxF,EAAaX,EAAI0Q,GAAS5T,EAAMhf,EAAQ,EAAG,IACtEyrB,EAAavJ,EAAIoJ,GACjBpJ,EAAG+E,QAAUjI,EAAO,GA8BlB07B,GAAc,SAASj3B,EAAI1qB,GAG7B,IAAImpB,EAAKuB,EAAGvB,GACRoJ,EAAO7H,EAAGwe,WAEd,IA3Be,SAASxe,EAAI1qB,GAE5B,OAAQ0qB,EAAG7xB,EAAExB,OACT,KAAK,GAA8B,CAC/B,IAAIk7B,EAAO7H,EAAGwe,WAKd,OAJA3iB,GAAK4kB,UAAUzgB,GACf41B,GAAK51B,EAAI1qB,GACTk9C,GAAYxyB,EAAI,GAA8B,GAA8B6H,QAC5E5C,EAAmBjF,EAAGvB,GAAInpB,GAG9B,KAAKg6C,GAAEqD,QAEH,YADAgB,GAAU3zB,EAAI1qB,GAGlB,QACIumB,GAAKkE,iBAAiBC,EAAI/pB,EAAa,qBAAqB,KAUpEihD,CAAWl3B,EAAI1qB,KAEX,OAAQ0qB,EAAG7xB,EAAExB,OACT,KAAK,GACD+oD,GAAS11B,EAAI1qB,GACb,MAEJ,KAAK,GAA8B,CAC/B,IAAI+uB,EAAM,IAAI2E,GACdf,EAAkBxJ,EAAInpB,GACtBqgD,GAAO31B,EAAIqE,GACX6D,EAAazJ,EAAInpB,EAAG+uB,GACpB,MAEJ,KAAK,GAA8B,CAC/B,IAAIA,EAAM,IAAI2E,GACdnN,GAAK4kB,UAAUzgB,GACf8yB,GAAU9yB,EAAIqE,GACdmF,GAAU/K,EAAInpB,EAAG+uB,GACjB2yB,GAASh3B,EAAI1qB,EAAGuyB,GAChB,MAEJ,KAAK,GAA8B,KAAKynB,GAAE/R,UAAW,KAAK,IACtD7W,EAAiBjI,EAAInpB,GACrB0hD,GAASh3B,EAAI1qB,EAAGuyB,GAChB,MAEJ,QAAS,SA+FfsvB,GAAW,CACb,CAACC,KAAM,GAAIC,MAAO,IAAK,CAACD,KAAM,GAAIC,MAAO,IACzC,CAACD,KAAM,GAAIC,MAAO,IAAK,CAACD,KAAM,GAAIC,MAAO,IACzC,CAACD,KAAM,GAAIC,MAAO,IAClB,CAACD,KAAM,GAAIC,MAAO,IAAK,CAACD,KAAM,GAAIC,MAAO,IACzC,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAC3D,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GACtC,CAACD,KAAM,EAAGC,MAAO,GACjB,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAC3D,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,GAC3D,CAACD,KAAM,EAAGC,MAAO,GAAI,CAACD,KAAM,EAAGC,MAAO,IASpCC,GAAU,SAASt3B,EAAI1qB,EAAG28C,GAC5B6B,GAAW9zB,GACX,IAAIu3B,EA1DS,SAASlxC,GACtB,OAAQA,GACJ,KAAKipC,GAAEkI,OAAQ,OAAO55B,EACtB,KAAK,GAA8B,OAAOF,EAC1C,KAAK,IAA+B,OAAOC,EAC3C,KAAK,GAA8B,OAAOE,EAC1C,QAAS,OAAOC,GAoDV25B,CAASz3B,EAAG7xB,EAAExB,OACxB,GAAI4qD,IAAQz5B,EAAa,CACrB,IAAI+J,EAAO7H,EAAGwe,WACd3iB,GAAK4kB,UAAUzgB,GACfs3B,GAAQt3B,EAAI1qB,EAZG,IAafwzB,GAAY9I,EAAGvB,GAAI84B,EAAKjiD,EAAGuyB,QApHjB,SAAS7H,EAAI1qB,GAG3B,OAAQ0qB,EAAG7xB,EAAExB,OACT,KAAK2iD,GAAEhS,OACHsV,GAASt9C,EAAG6oB,GAAQG,MAAO,GAC3BhpB,EAAEkB,EAAE+nB,KAAOyB,EAAG7xB,EAAEyvC,QAAQxoC,EACxB,MAEJ,KAAKk6C,GAAEoI,OACH9E,GAASt9C,EAAG6oB,GAAQC,MAAO,GAC3B9oB,EAAEkB,EAAE6nB,KAAO2B,EAAG7xB,EAAEyvC,QAAQhwC,EACxB,MAEJ,KAAK0hD,GAAE/R,UACHsV,GAAW7yB,EAAI1qB,EAAG0qB,EAAG7xB,EAAEyvC,QAAQ3xB,IAC/B,MAEJ,KAAKqjC,GAAEqI,OACH/E,GAASt9C,EAAG6oB,GAAQ2H,KAAM,GAC1B,MAEJ,KAAKwpB,GAAEsI,QACHhF,GAASt9C,EAAG6oB,GAAQ6H,MAAO,GAC3B,MAEJ,KAAKspB,GAAEuI,SACHjF,GAASt9C,EAAG6oB,GAAQ4H,OAAQ,GAC5B,MAEJ,KAAKupB,GAAEqH,QAAS,CACZ,IAAIl4B,EAAKuB,EAAGvB,GACZ8zB,GAAgBvyB,EAAIvB,EAAGrb,EAAE6wB,UAAWh+B,EAAa,8CAA8C,IAC/F28C,GAASt9C,EAAG6oB,GAAQ2G,QAAS1F,EAAaX,EAAI6tB,GAAW,EAAG,EAAG,IAC/D,MAEJ,KAAK,IAED,YADAzwC,GAAYmkB,EAAI1qB,GAGpB,KAAKg6C,GAAEuH,YAGH,OAFAh7B,GAAK4kB,UAAUzgB,QACfs2B,GAAKt2B,EAAI1qB,EAAG,EAAG0qB,EAAGwe,YAGtB,QAEI,YADAyY,GAAYj3B,EAAI1qB,GAIxBumB,GAAK4kB,UAAUzgB,GAoEX83B,CAAU93B,EAAI1qB,GAElB,IAAI+Q,EAzDU,SAASA,GACvB,OAAQA,GACJ,KAAK,GAA8B,OAAO8V,EAC1C,KAAK,GAA8B,OAAOC,EAC1C,KAAK,GAA8B,OAAOC,EAC1C,KAAK,GAA8B,OAAOC,EAC1C,KAAK,GAA8B,OAAOC,EAC1C,KAAK,GAA8B,OAAOC,EAC1C,KAAK8yB,GAAEyI,QAAW,OAAOt7B,EACzB,KAAK,GAA8B,OAAOC,EAC1C,KAAK,IAA+B,OAAOC,EAC3C,KAAK,IAA+B,OAAOC,EAC3C,KAAK0yB,GAAE0I,OAAW,OAAOn7B,EACzB,KAAKyyB,GAAE2I,OAAW,OAAOn7B,EACzB,KAAKwyB,GAAE4I,UAAW,OAAOn7B,EACzB,KAAKuyB,GAAE6I,MAAW,OAAOh7B,EACzB,KAAKmyB,GAAE8I,MAAW,OAAOp7B,EACzB,KAAK,GAA8B,OAAOC,EAC1C,KAAKqyB,GAAE+I,MAAW,OAAOn7B,EACzB,KAAK,GAA8B,OAAOE,EAC1C,KAAKkyB,GAAEgJ,MAAW,OAAOj7B,EACzB,KAAKiyB,GAAEiJ,OAAW,OAAOj7B,EACzB,KAAKgyB,GAAEkJ,MAAW,OAAOj7B,EACzB,QAAkB,OAAOC,GAkCpBi7B,CAAUz4B,EAAG7xB,EAAExB,OACxB,KAAO0Z,IAAOmX,GAAgB25B,GAAS9wC,GAAI+wC,KAAOnF,GAAO,CACrD,IAAIvqB,EAAK,IAAIsB,GACTnB,EAAO7H,EAAGwe,WACd3iB,GAAK4kB,UAAUzgB,GACfoI,EAAWpI,EAAGvB,GAAIpY,EAAI/Q,GAEtB,IAAIojD,EAASpB,GAAQt3B,EAAI0H,EAAIyvB,GAAS9wC,GAAIgxC,OAC1C7uB,GAAYxI,EAAGvB,GAAIpY,EAAI/Q,EAAGoyB,EAAIG,GAC9BxhB,EAAKqyC,EAGT,OADA3E,GAAW/zB,GACJ3Z,GAGLuvC,GAAO,SAAS51B,EAAI1qB,GACtBgiD,GAAQt3B,EAAI1qB,EAAG,IAab5L,GAAQ,SAASs2B,GAEnB,IAAIvB,EAAKuB,EAAGvB,GACR8yB,EAAK,IAAIR,GACbyD,GAAW/1B,EAAI8yB,EAAI,GACnBgE,GAASv1B,GACT00B,GAAWj2B,IAOf,MAAMk6B,GACF98C,cACIlR,KAAK2mD,KAAO,KACZ3mD,KAAK2K,EAAI,IAAI0zB,IAUrB,MA2BM4vB,GAAa,SAAS54B,EAAI64B,EAAIxF,GAChC,IAAI/gC,EAAI,IAAI0W,GAvhCA,IAAS9mB,EAyhCrB,GADAqwC,GAAgBvyB,GAxhCK9d,EAwhCO22C,EAAGvjD,EAAE4M,EAvhC1Bic,GAAQ+G,QAAUhjB,GAAKA,GAAKic,GAAQkH,UAuhCNpvB,EAAa,gBAAgB,IAC9Dm8C,GAASpyB,EAAI,IAA+B,CAC5C,IAAI84B,EAAK,IAAIH,GACbG,EAAGxH,KAAOuH,EACV5B,GAAYj3B,EAAI84B,EAAGxjD,GACfwjD,EAAGxjD,EAAE4M,IAAMic,GAAQkH,UAlCR,SAASrF,EAAI64B,EAAIvjD,GACpC,IAAImpB,EAAKuB,EAAGvB,GACR9Y,EAAQ8Y,EAAG+E,QACXu1B,GAAW,EACf,KAAOF,EAAIA,EAAKA,EAAGvH,KACXuH,EAAGvjD,EAAE4M,IAAMic,GAAQkH,WAEfwzB,EAAGvjD,EAAEkB,EAAE8uB,IAAIC,KAAOjwB,EAAE4M,GAAK22C,EAAGvjD,EAAEkB,EAAE8uB,IAAIn3B,IAAMmH,EAAEkB,EAAE8oB,OAC9Cy5B,GAAW,EACXF,EAAGvjD,EAAEkB,EAAE8uB,IAAIC,GAAKpH,GAAQ+G,OACxB2zB,EAAGvjD,EAAEkB,EAAE8uB,IAAIn3B,EAAIwX,GAGfrQ,EAAE4M,IAAMic,GAAQ+G,QAAU2zB,EAAGvjD,EAAEkB,EAAE8uB,IAAIz4B,MAAQyI,EAAEkB,EAAE8oB,OACjDy5B,GAAW,EACXF,EAAGvjD,EAAEkB,EAAE8uB,IAAIz4B,IAAM8Y,IAI7B,GAAIozC,EAAU,CAEV,IAAI1yC,EAAK/Q,EAAE4M,IAAMic,GAAQ+G,OAASgB,GAAUd,GAC5ChG,EAAaX,EAAIpY,EAAIV,EAAOrQ,EAAEkB,EAAE8oB,KAAM,GACtCoE,GAAiBjF,EAAI,IAYjBu6B,CAAeh5B,EAAI64B,EAAIC,EAAGxjD,GAC9B08C,GAAWhyB,EAAGvB,GAAI40B,EAAQrzB,EAAG/sB,EAAE2jC,QAAStC,GAAgBr+B,EAAa,aAAa,IAClF2iD,GAAW54B,EAAI84B,EAAIzF,EAAQ,OACxB,CACHf,GAAUtyB,EAAI,IACd,IAAI6zB,EAAQkD,GAAQ/2B,EAAI1N,GACxB,GAAIuhC,IAAUR,EAKV,OAFAtuB,GAAe/E,EAAGvB,GAAInM,QACtB2X,GAAcjK,EAAGvB,GAAIo6B,EAAGvjD,EAAGgd,GAH3BshC,GAAc5zB,EAAIqzB,EAAOQ,EAAOvhC,GAOxCsgC,GAAStgC,EAAG6L,GAAQ2F,UAAW9D,EAAGvB,GAAG+E,QAAQ,GAC7CyG,GAAcjK,EAAGvB,GAAIo6B,EAAGvjD,EAAGgd,IAGzBkF,GAAO,SAASwI,GAElB,IAAI1qB,EAAI,IAAI0zB,GAIZ,OAHA4sB,GAAK51B,EAAI1qB,GACLA,EAAE4M,IAAMic,GAAQ2H,OAAMxwB,EAAE4M,EAAIic,GAAQ4H,QACxCuB,EAActH,EAAGvB,GAAInpB,GACdA,EAAE8N,GAGP61C,GAAW,SAASj5B,EAAIrB,GAC1B,IACIs1B,EADApsB,EAAO7H,EAAGwe,WAEV4T,GAASpyB,EAAIsvB,GAAE4J,SACfjF,EAAQvB,GAAc1yB,IAEtBnE,GAAK4kB,UAAUzgB,GACfi0B,EAAQp1C,GAAgBmhB,EAAG/sB,EAAG,UAElC,IAAI+jC,EAAIsd,GAAct0B,EAAIA,EAAGoY,IAAIntB,GAAIgpC,EAAOpsB,EAAMlJ,GAClDy1B,GAAUp0B,EAAIgX,IAyEZmT,GAAO,SAASnqB,GAClB,IAAI1N,EAAI,IAAI0W,GAKZ,OAJA4sB,GAAK51B,EAAI1N,GACToU,EAAiB1G,EAAGvB,GAAInM,GACxBsJ,GAAWtJ,EAAEpQ,IAAMic,GAAQ2F,WACjBxR,EAAE9b,EAAE8oB,MAIZ65B,GAAU,SAASn5B,EAAIzE,EAAMsM,EAAMwrB,EAAO+F,GAE5C,IAEIC,EAFA9H,EAAK,IAAIR,GACTtyB,EAAKuB,EAAGvB,GAEZ20B,GAAgBpzB,EAAI,GACpBsyB,GAAUtyB,EAAIsvB,GAAEgK,OAChB,IAAIC,EAAOH,EAAQ34B,EAAchC,EAAI0tB,GAAY5wB,EAAMU,GAAWsE,EAAU9B,GAC5E+1B,GAAW/1B,EAAI8yB,EAAI,GACnB6B,GAAgBpzB,EAAIqzB,GACpB3vB,GAAiBjF,EAAI40B,GACrB3pD,GAAMs2B,GACN00B,GAAWj2B,GACXkD,GAAiBlD,EAAI86B,GACjBH,EACAC,EAAS54B,EAAchC,EAAIytB,GAAY3wB,EAAMU,IAE7CmD,EAAaX,EAAIyQ,GAAa3T,EAAM,EAAG83B,GACvCrrB,EAAavJ,EAAIoJ,GACjBwxB,EAAS54B,EAAchC,EAAI2tB,GAAa7wB,EAAO,EAAGU,IAEtD2F,GAAenD,EAAI46B,EAAQE,EAAO,GAClCvxB,EAAavJ,EAAIoJ,IA+Df2xB,GAAkB,SAASx5B,EAAIy5B,GAEjC,IAGIC,EAHAnI,EAAK,IAAIR,GACTtyB,EAAKuB,EAAGvB,GACRnpB,EAAI,IAAI0zB,GAOZ,GAJAnN,GAAK4kB,UAAUzgB,GACf41B,GAAK51B,EAAI1qB,GACTg9C,GAAUtyB,EAAIsvB,GAAEqK,SAEZ35B,EAAG7xB,EAAExB,QAAU2iD,GAAE4J,SAAWl5B,EAAG7xB,EAAExB,QAAU2iD,GAAEsK,SAAU,CAIvD,IAHAryB,EAAevH,EAAGvB,GAAInpB,GACtBk/C,GAAW/1B,EAAI8yB,GAAI,GACnB0H,GAASj5B,EAAI1qB,EAAEnH,GACRikD,GAASpyB,EAAI,MACpB,GAAIi1B,GAAaj1B,EAAI,GAEjB,OADA00B,GAAWj2B,GACJg7B,EAEPC,EAAKn5B,EAAU9B,QAEnB6I,EAActH,EAAGvB,GAAInpB,GACrBk/C,GAAW/1B,EAAI8yB,GAAI,GACnBmI,EAAKpkD,EAAE8N,EASX,OANAmyC,GAASv1B,GACT00B,GAAWj2B,GACPuB,EAAG7xB,EAAExB,QAAU2iD,GAAE6F,SAAWn1B,EAAG7xB,EAAExB,QAAU2iD,GAAE8F,YAC7CqE,EAAav5B,EAAYzB,EAAIg7B,EAAYl5B,EAAU9B,KACvDkD,GAAiBlD,EAAIi7B,GAEdD,GAmHLhE,GAAY,SAASz1B,GACvB,IAAI6H,EAAO7H,EAAGwe,WAEd,OADAsV,GAAW9zB,GACJA,EAAG7xB,EAAExB,OACR,KAAK,GACDkvB,GAAK4kB,UAAUzgB,GACf,MAEJ,KAAKsvB,GAAEuK,OAxHA,SAAS75B,EAAI6H,GAExB,IAAIpJ,EAAKuB,EAAGvB,GACRg7B,EAAax9B,EAEjB,IADAw9B,EAAaD,GAAgBx5B,EAAIy5B,GAC1Bz5B,EAAG7xB,EAAExB,QAAU2iD,GAAE8F,WACpBqE,EAAaD,GAAgBx5B,EAAIy5B,GACjCrH,GAASpyB,EAAIsvB,GAAE6F,UACfzrD,GAAMs2B,GACVwyB,GAAYxyB,EAAIsvB,GAAE+F,OAAQ/F,GAAEuK,MAAOhyB,GACnClG,GAAiBlD,EAAIg7B,GA+GbK,CAAO95B,EAAI6H,GACX,MAEJ,KAAKynB,GAAEyK,UAjSG,SAAS/5B,EAAI6H,GAE3B,IAAIpJ,EAAKuB,EAAGvB,GACR8yB,EAAK,IAAIR,GACbl1B,GAAK4kB,UAAUzgB,GACf,IAAIg6B,EAAYn5B,EAAcpC,GAC1Bw7B,EAAWziC,GAAKwI,GACpBw0B,GAAW/1B,EAAI8yB,EAAI,GACnBe,GAAUtyB,EAAIsvB,GAAEgK,OAChB5vD,GAAMs2B,GACNqI,GAAY5J,EAAIu7B,GAChBxH,GAAYxyB,EAAIsvB,GAAE+F,OAAQ/F,GAAEyK,SAAUlyB,GACtC6sB,GAAWj2B,GACXkD,GAAiBlD,EAAIw7B,GAqRbC,CAAUl6B,EAAI6H,GACd,MAEJ,KAAKynB,GAAEgK,MACHz9B,GAAK4kB,UAAUzgB,GACft2B,GAAMs2B,GACNwyB,GAAYxyB,EAAIsvB,GAAE+F,OAAQ/F,GAAEgK,MAAOzxB,GACnC,MAEJ,KAAKynB,GAAE6K,QA1LC,SAASn6B,EAAI6H,GAEzB,IAAIpJ,EAAKuB,EAAGvB,GACR8yB,EAAK,IAAIR,GACbyD,GAAW/1B,EAAI8yB,EAAI,GACnB11B,GAAK4kB,UAAUzgB,GACf,IAAIwa,EAAUkY,GAAc1yB,GAC5B,OAAQA,EAAG7xB,EAAExB,OACT,KAAK,IApDE,SAASqzB,EAAIwa,EAAS3S,GAEjC,IAAIpJ,EAAKuB,EAAGvB,GACRlD,EAAOkD,EAAG+E,QACd0vB,GAAoBlzB,EAAI,eACxBkzB,GAAoBlzB,EAAI,eACxBkzB,GAAoBlzB,EAAI,cACxB+yB,GAAa/yB,EAAIwa,GACjB8X,GAAUtyB,EAAI,IACdmqB,GAAKnqB,GACLsyB,GAAUtyB,EAAI,IACdmqB,GAAKnqB,GACDoyB,GAASpyB,EAAI,IACbmqB,GAAKnqB,IAELmD,EAAW1E,EAAIA,EAAG+E,QAASgB,EAAU/F,EAAI,IACzCiF,GAAiBjF,EAAI,IAEzB06B,GAAQn5B,EAAIzE,EAAMsM,EAAM,EAAG,GAkCYuyB,CAAOp6B,EAAIwa,EAAS3S,GAAO,MAC9D,KAAK,GAA8B,KAAKynB,GAAE+K,OAhClC,SAASr6B,EAAIs6B,GAEzB,IAAI77B,EAAKuB,EAAGvB,GACRnM,EAAI,IAAI0W,GACRqqB,EAAQ,EACR93B,EAAOkD,EAAG+E,QAOd,IALA0vB,GAAoBlzB,EAAI,mBACxBkzB,GAAoBlzB,EAAI,eACxBkzB,GAAoBlzB,EAAI,iBAExB+yB,GAAa/yB,EAAIs6B,GACVlI,GAASpyB,EAAI,KAChB+yB,GAAa/yB,EAAI0yB,GAAc1yB,IAC/BqzB,IAEJf,GAAUtyB,EAAIsvB,GAAE+K,OAChB,IAAIxyB,EAAO7H,EAAGwe,WACdoV,GAAc5zB,EAAI,EAAG+2B,GAAQ/2B,EAAI1N,GAAIA,GACrCgR,EAAgB7E,EAAI,GACpB06B,GAAQn5B,EAAIzE,EAAMsM,EAAMwrB,EAAQ,EAAG,GAYkBkH,CAAQv6B,EAAIwa,GAAU,MACvE,QAAS3e,GAAKkE,iBAAiBC,EAAI/pB,EAAa,wBAAwB,IAE5Eu8C,GAAYxyB,EAAIsvB,GAAE+F,OAAQ/F,GAAE6K,OAAQtyB,GACpC6sB,GAAWj2B,GA8KH+7B,CAAQx6B,EAAI6H,GACZ,MAEJ,KAAKynB,GAAEmL,WA/RI,SAASz6B,EAAI6H,GAE5B,IAAIpJ,EAAKuB,EAAGvB,GACRi8B,EAAc75B,EAAcpC,GAC5Bk8B,EAAM,IAAI5J,GACV6J,EAAM,IAAI7J,GACdyD,GAAW/1B,EAAIk8B,EAAK,GACpBnG,GAAW/1B,EAAIm8B,EAAK,GACpB/+B,GAAK4kB,UAAUzgB,GACfu1B,GAASv1B,GACTwyB,GAAYxyB,EAAIsvB,GAAEgG,SAAUhG,GAAEmL,UAAW5yB,GACzC,IAAIoyB,EAAWziC,GAAKwI,GAChB46B,EAAI1J,OACJ5oB,GAAgB7J,EAAIw7B,EAAUW,EAAIh3B,SACtC8wB,GAAWj2B,GACXmD,GAAenD,EAAIw7B,EAAUS,GAC7BhG,GAAWj2B,GAgRHo8B,CAAW76B,EAAI6H,GACf,MAEJ,KAAKynB,GAAEuH,aAvFE,SAAS72B,EAAI6H,GAE1B,IAAIvyB,EAAI,IAAI0zB,GACRpyB,EAAI,IAAIoyB,GACZnN,GAAK4kB,UAAUzgB,GACf,IAAIu2B,EAlBS,SAASv2B,EAAI1qB,GAE1B,IAAIihD,EAAW,EAEf,IADA5C,GAAU3zB,EAAI1qB,GACQ,KAAf0qB,EAAG7xB,EAAExB,OACR+oD,GAAS11B,EAAI1qB,GAKjB,OAJmB,KAAf0qB,EAAG7xB,EAAExB,QACL4pD,EAAW,EACXb,GAAS11B,EAAI1qB,IAEVihD,EAQQloB,CAASrO,EAAI1qB,GAC5BghD,GAAKt2B,EAAIppB,EAAG2/C,EAAU1uB,GACtBoC,GAAcjK,EAAGvB,GAAInpB,EAAGsB,GACxBoxB,EAAahI,EAAGvB,GAAIoJ,GAgFZizB,CAAS96B,EAAI6H,GACb,MAEJ,KAAKynB,GAAEyL,SACHl/B,GAAK4kB,UAAUzgB,GACXoyB,GAASpyB,EAAIsvB,GAAEuH,aAvIb,SAAS72B,GACvB,IAAIppB,EAAI,IAAIoyB,GACRvK,EAAKuB,EAAGvB,GACZs0B,GAAa/yB,EAAI0yB,GAAc1yB,IAC/BozB,GAAgBpzB,EAAI,GACpBs2B,GAAKt2B,EAAIppB,EAAG,EAAGopB,EAAGwe,YAElB2U,GAAU10B,EAAI7nB,EAAEJ,EAAE8oB,MAAMmb,QAAUhc,EAAGE,GAiIzBq8B,CAAUh7B,GA9HR,SAASA,GAEvB,IACI6zB,EADAR,EAAQ,EAER/gC,EAAI,IAAI0W,GACZ,GACI+pB,GAAa/yB,EAAI0yB,GAAc1yB,IAC/BqzB,UACKjB,GAASpyB,EAAI,KAClBoyB,GAASpyB,EAAI,IACb6zB,EAAQkD,GAAQ/2B,EAAI1N,IAEpBA,EAAEpQ,EAAIic,GAAQizB,MACdyC,EAAQ,GAEZD,GAAc5zB,EAAIqzB,EAAOQ,EAAOvhC,GAChC8gC,GAAgBpzB,EAAIqzB,GAgHR4H,CAAUj7B,GACd,MAEJ,KAAKsvB,GAAE4L,WACHr/B,GAAK4kB,UAAUzgB,GAjVT,SAASA,EAAIi0B,EAAOpsB,GAElC,IAEI9zB,EAFA0qB,EAAKuB,EAAGvB,GACR08B,EAAKn7B,EAAGoY,IAAI6b,OApBE,SAASx1B,EAAI08B,EAAIlH,GACnC,IAAK,IAAIrmD,EAAI6wB,EAAG8yB,GAAGP,WAAYpjD,EAAIutD,EAAG37C,EAAG5R,IACrC,GAAIkjD,GAAMmD,EAAOkH,EAAGxmC,IAAI/mB,GAAGmO,MAAO,CAC9B,IAAIyV,EAAM/S,GAAQ8zB,iBAAiB9T,EAAGuB,GAAG/sB,EACrCgD,EAAa,yCAAyC,GACtDg+C,EAAM1wC,SAAU43C,EAAGxmC,IAAI/mB,GAAGi6B,MAC9BiqB,GAASrzB,EAAGuB,GAAIxO,IAgBxB4pC,CAAc38B,EAAI08B,EAAIlH,GACtB3B,GAAUtyB,EAAIsvB,GAAE4L,YAEhBnnD,EAAIugD,GAAct0B,EAAIm7B,EAAIlH,EAAOpsB,EAAMhH,EAAcpC,IAbpC,SAASuB,GAC1B,KAAsB,KAAfA,EAAG7xB,EAAExB,OAA0CqzB,EAAG7xB,EAAExB,QAAU2iD,GAAE4L,YACnEzF,GAAUz1B,GAYdq7B,CAAar7B,GACTi1B,GAAaj1B,EAAI,KAEjBm7B,EAAGxmC,IAAI5gB,GAAG6vB,QAAUnF,EAAG8yB,GAAG3tB,SAE9B2wB,GAAUv0B,EAAIm7B,EAAGxmC,IAAI5gB,IAoUbunD,CAAUt7B,EAAI0yB,GAAc1yB,GAAK6H,GACjC,MAEJ,KAAKynB,GAAEkG,UACH35B,GAAK4kB,UAAUzgB,GA/EX,SAASA,GAErB,IAEIqJ,EAAOC,EAFP7K,EAAKuB,EAAGvB,GACRnM,EAAI,IAAI0W,GAERisB,GAAaj1B,EAAI,IAAqB,KAAfA,EAAG7xB,EAAExB,MAC5B08B,EAAQC,EAAO,GAEfA,EAAOytB,GAAQ/2B,EAAI1N,GACfu+B,GAAWv+B,EAAEpQ,IACb8nB,GAAgBvL,EAAInM,GAChBA,EAAEpQ,IAAMic,GAAQyG,OAAkB,IAAT0E,IACzBsjB,GAAWvtB,EAAeZ,EAAInM,GAAI8c,IAClCxT,GAAWyD,EAAeZ,EAAInM,GAAG0M,IAAMP,EAAGmF,UAE9CyF,EAAQ5K,EAAGmF,QACX0F,EAAO/uB,GAEM,IAAT+uB,EACAD,EAAQ1C,EAAgBlI,EAAInM,IAE5BoU,EAAiBjI,EAAInM,GACrB+W,EAAQ5K,EAAGmF,QACXhI,GAAW0N,IAAS7K,EAAG+E,QAAU6F,KAI7CD,GAAS3K,EAAI4K,EAAOC,GACpB8oB,GAASpyB,EAAI,IAoDLu7B,CAAQv7B,GACR,MAEJ,KAAKsvB,GAAEsK,SACP,KAAKtK,GAAE4J,QACHD,GAASj5B,EAAIO,EAAUP,EAAGvB,KAC1B,MAEJ,SAvGQ,SAASuB,GAErB,IAAIvB,EAAKuB,EAAGvB,GACRnpB,EAAI,IAAIqjD,GACZ1B,GAAYj3B,EAAI1qB,EAAEA,GACC,KAAf0qB,EAAG7xB,EAAExB,OAAyD,KAAfqzB,EAAG7xB,EAAExB,OACpD2I,EAAEg8C,KAAO,KACTsH,GAAW54B,EAAI1qB,EAAG,KAGlBi9C,GAAgBvyB,EAAI1qB,EAAEA,EAAE4M,IAAMic,GAAQyG,MAAO3uB,EAAa,gBAAgB,IAC1E4uB,GAASxF,EAAeZ,EAAInpB,EAAEA,GAAI,IA6F9BkmD,CAASx7B,GAIjBpE,GAAWoE,EAAGvB,GAAGrb,EAAEqgB,cAAgBzD,EAAGvB,GAAG+E,SAAWxD,EAAGvB,GAAG+E,SAAWxD,EAAGvB,GAAGmF,SAC3E5D,EAAGvB,GAAG+E,QAAUxD,EAAGvB,GAAGmF,QACtBmwB,GAAW/zB,IA4CfvpB,EAAOC,QAAQ2hC,QAz5Cf,MACIx8B,cACIlR,KAAKsoD,OAAS,CACVt+B,IAAK,GACLnV,EAAG1D,IACHsP,KAAMtP,KAEVnR,KAAKsgB,GAAK,IAAI4mC,GACdlnD,KAAKspD,MAAQ,IAAIpC,KAk5CzBp7C,EAAOC,QAAQynB,QAAcA,GAC7B1nB,EAAOC,QAAQsyB,QAAcA,GAC7BvyB,EAAOC,QAAQgiC,YA3BK,SAASzlC,EAAG8X,EAAGoJ,EAAMikB,EAAKr8B,EAAM4kC,GAChD,IAAI8a,EAAW,IAAI5/B,GAAKukB,SACpBsb,EAAY,IAAIrK,GAChBzvC,EAAKpD,GAAM08B,iBAAiBjoC,EAAG,GAiBnC,OAhBAqL,GAAIs6B,YAAY3lC,GAChBA,EAAE+M,MAAM/M,EAAEoM,IAAI,GAAGqoC,YAAY9lC,GAC7B65C,EAASn3B,EAAItlB,GAAOgE,SAAS/P,GAC7BqL,GAAIs6B,YAAY3lC,GAChBA,EAAE+M,MAAM/M,EAAEoM,IAAI,GAAGsoC,UAAU8T,EAASn3B,GACpCo3B,EAAUt4C,EAAIxB,EAAGR,EAAI,IAAI05B,GAAM7nC,GAC/ByoD,EAAUt4C,EAAElH,OAAS0C,GAAS3L,EAAG8I,GACjC0/C,EAAStnC,KAAOA,EAChBsnC,EAASrjB,IAAMA,EACfA,EAAI6a,OAAOzzC,EAAI44B,EAAIntB,GAAGzL,EAAI44B,EAAI6b,MAAMz0C,EAAI,EACxCqc,GAAK6kB,cAAcztC,EAAGwoD,EAAU1wC,EAAG2wC,EAAUt4C,EAAElH,OAAQykC,GA3B1C,SAAS3gB,EAAIvB,GAC1B,IAAI8yB,EAAK,IAAIR,GACTz7C,EAAI,IAAI0zB,GACZyrB,GAAUz0B,EAAIvB,EAAI8yB,GAClB9yB,EAAGrb,EAAE6wB,WAAY,EACjB2e,GAASt9C,EAAG6oB,GAAQ+G,OAAQ,GAC5BouB,GAAW70B,EAAIuB,EAAGsgB,KAAMhrC,GACxBumB,GAAK4kB,UAAUzgB,GACfu1B,GAASv1B,GACTqyB,GAAMryB,EAAIsvB,GAAEjS,QACZ2X,GAAWh1B,GAkBX27B,CAASF,EAAUC,GACnB9/B,IAAY8/B,EAAUpK,MAA2B,IAAnBoK,EAAUp/C,OAAem/C,EAASh9B,IAEhE7C,GAA4B,IAAjBwc,EAAI6a,OAAOzzC,GAAwB,IAAb44B,EAAIntB,GAAGzL,GAA2B,IAAhB44B,EAAI6b,MAAMz0C,UACtDvM,EAAE+M,QAAQ/M,EAAEoM,KACZuC,GAQXnL,EAAOC,QAAQyxB,UA1+CG,SAASjmB,GACvB,OAAOA,IAAMic,GAAQ2F,WAAa5hB,IAAMic,GAAQ+G,qCCrKpD,MAAM,aACF5qB,EAAY,iBACZmB,EAAgB,oBAChBE,EACAnD,gBAAgB,YACZW,EAAW,SACXT,EAAQ,WACRK,EAAU,YACVG,GAEJ2D,eAAe,OACXC,IAEJ,EAAQ,MACN2B,EAAuB,EAAQ,MAC/BH,EAAuB,EAAQ,MAC/BkvB,EAAuB,EAAQ,MAC/BxuB,EAAuB,EAAQ,MAC/BF,EAAuB,EAAQ,MAI/B88C,EAAmB,EAAIthD,EAE7B,MAAMuhD,EAEFhgD,cACIlR,KAAKyV,KAAO,KACZzV,KAAK8U,QAAU3D,IACfnR,KAAK0U,IAAMvD,IACXnR,KAAK+zB,SAAW,KAChB/zB,KAAK21B,KAAO,KAGZ31B,KAAKojC,OAASjyB,IACdnR,KAAKmrC,OAAS,KACdnrC,KAAK+iC,UAAY5xB,IAEjBnR,KAAK0a,IAAM,KACX1a,KAAKib,cAAgB,KACrBjb,KAAK2a,MAAQ,KAEb3a,KAAK6Z,SAAW1I,IAChBnR,KAAKsa,WAAanJ,KAK1B,MAAMoT,EAEFrT,YAAYm7B,GACRrsC,KAAKiF,GAAKonC,EAAE+D,aAEZpwC,KAAK0pC,QAAU,IAAIwnB,EACnBlxD,KAAK0U,IAAMvD,IACXnR,KAAKgW,WAAa7E,IAClBnR,KAAKmpC,MAAQh4B,IAGbnR,KAAKsV,IAAM+2B,EACXrsC,KAAKqV,MAAQ,KACbrV,KAAK2U,GAAK,KACV3U,KAAKosC,SAAW,KAChBpsC,KAAKisC,QAAU,EACfjsC,KAAKiiC,KAAO,KACZjiC,KAAK2oC,SAAW,EAChB3oC,KAAK8oC,cAAgB,EACrB9oC,KAAKmb,UAAY,EACjBnb,KAAK6oC,UAAY7oC,KAAK8oC,cACtB9oC,KAAKya,IAAM,EACXza,KAAKwa,OAASrI,EACdnS,KAAK8a,QAAU,GAKvB,MAAMq2C,EAEFjgD,cACIlR,KAAKowC,WAAa,EAClBpwC,KAAKg+C,IAAM,IAAIvkC,QAEfzZ,KAAK2hB,WAAa,KAClB3hB,KAAKuV,WAAa,IAAIzB,EAAQS,OAAOxG,EAAU,MAC/C/N,KAAK8b,MAAQ,KACb9b,KAAKic,cAAgB,KACrBjc,KAAK0lB,QAAU,KACf1lB,KAAKunC,OAAS,IAAI57B,MAAMwI,EAAI+wB,IAAIksB,MAChCpxD,KAAK8d,GAAK,IAAInS,MAAM6C,IAK5B,MASMo8B,EAAc,SAAStiC,GAChBA,EAAEqM,GACRghB,KAAO,MAGR07B,EAAa,SAAS3iC,EAAIpmB,GAC5BomB,EAAGrZ,MAAQ,IAAI1J,MAAMslD,GACrBviC,EAAGha,IAAM,EACTga,EAAG1Y,WAAai7C,EA1FA,EA4FhB,IAAIt8C,EAAK+Z,EAAGgb,QACZ/0B,EAAGghB,KAAOhhB,EAAGof,SAAW,KACxBpf,EAAG2F,WAAa,EAChB3F,EAAGG,QAAU4Z,EAAGha,IAChBC,EAAGc,KAAOiZ,EAAGrZ,MAAMqZ,EAAGha,KACtBga,EAAGrZ,MAAMqZ,EAAGha,OAAS,IAAIZ,EAAQS,OAAOxG,EAAU,MAClD4G,EAAGD,IAAMga,EAAGha,IAAM/E,EAClB+e,EAAG/Z,GAAKA,GAGN28C,EAAY,SAAShpD,GACvBA,EAAEqM,GAAKrM,EAAEohC,QACTkB,EAAYtiC,GACZA,EAAE+M,MAAQ,MAiBRk8C,EAAY,SAASjpD,GACvB,IAAI+jC,EAAI/jC,EAAEgN,IACV+7C,EAAW/oD,GAbO,SAASA,EAAG+jC,GAC9B,IAAImlB,EAAWn9C,EAAOgE,SAAS/P,GAC/B+jC,EAAE92B,WAAWynC,UAAUwU,GACvBn9C,EAAOoO,YAAY+uC,EAAUxgD,EAAqB,IAAI8C,EAAQS,OAAOhG,EAAajG,IAClF+L,EAAOoO,YAAY+uC,EAAU1gD,EAAkB,IAAIgD,EAAQS,OAAOnG,EAAYiG,EAAOgE,SAAS/P,KAU9FmpD,CAAcnpD,EAAG+jC,GACjBl4B,EAAIu9C,UAAUppD,GACd+jC,EAAE3mB,QAAUmd,EAAKpd,YAAY,OAyCjC3Z,EAAOC,QAAQwY,UAAkBA,EACjCzY,EAAOC,QAAQmlD,SAAkBA,EACjCplD,EAAOC,QAAQmP,SAAkB,EACjCpP,EAAOC,QAAQwO,SAAkB,EACjCzO,EAAOC,QAAQk5B,YAAkB,EACjCn5B,EAAOC,QAAQ4lD,WAAkB,EACjC7lD,EAAOC,QAAQqP,YAAkB,GACjCtP,EAAOC,QAAQ63B,UAAkB,GACjC93B,EAAOC,QAAQg9B,eAAkB,GACjCj9B,EAAOC,QAAQ6lD,SAAkB,IACjC9lD,EAAOC,QAAQ43B,SAAkB,IACjC73B,EAAOC,QAAQqQ,YAnLK,EAoLpBtQ,EAAOC,QAAQy2C,UAjBG,SAASl6C,IAJP,SAASA,GACzBgpD,EAAUhpD,GAKVupD,CADAvpD,EAAIA,EAAEgN,IAAIqM,aAiBd7V,EAAOC,QAAQga,aAlCM,WACjB,IAAIsmB,EAAI,IAAI8kB,EACR7oD,EAAI,IAAIic,EAAU8nB,GAOtB,OANAA,EAAE1qB,WAAarZ,EAEXqL,EAAI24B,qBAAqBhkC,EAAGipD,EAAW,QAAUp/C,IACjD7J,EAAI,MAGDA,GA0BXwD,EAAOC,QAAQ+zB,cApDO,SAASx3B,GAC3B,IAAI+jC,EAAI/jC,EAAEgN,IACNoZ,EAAK,IAAInK,EAAU8nB,GAQvB,OAPA/jC,EAAE+M,MAAM/M,EAAEoM,KAAO,IAAIZ,EAAQS,OAAOhG,EAAamgB,GACjDmU,EAAKpuB,aAAanM,GAClBomB,EAAGia,SAAWrgC,EAAEqgC,SAChBja,EAAGoa,cAAgBxgC,EAAEwgC,cACrBpa,EAAGuT,KAAO35B,EAAE25B,KACZvT,EAAGma,UAAYna,EAAGoa,cAClBuoB,EAAW3iC,GACJA,GA2CX5iB,EAAOC,QAAQg/B,cA9GO,SAASziC,GAC3B,IAAIqM,EAAK,IAAIu8C,EAKb,OAJA5oD,EAAEqM,GAAGghB,KAAOhhB,EACZA,EAAGof,SAAWzrB,EAAEqM,GAChBA,EAAGghB,KAAO,KACVrtB,EAAEqM,GAAKA,EACAA,GAyGX7I,EAAOC,QAAQ6+B,YAAkBA,EACjC9+B,EAAOC,QAAQ+lD,gBA1CS,SAASxpD,EAAGomB,GAChC4iC,EAAU5iC,iCCpKd,MAAM,aACF1jB,EAAY,aACZgB,EAAY,eACZ/B,EAAc,aACdqB,GACA,EAAQ,OACN,WAAE2lB,GAAe,EAAQ,MAE/B,MAAM8gC,EAEF7gD,YAAY5I,EAAG1H,GACXZ,KAAKgyD,KAAO,KACZhyD,KAAKiyD,WAAarxD,EAGtBgY,SACI,OAAO5Y,KAAKiyD,WAGhB9iB,SACI,OAAOnvC,KAAKiyD,WAAW1wD,QAK/B,MAQM2wC,EAAY,SAAStxC,GACvBqwB,EAAWjmB,EAAapK,IACxB,IAAI4J,EAAM5J,EAAIW,OACVmJ,EAAI,IACR,IAAK,IAAIzH,EAAE,EAAGA,EAAEuH,EAAKvH,IACjByH,GAAK9J,EAAIqC,GAAGiK,SAAS,IACzB,OAAOxC,GAYLsJ,EAAa,SAAS1L,EAAG1H,GAE3B,OADAqwB,EAAWrwB,aAAewJ,YACnB,IAAI2nD,EAAQzpD,EAAG1H,IAa1BkL,EAAOC,QAAQk6C,cAzCO,SAAS17C,EAAG0B,GAG9B,OAFAglB,EAAW1mB,aAAawnD,GACxB9gC,EAAWhlB,aAAa8lD,GACjBxnD,GAAK0B,GAAKD,EAAazB,EAAE0nD,WAAYhmD,EAAEgmD,aAuClDnmD,EAAOC,QAAQmmC,UAAmBA,EAClCpmC,EAAOC,QAAQomC,iBA1BU,SAAS7wB,GAK9B,OAJA2P,EAAW3P,aAAcywC,GACV,OAAZzwC,EAAG0wC,OACF1wC,EAAG0wC,KAAO9f,EAAU5wB,EAAG1I,WAEpB0I,EAAG0wC,MAsBdlmD,EAAOC,QAAQiI,WAAmBA,EAClClI,EAAOC,QAAQkI,SAbE,SAAS3L,EAAG1H,GACzB,OAAOoT,EAAW1L,EAAG2B,EAAerJ,KAaxCkL,EAAOC,QAAQmI,gBATS,SAAS5L,EAAG1H,GAChC,OAAOoT,EAAW1L,EAAGgD,EAAa1K,KAStCkL,EAAOC,QAAQgmD,QAAmBA,8BCxElC,MAAM,QAAEG,GAAY,EAAQ,OAEtB,gBACFC,EAAe,mBACfC,EAAkB,eAClB/b,EAAc,eACdgc,EAAc,kBACdC,EAAiB,MACjBC,EAAK,sBACLC,GACA,EAAQ,OACN,aACFxkD,EAAY,cACZK,EAAa,SACbN,EAAQ,YACRG,EAAW,YACXC,EAAW,WACXC,EAAU,SACVtE,EAAQ,gBACRoO,EAAe,SACf8E,EAAQ,aACRiB,EAAY,WACZjV,EAAU,cACV8V,EAAa,aACbU,EAAY,QACZhW,EAAO,iBACPuN,EAAgB,gBAChB3D,EAAe,sBACfiO,EAAqB,gBACrBhO,EAAe,gBACfkO,EAAe,YACfE,EAAW,eACXzX,EAAc,eACdH,EAAc,cACd+X,EAAa,WACbe,EAAU,aACVrP,EAAY,iBACZyP,EAAgB,WAChBjN,EAAU,cACV2N,EAAa,cACbS,EAAa,aACb3a,EAAY,aACZ4P,EAAY,eACZyL,EAAc,SACd9K,EAAQ,iBACR7H,GACA,EAAQ,OACN,YACFsU,EAAW,aACXmG,EAAY,gBACZ1D,EAAe,aACfC,EAAY,eACZC,EAAc,cACdyD,EAAa,cACbC,EAAa,cACb9F,EAAa,cACbiC,EAAa,kBACb+D,GAAiB,kBACjBvE,GAAiB,iBACjBF,GAAgB,gBAChBoC,GAAe,iBACfxC,GAAgB,eAChBiF,GAAc,WACdjG,GAAU,YACV1T,GAAW,gBACXsa,GAAe,eACfzF,GAAc,kBACdK,GAAiB,gBACjBU,GAAe,oBACf6E,GAAmB,eACnBO,GAAc,cACdjH,IACA,EAAQ,MACNre,GAAS,EAAQ,OACjB,aACF+C,GAAY,kBACZ9B,GAAiB,YACjBgC,GAAW,aACXZ,IACA,EAAQ,MAGNmnD,GADU,IACOhxD,WAAW,GAU5BixD,GAAU,WAGVC,GAAS,SAASjoD,GACpB,IAAIF,EAAMN,GAAkBQ,EAAG,GAC/B,OAAOF,GAAO,EAAIA,EAAME,EAAEnJ,QAIxBqxD,GAAW,SAASpsD,EAAKgE,GAC3B,OAAIhE,GAAO,EAAUA,EACZ,EAAIA,EAAMgE,EAAY,EACnBA,EAAMhE,EAAM,GAkCtByW,GAAS,SAAS3U,EAAG2D,EAAGwU,EAAMiI,GAEhC,OADAM,EAAgBN,EAAGzc,EAAGwU,GACf,GAeLoyC,GAAaP,EAAkB/wD,OAAS,EAmCxCuxD,GAAkB,SAASxqD,EAAG2Y,EAAKxX,GACrC,IAAI+f,EAhCW,SAAS/f,GAExB,GAAI4rC,OAAO0d,GAAGtpD,EAAGmuC,KACb,OAAOtsC,GAAa,OACnB,GAAI+pC,OAAO0d,GAAGtpD,GAAG,KAClB,OAAO6B,GAAa,QACnB,GAAItG,OAAO8rB,MAAMrnB,GAClB,OAAO6B,GAAa,OACnB,GAAU,IAAN7B,EAAS,CAEd,IAAIupD,EAAOd,EAAQG,EAAiB,QAAS5oD,GAG7C,OAFI4rC,OAAO0d,GAAGtpD,GAAI,KACdupD,EAAO,IAAMA,GACV1nD,GAAa0nD,GACjB,CACH,IAAIxpC,EAAO,GACPypC,EAAKV,EAAM9oD,GACXiN,EAAIu8C,EAAG,GACPtrC,EAAIsrC,EAAG,GASX,OARIv8C,EAAI,IACJ8S,GAAQ,IACR9S,GAAKA,GAET8S,GAAQ,KACRA,IAAa,EAAJ9S,GAAiBxJ,SAAS,IACnCya,GA3BO,EA4BP6B,GAAQ0oC,EAAQ,OAAQvqC,GACjBrc,GAAake,IAKb0pC,CAAWzpD,GACtB,GAAwB,KAApBwX,EAAI4xC,IACJ,IAAK,IAAI5vD,EAAI,EAAGA,EAAIumB,EAAKjoB,OAAQ0B,IAAK,CAClC,IAAImI,EAAIoe,EAAKvmB,GACTmI,GAAK,KACLoe,EAAKvmB,GAAS,IAAJmI,QAES,KAApB6V,EAAI4xC,KACX5rC,GAAW3e,EAAGgD,GAAa,qDAC/B,OAAOke,GAcL2pC,GAAQ7nD,GAAa,SAOrB8nD,GAAUzrC,GAAM,IAAMA,GAAKA,GAAK,KAAS,IAAMA,GAAKA,GAAK,GACzD0rC,GAAU1rC,GAAK,IAAMA,GAAKA,GAAK,GAC/B2rC,GAAU3rC,GAAM,GAAQA,GAAKA,GAAK,IAAe,MAANA,EAC3C4rC,GAAU5rC,GAAK,IAAMA,GAAKA,GAAK,IAC/B6rC,GAAU7rC,GAAK,IAAMA,GAAKA,GAAK,IAC/B8rC,GAAU9rC,GAAK,IAAMA,GAAKA,GAAK,GAC/B+rC,GAAU/rC,GAAM,IAAMA,GAAKA,GAAK,KAAS,IAAMA,GAAKA,GAAK,IAAQ,IAAMA,GAAKA,GAAK,GACjFgsC,GAAUhsC,GAAK4rC,GAAQ5rC,KAAO+rC,GAAQ/rC,GACtCisC,GAAUjsC,GAAW,KAANA,GAAaA,GAAK,GAAKA,GAAK,GAC3CksC,GAAWlsC,GAAM,IAAMA,GAAKA,GAAK,IAAQ,IAAMA,GAAKA,GAAK,IAAQ,IAAMA,GAAKA,GAAK,IAkCjFmsC,GAAa,SAASxrD,EAAG2D,EAAG8a,GAC9B,OAAOjN,EAASxR,EAAGye,IACf,KAAK5Y,EAAa,CACd,IAAIzD,EAAIyO,EAAa7Q,EAAGye,IAnClB,SAAS9a,EAAGvB,EAAGF,GAC7BkiB,EAAazgB,EAAG,IAChB,IAAIhJ,EAAI,EACR,KAAOuH,KAAO,CACV,GAAa,KAATE,EAAEzH,IACO,KAATyH,EAAEzH,IACO,KAATyH,EAAEzH,GACFypB,EAAazgB,EAAG,IAChBygB,EAAazgB,EAAGvB,EAAEzH,SACf,GAAIqwD,GAAQ5oD,EAAEzH,IAAK,CACtB,IAAIumB,EAAO,GAAG9e,EAAEzH,GACZowD,GAAQ3oD,EAAEzH,EAAE,MACZumB,EAAO,IAAI1oB,OAAO,EAAE0oB,EAAKjoB,QAAUioB,GACvCN,EAAejd,EAAGX,GAAa,KAAOke,SAEtCkD,EAAazgB,EAAGvB,EAAEzH,IACtBA,IAEJypB,EAAazgB,EAAG,IAkBR8nD,CAAU9nD,EAAGvB,EAAGA,EAAEnJ,QAClB,MAEJ,KAAK2M,EAAa,CACd,IAAIsb,EACJ,GAAK1K,EAAcxW,EAAGye,GAIf,CACH,IAAIlS,EAAIqP,EAAc5b,EAAGye,GAIzByC,EAAOle,GAAa4mD,EAHNr9C,IAAMwhC,EACd,MAAQ+b,EAAqB,IAC7BD,EAC8Bt9C,QATZ,CACxB,IAAIA,EAAItL,EAAajB,EAAGye,GACxByC,EAAOspC,GAAgBxqD,EAAGgD,GAAa,IAAI8mD,MAAwBv9C,GAnBnE,SAAS2U,GACrB,GAAItf,GAAkBsf,EAAM,IAAgC,EAAG,CAC3D,IAAIwqC,EAAQxB,IACRyB,EAAS/pD,GAAkBsf,EAAMwqC,GACjCC,IAAQzqC,EAAKyqC,GAAU,KAgBnBC,CAAQ1qC,GAQZN,EAAejd,EAAGud,GAClB,MAEJ,KAAKzb,EAAU,KAAKC,EAChBugB,GAAejmB,EAAGye,GAClB4F,EAAc1gB,GACd,MAEJ,QACI6a,EAAcxe,EAAGye,EAAKzb,GAAa,gCAKzC6oD,GAAa,SAAS7rD,EAAG8rD,EAASnxD,EAAGoxD,GACvC,IAAI59C,EAAIxT,EACR,KAAsB,IAAfmxD,EAAQ39C,IAAYvM,GAAkBipD,GAAOiB,EAAQ39C,KAAO,GAAGA,IAClEA,EAAIxT,GAAKkwD,GAAM5xD,QACf0lB,GAAW3e,EAAGgD,GAAa,oCAC3B+nD,GAAQe,EAAQ39C,KAAKA,IACrB48C,GAAQe,EAAQ39C,KAAKA,IACN,KAAf29C,EAAQ39C,KACRA,IACI48C,GAAQe,EAAQ39C,KAAKA,IACrB48C,GAAQe,EAAQ39C,KAAKA,KAEzB48C,GAAQe,EAAQ39C,KAChBwQ,GAAW3e,EAAGgD,GAAa,iDAC/B+oD,EAAK,GAAK,GACV,IAAK,IAAIhqC,EAAI,EAAGA,EAAI5T,EAAIxT,EAAI,EAAGonB,IAC3BgqC,EAAKhqC,EAAE,GAAK+pC,EAAQnxD,EAAEonB,GAC1B,OAAO5T,GAML69C,GAAY,SAASD,EAAME,GAC7B,IAAInrD,EAAIirD,EAAK9yD,OACTizD,EAAKD,EAAOhzD,OACZkzD,EAAOJ,EAAKjrD,EAAI,GACpB,IAAK,IAAInG,EAAI,EAAGA,EAAIuxD,EAAIvxD,IACpBoxD,EAAKpxD,EAAImG,EAAI,GAAKmrD,EAAOtxD,GAC7BoxD,EAAKjrD,EAAIorD,EAAK,GAAKC,GAyFjBC,GAAK,IAOX,MAAMC,GACFzjD,YAAY5I,GACRtI,KAAKsI,EAAIA,EACTtI,KAAK40D,UAAW,EAChB50D,KAAK60D,SAAW,GAOxB,MAUMC,GAAQzB,GAER0B,GAAS,SAAS9zC,EAAK+zC,GACzB,GAAI/zC,EAAI6pB,KAAO7pB,EAAIvW,EAAEnJ,SAAWuzD,GAAM7zC,EAAIvW,EAAEuW,EAAI6pB,MAC5C,OAAOkqB,EACN,CACD,IAAIzqD,EAAI,EACR,GACIA,EAAQ,GAAJA,GAAU0W,EAAIvW,EAAEuW,EAAI6pB,OAAS,UAC5B7pB,EAAI6pB,IAAM7pB,EAAIvW,EAAEnJ,QAAUuzD,GAAM7zC,EAAIvW,EAAEuW,EAAI6pB,OAASvgC,GAAK,aACjE,OAAOA,IAQT0qD,GAAc,SAASt7B,EAAG1Y,EAAK+zC,GACjC,IAAIzxC,EAAKwxC,GAAO9zC,EAAK+zC,GAGrB,OAFIzxC,EAxDW,IAwDQA,GAAM,IACzB0D,GAAW0S,EAAErxB,EAAGgD,GAAa,2CAA4CiY,EAzD9D,IA0DRA,GAML2xC,GAAY,SAASv7B,EAAG1Y,GAC1B,IAAIxW,EAAI,CACJ0qD,IAAKl0C,EAAIvW,EAAEuW,EAAI6pB,OACfrqB,KAAM,GAEV,OAAQhW,EAAE0qD,KACN,KAAK,GAAyC,OAA5B1qD,EAAEgW,KAAO,EAAGhW,EAAE0qD,IA5CrB,EA4C0C1qD,EACrD,KAAK,GAAyC,OAA5BA,EAAEgW,KAAO,EAAGhW,EAAE0qD,IA5CrB,EA4C0C1qD,EACrD,KAAK,IAAyC,OAA5BA,EAAEgW,KAAO,EAAGhW,EAAE0qD,IA9CrB,EA8C0C1qD,EACrD,KAAK,GAAyC,OAA5BA,EAAEgW,KAAO,EAAGhW,EAAE0qD,IA9CrB,EA8C0C1qD,EACrD,KAAK,IAEL,KAAK,IAAyC,OAA5BA,EAAEgW,KAAO,EAAGhW,EAAE0qD,IAlDrB,EAkD0C1qD,EADrD,KAAK,GAEL,KAAK,GACL,KAAK,GAAyC,OAA5BA,EAAEgW,KAAO,EAAGhW,EAAE0qD,IAnDrB,EAmD0C1qD,EACrD,KAAK,IAAyC,OAA5BA,EAAEgW,KAAO,EAAGhW,EAAE0qD,IAnDrB,EAmD0C1qD,EACrD,KAAK,IACL,KAAK,IAAyC,OAA5BA,EAAEgW,KAAO,EAAGhW,EAAE0qD,IArDrB,EAqD0C1qD,EACrD,KAAK,IAA+D,OAAlDA,EAAEgW,KAAOw0C,GAAYt7B,EAAG1Y,EAAK,GAAIxW,EAAE0qD,IAxD1C,EAwDgE1qD,EAC3E,KAAK,GAA+D,OAAlDA,EAAEgW,KAAOw0C,GAAYt7B,EAAG1Y,EAAK,GAAIxW,EAAE0qD,IAxD1C,EAwDgE1qD,EAC3E,KAAK,IAA+D,OAAlDA,EAAEgW,KAAOw0C,GAAYt7B,EAAG1Y,EAAK,GAAIxW,EAAE0qD,IAtD1C,EAsDgE1qD,EAC3E,KAAK,GAKD,OAJAA,EAAEgW,KAAOs0C,GAAO9zC,GAAM,IACN,IAAZxW,EAAEgW,MACFwG,GAAW0S,EAAErxB,EAAGgD,GAAa,uCACjCb,EAAE0qD,IA5DK,EA6DA1qD,EAEX,KAAK,IAA6C,OAApBA,EAAE0qD,IA7DrB,EA6D8C1qD,EACzD,KAAK,IAA6C,OAAhCA,EAAEgW,KAAO,EAAGhW,EAAE0qD,IA7DrB,EA6D8C1qD,EACzD,KAAK,GAA6C,OAApBA,EAAE0qD,IA7DrB,EA6D8C1qD,EACzD,KAAK,GAAa,MAClB,KAAK,GAEL,KAAK,GAAakvB,EAAEi7B,UAAW,EAAM,MADrC,KAAK,GAAaj7B,EAAEi7B,UAAW,EAAO,MAEtC,KAAK,GAAaj7B,EAAEk7B,SAAWI,GAAYt7B,EAAG1Y,EAzFrC,GAyFqD,MAC9D,QAASgG,GAAW0S,EAAErxB,EAAGgD,GAAa,8BAA+Bb,EAAE0qD,KAG3E,OADA1qD,EAAE0qD,IApEa,EAqER1qD,GAYL2qD,GAAa,SAASz7B,EAAG07B,EAAWp0C,GACtC,IAAIxW,EAAI,CACJ0qD,IAAKhkD,IACLsP,KAAMtP,IACNmkD,SAAUnkD,KAGVgkD,EAAMD,GAAUv7B,EAAG1Y,GACvBxW,EAAEgW,KAAO00C,EAAI10C,KACbhW,EAAE0qD,IAAMA,EAAIA,IACZ,IAAII,EAAQ9qD,EAAEgW,KACd,GA7Fe,IA6FXhW,EAAE0qD,IACF,GAAIl0C,EAAI6pB,KAAO7pB,EAAIvW,EAAEnJ,QAA6B,IAAnB0f,EAAIvW,EAAEuW,EAAI6pB,KACrChkB,EAAc6S,EAAErxB,EAAG,EAAGgD,GAAa,2CAClC,CACD,IAAI4J,EAAIggD,GAAUv7B,EAAG1Y,GACrBs0C,EAAQrgD,EAAEuL,KACVvL,EAAIA,EAAEigD,IAvGC,IAwGHjgD,GAAyB,IAAVqgD,GACfzuC,EAAc6S,EAAErxB,EAAG,EAAGgD,GAAa,uCAY/C,OATIiqD,GAAS,GA5GE,IA4GG9qD,EAAE0qD,IAChB1qD,EAAE6qD,SAAW,GAETC,EAAQ57B,EAAEk7B,WACVU,EAAQ57B,EAAEk7B,UACe,IAAxBU,EAASA,EAAO,IACjBzuC,EAAc6S,EAAErxB,EAAG,EAAGgD,GAAa,6CACvCb,EAAE6qD,SAAYC,GAASF,EAAaE,EAAQ,GAAQA,EAAQ,GAEzD9qD,GASL+qD,GAAU,SAASvpD,EAAG4I,EAAG+/C,EAAUn0C,EAAMu+B,GAC3C,IAAIx1B,EAAOf,GAAkBxc,EAAGwU,GAChC+I,EAAKorC,EAAW,EAAIn0C,EAAO,GAAK5L,EAAI6/C,GACpC,IAAK,IAAIzxD,EAAI,EAAGA,EAAIwd,EAAMxd,IACtB4R,IA1JG,EA2JH2U,EAAKorC,EAAW3xD,EAAIwd,EAAO,EAAIxd,GAAK4R,EAAI6/C,GAE5C,GAAI1V,GAAOv+B,EAhKD,EAiKN,IAAK,IAAIxd,EAjKH,EAiKcA,EAAIwd,EAAMxd,IAC1BumB,EAAKorC,EAAW3xD,EAAIwd,EAAO,EAAIxd,GAAKyxD,GAE5CzrC,EAAahd,EAAGwU,IAgNdg1C,GAAY,SAASntD,EAAG1H,EAAKg0D,EAAUn0C,EAAMi1C,GAC/C,IAAIv5C,EAAM,EACNmrC,EAAQ7mC,GAtXF,EAsXkBA,EAtXlB,EAuXV,IAAK,IAAIxd,EAAIqkD,EAAQ,EAAGrkD,GAAK,EAAGA,IAC5BkZ,IArXG,EAsXHA,GAAOvb,EAAIg0D,EAAW3xD,EAAIwd,EAAO,EAAIxd,GAEzC,GAAIwd,EA3XM,GA4XN,GAAIi1C,EAAU,CACV,IAAI1zB,EAAO,GA1XZ,EA0XkBvhB,EAAY,EAC7BtE,GAAQA,EAAM6lB,GAAQA,QAEvB,GAAIvhB,EAhYD,EAgYe,CACrB,IAAIuhB,GAAQ0zB,GAAYv5C,GAAO,EAAI,EAAIu4C,GACvC,IAAK,IAAIzxD,EAAIqkD,EAAOrkD,EAAIwd,EAAMxd,IACtBrC,EAAIg0D,EAAW3xD,EAAIwd,EAAO,EAAIxd,KAAO++B,GACrC/a,GAAW3e,EAAGgD,GAAa,iDAAkDmV,GAGzF,OAAOtE,GAGLw5C,GAAY,SAASrtD,EAAG2D,EAAG2oD,EAAUn0C,GACvCxX,GAAOgoB,WAAWhlB,EAAE1K,QAAUkf,GAE9B,IAAIm1C,EAAK,IAAI9xC,SAAS,IAAI+qB,YAAYpuB,IACtC,IAAK,IAAIxd,EAAI,EAAGA,EAAIwd,EAAMxd,IACtB2yD,EAAGC,SAAS5yD,EAAGgJ,EAAEhJ,GAAI2xD,GAEzB,OAAY,GAARn0C,EAAkBm1C,EAAGE,WAAW,EAAGlB,GAC3BgB,EAAGG,WAAW,EAAGnB,IAoE3BoB,GAAiB1qD,GAAa,cAEpC,MAAM2qD,GACF/kD,YAAY5I,GACRtI,KAAKJ,IAAM,KACXI,KAAKk2D,SAAW,KAChBl2D,KAAKm2D,QAAU,KACfn2D,KAAKyW,EAAI,KACTzW,KAAKo2D,MAAQ,KACbp2D,KAAKsI,EAAIA,EACTtI,KAAKq2D,WAAallD,IAClBnR,KAAKe,MAAQoQ,IACbnR,KAAKs2D,QAAU,IAIvB,MAcMC,GAAW,SAASC,EAAI//C,GAC1B,OAAO+/C,EAAG//C,EAAEA,MACR,KAAKg8C,GAGD,OAFIh8C,IAAM+/C,EAAGJ,OACTnvC,GAAWuvC,EAAGluD,EAAGgD,GAAa,uCAC3BmL,EAAI,EAEf,KAAK,GACe,KAAZ+/C,EAAG//C,EAAEA,IAAmCA,IAC5C,GACQA,IAAM+/C,EAAGJ,OACTnvC,GAAWuvC,EAAGluD,EAAGgD,GAAa,oCAC9BkrD,EAAG//C,EAAEA,OAASg8C,IAASh8C,EAAI+/C,EAAGJ,OAC9B3/C,UACa,KAAZ+/C,EAAG//C,EAAEA,IACd,OAAOA,EAAI,EAEf,QACI,OAAOA,IAKbggD,GAAc,SAASrrD,EAAG6L,GAC5B,OAAQA,GACJ,KAAK,GAA6B,OAAQm8C,GAAQhoD,GAClD,KAAK,GAA6B,OAAQgoD,GAAQhoD,GAClD,KAAK,GAA6B,OAAQkoD,GAAQloD,GAClD,KAAK,GAA6B,OAAQkoD,GAAQloD,GAClD,KAAK,IAA6B,OAAQioD,GAAQjoD,GAClD,KAAK,GAA6B,OAAQioD,GAAQjoD,GAClD,KAAK,IAA6B,OAAQmoD,GAAQnoD,GAClD,KAAK,GAA6B,OAAQmoD,GAAQnoD,GAClD,KAAK,IAA6B,OAAQooD,GAAQpoD,GAClD,KAAK,GAA6B,OAAQooD,GAAQpoD,GAClD,KAAK,IAA6B,OAAQuoD,GAAQvoD,GAClD,KAAK,GAA6B,OAAQuoD,GAAQvoD,GAClD,KAAK,IAA6B,OAAQwoD,GAAQxoD,GAClD,KAAK,GAA6B,OAAQwoD,GAAQxoD,GAClD,KAAK,IAA6B,OAAQqoD,GAAQroD,GAClD,KAAK,GAA6B,OAAQqoD,GAAQroD,GAClD,KAAK,IAA6B,OAAQsoD,GAAQtoD,GAClD,KAAK,GAA6B,OAAQsoD,GAAQtoD,GAClD,KAAK,IAA6B,OAAQyoD,GAASzoD,GACnD,KAAK,GAA6B,OAAQyoD,GAASzoD,GACnD,KAAK,IAA6B,OAAc,IAANA,EAC1C,KAAK,GAA6B,OAAc,IAANA,EAC1C,QAAS,OAAQ6L,IAAO7L,IAI1BsrD,GAAoB,SAASF,EAAIprD,EAAGqL,EAAGkgD,GACzC,IAAIC,GAAM,EAKV,IAJoB,KAAhBJ,EAAG//C,EAAEA,EAAI,KACTmgD,GAAM,EACNngD,OAEKA,EAAIkgD,GACT,GAAIH,EAAG//C,EAAEA,KAAOg8C,IAEZ,GADAh8C,IACIggD,GAAYrrD,EAAGorD,EAAG//C,EAAEA,IACpB,OAAOmgD,OACR,GAAoB,KAAhBJ,EAAG//C,EAAEA,EAAI,IAAqCA,EAAI,EAAIkgD,GAE7D,GADAlgD,GAAK,EACD+/C,EAAG//C,EAAEA,EAAI,IAAMrL,GAAKA,GAAKorD,EAAG//C,EAAEA,GAC9B,OAAOmgD,OACR,GAAIJ,EAAG//C,EAAEA,KAAOrL,EAAG,OAAOwrD,EAErC,OAAQA,GAGNC,GAAc,SAASL,EAAI9rD,EAAG+L,EAAGqgD,GACnC,GAAIpsD,GAAK8rD,EAAGL,QACR,OAAO,EACN,CACD,IAAI/qD,EAAIorD,EAAG52D,IAAI8K,GACf,OAAQ8rD,EAAG//C,EAAEA,IACT,KAAK,GAA4B,OAAO,EACxC,KAAKg8C,GAAO,OAAOgE,GAAYrrD,EAAGorD,EAAG//C,EAAEA,EAAI,IAC3C,KAAK,GAA4B,OAAOigD,GAAkBF,EAAIprD,EAAGqL,EAAGqgD,EAAK,GACzE,QAAS,OAAON,EAAG//C,EAAEA,KAAOrL,KAKlC2rD,GAAe,SAASP,EAAI9rD,EAAG+L,GAGjC,GAFIA,GAAK+/C,EAAGJ,MAAQ,GAChBnvC,GAAWuvC,EAAGluD,EAAGgD,GAAa,kDAC9BkrD,EAAG52D,IAAI8K,KAAO8rD,EAAG//C,EAAEA,GACnB,OAAO,KACN,CACD,IAAIxK,EAAIuqD,EAAG//C,EAAEA,GACTkR,EAAI6uC,EAAG//C,EAAEA,EAAI,GACbugD,EAAO,EACX,OAAStsD,EAAI8rD,EAAGL,SACZ,GAAIK,EAAG52D,IAAI8K,KAAOid,GACd,GAAe,KAATqvC,EAAY,OAAOtsD,EAAI,OAExB8rD,EAAG52D,IAAI8K,KAAOuB,GAAG+qD,IAGlC,OAAO,MAGLC,GAAa,SAAST,EAAI9rD,EAAG+L,EAAGqgD,GAClC,IAAI7zD,EAAI,EACR,KAAO4zD,GAAYL,EAAI9rD,EAAIzH,EAAGwT,EAAGqgD,IAC7B7zD,IAEJ,KAAOA,GAAK,GAAG,CACX,IAAIkZ,EAAMqpC,GAAMgR,EAAI9rD,EAAIzH,EAAG6zD,EAAK,GAChC,GAAI36C,EAAK,OAAOA,EAChBlZ,IAEJ,OAAO,MAGLi0D,GAAa,SAASV,EAAI9rD,EAAG+L,EAAGqgD,GAClC,OAAS,CACL,IAAI36C,EAAMqpC,GAAMgR,EAAI9rD,EAAGosD,EAAK,GAC5B,GAAY,OAAR36C,EACA,OAAOA,EACN,IAAI06C,GAAYL,EAAI9rD,EAAG+L,EAAGqgD,GAE1B,OAAO,KADRpsD,MAKNysD,GAAgB,SAASX,EAAI9rD,EAAG+L,EAAGnF,GACrC,IAMI6K,EANApb,EAAQy1D,EAAGz1D,MASf,OARIA,GAv7BgB,IAu7BUkmB,GAAWuvC,EAAGluD,EAAGgD,GAAa,sBAC5DkrD,EAAGF,QAAQv1D,GAASy1D,EAAGF,QAAQv1D,GAASy1D,EAAGF,QAAQv1D,GAAS,GAC5Dy1D,EAAGF,QAAQv1D,GAAOm6C,KAAOxwC,EACzB8rD,EAAGF,QAAQv1D,GAAOyJ,IAAM8G,EACxBklD,EAAGz1D,MAAQA,EAAQ,EAEa,QAA3Bob,EAAMqpC,GAAMgR,EAAI9rD,EAAG+L,KACpB+/C,EAAGz1D,QACAob,GAGLi7C,GAAc,SAASZ,EAAI9rD,EAAG+L,GAChC,IAEI0F,EAFA/S,EArJiB,SAASotD,GAC9B,IAAIz1D,EAAQy1D,EAAGz1D,MACf,IAAKA,IAASA,GAAS,EAAGA,IACtB,IA7Be,IA6BXy1D,EAAGF,QAAQv1D,GAAOyJ,IAAwB,OAAOzJ,EACzD,OAAOkmB,GAAWuvC,EAAGluD,EAAGgD,GAAa,4BAiJ7B+rD,CAAiBb,GAKzB,OAJAA,EAAGF,QAAQltD,GAAGoB,IAAME,EAAI8rD,EAAGF,QAAQltD,GAAG8xC,KAEN,QAA3B/+B,EAAMqpC,GAAMgR,EAAI9rD,EAAG+L,MACpB+/C,EAAGF,QAAQltD,GAAGoB,KAnLC,GAoLZ2R,GAQLm7C,GAAgB,SAASd,EAAI9rD,EAAGtB,GAClCA,EA1KkB,SAASotD,EAAIptD,GAE/B,OADAA,GAAQ,IACA,GAAKA,GAAKotD,EAAGz1D,QArBF,IAqBWy1D,EAAGF,QAAQltD,GAAGoB,IACjCyc,GAAWuvC,EAAGluD,EAAGgD,GAAa,8BAA+BlC,EAAI,GACrEA,EAsKHmuD,CAAcf,EAAIptD,GACtB,IAAIoB,EAAMgsD,EAAGF,QAAQltD,GAAGoB,IACxB,OAAKgsD,EAAGL,QAAQzrD,GAAMF,GAPR,SAASD,EAAGitD,EAAIvrD,EAAGwrD,EAAIjtD,GACrC,OAAOwB,GAAazB,EAAEiX,SAASg2C,EAAIA,EAAGhtD,GAAMyB,EAAEuV,SAASi2C,EAAIA,EAAGjtD,IAMjCktD,CAAUlB,EAAG52D,IAAK42D,EAAGF,QAAQltD,GAAG8xC,KAAMsb,EAAG52D,IAAK8K,EAAGF,GACnEE,EAAEF,EACD,MAGVg7C,GAAQ,SAASgR,EAAI9rD,EAAG+L,GAC1B,IAAIkhD,GAAc,EACdC,GAAW,EAKf,IAHwB,GAApBpB,EAAGH,cACHpvC,GAAWuvC,EAAGluD,EAAGgD,GAAa,wBAE3BssD,GAAYD,GAEf,GADAC,GAAW,EACPnhD,IAAM+/C,EAAGJ,MACT,OAAQuB,OAAc,EAASnB,EAAG//C,EAAEA,IAChC,KAAK,GAEG/L,EADgB,KAAhB8rD,EAAG//C,EAAEA,EAAI,GACL0gD,GAAcX,EAAI9rD,EAAG+L,EAAI,GAhN9B,GAkNK0gD,GAAcX,EAAI9rD,EAAG+L,EAAI,GAnN9B,GAoNH,MAEJ,KAAK,GACD/L,EAAI0sD,GAAYZ,EAAI9rD,EAAG+L,EAAI,GAC3B,MAEJ,KAAK,GACD,GAAIA,EAAI,IAAM+/C,EAAGJ,MAAO,CACpBuB,GAAc,EACd,MAEJjtD,EAAK8rD,EAAG52D,IAAI2B,OAASmJ,GAAO,EAAIA,EAAI,KACpC,MAEJ,KAAK+nD,GACD,OAAQ+D,EAAG//C,EAAEA,EAAI,IACb,KAAK,GAES,QADV/L,EAAIqsD,GAAaP,EAAI9rD,EAAG+L,EAAI,MAExBA,GAAK,EACLmhD,GAAW,GAEf,MAEJ,KAAK,IAA6B,CAC9BnhD,GAAK,EACW,KAAZ+/C,EAAG//C,EAAEA,IACLwQ,GAAWuvC,EAAGluD,EAAGgD,GAAa,uCAClC,IAAIwrD,EAAKP,GAASC,EAAI//C,GAClBsd,EAAWrpB,IAAM8rD,EAAGN,SAAW,EAAIM,EAAG52D,IAAI8K,EAAE,GAChD,IAAKgsD,GAAkBF,EAAIziC,EAAUtd,EAAGqgD,EAAK,IAAMJ,GAAkBF,EAAK9rD,IAAI8rD,EAAGL,QAAS,EAAEK,EAAG52D,IAAI8K,GAAI+L,EAAGqgD,EAAK,GAAI,CAC/GrgD,EAAIqgD,EAAIc,GAAW,EAAM,MAE7BltD,EAAI,KACJ,MAEJ,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GACzC,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAE3B,QADVA,EAAI4sD,GAAcd,EAAI9rD,EAAG8rD,EAAG//C,EAAEA,EAAI,OAE9BA,GAAK,EAAGmhD,GAAW,GAEvB,MAEJ,QAASD,GAAc,EAE3B,MAEJ,QAAS,CACLA,GAAc,EACd,IAAIb,EAAKP,GAASC,EAAI//C,GAEtB,GAAKogD,GAAYL,EAAI9rD,EAAG+L,EAAGqgD,GASvB,OAAQN,EAAG//C,EAAEqgD,IACT,KAAK,GAA4B,CAC7B,IAAI36C,EACqC,QAApCA,EAAMqpC,GAAMgR,EAAI9rD,EAAI,EAAGosD,EAAK,IAC7BpsD,EAAIyR,GAEJ1F,EAAIqgD,EAAK,EAAGc,GAAW,GAE3B,MAEJ,KAAK,GACDltD,IAEJ,KAAK,GACDA,EAAIusD,GAAWT,EAAI9rD,EAAG+L,EAAGqgD,GACzB,MACJ,KAAK,GACDpsD,EAAIwsD,GAAWV,EAAI9rD,EAAG+L,EAAGqgD,GACzB,MACJ,QACIpsD,IAAK+L,EAAIqgD,EAAIc,GAAW,MA7BJ,CAC5B,GAAiB,KAAbpB,EAAG//C,EAAEqgD,IACQ,KAAbN,EAAG//C,EAAEqgD,IACQ,KAAbN,EAAG//C,EAAEqgD,GACP,CACErgD,EAAIqgD,EAAK,EAAGc,GAAW,EAAM,MAE7BltD,EAAI,KAyBZ,OAMhB,OADA8rD,EAAGH,aACI3rD,GAGLmtD,GAAkB,SAASrB,EAAIvzD,EAAGyH,EAAGid,GACvC,GAAI1kB,GAAKuzD,EAAGz1D,MACE,IAANkC,EACAse,EAAgBi1C,EAAGluD,EAAGkuD,EAAG52D,IAAI4hB,SAAS9W,EAAGid,GAAIA,EAAIjd,GAEjDuc,GAAWuvC,EAAGluD,EAAGgD,GAAa,8BAA+BrI,EAAI,OAClE,CACH,IAAImG,EAAIotD,EAAGF,QAAQrzD,GAAGuH,KAxTP,IAyTXpB,GAAsB6d,GAAWuvC,EAAGluD,EAAGgD,GAAa,wBAxTzC,IAyTXlC,EACAgK,EAAgBojD,EAAGluD,EAAGkuD,EAAGF,QAAQrzD,GAAGi4C,KAAOsb,EAAGN,SAAW,GAEzD30C,EAAgBi1C,EAAGluD,EAAGkuD,EAAG52D,IAAI4hB,SAASg1C,EAAGF,QAAQrzD,GAAGi4C,MAAO9xC,KAIjE0uD,GAAgB,SAAStB,EAAI9rD,EAAGid,GAClC,IAAIowC,EAAuB,IAAbvB,EAAGz1D,OAAey1D,EAAG52D,IAAI4hB,SAAS9W,GAAK,EAAI8rD,EAAGz1D,MAC5D0pB,GAAgB+rC,EAAGluD,EAAGyvD,EAAS,qBAC/B,IAAK,IAAI90D,EAAI,EAAGA,EAAI80D,EAAS90D,IACzB40D,GAAgBrB,EAAIvzD,EAAGyH,EAAGid,GAC9B,OAAOowC,GAWLC,GAAY,SAASxB,EAAIluD,EAAGoC,EAAG2qB,EAAI5e,EAAGwhD,GACxCzB,EAAGluD,EAAIA,EACPkuD,EAAGH,WAjVgB,IAkVnBG,EAAG52D,IAAM8K,EACT8rD,EAAGN,SAAW,EACdM,EAAGL,QAAU9gC,EACbmhC,EAAG//C,EAAIA,EACP+/C,EAAGJ,MAAQ6B,GAGTC,GAAc,SAAS1B,GACzBA,EAAGz1D,MAAQ,EACXkI,GAAOgoB,WA3VY,MA2VDulC,EAAGH,aAkBnB8B,GAAe,SAAS7vD,EAAG8vD,GAC7B,IAAI1tD,EAAIud,GAAiB3f,EAAG,GACxBmO,EAAIwR,GAAiB3f,EAAG,GACxB+sB,EAAK3qB,EAAEnJ,OACP02D,EAAKxhD,EAAElV,OACP25C,EAAO0X,GAAS/kC,GAAgBvlB,EAAG,EAAG,GAAI+sB,GAC9C,GAAI6lB,EAAO,EAAGA,EAAO,OAChB,GAAIA,EAAO7lB,EAAK,EAEjB,OADA5T,EAAYnZ,GACL,EAGX,GAAI8vD,IAAS30C,EAAcnb,EAAG,IAlDf,SAASmO,EAAGrN,GAC3B,IAAK,IAAInG,EAAE,EAAGA,EAAEmG,EAAGnG,IACf,IAA2C,IAAvCiH,GAAkB8rD,GAAUv/C,EAAExT,IAC9B,OAAO,EAEf,OAAO,EA6C6Bo1D,CAAW5hD,EAAGwhD,IAAM,CAEpD,IAAIx/C,EA7BU,SAASuR,EAAKC,EAAQC,GACxC,IAAIjnB,EAAIinB,EACJC,EAAKF,EAAO1oB,OAEhB,GAAW,IAAP4oB,EACA,OAAOlnB,EAEX,MAA4C,KAApCA,EAAI+mB,EAAIznB,QAAQ0nB,EAAO,GAAIhnB,IAAYA,IAC3C,GAAI+I,GAAage,EAAIxI,SAASve,EAAGA,EAAEknB,GAAKF,GACpC,OAAOhnB,EAGf,OAAQ,EAiBI8mB,CAAcrf,EAAE8W,SAAS05B,EAAO,GAAIzkC,GAC5C,GAAIgC,GAAK,EAGL,OAFArF,EAAgB9K,EAAG4yC,EAAOziC,GAC1BrF,EAAgB9K,EAAG4yC,EAAOziC,EAAIw/C,EAAK,GAC5B,MAER,CACH,IAAIzB,EAAK,IAAIP,GAAW3tD,GACpBwE,EAAKouC,EAAO,EACZod,EAAkB,KAAT7hD,EAAE,GACX6hD,IACA7hD,EAAIA,EAAE+K,SAAS,GAAIy2C,KAEvBD,GAAUxB,EAAIluD,EAAGoC,EAAG2qB,EAAI5e,EAAGwhD,GAC3B,EAAG,CACC,IAAI97C,EAEJ,GADA+7C,GAAY1B,GACqB,QAA5Br6C,EAAMqpC,GAAMgR,EAAI1pD,EAAI,IACrB,OAAIsrD,GACAhlD,EAAgB9K,EAAGwE,EAAK,GACxBsG,EAAgB9K,EAAG6T,GACZ27C,GAActB,EAAI,KAAM,GAAK,GAE7BsB,GAActB,EAAI1pD,EAAIqP,SAEhCrP,IAAO0pD,EAAGL,UAAYmC,GAGnC,OADA72C,EAAYnZ,GACL,GAYX,MAAMiwD,GACFrnD,cACIlR,KAAKJ,IAAMuR,IACXnR,KAAKyW,EAAItF,IACTnR,KAAKw4D,UAAYrnD,IACjBnR,KAAKw2D,GAAK,IAAIP,IAItB,MAAMwC,GAAa,SAASnwD,GACxB,IAAIowD,EAAK9zC,EAAetc,EAAG2J,EAAiB,IAC5CymD,EAAGlC,GAAGluD,EAAIA,EACV,IAAK,IAAI1I,EAAM84D,EAAG94D,IAAKA,GAAO84D,EAAGlC,GAAGL,QAASv2D,IAAO,CAEhD,IAAI+nB,EACJ,GAFAuwC,GAAYQ,EAAGlC,IAEuB,QAAjC7uC,EAAI69B,GAAMkT,EAAGlC,GAAI52D,EAAK84D,EAAGjiD,KAAgBkR,IAAM+wC,EAAGF,UAEnD,OADAE,EAAG94D,IAAM84D,EAAGF,UAAY7wC,EACjBmwC,GAAcY,EAAGlC,GAAI52D,EAAK+nB,GAGzC,OAAO,GA4CLgxC,GAAY,SAASnC,EAAIvqD,EAAGvB,EAAGid,EAAGixC,GACpC,IAAItwD,EAAIkuD,EAAGluD,EACX,OAAQswD,GACJ,KAAKvqD,EAAe,CAChBuT,EAActZ,EAAG,GACjB,IAAIuM,EAAIijD,GAActB,EAAI9rD,EAAGid,GAC7B7d,EAASxB,EAAGuM,EAAG,GACf,MAEJ,KAAKzG,EACDypD,GAAgBrB,EAAI,EAAG9rD,EAAGid,GAC1B1J,EAAa3V,EAAG,GAChB,MAEJ,QAEI,YAzCE,SAASkuD,EAAIvqD,EAAGvB,EAAGid,GAC7B,IAAIrf,EAAIkuD,EAAGluD,EACPuwD,EAAO1/C,EAAa7Q,EAAG,GACvBc,EAAIyvD,EAAKt3D,OACb,IAAK,IAAI0B,EAAI,EAAGA,EAAImG,EAAGnG,IACf41D,EAAK51D,KAAOwvD,GACZ/lC,EAAazgB,EAAG4sD,EAAK51D,KAErBA,IACKowD,GAAQwF,EAAK51D,IAIK,KAAZ41D,EAAK51D,GACZ+lB,EAAgB/c,EAAGuqD,EAAG52D,IAAI4hB,SAAS9W,EAAGid,GAAIA,EAAIjd,IAE9CmtD,GAAgBrB,EAAIqC,EAAK51D,GAAK,GAA4ByH,EAAGid,GAC7D4G,GAAejmB,GAAI,GACnBqa,EAAWra,GAAI,GACfqkB,EAAc1gB,KATV4sD,EAAK51D,KAAOwvD,IACZxrC,GAAW3e,EAAGgD,GAAa,6CAA8CmnD,IAC7E/lC,EAAazgB,EAAG4sD,EAAK51D,MA4BzB61D,CAAMtC,EAAIvqD,EAAGvB,EAAGid,GAInBlE,EAAcnb,GAAI,GAGXkX,EAAalX,GAAI,IACzB2e,GAAW3e,EAAGgD,GAAa,oCAAqCgc,GAAchf,GAAI,KAHlFkB,EAAQlB,EAAG,GACXiZ,EAAgBjZ,EAAGkuD,EAAG52D,IAAI4hB,SAAS9W,EAAGid,GAAIA,EAAIjd,IAGlDiiB,EAAc1gB,IAyCZ8sD,GAAS,CACX,KA5rBa,SAASzwD,GACtB,IAAIoC,EAAIud,GAAiB3f,EAAG,GACxBc,EAAIsB,EAAEnJ,OACNy3D,EAAOpG,GAAS/kC,GAAgBvlB,EAAG,EAAG,GAAIc,GAC1C6vD,EAAOrG,GAAS/kC,GAAgBvlB,EAAG,EAAG0wD,GAAO5vD,GAIjD,GAFI4vD,EAAO,IAAGA,EAAO,GACjBC,EAAO7vD,IAAG6vD,EAAO7vD,GACjB4vD,EAAOC,EAAM,OAAO,EACxB,GAAIA,EAAOD,GAAQh0D,OAAO6+C,iBACtB,OAAO58B,GAAW3e,EAAG,yBAEzB,IAAIuM,EAAKokD,EAAOD,EAAQ,EACxBvuC,GAAgBniB,EAAGuM,EAAG,yBACtB,IAAK,IAAI5R,EAAI,EAAGA,EAAI4R,EAAG5R,IACnBmQ,EAAgB9K,EAAGoC,EAAEsuD,EAAO/1D,EAAI,IACpC,OAAO4R,GA6qBP,KAxxCa,SAASvM,GACtB,IAAIuM,EAAI7L,EAAWV,GACf2D,EAAI,IAAIsa,EACR9P,EAAIqW,GAAkBxkB,EAAG2D,EAAG4I,GAChC,IAAK,IAAI5R,EAAI,EAAGA,GAAK4R,EAAG5R,IAAK,CACzB,IAAImI,EAAImd,GAAkBjgB,EAAGrF,GAC7B2pB,EAActkB,EAAG8C,GAAK,GAAKA,GAAK,IAAK,sBACrCqL,EAAExT,EAAE,GAAKmI,EAGb,OADA4iB,GAAoB/hB,EAAG4I,GAChB,GA+wCP,KAvwCa,SAASvM,GACtB,IAAI2D,EAAI,IAAIsa,EACRpJ,EAAQsG,EAAcnb,EAAG,GAI7B,OAHA4kB,GAAe5kB,EAAG,EAAG+F,GACrByH,EAAWxN,EAAG,GACdygB,EAAczgB,EAAG2D,GACqB,IAAlC+Q,EAAS1U,EAAG2U,GAAQhR,EAAGkR,GAChB8J,GAAW3e,EAAGgD,GAAa,mCACtC6d,GAAgBld,GACT,IA+vCP,KA9Ia,SAAS3D,GACtB,OAAO6vD,GAAa7vD,EAAG,IA8IvB,OA7kCe,SAASA,GACxB,IAAIoM,EAAM1L,EAAWV,GACjBye,EAAM,EACNqtC,EAAUnsC,GAAiB3f,EAAGye,GAC9B9jB,EAAI,EACJgJ,EAAI,IAAIsa,EAEZ,IADAwC,EAAczgB,EAAG2D,GACVhJ,EAAImxD,EAAQ7yD,QACf,GAAI6yD,EAAQnxD,KAAOwvD,GACf/lC,EAAazgB,EAAGmoD,EAAQnxD,WACrB,GAAImxD,IAAUnxD,KAAOwvD,GACxB/lC,EAAazgB,EAAGmoD,EAAQnxD,UACrB,CACH,IAAIoxD,EAAO,GAIX,SAHMttC,EAAMrS,GACRoS,EAAcxe,EAAGye,EAAKzb,GAAa,aACvCrI,EAAIkxD,GAAW7rD,EAAG8rD,EAASnxD,EAAGoxD,GACtB5nD,OAAOC,aAAa0nD,EAAQnxD,OAChC,IAAK,IAEDypB,EAAazgB,EAAGsc,GAAkBjgB,EAAGye,IACrC,MAEJ,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,CACpC,IAAIlS,EAAI0T,GAAkBjgB,EAAGye,GAC7ButC,GAAUD,EAAM/oD,GAAa8mD,GAAoB,IACjDlpC,EAAejd,EAAGX,GAAa4mD,EAAQzlD,OAAOC,gBAAgB2nD,GAAOx/C,KACrE,MAEJ,IAAK,IAAK,IAAK,IACXy/C,GAAUD,EAAM/oD,GAAa8mD,GAAoB,IACjDlpC,EAAejd,EAAG6mD,GAAgBxqD,EAAG+rD,EAAMhsC,GAAiB/f,EAAGye,KAC/D,MAEJ,IAAK,IAAK,IAAK,IAAK,IAAK,IACzB,IAAK,IAAK,IAAK,IAAK,CAChB,IAAIlS,EAAIwT,GAAiB/f,EAAGye,GAC5ButC,GAAUD,EAAM/oD,GAAa8mD,GAAoB,IACjDlpC,EAAejd,EAAGX,GAAa4mD,EAAQzlD,OAAOC,gBAAgB2nD,GAAOx/C,KACrE,MAEJ,IAAK,IACDi/C,GAAWxrD,EAAG2D,EAAG8a,GACjB,MAEJ,IAAK,IAAK,CACN,IAAIrc,EAAI6jB,GAAejmB,EAAGye,GACtBstC,EAAK9yD,QAAU,GAAiB,IAAZ8yD,EAAK,GACzB1nC,EAAc1gB,IAEd2gB,EAActkB,EAAGoC,EAAEnJ,SAAWoxD,GAAOjoD,GAAIqc,EAAK,yBAC1C7c,GAAkBmqD,EAAM,IAA8B,GAAK3pD,EAAEnJ,QAAU,IAEvEorB,EAAc1gB,IAGdid,EAAejd,EAAGX,GAAa4mD,EAAQzlD,OAAOC,gBAAgB2nD,GAAOnoD,GAAYxB,MACjFlB,EAAQlB,EAAG,KAGnB,MAEJ,QACI,OAAO2e,GAAW3e,EAAGgD,GAAa,qCAAsC8oD,EAAQnxD,EAAE,KAMlG,OADAkmB,GAAgBld,GACT,GAwgCP,OAhHe,SAAS3D,GACxB,IAAIoC,EAAIud,GAAiB3f,EAAG,GACxBmO,EAAIwR,GAAiB3f,EAAG,GACxB+sB,EAAK3qB,EAAEnJ,OACP02D,EAAKxhD,EAAElV,OACXuU,EAAWxN,EAAG,GACd,IAAIowD,EAAK,IAAIH,GAOb,OANAl3C,EAAsB/Y,EAAGowD,GACzBV,GAAUU,EAAGlC,GAAIluD,EAAGoC,EAAG2qB,EAAI5e,EAAGwhD,GAC9BS,EAAG94D,IAAM,EACT84D,EAAGjiD,EAAI,EACPiiD,EAAGF,UAAY,KACfzhD,EAAiBzO,EAAGmwD,GAAY,GACzB,GAoGP,KA7Ca,SAASnwD,GACtB,IAAI1I,EAAMqoB,GAAiB3f,EAAG,GAC1B4wD,EAAOt5D,EAAI2B,OACXkV,EAAIwR,GAAiB3f,EAAG,GACxB2vD,EAAKxhD,EAAElV,OACPi3D,EAAY,KACZI,EAAK9+C,EAASxR,EAAG,GACjB6wD,EAAQtrC,GAAgBvlB,EAAG,EAAG4wD,EAAO,GACrCZ,EAAkB,KAAT7hD,EAAE,GACX5B,EAAI,EACJ2hD,EAAK,IAAIP,GAAW3tD,GACpB2D,EAAI,IAAIsa,EASZ,IARAqG,EAActkB,EAAGswD,IAAO1qD,GAAe0qD,IAAOzqD,GAAeyqD,IAAOvqD,GAAiBuqD,IAAOxqD,EAAY,EACpG,kCACJ2a,EAAczgB,EAAG2D,GACbqsD,IACA7hD,EAAIA,EAAE+K,SAAS,GAAIy2C,KAEvBD,GAAUxB,EAAIluD,EAAG1I,EAAKs5D,EAAMziD,EAAGwhD,GAC/Br4D,EAAM,EAAG6W,EAAI,EACN5B,EAAIskD,GAAO,CACd,IAAIxxC,EAEJ,GADAuwC,GAAY1B,GACoB,QAA3B7uC,EAAI69B,GAAMgR,EAAI52D,EAAK6W,KAAgBkR,IAAM6wC,EAC1C3jD,IACA8jD,GAAUnC,EAAIvqD,EAAGrM,EAAK+nB,EAAGixC,GACzBh5D,EAAM44D,EAAY7wC,MACf,MAAI/nB,EAAM42D,EAAGL,SAEf,MADDzpC,EAAazgB,EAAGuqD,EAAG52D,IAAIA,MAE3B,GAAI04D,EAAQ,MAKhB,OAHAtvC,EAAgB/c,EAAGuqD,EAAG52D,IAAI4hB,SAAS5hB,EAAK42D,EAAGL,SAAUK,EAAGL,QAAUv2D,GAClEupB,GAAgBld,GAChBmH,EAAgB9K,EAAGuM,GACZ,GAWP,IAnyCY,SAASvM,GAErB,OADA8K,EAAgB9K,EAAG2f,GAAiB3f,EAAG,GAAG/G,QACnC,GAkyCP,MA5vBc,SAAS+G,GACvB,IAAIoC,EAAIud,GAAiB3f,EAAG,GACxBc,EAAIsB,EAAEnJ,OACNkJ,EAAI,IAAIL,WAAWhB,GACvB,IAAK,IAAInG,EAAE,EAAGA,EAAEmG,EAAGnG,IAAK,CACpB,IAAImI,EAAIV,EAAEzH,GACNwwD,GAAQroD,KACRA,GAAQ,IACZX,EAAExH,GAAKmI,EAGX,OADAvB,EAAevB,EAAGmC,GACX,GAkvBP,MAhJc,SAASnC,GACvB,OAAO6vD,GAAa7vD,EAAG,IAgJvB,KA71Ba,SAASA,GACtB,IAAI2D,EAAI,IAAIsa,EACRoT,EAAI,IAAIg7B,GAAOrsD,GACf2Y,EAAM,CACNvW,EAAGud,GAAiB3f,EAAG,GACvBwiC,IAAK,GAEL/jB,EAAM,EACNsuC,EAAY,EAGhB,IAFA5zC,EAAYnZ,GACZygB,EAAczgB,EAAG2D,GACVgV,EAAI6pB,IAAM7pB,EAAIvW,EAAEnJ,QAAQ,CAC3B,IAAI63D,EAAUhE,GAAWz7B,EAAG07B,EAAWp0C,GACnCk0C,EAAMiE,EAAQjE,IACd10C,EAAO24C,EAAQ34C,KACf60C,EAAW8D,EAAQ9D,SAEvB,IADAD,GAAaC,EAAW70C,EACjB60C,KAAa,GAChB5oC,EAAazgB,EA9LA,GAgMjB,OADA8a,IACQouC,GACJ,KApKO,EAoKI,CACP,IAAItgD,EAAI0T,GAAkBjgB,EAAGye,GAC7B,GAAItG,EA9LN,EA8LoB,CACd,IAAIgqB,EAAM,GAAa,EAAPhqB,EAAY,EAC5BmM,EAActkB,GAAImiC,GAAO51B,GAAKA,EAAI41B,EAAK1jB,EAAK,oBAEhDyuC,GAAQvpD,EAAG4I,EAAG8kB,EAAEi7B,SAAUn0C,EAAM5L,EAAI,GACpC,MAEJ,KA5KO,EA4KK,CACR,IAAIA,EAAI0T,GAAkBjgB,EAAGye,GACzBtG,EAvMN,GAwMMmM,EAActkB,EAAIuM,IAAI,EAAM,GArMrC,EAqM2C4L,EAAasG,EAAK,qBACxDyuC,GAAQvpD,EAAG4I,IAAI,EAAG8kB,EAAEi7B,SAAUn0C,GAAM,GACpC,MAEJ,KAlLO,EAkLM,CACT,IAAI+I,EAAOf,GAAkBxc,EAAGwU,GAC5B5L,EAAIwT,GAAiB/f,EAAGye,GACxB6uC,EAAK,IAAI9xC,SAAS0F,EAAKzF,OAAQyF,EAAKxF,WAAYwF,EAAKvF,YAC5C,IAATxD,EAAYm1C,EAAGyD,WAAW,EAAGxkD,EAAG8kB,EAAEi7B,UACjCgB,EAAG3mB,WAAW,EAAGp6B,EAAG8kB,EAAEi7B,UAC3B3rC,EAAahd,EAAGwU,GAChB,MAEJ,KA1LO,EA0LK,CACR,IAAI/V,EAAIud,GAAiB3f,EAAGye,GACxBvc,EAAME,EAAEnJ,OAGZ,IAFAqrB,EAActkB,EAAGkC,GAAOiW,EAAMsG,EAAK,iCACnCiC,EAAgB/c,EAAGvB,EAAGF,GACfA,IAAQiW,GACXiM,EAAazgB,EAhOR,GAiOT,MAEJ,KAlMO,EAkMO,CACV,IAAIvB,EAAIud,GAAiB3f,EAAGye,GACxBvc,EAAME,EAAEnJ,OACZqrB,EAActkB,EACVmY,GAAQ,GAA0BjW,EAAO,GA/NlD,EA+NwDiW,EAC/CsG,EAAK,4CACTyuC,GAAQvpD,EAAGzB,EAAKmvB,EAAEi7B,SAAUn0C,EAAM,GAClCuI,EAAgB/c,EAAGvB,EAAGF,GACtB6qD,GAAa7qD,EACb,MAEJ,KA5MO,EA4MK,CACR,IAAIE,EAAIud,GAAiB3f,EAAGye,GACxBvc,EAAME,EAAEnJ,OACZqrB,EAActkB,EAAG4B,GAAkBQ,EAAG,GAAK,EAAGqc,EAAK,0BACnDiC,EAAgB/c,EAAGvB,EAAGF,GACtBkiB,EAAazgB,EAAG,GAChBopD,GAAa7qD,EAAM,EACnB,MAEJ,KApNO,EAoNQkiB,EAAazgB,EAvPf,GAwPb,KApNO,EAoNU,KAnNV,EAoNH8a,KAKZ,OADAoC,GAAgBld,GACT,GA4wBP,SAprBiB,SAAS3D,GAC1B,IAAIqxB,EAAI,IAAIg7B,GAAOrsD,GACf2Y,EAAM,CACNvW,EAAGud,GAAiB3f,EAAG,GACvBwiC,IAAK,GAELuqB,EAAY,EAChB,KAAOp0C,EAAI6pB,IAAM7pB,EAAIvW,EAAEnJ,QAAQ,CAC3B,IAAI63D,EAAUhE,GAAWz7B,EAAG07B,EAAWp0C,GACnCk0C,EAAMiE,EAAQjE,IACd10C,EAAO24C,EAAQ34C,KAKnB,OAHAA,GADe24C,EAAQ9D,SAEvB1oC,EAActkB,EAAG+sD,GAAa3C,GAAUjyC,EAAM,EAAG,2BACjD40C,GAAa50C,EACL00C,GACJ,KArUO,EAsUP,KArUO,EAsUHruC,EAAcxe,EAAG,EAAG,2BAMhC,OADA8K,EAAgB9K,EAAG+sD,GACZ,GA6pBP,IApuBY,SAAS/sD,GACrB,IAAIoC,EAAIud,GAAiB3f,EAAG,GACxBc,EAAIsB,EAAEnJ,OACNsT,EAAI0T,GAAkBjgB,EAAG,GACzBgsC,EAAMlsB,GAAe9f,EAAG,EAAG,IAC3BgxD,EAAOhlB,EAAI/yC,OACf,GAAIsT,GAAK,EAAGxB,EAAgB/K,EAAG,QAC1B,IAAIc,EAAIkwD,EAAOlwD,GAAKA,EAAIkwD,EAAO5G,GAAU79C,EAC1C,OAAOoS,GAAW3e,EAAGgD,GAAa,+BACjC,CACD,IAAIiuD,EAAW1kD,EAAIzL,GAAKyL,EAAI,GAAKykD,EAC7BrtD,EAAI,IAAIsa,EACR9P,EAAIqW,GAAkBxkB,EAAG2D,EAAGstD,GAC5BC,EAAK,EACT,KAAO3kD,KAAM,GACT4B,EAAE+N,IAAI9Z,EAAG8uD,GACTA,GAAMpwD,EACFkwD,EAAO,IACP7iD,EAAE+N,IAAI8vB,EAAKklB,GACXA,GAAMF,GAGd7iD,EAAE+N,IAAI9Z,EAAG8uD,GACTxrC,GAAoB/hB,EAAGstD,IAE3B,OAAO,GA4sBP,QA3wBgB,SAASjxD,GACzB,IAAIoC,EAAIud,GAAiB3f,EAAG,GACxBc,EAAIsB,EAAEnJ,OACNkJ,EAAI,IAAIL,WAAWhB,GACvB,IAAK,IAAInG,EAAE,EAAGA,EAAEmG,EAAGnG,IACfwH,EAAExH,GAAKyH,EAAEtB,EAAE,EAAEnG,GAEjB,OADA4G,EAAevB,EAAGmC,GACX,GAqwBP,IAvzCY,SAASnC,GACrB,IAAIoC,EAAIud,GAAiB3f,EAAG,GACxBc,EAAIsB,EAAEnJ,OACNc,EAAQuwD,GAASrqC,GAAkBjgB,EAAG,GAAIc,GAC1C1G,EAAMkwD,GAAS/kC,GAAgBvlB,EAAG,GAAI,GAAIc,GAM9C,OALI/G,EAAQ,IAAGA,EAAQ,GACnBK,EAAM0G,IAAG1G,EAAM0G,GACf/G,GAASK,EACTmH,EAAevB,EAAGoC,EAAE8W,SAASnf,EAAQ,EAAIA,EAAQ,GAAMK,EAAML,EAAQ,KACpEgR,EAAgB/K,EAAG,IACjB,GA8yCP,OApnBe,SAASA,GACxB,IAAIqxB,EAAI,IAAIg7B,GAAOrsD,GACf2Y,EAAM,CACNvW,EAAGud,GAAiB3f,EAAG,GACvBwiC,IAAK,GAEL5tB,EAAO+K,GAAiB3f,EAAG,GAC3BmxD,EAAKv8C,EAAK3b,OACViF,EAAMosD,GAAS/kC,GAAgBvlB,EAAG,EAAG,GAAImxD,GAAM,EAC/C5kD,EAAI,EAER,IADA+X,EAActkB,EAAG9B,GAAOizD,GAAMjzD,GAAO,EAAG,EAAG,kCACpCya,EAAI6pB,IAAM7pB,EAAIvW,EAAEnJ,QAAQ,CAC3B,IAAI63D,EAAUhE,GAAWz7B,EAAGnzB,EAAKya,GAC7Bk0C,EAAMiE,EAAQjE,IACd10C,EAAO24C,EAAQ34C,KACf60C,EAAW8D,EAAQ9D,SAOvB,OANkC9uD,EAAM8uD,EAAW70C,EAAOg5C,GACtD3yC,EAAcxe,EAAG,EAAGgD,GAAa,0BACrC9E,GAAO8uD,EAEP7qC,GAAgBniB,EAAG,EAAG,oBACtBuM,IACQsgD,GACJ,KApZO,EAqZP,KApZO,EAoZK,CACR,IAAIh5C,EAAMs5C,GAAUntD,EAAG4U,EAAKsE,SAAShb,GAAMmzB,EAAEi7B,SAAUn0C,EAtZpD,IAsZ0D00C,GAC7D/hD,EAAgB9K,EAAG6T,GACnB,MAEJ,KAxZO,EAwZM,CACT,IAAIA,EAAMw5C,GAAUrtD,EAAG4U,EAAKsE,SAAShb,GAAMmzB,EAAEi7B,SAAUn0C,GACvDzW,EAAe1B,EAAG6T,GAClB,MAEJ,KA5ZO,EA6ZHtS,EAAevB,EAAG4U,EAAKsE,SAAShb,EAAKA,EAAMia,IAC3C,MAEJ,KA/ZO,EA+ZO,CACV,IAAIjW,EAAMirD,GAAUntD,EAAG4U,EAAKsE,SAAShb,GAAMmzB,EAAEi7B,SAAUn0C,EAAM,GAC7DmM,EAActkB,EAAG9B,EAAMgE,EAAMiW,GAAQg5C,EAAI,EAAG,yBAC5C5vD,EAAevB,EAAG4U,EAAKsE,SAAShb,EAAMia,EAAMja,EAAMia,EAAOjW,IACzDhE,GAAOgE,EACP,MAEJ,KAraO,EAqaK,CACR,IAAImd,EAAIzd,GAAkBgT,EAAM,EAAG1W,IACxB,IAAPmhB,IAAUA,EAAIzK,EAAK3b,OAASiF,GAChCqD,EAAevB,EAAG4U,EAAKsE,SAAShb,EAAKmhB,IACrCnhB,EAAMmhB,EAAI,EACV,MAEJ,KA1aO,EA0aU,KA3aV,EA2ayB,KAzazB,EA0aH9S,IAGRrO,GAAOia,EAGX,OADArN,EAAgB9K,EAAG9B,EAAM,GAClBqO,EAAI,GA0jBX,MAtvBc,SAASvM,GACvB,IAAIoC,EAAIud,GAAiB3f,EAAG,GACxBc,EAAIsB,EAAEnJ,OACNkJ,EAAI,IAAIL,WAAWhB,GACvB,IAAK,IAAInG,EAAE,EAAGA,EAAEmG,EAAGnG,IAAK,CACpB,IAAImI,EAAIV,EAAEzH,GACNuwD,GAAQpoD,KACRA,GAAQ,KACZX,EAAExH,GAAKmI,EAGX,OADAvB,EAAevB,EAAGmC,GACX,IA+vBXqB,EAAOC,QAAQ8kC,eANQ,SAASvoC,GAG5B,OAFAiL,GAAYjL,EAAGywD,IAZK,SAASzwD,GAC7B4P,EAAgB5P,EAAG,EAAG,GACtB+K,EAAgB/K,EAAG,IACnBsZ,EAActZ,GAAI,GAClBya,EAAiBza,GAAI,GACrBkB,EAAQlB,EAAG,GACXsZ,EAActZ,GAAI,GAClBgL,EAAahL,GAAI,EAAGgD,GAAa,WAAW,IAC5C9B,EAAQlB,EAAG,GAKXoxD,CAAgBpxD,GACT,gCCr7CX,MACIuF,gBAAgB,aACZG,EAAY,SACZe,EAAQ,SACRD,EAAQ,SACRD,EAAQ,mBACRZ,EAAkB,YAClBS,EAAW,SACXX,EAAQ,YACRY,EAAW,YACXC,EAAW,YACXH,EAAW,WACXL,EAAU,YACVG,EAAW,cACXD,GACH,aACDhD,GACA,EAAQ,OACN,WAAE2lB,GAAe,EAAQ,MACzBvd,EAAU,EAAQ,MAClBI,EAAU,EAAQ,OAClB,iBACFq+B,EAAgB,QAChB4f,GACA,EAAQ,MACNh+C,EAAU,EAAQ,MAGxB,IAAI4lD,EAAuB,IAAIlgD,QAC/B,MAAMmgD,EAAyB,SAASjvD,GACpC,IAAIqnD,EAAO2H,EAAqBp6C,IAAI5U,GAOpC,OANKqnD,IAGDA,EAAO,GACP2H,EAAqBn1C,IAAI7Z,EAAGqnD,IAEzBA,GAGL6H,EAAa,SAASvxD,EAAGoxB,GAC3B,OAAOA,EAAIt4B,MACP,KAAK2M,EACD,OAAO2F,EAAOq0B,cAAcz/B,EAAGgD,EAAa,sBAAsB,IACtE,KAAKqD,EACD,GAAImiB,MAAM4I,EAAIvtB,OACV,OAAOuH,EAAOq0B,cAAcz/B,EAAGgD,EAAa,sBAAsB,IAE1E,KAAKsD,EACL,KAAKZ,EACL,KAAKI,EACL,KAAKS,EACL,KAAKC,EACL,KAAKC,EACL,KAAKT,EACL,KAAKC,EACD,OAAOmrB,EAAIvtB,MACf,KAAKsC,EACL,KAAKC,EACD,OAAOyjC,EAAiBzY,EAAI6V,WAChC,KAAKthC,EAAoB,CACrB,IAAItD,EAAI+uB,EAAIvtB,MACZ,cAAcxB,GACV,IAAK,SAGD,MAAO,IAAMA,EACjB,IAAK,SAGD,MAAO,IAAMA,EACjB,IAAK,UAED,OAAOA,EAAE,QAAQ,SACrB,IAAK,WAGD,OAAOivD,EAAuBjvD,GAClC,IAAK,SAED,GAAKA,aAAaoJ,EAAOwQ,WAAa5Z,EAAE2K,MAAQhN,EAAEgN,KAC9C3K,aAAakzC,GACblzC,aAAamJ,EAAQ4M,OACrB/V,aAAamJ,EAAQ08B,UACrB7lC,aAAamJ,EAAQU,SAErB,OAAOolD,EAAuBjvD,GAGtC,QACI,OAAOA,GAGnB,QACI,MAAM,IAAI7K,MAAM,qBAAuB45B,EAAIt4B,QAIvD,MAAMy8C,EACF3sC,YAAY5I,GACRtI,KAAKiF,GAAKqD,EAAEgN,IAAI86B,aAChBpwC,KAAK2zC,OAAS,IAAImmB,IAClB95D,KAAK+5D,YAAc,IAAID,IACvB95D,KAAKg6D,eAAY,EACjBh6D,KAAKyY,OAAI,EACTzY,KAAKoJ,OAAI,EACTpJ,KAAKge,UAAY,KACjBhe,KAAKi6D,OAAQ,GAIrB,MAIMt5D,EAAM,SAAS6C,EAAGwuD,EAAMt4B,EAAKvtB,GAC/B3I,EAAEu2D,YAAYG,QACd12D,EAAEw2D,eAAY,EACd,IAAIrT,EAAO,KACPwT,EAAQ,CACRzgC,IAAKA,EACLvtB,MAAOA,EACPsK,EAAGkwC,EAAOnjD,EAAE4F,EACZyL,OAAG,GAEFrR,EAAEiV,IAAGjV,EAAEiV,EAAI0hD,GACZxT,IAAMA,EAAK9xC,EAAIslD,GACnB32D,EAAEmwC,OAAOnvB,IAAIwtC,EAAMmI,GACnB32D,EAAE4F,EAAI+wD,GAQJC,EAAY,SAAS52D,EAAGwuD,GAC1B,IAAIrqC,EAAInkB,EAAEmwC,OAAOp0B,IAAIyyC,GACrB,GAAIrqC,EAAG,CACHA,EAAE+R,IAAIujB,eACNt1B,EAAExb,WAAQ,EACV,IAAIwpB,EAAOhO,EAAE9S,EACT8xC,EAAOh/B,EAAElR,EACbkR,EAAElR,OAAI,EACHkwC,IAAMA,EAAK9xC,EAAI8gB,GACfA,IAAMA,EAAKlf,EAAIkwC,GACfnjD,EAAEiV,IAAMkP,IAAGnkB,EAAEiV,EAAIkd,GACjBnyB,EAAE4F,IAAMue,IAAGnkB,EAAE4F,EAAIu9C,GACpBnjD,EAAEmwC,OAAO0mB,OAAOrI,IAhBA,iBADcz6C,EAkBLy6C,GAjBQ,OAANz6C,EAA0B,mBAANA,IAkBtC/T,EAAEw2D,YAAWx2D,EAAEw2D,UAAY,IAAIvgD,SACpCjW,EAAEw2D,UAAUx1C,IAAIwtC,EAAMrqC,IAGtBnkB,EAAEu2D,YAAYv1C,IAAIwtC,EAAMrqC,GAvBP,IAASpQ,GAgChC+iD,EAAa,SAAS92D,EAAGwuD,GAC3B,IAAIrnD,EAAInH,EAAEmwC,OAAOp0B,IAAIyyC,GACrB,OAAOrnD,EAAIA,EAAEwB,MAAQ2H,EAAQqB,gBAG3BwC,EAAc,SAASnU,EAAGk2B,GAE5B,OADAzI,EAAyB,iBAAPyI,IAAwB,EAAJA,KAAWA,GAC1C4gC,EAAW92D,EAAGk2B,IA8GzB5tB,EAAOC,QAAQwW,kBAzKW,SAAS/e,GAC/BA,EAAEy2D,MAAQ,GAyKdnuD,EAAOC,QAAQiW,SAvGE,SAAS1Z,EAAG9E,EAAGk2B,GAE5B,OADAzI,EAAWyI,aAAe5lB,EAAQS,QAC9BmlB,EAAI1W,WAAc0W,EAAIwa,aAAepjB,MAAM4I,EAAIvtB,OACxC2H,EAAQqB,eACZmlD,EAAW92D,EAAGq2D,EAAWvxD,EAAGoxB,KAoGvC5tB,EAAOC,QAAQ4L,YAAeA,EAC9B7L,EAAOC,QAAQqW,UAnDG,SAAS5e,GACvB,IAAIP,EAAI,EACJonB,EAAI7mB,EAAEmwC,OAAOlzB,KAAO,EAExB,KAAO4J,EAAIpnB,EAAI,GAAG,CACd,IAAIyT,EAAIpK,KAAKwiB,OAAO7rB,EAAEonB,GAAG,GACrB1S,EAAYnU,EAAGkT,GAAGsM,UAAWqH,EAAI3T,EAChCzT,EAAIyT,EAEb,OAAOzT,GA2CX6I,EAAOC,QAAQwuD,YA/GK,SAAS/2D,EAAGk2B,GAE5B,OADAzI,EAAWyI,aAAeq4B,GACnBuI,EAAW92D,EAAG2uC,EAAiBzY,KA8G1C5tB,EAAOC,QAAQuW,aAlFM,SAASha,EAAG9E,EAAGk2B,EAAKvtB,GACrC8kB,EAAWyI,aAAe5lB,EAAQS,QAClC,IAAIy9C,EAAO6H,EAAWvxD,EAAGoxB,GACzB,GAAIvtB,EAAM6W,UAEN,YADAo3C,EAAU52D,EAAGwuD,GAIjB,IAAIrqC,EAAInkB,EAAEmwC,OAAOp0B,IAAIyyC,GACrB,GAAIrqC,EACAA,EAAExb,MAAM2K,QAAQ3K,OACb,CACH,IAAIoL,EACAijD,EAAK9gC,EAAIvtB,MAGToL,EAFCmiB,EAAIwa,cAAmB,EAAHsmB,KAAUA,EAE3B,IAAI1mD,EAAQS,OAAO3F,EAAa4rD,GAEhC,IAAI1mD,EAAQS,OAAOmlB,EAAIt4B,KAAMo5D,GAErC,IAAI7vD,EAAI,IAAImJ,EAAQS,OAAOpI,EAAM/K,KAAM+K,EAAMA,OAC7CxL,EAAI6C,EAAGwuD,EAAMz6C,EAAG5M,KA8DxBmB,EAAOC,QAAQ0W,YArGK,SAASjf,EAAGk2B,EAAKvtB,GACjC8kB,EAAyB,iBAAPyI,IAAwB,EAAJA,KAAWA,GAAOvtB,aAAiB2H,EAAQS,QACjF,IAAIy9C,EAAOt4B,EACX,GAAIvtB,EAAM6W,UAEN,YADAo3C,EAAU52D,EAAGwuD,GAGjB,IAAIrqC,EAAInkB,EAAEmwC,OAAOp0B,IAAIyyC,GACrB,GAAIrqC,EACSA,EAAExb,MACR2K,QAAQ3K,OACR,CACH,IAAIoL,EAAI,IAAIzD,EAAQS,OAAO3F,EAAa8qB,GACpC/uB,EAAI,IAAImJ,EAAQS,OAAOpI,EAAM/K,KAAM+K,EAAMA,OAC7CxL,EAAI6C,EAAGwuD,EAAMz6C,EAAG5M,KAwFxBmB,EAAOC,QAAQsM,SAhIE,SAAS/P,GACtB,OAAO,IAAIu1C,EAAMv1C,IAgIrBwD,EAAOC,QAAQ8U,UA5CG,SAASvY,EAAGmyD,EAAOC,GACjC,IAEIP,EAFAQ,EAAOryD,EAAE+M,MAAMqlD,GAGnB,GAAIC,EAAKv5D,OAAS2M,GAEd,GADAosD,EAAQM,EAAMhiD,GACT0hD,EACD,OAAO,MACR,CAEH,IAAInI,EAAO6H,EAAWvxD,EAAGqyD,GAGzB,GADAR,EAAQM,EAAM9mB,OAAOp0B,IAAIyyC,GACrBmI,GAEA,GADAA,EAAQA,EAAMtlD,GACTslD,EACD,OAAO,MACR,CAGH,GADAA,EAASM,EAAMT,WAAaS,EAAMT,UAAUz6C,IAAIyyC,IAAUyI,EAAMV,YAAYx6C,IAAIyyC,IAC3EmI,EAED,OAAOzmD,EAAOq0B,cAAcz/B,EAAGgD,EAAa,0BAEhD,GAEI,GADA6uD,EAAQA,EAAMtlD,GACTslD,EACD,OAAO,QACNA,EAAMzgC,IAAI0iB,gBAK3B,OAFAtoC,EAAQwC,SAAShO,EAAGoyD,EAAMP,EAAMzgC,KAChC5lB,EAAQwC,SAAShO,EAAGoyD,EAAK,EAAGP,EAAMhuD,QAC3B,GAYXL,EAAOC,QAAQ8xC,MAAeA,+BCjS9B,MAAM,eAAEzH,GAAmB,EAAQ,OAC7B,SACFjmC,EAAQ,SACRG,EAAQ,cACRjC,EAAa,SACbN,EAAQ,WACRK,EAAU,SACVtE,EAAQ,eACRoS,EAAc,YACdI,EAAW,gBACXpE,EAAe,SACfyF,EAAQ,iBACRC,EAAgB,WAChB5U,EAAU,WACVyV,EAAU,UACVQ,EAAS,gBACTE,EAAe,aACfK,EAAY,QACZhW,EAAO,gBACP4J,EAAe,YACfqO,EAAW,eACX5X,EAAc,cACd+X,EAAa,WACbG,EAAU,aACVzO,EAAY,SACZwP,EAAQ,WACRhN,EAAU,cACV2N,EAAa,SACb3J,GACA,EAAQ,OACN,YACFyM,EAAW,gBACXyC,EAAe,cACf2D,EAAa,cACbC,EAAa,cACb7D,EAAa,kBACbR,EAAiB,eACjB2E,EAAc,WACdjG,EAAU,SACVyG,EAAQ,YACRna,EAAW,SACX6V,EAAQ,gBACRyE,EAAe,gBACf3F,EAAe,gBACfiB,EAAe,cACf7B,GACA,EAAQ,MACNre,EAAS,EAAQ,OACjB,aAAEqC,GAAiB,EAAQ,MAW3BsvD,EAAa,SAAStyD,EAAGoxB,EAAK7kB,GAEhC,OADAhL,EAAevB,EAAGoxB,GACX3X,EAAWzZ,GAAIuM,KAAO9G,GAO3B8sD,EAAW,SAASvyD,EAAGye,EAAKzV,GAC9B,GAAIwI,EAASxR,EAAGye,KAAS3Y,EAAY,CACjC,IAAIyG,EAAI,GACJ+I,EAAiBtV,EAAGye,IAjBjB,EAkBAzV,IAAiBspD,EAAWtyD,EAAGgD,EAAa,WAAW,KAASuJ,IAjBhE,EAkBAvD,IAAiBspD,EAAWtyD,EAAGgD,EAAa,cAAc,KAASuJ,IAjBnE,EAkBAvD,IAAiBspD,EAAWtyD,EAAGgD,EAAa,SAAS,KAASuJ,GAIjEqY,EAAe5kB,EAAGye,EAAK3Y,GAHvB5E,EAAQlB,EAAGuM,KAOjBimD,EAAW,SAASxyD,EAAGuM,EAAGo7B,GAE5B,OADA4qB,EAASvyD,EAAGuM,EA3BD,EA2BIo7B,GACRviB,EAASplB,EAAGuM,IAGjBkmD,EAAW,SAASzyD,EAAG2D,EAAGhJ,GAC5B0a,EAASrV,EAAG,EAAGrF,GACVuc,EAAalX,GAAI,IAClB2e,EAAW3e,EAAGgD,EAAa,wDACvBgc,EAAchf,GAAI,GAAIrF,GAE9B0pB,EAAc1gB,IAmIZ+uD,EAAO,SAAS1yD,EAAGrF,EAAGonB,GACxBvH,EAASxa,EAAG,EAAGrF,GACf6f,EAASxa,EAAG,EAAG+hB,IAGb4wC,EAAY,SAAS3yD,EAAGiC,EAAG0B,GAC7B,GAAIgT,EAAU3W,EAAG,GACb,OAAOgU,EAAYhU,EAAGiC,EAAG0B,EAAGqE,GAC3B,CACDsR,EAActZ,EAAG,GACjBsZ,EAActZ,EAAGiC,EAAE,GACnBqX,EAActZ,EAAG2D,EAAE,GACnBnC,EAASxB,EAAG,EAAG,GACf,IAAI6T,EAAMsH,EAAcnb,GAAI,GAE5B,OADAkB,EAAQlB,EAAG,GACJ6T,IAIT++C,GAAY,SAAS5yD,EAAG6yD,EAAI/8C,GAC9B,IAAInb,EAAIk4D,EACJ9wC,EAAIjM,EAAK,EAEb,OAAS,CAEL,KAAOT,EAASrV,EAAG,IAAKrF,GAAIg4D,EAAU3yD,GAAI,GAAI,IACtCrF,GAAKmb,EAAK,GACV6I,EAAW3e,EAAGgD,EAAa,uCAC/B9B,EAAQlB,EAAG,GAIf,KAAOqV,EAASrV,EAAG,IAAK+hB,GAAI4wC,EAAU3yD,GAAI,GAAI,IACtC+hB,EAAIpnB,GACJgkB,EAAW3e,EAAGgD,EAAa,uCAC/B9B,EAAQlB,EAAG,GAGf,GAAI+hB,EAAIpnB,EAKJ,OAHAuG,EAAQlB,EAAG,GAEX0yD,EAAK1yD,EAAG8V,EAAK,EAAGnb,GACTA,EAGX+3D,EAAK1yD,EAAGrF,EAAGonB,KAIb+wC,GAAc,SAASD,EAAI/8C,EAAIi9C,GACjC,IAAIC,EAAKhvD,KAAKwiB,OAAO1Q,EAAK+8C,GAAM,GAC5B1kD,EAAI4kD,GAAY,EAALC,IAAWH,EAAKG,GAE/B,OADAryD,EAAOgoB,WAAWkqC,EAAKG,GAAM7kD,GAAKA,GAAK2H,EAAKk9C,GACrC7kD,GAGL8kD,GAAU,SAASjzD,EAAG6yD,EAAI/8C,EAAIi9C,GAChC,KAAOF,EAAK/8C,GAAI,CAQZ,GANAT,EAASrV,EAAG,EAAG6yD,GACfx9C,EAASrV,EAAG,EAAG8V,GACX68C,EAAU3yD,GAAI,GAAI,GAClB0yD,EAAK1yD,EAAG6yD,EAAI/8C,GAEZ5U,EAAQlB,EAAG,GACX8V,EAAK+8C,GAAM,EACX,OACJ,IAAI1kD,EAwBA5B,EAPJ,GAfI4B,EADA2H,EAAK+8C,EAvEA,KAuEyB,IAARE,EAClB/uD,KAAKwiB,OAAOqsC,EAAK/8C,GAAI,GAErBg9C,GAAYD,EAAI/8C,EAAIi9C,GAC5B19C,EAASrV,EAAG,EAAGmO,GACfkH,EAASrV,EAAG,EAAG6yD,GACXF,EAAU3yD,GAAI,GAAI,GAClB0yD,EAAK1yD,EAAGmO,EAAG0kD,IAEX3xD,EAAQlB,EAAG,GACXqV,EAASrV,EAAG,EAAG8V,GACX68C,EAAU3yD,GAAI,GAAI,GAClB0yD,EAAK1yD,EAAGmO,EAAG2H,GAEX5U,EAAQlB,EAAG,IAEf8V,EAAK+8C,GAAM,EACX,OACJx9C,EAASrV,EAAG,EAAGmO,GACfmL,EAActZ,GAAI,GAClBqV,EAASrV,EAAG,EAAG8V,EAAK,GACpB48C,EAAK1yD,EAAGmO,EAAG2H,EAAK,GAChB3H,EAAIykD,GAAU5yD,EAAG6yD,EAAI/8C,GAGjB3H,EAAI0kD,EAAK/8C,EAAK3H,GACd8kD,GAAQjzD,EAAG6yD,EAAI1kD,EAAI,EAAG4kD,GACtBxmD,EAAI4B,EAAI0kD,EACRA,EAAK1kD,EAAI,IAET8kD,GAAQjzD,EAAGmO,EAAI,EAAG2H,EAAIi9C,GACtBxmD,EAAIuJ,EAAK3H,EACT2H,EAAK3H,EAAI,IAER2H,EAAK+8C,GAAM,IAAMtmD,IAClBwmD,EA7GD/uD,KAAKwiB,MAAoB,WAAdxiB,KAAKkrC,aA6HrBgkB,GAAY,CACd,OA9KY,SAASlzD,GACrB,IAAIqmB,EAAOmsC,EAASxyD,EAAG,EAtHZ,GAuHPgsC,EAAMpsB,EAAgB5f,EAAG,EAAG,IAC5BgxD,EAAOhlB,EAAI/yC,OACX0B,EAAI4qB,EAAgBvlB,EAAG,EAAG,GAC9BqmB,EAAOd,EAAgBvlB,EAAG,EAAGqmB,GAE7B,IAAI1iB,EAAI,IAAIsa,EAGZ,IAFAwC,EAAczgB,EAAG2D,GAEVhJ,EAAI0rB,EAAM1rB,IACb83D,EAASzyD,EAAG2D,EAAGhJ,GACf+lB,EAAgB/c,EAAGqoC,EAAKglB,GAQ5B,OALIr2D,IAAM0rB,GACNosC,EAASzyD,EAAG2D,EAAGhJ,GAEnBkmB,EAAgBld,GAET,GA2JP,OA1PY,SAAS3D,GACrB,IACI9B,EADAmhB,EAAImzC,EAASxyD,EAAG,EAxCT,GAwCsB,EAEjC,OAAQU,EAAWV,IACf,KAAK,EACD9B,EAAMmhB,EACN,MACJ,KAAK,EACDnhB,EAAM+hB,EAAkBjgB,EAAG,GAC3BskB,EAActkB,EAAG,GAAK9B,GAAOA,GAAOmhB,EAAG,EAAG,0BAC1C,IAAK,IAAI1kB,EAAI0kB,EAAG1kB,EAAIuD,EAAKvD,IACrB0a,EAASrV,EAAG,EAAGrF,EAAI,GACnB6f,EAASxa,EAAG,EAAGrF,GAEnB,MAEJ,QACI,OAAOgkB,EAAW3e,EAAG,yCAK7B,OADAwa,EAASxa,EAAG,EAAG9B,GACR,GAqOP,KA7MU,SAAS8B,GACnB,IAAImQ,EAAI8P,EAAkBjgB,EAAG,GACzBqf,EAAIY,EAAkBjgB,EAAG,GACzB9E,EAAI+kB,EAAkBjgB,EAAG,GACzBqhB,EAAMxK,EAAgB7W,EAAG,GAAS,EAAJ,EAGlC,GAFAuyD,EAASvyD,EAAG,EA7FD,GA8FXuyD,EAASvyD,EAAGqhB,EA7FD,GA8FPhC,GAAKlP,EAAG,CACRmU,EAActkB,EAAGmQ,EAAI,GAAKkP,EAAIyuB,EAAiB39B,EAAG,EAAG,6BACrD,IAAI5D,EAAI8S,EAAIlP,EAAI,EAGhB,GAFAmU,EAActkB,EAAG9E,GAAK4yC,EAAiBvhC,EAAI,EAAG,EAAG,2BAE7CrR,EAAImkB,GAAKnkB,GAAKiV,GAAa,IAAPkR,GAAgD,IAApCrN,EAAYhU,EAAG,EAAGqhB,EAAIxZ,GACtD,IAAK,IAAIlN,EAAI,EAAGA,EAAI4R,EAAG5R,IACnB0a,EAASrV,EAAG,EAAGmQ,EAAIxV,GACnB6f,EAASxa,EAAGqhB,EAAInmB,EAAIP,QAGxB,IAAK,IAAIA,EAAI4R,EAAI,EAAG5R,GAAK,EAAGA,IACxB0a,EAASrV,EAAG,EAAGmQ,EAAIxV,GACnB6f,EAASxa,EAAGqhB,EAAInmB,EAAIP,GAMhC,OADA2e,EAActZ,EAAGqhB,GACV,GAoLP,KA1JS,SAASrhB,GAClB,IAAIuM,EAAI7L,EAAWV,GACnB4P,EAAgB5P,EAAGuM,EAAG,GACtB4J,EAAWnW,EAAG,GACd,IAAK,IAAIrF,EAAI4R,EAAG5R,GAAK,EAAGA,IACpB6f,EAASxa,EAAG,EAAGrF,GAGnB,OAFAmQ,EAAgB9K,EAAGuM,GACnBvB,EAAahL,EAAG,EAAGgD,EAAa,MACzB,GAmJP,OApOY,SAAShD,GACrB,IAAImY,EAAOq6C,EAASxyD,EAAG,EAjEZ,GAkEP9B,EAAMqnB,EAAgBvlB,EAAG,EAAGmY,GAIhC,IAHIja,IAAQia,GACRmM,EAActkB,EAAG,GAAK9B,GAAOA,GAAOia,EAAO,EAAG,EAAG,0BACrD9C,EAASrV,EAAG,EAAG9B,GACRA,EAAMia,EAAMja,IACfmX,EAASrV,EAAG,EAAG9B,EAAM,GACrBsc,EAASxa,EAAG,EAAG9B,GAInB,OAFAib,EAAYnZ,GACZwa,EAASxa,EAAG,EAAG9B,GACR,GAyNP,KAlBS,SAAS8B,GAClB,IAAIuM,EAAIimD,EAASxyD,EAAG,EApRT,GA4RX,OAPIuM,EAAI,IACJ+X,EAActkB,EAAGuM,EAAIuhC,EAAgB,EAAG,iBACnCj3B,EAAgB7W,EAAG,IACpB4kB,EAAe5kB,EAAG,EAAG+F,GACzByH,EAAWxN,EAAG,GACdizD,GAAQjzD,EAAG,EAAGuM,EAAG,IAEd,GAUP,OAlJW,SAASvM,GACpB,IAAIrF,EAAI4qB,EAAgBvlB,EAAG,EAAG,GAC1Bqf,EAAIyB,EAAS9gB,EAAGigB,EAAmB,EAAGmF,EAASplB,EAAG,IACtD,GAAIrF,EAAI0kB,EAAG,OAAO,EAClB,IAAI9S,EAAI8S,EAAI1kB,EACZ,GAAI4R,GAAK7P,OAAO6+C,mBAAqB3nC,EAAe5T,IAAKuM,GACrD,OAAOoS,EAAW3e,EAAGgD,EAAa,+BACtC,KAAOrI,EAAI0kB,EAAG1kB,IACV0a,EAASrV,EAAG,EAAGrF,GAEnB,OADA0a,EAASrV,EAAG,EAAGqf,GACR9S,IAgJX/I,EAAOC,QAAQ+kC,cALO,SAASxoC,GAE3B,OADAiL,EAAYjL,EAAGkzD,IACR,gCCpWX,MACI3tD,gBAAgB,WACZO,EAAU,cACVE,GACH,aACDhD,GACA,EAAQ,OACN,WAAE2lB,GAAe,EAAQ,MACzBnd,EAAU,EAAQ,MAClBH,EAAU,EAAQ,MAClBI,EAAU,EAAQ,OAClB,WACFC,EAAU,SACVC,GACA,EAAQ,MACNI,EAAU,EAAQ,MAClBX,EAAU,EAAQ,MAClBU,EAAU,EAAQ,MAElBqnD,EAAkB,CACpB,WACA,MACA,UACA,WACA,SACA,SACA,QACA,WACA,WACA,SACA,SACFl4D,KAAIokB,GAAKrc,EAAaqc,KAElB7C,EAAY,SAASthB,GACvB,OAAOi4D,EAAgBj4D,EAAI,IAQzB0hC,EAAM,CACRC,SAAa,EACbC,YAAa,EACbs2B,MAAa,EACbC,QAAa,EACb30B,OAAa,EACbE,MAAa,EACb7B,OAAa,EACbE,OAAa,EACbE,OAAa,EACbE,OAAa,EACbE,OAAY,GACZE,OAAY,GACZE,QAAY,GACZE,QAAY,GACZE,OAAY,GACZE,QAAY,GACZE,OAAY,GACZE,OAAY,GACZC,OAAY,GACZE,QAAY,GACZM,MAAY,GACZE,MAAY,GACZL,UAAY,GACZ8E,QAAY,GACZqlB,KAAY,IAkCVhrC,EAAS9a,EAAa,UAAU,GAYhCswD,EAAc,SAAStzD,EAAGmQ,EAAG0vB,EAAIC,EAAIqW,EAAIod,GAC3C,IAAIpmD,EAAOnN,EAAEoM,IAcb,GAZAZ,EAAQmE,UAAU3P,EAAGmQ,GACrB3E,EAAQmE,UAAU3P,EAAG6/B,GACrBr0B,EAAQmE,UAAU3P,EAAG8/B,GAEhByzB,GACD/nD,EAAQmE,UAAU3P,EAAGm2C,GAErBn2C,EAAEqM,GAAG2F,WAAavG,EAAOwG,SACzB5G,EAAIiH,UAAUtS,EAAGmN,EAAMomD,GAEvBloD,EAAIiG,iBAAiBtR,EAAGmN,EAAMomD,GAE9BA,EAAQ,CACR,IAAI/7C,EAAKxX,EAAE+M,MAAM/M,EAAEoM,IAAI,UAChBpM,EAAE+M,QAAQ/M,EAAEoM,KACnB+pC,EAAG3nC,QAAQgJ,KAIbg8C,EAAiB,SAASxzD,EAAG6/B,EAAIC,EAAIjsB,EAAK7X,GAC5C,IAAI0gC,EAAK8G,EAAgBxjC,EAAG6/B,EAAI7jC,GAGhC,OAFI0gC,EAAGhiB,YACHgiB,EAAK8G,EAAgBxjC,EAAG8/B,EAAI9jC,KAC5B0gC,EAAGhiB,YACP44C,EAAYtzD,EAAG08B,EAAImD,EAAIC,EAAIjsB,EAAK,IACzB,IAoCL4/C,EAAa,SAASC,EAAQ13D,EAAO23D,GACvC,MAAMj3B,EAAK3wB,EAAOkmD,YAAYyB,EAAQC,GAEtC,OADAhrC,EAAW3sB,GAAS4gC,EAAIgC,OACpBlC,EAAGhiB,WACHg5C,EAAO/B,OAAS,GAAG31D,EACZ,MAEC0gC,GAGV8G,EAAkB,SAASxjC,EAAG4M,EAAG5Q,GACnC,IAAIwZ,EACJ,OAAO5I,EAAE4C,SACL,KAAK1J,EACL,KAAKE,EACDwP,EAAK5I,EAAE/I,MAAM6R,UACb,MACJ,QACIF,EAAKxV,EAAEgN,IAAIwI,GAAG5I,EAAE4C,SAGxB,OAAOgG,EAAKzJ,EAAOkmD,YAAYz8C,EAAIxV,EAAEgN,IAAIiyB,OAAOjjC,IAAUwP,EAAQqB,gBAGtErJ,EAAOC,QAAQmwD,OA7BA,SAAS9yD,EAAG+yD,EAAIx0C,GAC3B,OAAc,OAAPw0C,GACFA,EAAGlC,MAAS,GAAKtyC,EADD,KACco0C,EAAWI,EAAIx0C,EAAGve,EAAEkM,IAAIiyB,OAAO5f,KA4BtE7b,EAAOC,QAAQm5B,IAAmBA,EAClCp5B,EAAOC,QAAQ6vD,YAAmBA,EAClC9vD,EAAOC,QAAQ+vD,eAAmBA,EAClChwD,EAAOC,QAAQ2yC,cA7DO,SAASp2C,EAAG6/B,EAAIC,EAAIjsB,EAAK7X,GAC3C,IAAKw3D,EAAexzD,EAAG6/B,EAAIC,EAAIjsB,EAAK7X,GAChC,OAAQA,GACJ,KAAK4gC,EAAI+B,UACL,OAAOvzB,EAAOw0B,iBAAiB5/B,EAAG6/B,EAAIC,GAC1C,KAAKlD,EAAIiB,QAAS,KAAKjB,EAAImB,OAAQ,KAAKnB,EAAIqB,QAC5C,KAAKrB,EAAIuB,OAAQ,KAAKvB,EAAIyB,OAAQ,KAAKzB,EAAI4B,QAAS,CAChD,IAAI3hB,EAAK/Q,EAAImF,SAAS4uB,GAClB9iB,EAAKjR,EAAImF,SAAS6uB,GACtB,OAAW,IAAPjjB,IAAuB,IAAPE,EACT3R,EAAO+0B,gBAAgBngC,EAAG6/B,EAAIC,GAE9B10B,EAAO20B,gBAAgB//B,EAAG6/B,EAAIC,EAAI98B,EAAa,gCAAgC,IAE9F,QACI,OAAOoI,EAAO20B,gBAAgB//B,EAAG6/B,EAAIC,EAAI98B,EAAa,yBAAyB,MA+C/FQ,EAAOC,QAAQqwD,iBA1CU,SAAS9zD,EAAG6/B,EAAIC,EAAI9jC,GACzC,IAAI6X,EAAM,IAAIrI,EAAQS,OACtB,OAAKunD,EAAexzD,EAAG6/B,EAAIC,EAAIjsB,EAAK7X,IAGxB6X,EAAIuH,YAFL,MAwCf5X,EAAOC,QAAQgwD,WAAmBA,EAClCjwD,EAAOC,QAAQ+/B,gBAAmBA,EAClChgC,EAAOC,QAAQ2lD,UA3IG,SAASppD,GACvBA,EAAEgN,IAAIiyB,OAAOrC,EAAIC,UAAe,IAAIlxB,EAAS3L,EAAGgD,EAAa,WAAW,IACxEhD,EAAEgN,IAAIiyB,OAAOrC,EAAIE,aAAe,IAAInxB,EAAS3L,EAAGgD,EAAa,cAAc,IAC3EhD,EAAEgN,IAAIiyB,OAAOrC,EAAIw2B,OAAe,IAAIznD,EAAS3L,EAAGgD,EAAa,QAAQ,IACrEhD,EAAEgN,IAAIiyB,OAAOrC,EAAIy2B,SAAe,IAAI1nD,EAAS3L,EAAGgD,EAAa,UAAU,IACvEhD,EAAEgN,IAAIiyB,OAAOrC,EAAI8B,QAAe,IAAI/yB,EAAS3L,EAAGgD,EAAa,SAAS,IACtEhD,EAAEgN,IAAIiyB,OAAOrC,EAAIgC,OAAe,IAAIjzB,EAAS3L,EAAGgD,EAAa,QAAQ,IACrEhD,EAAEgN,IAAIiyB,OAAOrC,EAAIG,QAAe,IAAIpxB,EAAS3L,EAAGgD,EAAa,SAAS,IACtEhD,EAAEgN,IAAIiyB,OAAOrC,EAAIK,QAAe,IAAItxB,EAAS3L,EAAGgD,EAAa,SAAS,IACtEhD,EAAEgN,IAAIiyB,OAAOrC,EAAIO,QAAe,IAAIxxB,EAAS3L,EAAGgD,EAAa,SAAS,IACtEhD,EAAEgN,IAAIiyB,OAAOrC,EAAIS,QAAe,IAAI1xB,EAAS3L,EAAGgD,EAAa,SAAS,IACtEhD,EAAEgN,IAAIiyB,OAAOrC,EAAIW,QAAe,IAAI5xB,EAAS3L,EAAGgD,EAAa,SAAS,IACtEhD,EAAEgN,IAAIiyB,OAAOrC,EAAIa,QAAe,IAAI9xB,EAAS3L,EAAGgD,EAAa,SAAS,IACtEhD,EAAEgN,IAAIiyB,OAAOrC,EAAIe,SAAe,IAAIhyB,EAAS3L,EAAGgD,EAAa,UAAU,IACvEhD,EAAEgN,IAAIiyB,OAAOrC,EAAIiB,SAAe,IAAIlyB,EAAS3L,EAAGgD,EAAa,UAAU,IACvEhD,EAAEgN,IAAIiyB,OAAOrC,EAAImB,QAAe,IAAIpyB,EAAS3L,EAAGgD,EAAa,SAAS,IACtEhD,EAAEgN,IAAIiyB,OAAOrC,EAAIqB,SAAe,IAAItyB,EAAS3L,EAAGgD,EAAa,UAAU,IACvEhD,EAAEgN,IAAIiyB,OAAOrC,EAAIuB,QAAe,IAAIxyB,EAAS3L,EAAGgD,EAAa,SAAS,IACtEhD,EAAEgN,IAAIiyB,OAAOrC,EAAIyB,QAAe,IAAI1yB,EAAS3L,EAAGgD,EAAa,SAAS,IACtEhD,EAAEgN,IAAIiyB,OAAOrC,EAAI0B,QAAe,IAAI3yB,EAAS3L,EAAGgD,EAAa,SAAS,IACtEhD,EAAEgN,IAAIiyB,OAAOrC,EAAI4B,SAAe,IAAI7yB,EAAS3L,EAAGgD,EAAa,UAAU,IACvEhD,EAAEgN,IAAIiyB,OAAOrC,EAAIkC,OAAe,IAAInzB,EAAS3L,EAAGgD,EAAa,QAAQ,IACrEhD,EAAEgN,IAAIiyB,OAAOrC,EAAIoC,OAAe,IAAIrzB,EAAS3L,EAAGgD,EAAa,QAAQ,IACrEhD,EAAEgN,IAAIiyB,OAAOrC,EAAI+B,WAAe,IAAIhzB,EAAS3L,EAAGgD,EAAa,YAAY,IACzEhD,EAAEgN,IAAIiyB,OAAOrC,EAAI6G,SAAe,IAAI93B,EAAS3L,EAAGgD,EAAa,UAAU,KAoH3EQ,EAAOC,QAAQ+7B,iBA5GU,SAASx/B,EAAG4M,GACjC,IAAI4I,EACJ,GAAK5I,EAAE8C,aAA4C,QAA5B8F,EAAK5I,EAAE/I,MAAM6R,YAC/B9I,EAAEoJ,oBAAmD,QAA5BR,EAAK5I,EAAE/I,MAAM6R,WAAsB,CAC7D,IAAI5M,EAAOiD,EAAOkmD,YAAYz8C,EAAI9J,EAAW1L,EAAG8d,IAChD,GAAIhV,EAAK2H,aACL,OAAO3H,EAAK8H,SAEpB,OAAO4L,EAAU5P,EAAE4C,UAqGvBhM,EAAOC,QAAQ+Y,UAAmBA,+BCnNlC,MAAM3R,EAAS,EAAQ,MACjB0vB,EAAS,EAAQ,MACjBnvB,EAAS,EAAQ,MACjBC,EAAS,EAAQ,MACjBI,EAAS,EAAQ,MAEvBjI,EAAOC,QAAQ6B,YAA0BuF,EAAKvF,YAC9C9B,EAAOC,QAAQ4B,cAA0BwF,EAAKxF,cAC9C7B,EAAOC,QAAQ0G,WAA0BU,EAAKjB,cAAcO,WAC5D3G,EAAOC,QAAQyG,YAA0BW,EAAKjB,cAAcM,YAC5D1G,EAAOC,QAAQwG,WAA0BY,EAAKjB,cAAcK,WAC5DzG,EAAOC,QAAQsG,WAA0Bc,EAAKjB,cAAcG,WAC5DvG,EAAOC,QAAQuG,cAA0Ba,EAAKjB,cAAcI,cAC5DxG,EAAOC,QAAQmD,aAA0BiE,EAAKjE,aAC9CpD,EAAOC,QAAQoD,cAA0BgE,EAAKhE,cAC9CrD,EAAOC,QAAQqD,aAA0B+D,EAAK/D,aAC9CtD,EAAOC,QAAQsD,YAA0B8D,EAAK9D,YAC9CvD,EAAOC,QAAQuD,iBAA0B6D,EAAK7D,iBAC9CxD,EAAOC,QAAQwD,aAA0B4D,EAAK5D,aAC9CzD,EAAOC,QAAQyD,cAA0B2D,EAAK3D,cAC9C1D,EAAOC,QAAQ0D,aAA0B0D,EAAK1D,aAC9C3D,EAAOC,QAAQ2D,YAA0ByD,EAAKzD,YAC9C5D,EAAOC,QAAQ4D,aAA0BwD,EAAKxD,aAC9C7D,EAAOC,QAAQ6D,YAA0BuD,EAAKvD,YAC9C9D,EAAOC,QAAQyC,YAA0B2E,EAAKtF,eAAeW,YAC7D1C,EAAOC,QAAQoG,OAA0BgB,EAAKjB,cAAcC,OAC5DrG,EAAOC,QAAQ8D,UAA0BsD,EAAKtD,UAC9C/D,EAAOC,QAAQ+D,WAA0BqD,EAAKrD,WAC9ChE,EAAOC,QAAQgE,WAA0BoD,EAAKpD,WAC9CjE,EAAOC,QAAQiE,UAA0BmD,EAAKnD,UAC9ClE,EAAOC,QAAQkE,WAA0BkD,EAAKlD,WAC9CnE,EAAOC,QAAQmE,UAA0BiD,EAAKjD,UAC9CpE,EAAOC,QAAQoE,SAA0BgD,EAAKhD,SAC9CrE,EAAOC,QAAQqE,WAA0B+C,EAAK/C,WAC9CtE,EAAOC,QAAQsE,SAA0B8C,EAAK9C,SAC9CvE,EAAOC,QAAQuE,SAA0B6C,EAAK7C,SAC9CxE,EAAOC,QAAQwE,UAA0B4C,EAAK5C,UAC9CzE,EAAOC,QAAQyE,UAA0B2C,EAAK3C,UAC9C1E,EAAOC,QAAQ0E,UAA0B0C,EAAK1C,UAC9C3E,EAAOC,QAAQ2E,UAA0ByC,EAAKzC,UAC9C5E,EAAOC,QAAQ4E,UAA0BwC,EAAKxC,UAC9C7E,EAAOC,QAAQ6E,UAA0BuC,EAAKvC,UAC9C9E,EAAOC,QAAQ8E,UAA0BsC,EAAKtC,UAC9C/E,EAAOC,QAAQkD,kBAA0BkE,EAAKlE,kBAC9CnD,EAAOC,QAAQ2B,YAA0ByF,EAAKzF,YAC9C5B,EAAOC,QAAQ+E,iBAA0BqC,EAAKrC,iBAC9ChF,EAAOC,QAAQgF,cAA0BoC,EAAKpC,cAC9CjF,EAAOC,QAAQiF,oBAA0BmC,EAAKnC,oBAC9ClF,EAAOC,QAAQqB,cAA0B+F,EAAK/F,cAC9CtB,EAAOC,QAAQ+B,UAA0BqF,EAAKtF,eAAeC,UAC7DhC,EAAOC,QAAQgC,SAA0BoF,EAAKtF,eAAeE,SAC7DjC,EAAOC,QAAQiC,aAA0BmF,EAAKtF,eAAeG,aAC7DlC,EAAOC,QAAQkC,mBAA0BkF,EAAKtF,eAAeI,mBAC7DnC,EAAOC,QAAQmC,YAA0BiF,EAAKtF,eAAeK,YAC7DpC,EAAOC,QAAQoC,YAA0BgF,EAAKtF,eAAeM,YAC7DrC,EAAOC,QAAQqC,WAA0B+E,EAAKtF,eAAeO,WAC7DtC,EAAOC,QAAQsC,cAA0B8E,EAAKtF,eAAeQ,cAC7DvC,EAAOC,QAAQuC,cAA0B6E,EAAKtF,eAAeS,cAC7DxC,EAAOC,QAAQwC,YAA0B4E,EAAKtF,eAAeU,YAC7DzC,EAAOC,QAAQ0B,YAA0B0F,EAAK1F,YAC9C3B,EAAOC,QAAQsB,kBAA0B8F,EAAK9F,kBAC9CvB,EAAOC,QAAQuB,kBAA0B6F,EAAK7F,kBAC9CxB,EAAOC,QAAQwB,gBAA0B4F,EAAK5F,gBAC9CzB,EAAOC,QAAQyB,oBAA0B2F,EAAK3F,oBAC9C1B,EAAOC,QAAQqG,UAA0Be,EAAKjB,cAAcE,UAC5DtG,EAAOC,QAAQkF,UAA0BkC,EAAKlC,UAC9CnF,EAAOC,QAAQkG,iBAA0BkB,EAAKlB,iBAC9CnG,EAAOC,QAAQyP,aAA0BqnB,EAAKrnB,aAC9C1P,EAAOC,QAAQ0P,UAA0BonB,EAAKpnB,UAC9C3P,EAAOC,QAAQjD,YAA0B+5B,EAAK/5B,YAC9CgD,EAAOC,QAAQgQ,kBAA0B8mB,EAAK9mB,kBAC9CjQ,EAAOC,QAAQjC,SAA0B+4B,EAAK/4B,SAC9CgC,EAAOC,QAAQoO,UAA0B0oB,EAAK1oB,UAC9CrO,EAAOC,QAAQmQ,eAA0B2mB,EAAK3mB,eAC9CpQ,EAAOC,QAAQy2C,UAA0BzuC,EAAOyuC,UAChD12C,EAAOC,QAAQuQ,YAA0BumB,EAAKvmB,YAC9CxQ,EAAOC,QAAQ+Q,WAA0B+lB,EAAK/lB,WAC9ChR,EAAOC,QAAQ4K,SAA0BksB,EAAKlsB,SAC9C7K,EAAOC,QAAQmM,gBAA0B2qB,EAAK3qB,gBAC9CpM,EAAOC,QAAQiR,SAA0B6lB,EAAK7lB,SAC9ClR,EAAOC,QAAQqR,UAA0BylB,EAAKzlB,UAC9CtR,EAAOC,QAAQuR,OAA0BulB,EAAKvlB,OAC9CxR,EAAOC,QAAQwR,cAA0BslB,EAAKtlB,cAC9CzR,EAAOC,QAAQ0R,kBAA0BolB,EAAKplB,kBAC9C3R,EAAOC,QAAQ2R,aAA0BmlB,EAAKnlB,aAC9C5R,EAAOC,QAAQnC,cAA0Bi5B,EAAKj5B,cAC9CkC,EAAOC,QAAQ40B,YAA0BjtB,EAAOitB,YAChD70B,EAAOC,QAAQ60B,iBAA0BltB,EAAOktB,iBAChD90B,EAAOC,QAAQ80B,gBAA0BntB,EAAOmtB,gBAChD/0B,EAAOC,QAAQ4R,SAA0BklB,EAAKllB,SAC9C7R,EAAOC,QAAQ8Z,YAA0BnS,EAAOmS,YAChD/Z,EAAOC,QAAQ+0B,aAA0BptB,EAAOotB,aAChDh1B,EAAOC,QAAQ6R,iBAA0BilB,EAAKjlB,iBAC9C9R,EAAOC,QAAQ+Z,aAA0BpS,EAAOoS,aAChDha,EAAOC,QAAQkS,aAA0B4kB,EAAK5kB,aAC9CnS,EAAOC,QAAQ/C,WAA0B65B,EAAK75B,WAC9C8C,EAAOC,QAAQmS,eAA0B2kB,EAAK3kB,eAC9CpS,EAAOC,QAAQsS,iBAA0BwkB,EAAKxkB,iBAC9CvS,EAAOC,QAAQ0S,WAA0BokB,EAAKpkB,WAC9C3S,EAAOC,QAAQ2S,cAA0BmkB,EAAKnkB,cAC9C5S,EAAOC,QAAQ4S,gBAA0BkkB,EAAKlkB,gBAC9C7S,EAAOC,QAAQ8S,eAA0BgkB,EAAKhkB,eAC9C/S,EAAOC,QAAQ+S,cAA0B+jB,EAAK/jB,cAC9ChT,EAAOC,QAAQiT,oBAA0B6jB,EAAK7jB,oBAC9ClT,EAAOC,QAAQkT,UAA0B4jB,EAAK5jB,UAC9CnT,EAAOC,QAAQmT,WAA0B2jB,EAAK3jB,WAC9CpT,EAAOC,QAAQoT,gBAA0B0jB,EAAK1jB,gBAC9CrT,EAAOC,QAAQqT,aAA0ByjB,EAAKzjB,aAC9CtT,EAAOC,QAAQsT,YAA0BwjB,EAAKxjB,YAC9CvT,EAAOC,QAAQyT,aAA0BqjB,EAAKrjB,aAC9C1T,EAAOC,QAAQ0T,YAA0BojB,EAAKpjB,YAC9C3T,EAAOC,QAAQ2T,aAA0BmjB,EAAKnjB,aAC9C5T,EAAOC,QAAQ4T,eAA0BkjB,EAAKljB,eAC9C7T,EAAOC,QAAQ8zB,gBAA0BlsB,EAAIksB,gBAC7C/zB,EAAOC,QAAQ8T,QAA0BgjB,EAAKhjB,QAC9C/T,EAAOC,QAAQiU,SAA0B6iB,EAAK7iB,SAC9ClU,EAAOC,QAAQga,aAA0BhS,EAAOgS,aAChDja,EAAOC,QAAQwU,aAA0BsiB,EAAKtiB,aAC9CzU,EAAOC,QAAQ+zB,cAA0B/rB,EAAO+rB,cAChDh0B,EAAOC,QAAQyU,gBAA0BqiB,EAAKriB,gBAC9C1U,EAAOC,QAAQ6U,SAA0BiiB,EAAKjiB,SAC9C9U,EAAOC,QAAQ+U,UAA0B+hB,EAAK/hB,UAC9ChV,EAAOC,QAAQ8O,WAA0BgoB,EAAKhoB,WAC9C/O,EAAOC,QAAQvC,QAA0Bq5B,EAAKr5B,QAC9CsC,EAAOC,QAAQgV,gBAA0B8hB,EAAK9hB,gBAC9CjV,EAAOC,QAAQgL,iBAA0B8rB,EAAK9rB,iBAC9CjL,EAAOC,QAAQqL,kBAA0ByrB,EAAKzrB,kBAC9CtL,EAAOC,QAAQiV,gBAA0B6hB,EAAK7hB,gBAC9ClV,EAAOC,QAAQqV,oBAA0ByhB,EAAKzhB,oBAC9CtV,EAAOC,QAAQqH,gBAA0ByvB,EAAKzvB,gBAC9CtH,EAAOC,QAAQoL,kBAA0B0rB,EAAK1rB,kBAC9CrL,EAAOC,QAAQsL,mBAA0BwrB,EAAKxrB,mBAC9CvL,EAAOC,QAAQsV,sBAA0BwhB,EAAKxhB,sBAC9CvV,EAAOC,QAAQsH,gBAA0BwvB,EAAKxvB,gBAC9CvH,EAAOC,QAAQwV,gBAA0BshB,EAAKthB,gBAC9CzV,EAAOC,QAAQ0V,YAA0BohB,EAAKphB,YAC9C3V,EAAOC,QAAQ/B,eAA0B64B,EAAK74B,eAC9C8B,EAAOC,QAAQlC,eAA0Bg5B,EAAKh5B,eAC9CiC,EAAOC,QAAQ2V,eAA0BmhB,EAAKnhB,eAC9C5V,EAAOC,QAAQ6V,cAA0BihB,EAAKjhB,cAC9C9V,EAAOC,QAAQ8V,iBAA0BghB,EAAKhhB,iBAC9C/V,EAAOC,QAAQ+V,aAA0B+gB,EAAK/gB,aAC9ChW,EAAOC,QAAQgW,WAA0B8gB,EAAK9gB,WAC9CjW,EAAOC,QAAQgM,YAA0B8qB,EAAK9qB,YAC9CjM,EAAOC,QAAQkW,YAA0B4gB,EAAK5gB,YAC9CnW,EAAOC,QAAQmW,WAA0B2gB,EAAK3gB,WAC9CpW,EAAOC,QAAQsW,WAA0BwgB,EAAKxgB,WAC9CvW,EAAOC,QAAQyW,YAA0BqgB,EAAKrgB,YAC9C1W,EAAOC,QAAQ2W,YAA0BmgB,EAAKngB,YAC9C5W,EAAOC,QAAQ5C,aAA0B05B,EAAK15B,aAC9C2C,EAAOC,QAAQ4W,WAA0BkgB,EAAKlgB,WAC9C7W,EAAOC,QAAQ6W,YAA0BigB,EAAKjgB,YAC9C9W,EAAOC,QAAQg0B,WAA0BpsB,EAAIosB,WAC7Cj0B,EAAOC,QAAQwK,WAA0BssB,EAAKtsB,WAC9CzK,EAAOC,QAAQswD,aAA0B1oD,EAAI0oD,aAC7CvwD,EAAOC,QAAQuH,aAA0BuvB,EAAKvvB,aAC9CxH,EAAOC,QAAQ2L,cAA0BmrB,EAAKnrB,cAC9C5L,EAAOC,QAAQg1B,YAA0BrtB,EAAOqtB,YAChDj1B,EAAOC,QAAQ+W,SAA0B+f,EAAK/f,SAC9ChX,EAAOC,QAAQi1B,aAA0BttB,EAAOstB,aAChDl1B,EAAOC,QAAQgX,iBAA0B8f,EAAK9f,iBAC9CjX,EAAOC,QAAQkX,aAA0B4f,EAAK5f,aAC9CnX,EAAOC,QAAQ+J,WAA0B+sB,EAAK/sB,WAC9ChK,EAAOC,QAAQmX,eAA0B2f,EAAK3f,eAC9CpX,EAAOC,QAAQqX,iBAA0Byf,EAAKzf,iBAC9CtX,EAAOC,QAAQsX,WAA0Bwf,EAAKxf,WAC9CvX,EAAOC,QAAQuX,mBAA0Buf,EAAKvf,mBAC9CxX,EAAOC,QAAQ0X,cAA0Bof,EAAKpf,cAC9C3X,EAAOC,QAAQ6X,eAA0Bif,EAAKjf,eAC9C9X,EAAOC,QAAQmY,cAA0B2e,EAAK3e,cAC9CpY,EAAOC,QAAQqN,eAA0BypB,EAAKzpB,eAC9CtN,EAAOC,QAAQhD,eAA0B85B,EAAK95B,eAC9C+C,EAAOC,QAAQ+M,cAA0B+pB,EAAK/pB,cAC9ChN,EAAOC,QAAQxC,aAA0Bs5B,EAAKt5B,aAC9CuC,EAAOC,QAAQuN,cAA0BupB,EAAKvpB,cAC9CxN,EAAOC,QAAQqY,cAA0Bye,EAAKze,cAC9CtY,EAAOC,QAAQsY,YAA0Bwe,EAAKxe,YAC9CvY,EAAOC,QAAQoN,aAA0B0pB,EAAK1pB,aAC9CrN,EAAOC,QAAQ2Y,aAA0Bme,EAAKne,aAC9C5Y,EAAOC,QAAQ6Y,eAA0Bie,EAAKje,eAC9C9Y,EAAOC,QAAQ+N,SAA0B+oB,EAAK/oB,SAC9ChO,EAAOC,QAAQ8Y,aAA0Bge,EAAKhe,aAC9C/Y,EAAOC,QAAQgZ,cAA0B8d,EAAK9d,cAC9CjZ,EAAOC,QAAQkZ,gBAA0B4d,EAAK5d,gBAC9CnZ,EAAOC,QAAQ0Z,YAA0Bod,EAAKpd,YAC9C3Z,EAAOC,QAAQ4Z,UAA0Bkd,EAAKld,UAC9C7Z,EAAOC,QAAQi0B,UAA0BrsB,EAAIqsB,UAC7Cl0B,EAAOC,QAAQmhC,WAA0Bv5B,EAAIu5B,WAC7CphC,EAAOC,QAAQ4X,gBAA0Bkf,EAAKlf,6CC5L9C,MAAM24C,EAAwE,IAExE,kBACFjvD,EAAiB,kBACjBC,EAAiB,aACjBhC,GACA,EAAQ,MAUZQ,EAAOC,QAAQmsC,aADO,IAItBpsC,EAAOC,QAAQksC,cADO,IAItBnsC,EAAOC,QAAQ+rC,aADO,IAYtB,MAAMykB,EAAWlvD,EAAoB,IAAMC,EAC3CxB,EAAOC,QAAQwwD,SAAWA,EAEU,CAChC,MAAM1kB,EAAa,IACnB/rC,EAAOC,QAAQ8rC,WAAaA,EAE5B,MAAM2kB,EAAW,SAAWD,EAAW,IACvCzwD,EAAOC,QAAQywD,SAAWA,EAE1B,MAAMC,EAAYD,EAClB1wD,EAAOC,QAAQ0wD,UAAYA,EAE3B,MAAMzkB,EAAmB1sC,EACrBkxD,EAAW,SAAWA,EAAtBA,mCAIJ1wD,EAAOC,QAAQisC,iBAAmBA,EAElC,MAAMD,EAAqBzsC,EACvBmxD,EAAY,QAAUA,EAAY,qBAEtC3wD,EAAOC,QAAQgsC,mBAAqBA,EAsExC,MAAMyD,EAAyB8gB,EAAK9gB,yBAA0B,EAGxDnF,GAAkB,WAQlBrnC,EAAgBstD,EAAKttD,eAAiB,IAOtC4zB,EAAa05B,EAAK15B,YAAc,GAmChChd,EAAkB02C,EAAK12C,iBAAmB,KAiB1C61B,EAAQ,SAASihB,EAAUC,GAG7B,IAFA,IAAIC,EAAQtwD,KAAKC,IAAI,EAAGD,KAAKwqC,KAAKxqC,KAAK4oB,IAAIynC,GAAY,OACnDxd,EAASud,EACJz5D,EAAI,EAAGA,EAAI25D,EAAO35D,IACvBk8C,GAAU7yC,KAAKiyC,IAAI,EAAGjyC,KAAKwiB,OAAO6tC,EAAW15D,GAAK25D,IACtD,OAAOzd,GAGXrzC,EAAOC,QAAQiD,cAAyBA,EACxClD,EAAOC,QAAQyvC,uBAAyBA,EACxC1vC,EAAOC,QAAQ62B,WAAyBA,EACxC92B,EAAOC,QAAQomD,gBA9CS,KA+CxBrmD,EAAOC,QAAQqmD,mBAlDY,GAmD3BtmD,EAAOC,QAAQqqC,eAjFQ,WAkFvBtqC,EAAOC,QAAQsqC,eAAyBA,EACxCvqC,EAAOC,QAAQsmD,eAjDS,QAkDxBvmD,EAAOC,QAAQumD,kBArDW,GAsD1BxmD,EAAOC,QAAQ6Z,gBAAyBA,EACxC9Z,EAAOC,QAAQwmD,MAhCD,SAASpmD,GACnB,GAAc,IAAVA,EAAa,MAAO,CAACA,EAAO,GAChC,IAAI+Q,EAAO,IAAI4G,SAAS,IAAI+qB,YAAY,IACxC3xB,EAAK+xB,WAAW,EAAG9iC,GACnB,IAAI0wD,EAAQ3/C,EAAK4/C,UAAU,KAAO,GAAM,KAC3B,IAATD,IACA3/C,EAAK+xB,WAAW,EAAG9iC,EAAQG,KAAKiyC,IAAI,EAAG,KACvCse,GAAS3/C,EAAK4/C,UAAU,KAAO,GAAM,MAAS,IAElD,IAAIH,EAAWE,EAAO,KAEtB,MAAO,CADQphB,EAAMtvC,GAAQwwD,GACXA,IAsBtB7wD,EAAOC,QAAQ0vC,MAAyBA,EACxC3vC,EAAOC,QAAQymD,sBApDe,WAK1B,OAAO,IAgDX1mD,EAAOC,QAAQ2vC,gBAvES,SAAS7mC,GAC7B,OAAOpI,OAAOoI,IAuElB/I,EAAOC,QAAQ4vC,eApEQ,SAAS9mC,GAC5B,OAAOpI,OAAOzH,OAAO6P,EAAEkoD,YAAY,OAoEvCjxD,EAAOC,QAAQuqC,oBAjEa,SAASzhC,GACjC,OAAOA,GAAKwhC,GAAkBxhC,EAAI,YAAkBA,GAiExD/I,EAAOC,QAAQkqC,cAhDO,SAAS7sC,EAAGue,GAC9B,IAAKA,EAAG,MAAM7nB,MAAM6nB,iCC7KxB,MAAM,kBACFta,EAAiB,kBACjBC,GACA,EAAQ,MAENusC,EAAgB,IAAMxsC,EAAoB,IAAMC,EACtDxB,EAAOC,QAAQ8tC,cAAgBA,EAE/B/tC,EAAOC,QAAQklB,WAAa,SAAS7lB,KAErCU,EAAOC,QAAQilB,aAAe,EAA9B,mBAGAllB,EAAOC,QAAQklC,cADO,YAEtBnlC,EAAOC,QAAQ20B,kBAAoB,EAAnC,wBAGA50B,EAAOC,QAAQmlC,eADQ,QAEvBplC,EAAOC,QAAQ+kC,cAAgB,EAA/B,oBASAhlC,EAAOC,QAAQolC,cADO,KAEtBrlC,EAAOC,QAAQ6kC,WAAa,EAA5B,iBAGA9kC,EAAOC,QAAQqlC,eADQ,SAEvBtlC,EAAOC,QAAQ8kC,eAAiB,EAAhC,oBAGA/kC,EAAOC,QAAQulC,gBADS,OAExBxlC,EAAOC,QAAQglC,aAAe,EAA9B,mBAGAjlC,EAAOC,QAAQixD,eADQ,QAKvBlxD,EAAOC,QAAQslC,gBADS,OAExBvlC,EAAOC,QAAQ2kC,aAAe,EAA9B,mBAGA5kC,EAAOC,QAAQwlC,cADO,QAEtBzlC,EAAOC,QAAQ42B,cAAgB,EAA/B,oBAGA72B,EAAOC,QAAQilC,gBADS,UAExBllC,EAAOC,QAAQ4kC,gBAAkB,EAAjC,sBAGA7kC,EAAOC,QAAQylC,mBADY,UAE3B1lC,EAAOC,QAAQyH,gBAAkB,EAAjC,sBAEA,MAAMypD,EAAQ,EAAQ,MACtBnxD,EAAOC,QAAQ7C,cAAgB+zD,EAAM/zD,2CC3DrC,MAAM,cACFkE,EACAS,gBAAgB,aACZG,EAAY,YACZU,EAAW,SACXX,EAAQ,YACRY,EAAW,YACXC,EAAW,YACXH,GAEJyD,eAAe,cAAEI,GAAe,aAChCtH,EAAY,aACZgB,EAAY,aACZV,GACA,EAAQ,MACNqI,EAAW,EAAQ,MACnBE,EAAW,EAAQ,MACnBC,EAAW,EAAQ,OACnB,WACFqhB,EAAU,MACVysB,EAAK,OACLC,EAAM,MACNC,EAAK,OACL1B,EAAM,MACND,EAAK,OACL4B,EAAM,OACNG,EAAM,QACNC,EAAO,OACPC,EAAM,QACNlC,EAAO,OACPmC,EAAM,QACNC,GACA,EAAQ,OACN,WAAErxB,GAAe,EAAQ,OACzB,WAAEjd,GAAe,EAAQ,OACzB,UACFkpD,EAAS,IACT5oD,GACA,EAAQ,MAEZ,IAAI65B,EAAY,CAAC,GAAM,IAAM,GAAI,GAAI,GAAM,IAE3C,MAAMgvB,EAEFjsD,YAAY5I,EAAG80D,EAAGhsD,GACdpR,KAAKq9D,QAAU,EACfr9D,KAAKs9D,WAAa,EAClBt9D,KAAKu9D,gBAAkB,EACvBv9D,KAAKw9D,YAAc,EACnBx9D,KAAKy9D,WAAa,EAElBxsC,EAAWmsC,aAAa9oD,EAAK,yCAC7B2c,EAAWjmB,EAAaoG,IAER,KAAZA,EAAK,IAAmD,KAAZA,EAAK,GACjDpR,KAAKoR,KAAOA,EAAKoQ,SAAS,GACrBpQ,EAAK,IAAMhE,EAAc,GAC9BpN,KAAKoR,KAAO9F,EAAa,iBAAiB,GAE1CtL,KAAKoR,KAAOA,EAEhBpR,KAAKsI,EAAIA,EACTtI,KAAKo9D,EAAIA,EAGTp9D,KAAK09D,YAAc,IAAI7uB,YACnBviC,KAAKuc,IAAI7oB,KAAKq9D,QAASr9D,KAAKs9D,WAAYt9D,KAAKu9D,gBAAiBv9D,KAAKw9D,YAAax9D,KAAKy9D,aAEzFz9D,KAAK41D,GAAK,IAAI9xC,SAAS9jB,KAAK09D,aAC5B19D,KAAK6jB,GAAK,IAAIzZ,WAAWpK,KAAK09D,aAGlCC,KAAKl9C,GACD,IAAIoD,EAAK,IAAIzZ,WAAWqW,GAGxB,OAFsC,IAAnCy8C,EAAUl9D,KAAKo9D,EAAGv5C,EAAI,EAAGpD,IACxBzgB,KAAK4F,MAAM,aACRie,EAGX+5C,WAGI,OAFyC,IAArCV,EAAUl9D,KAAKo9D,EAAGp9D,KAAK6jB,GAAI,EAAG,IAC9B7jB,KAAK4F,MAAM,aACR5F,KAAK6jB,GAAG,GAGnBg6C,UAGI,OAFoD,IAAhDX,EAAUl9D,KAAKo9D,EAAGp9D,KAAK6jB,GAAI,EAAG7jB,KAAKq9D,UACnCr9D,KAAK4F,MAAM,aACR5F,KAAK41D,GAAGkI,SAAS,GAAG,GAG/BC,aAGI,OAFuD,IAAnDb,EAAUl9D,KAAKo9D,EAAGp9D,KAAK6jB,GAAI,EAAG7jB,KAAKy9D,aACnCz9D,KAAK4F,MAAM,aACR5F,KAAK41D,GAAGG,WAAW,GAAG,GAGjCiI,cAGI,OAFwD,IAApDd,EAAUl9D,KAAKo9D,EAAGp9D,KAAK6jB,GAAI,EAAG7jB,KAAKw9D,cACnCx9D,KAAK4F,MAAM,aACR5F,KAAK41D,GAAGkI,SAAS,GAAG,GAG/BG,aACI,OAAOj+D,KAAKg+D,cAGhBE,aACI,IAAIz9C,EAAOzgB,KAAK49D,WAGhB,OAFa,MAATn9C,IACAA,EAAOzgB,KAAKi+D,cACH,IAATx9C,EACO,KACJzM,EAAWhU,KAAKsI,EAAGtI,KAAK29D,KAAKl9C,EAAK,IAI7C09C,aAAatpD,EAAG4B,GACZ,SAAW,GAAM,IAAO,EAG5B2nD,SAAS3lD,GACL,IAAI5D,EAAI7U,KAAK69D,UACTpnD,EAAI0mD,EAER,IAAK,IAAIl6D,EAAI,EAAGA,EAAI4R,EAAG5R,IAAK,CACoC,IAAxDi6D,EAAUl9D,KAAKo9D,EAAGp9D,KAAK6jB,GAAI,EAAG7jB,KAAKu9D,kBACnCv9D,KAAK4F,MAAM,aACf,IAAIg4B,EAAM59B,KAAK41D,GAAGkH,UAAU,GAAG,GAC/BrkD,EAAE7Q,KAAK3E,GAAK,CACR2E,KAAQg2B,EACR1J,OAAS0J,GAAOmkB,EAAUtrC,EAAE4pC,MAAMiC,EAAS,GAC3CjuB,EAASuJ,GAAOgkB,EAAUnrC,EAAE4pC,MAAM6B,EAAS,GAC3Cx5B,EAASkV,GAAOkkB,EAAUrrC,EAAE4pC,MAAM+B,EAAS,GAC3CnsB,EAAS2H,GAAOuiB,EAAU1pC,EAAE4pC,MAAMgC,EAAS,GAC3Cvd,GAASlH,GAAOwiB,EAAU3pC,EAAE4pC,MAAMH,EAAS,GAC3Cnb,GAASnH,GAAOikB,EAAUprC,EAAE4pC,MAAM8B,EAAS,GAC3CrtB,KAAU8I,GAAOwiB,EAAU3pC,EAAE4pC,MAAMH,EAAS,IAAM/qB,IAK9DkpC,cAAc5lD,GACV,IAAI5D,EAAI7U,KAAK69D,UAEb,IAAK,IAAI56D,EAAI,EAAGA,EAAI4R,EAAG5R,IAAK,CACxB,IAAIO,EAAIxD,KAAK49D,WAEb,OAAQp6D,GACJ,KAAKuK,EACD0K,EAAElB,EAAE1W,KAAK,IAAIiT,EAAQS,OAAOxG,EAAU,OACtC,MACJ,KAAKC,EACDyK,EAAElB,EAAE1W,KAAK,IAAIiT,EAAQS,OAAOvG,EAAkC,IAApBhO,KAAK49D,aAC/C,MACJ,KAAKjvD,EACD8J,EAAElB,EAAE1W,KAAK,IAAIiT,EAAQS,OAAO5F,EAAa3O,KAAK+9D,eAC9C,MACJ,KAAKnvD,EACD6J,EAAElB,EAAE1W,KAAK,IAAIiT,EAAQS,OAAO3F,EAAa5O,KAAKg+D,gBAC9C,MACJ,KAAKvvD,EACL,KAAKC,EACD+J,EAAElB,EAAE1W,KAAK,IAAIiT,EAAQS,OAAO7F,EAAa1O,KAAKk+D,eAC9C,MACJ,QACIl+D,KAAK4F,MAAM,0BAA0BpC,QAKrD86D,WAAW7lD,GACP,IAAI5D,EAAI7U,KAAK69D,UAEb,IAAK,IAAI56D,EAAI,EAAGA,EAAI4R,EAAG5R,IACnBwV,EAAEhC,EAAExT,GAAK,IAAI4Q,EAAMs8B,MAAMnwC,KAAKsI,GAC9BtI,KAAKu+D,aAAa9lD,EAAEhC,EAAExT,GAAIwV,EAAElH,QAIpCitD,aAAa/lD,GACT,IAAI5D,EAAI7U,KAAK69D,UAEb,IAAK,IAAI56D,EAAI,EAAGA,EAAI4R,EAAG5R,IACnBwV,EAAEE,SAAS1V,GAAK,CACZmO,KAAS,KACTq+B,QAASzvC,KAAK49D,WACd17D,IAASlC,KAAK49D,YAK1Ba,UAAUhmD,GACN,IAAI5D,EAAI7U,KAAK69D,UACb,IAAK,IAAI56D,EAAI,EAAGA,EAAI4R,EAAG5R,IACnBwV,EAAE2e,SAASn0B,GAAKjD,KAAK69D,UAEzBhpD,EAAI7U,KAAK69D,UACT,IAAK,IAAI56D,EAAI,EAAGA,EAAI4R,EAAG5R,IACnBwV,EAAEm3B,QAAQ3sC,GAAK,CACX4sC,QAAS7vC,KAAKk+D,aACdpuB,QAAS9vC,KAAK69D,UACd9tB,MAAS/vC,KAAK69D,WAItBhpD,EAAI7U,KAAK69D,UACT,IAAK,IAAI56D,EAAI,EAAGA,EAAI4R,EAAG5R,IACnBwV,EAAEE,SAAS1V,GAAGmO,KAAOpR,KAAKk+D,aAIlCK,aAAa9lD,EAAG42B,GACZ52B,EAAElH,OAASvR,KAAKk+D,aACC,OAAbzlD,EAAElH,SACFkH,EAAElH,OAAS89B,GACf52B,EAAEhH,YAAczR,KAAK69D,UACrBplD,EAAE/G,gBAAkB1R,KAAK69D,UACzBplD,EAAE0qB,UAAYnjC,KAAK49D,WACnBnlD,EAAE6wB,UAAgC,IAApBtpC,KAAK49D,WACnBnlD,EAAEqgB,aAAe94B,KAAK49D,WACtB59D,KAAKo+D,SAAS3lD,GACdzY,KAAKq+D,cAAc5lD,GACnBzY,KAAKw+D,aAAa/lD,GAClBzY,KAAKs+D,WAAW7lD,GAChBzY,KAAKy+D,UAAUhmD,GAGnBimD,aAAah0D,EAAGmc,GACZ,IAAI2C,EAAOxpB,KAAK29D,KAAKjzD,EAAEnJ,QAClByK,EAAawd,EAAM9e,IACpB1K,KAAK4F,MAAMihB,GAGnB83C,cACI3+D,KAAK0+D,aAAatxD,EAAcoU,SAAS,GAAI,SAErB,KAApBxhB,KAAK49D,YACL59D,KAAK4F,MAAM,uBAES,IAApB5F,KAAK49D,YACL59D,KAAK4F,MAAM,sBAEf5F,KAAK0+D,aAAavwB,EAAW,aAE7BnuC,KAAKq9D,QAAkBr9D,KAAK49D,WAC5B59D,KAAKs9D,WAAkBt9D,KAAK49D,WAC5B59D,KAAKu9D,gBAAkBv9D,KAAK49D,WAC5B59D,KAAKw9D,YAAkBx9D,KAAK49D,WAC5B59D,KAAKy9D,WAAkBz9D,KAAK49D,WAE5B59D,KAAK4+D,UAAU5+D,KAAKq9D,QAAS,EAAG,OAChCr9D,KAAK4+D,UAAU5+D,KAAKs9D,WAAY,EAAG,UACnCt9D,KAAK4+D,UAAU5+D,KAAKu9D,gBAAiB,EAAG,eACxCv9D,KAAK4+D,UAAU5+D,KAAKw9D,YAAa,EAAG,WACpCx9D,KAAK4+D,UAAU5+D,KAAKy9D,WAAY,EAAG,UAER,QAAvBz9D,KAAKg+D,eACLh+D,KAAK4F,MAAM,0BAEW,QAAtB5F,KAAK+9D,cACL/9D,KAAK4F,MAAM,4BAInBA,MAAMi5D,GACF/qD,EAAQ8zB,iBAAiB5nC,KAAKsI,EAAGgD,EAAa,4BAA6BtL,KAAKoR,KAAM9F,EAAauzD,IACnGlrD,EAAIs0B,WAAWjoC,KAAKsI,EAAGgK,GAG3BssD,UAAUE,EAAMr+C,EAAM0G,GACd23C,IAASr+C,GACTzgB,KAAK4F,MAAM,GAAGuhB,uBAiB1Brb,EAAOC,QAAQ+hC,YAbK,SAASxlC,EAAG80D,EAAGhsD,GAC/B,IAAI2tD,EAAI,IAAI5B,EAAe70D,EAAG80D,EAAGhsD,GACjC2tD,EAAEJ,cACF,IAAI1nD,EAAKpD,EAAM08B,iBAAiBjoC,EAAGy2D,EAAEnB,YAOrC,OANAjqD,EAAIs6B,YAAY3lC,GAChBA,EAAE+M,MAAM/M,EAAEoM,IAAI,GAAGqoC,YAAY9lC,GAC7BA,EAAGR,EAAI,IAAI5C,EAAMs8B,MAAM7nC,GACvBy2D,EAAER,aAAatnD,EAAGR,EAAG,MACrBwa,EAAWha,EAAGtB,YAAcsB,EAAGR,EAAEkC,SAASpX,QAEnC0V,gCC9RX,MAAM,WACFjO,EAAU,kBACVoO,EAAiB,gBACjB4J,EAAe,gBACf5N,EAAe,YACfqO,EAAW,eACX5X,EAAc,cACd+X,EAAa,aACbtO,EAAY,cACZ4Q,GACA,EAAQ,OACN,YACFqC,EAAW,cACXoG,EAAa,cACbC,EAAa,cACb7D,EAAa,kBACbR,EAAiB,gBACjBkC,EAAe,iBACfxC,EAAgB,WAChBhB,EAAU,YACV1T,EAAW,gBACXsa,EAAe,gBACf1E,GACA,EAAQ,OACN,aACFhf,EAAY,aACZmB,GACA,EAAQ,MAEN0zD,EAAa,QAEbC,EAAS,SAASxoD,GAEpB,OAAa,MADD,IAAJA,IAKNyoD,EAAa,SAAS14D,EAAKgE,GAC7B,OAAIhE,GAAO,EAAUA,EACZ,EAAIA,EAAMgE,EAAY,EACnBA,EAAMhE,EAAM,GAMtB24D,EAAS,CAAC,IAAM,IAAM,KAAO,OAC7BC,EAAc,SAAS10D,EAAGlE,GAC5B,IAAI4E,EAAIV,EAAElE,GACN2V,EAAM,EACV,GAAI/Q,EAAI,IACJ+Q,EAAM/Q,MACL,CACD,IAAIi3B,EAAQ,EACZ,KAAW,GAAJj3B,GAAU,CACb,IAAIigD,EAAK3gD,EAAElE,KAAS67B,GACpB,GAAoB,MAAV,IAALgpB,GACD,OAAO,KACXlvC,EAAOA,GAAO,EAAW,GAALkvC,EACpBjgD,IAAM,EAGV,GADA+Q,IAAa,IAAJ/Q,IAAsB,EAARi3B,EACnBA,EAAQ,GAAKlmB,EAAM6iD,GAAc7iD,GAAOgjD,EAAO98B,GAC/C,OAAO,KACX77B,GAAO67B,EAGX,MAAO,CACHz6B,KAAMuU,EACN3V,IAAKA,EAAM,IAiCb64D,EAAM/zD,EAAa,MACnBg0D,EAAc,SAASh3D,EAAGye,GAC5B,IAAInf,EAAO2gB,EAAkBjgB,EAAGye,GAChC6F,EAActkB,EAAG,GAAKV,GAAQA,GAAQo3D,EAAYj4C,EAAK,sBACvD/F,EAAgB1Y,EAAG+2D,EAAKz3D,IAgGtB23D,EAAW,SAASj3D,GACtB,IAAIoC,EAAIud,EAAiB3f,EAAG,GACxBkC,EAAME,EAAEnJ,OACRsT,EAAIqP,EAAc5b,EAAG,GAAK,EAE9B,GAAIuM,EAAI,EACJA,EAAI,OACH,GAAIA,EAAIrK,EAET,IADAqK,IACOoqD,EAAOv0D,EAAEmK,KAAKA,IAGzB,GAAIA,GAAKrK,EACL,OAAO,EACN,CACD,IAAIg1D,EAAMJ,EAAY10D,EAAGmK,GACzB,OAAY,OAAR2qD,GAAgBP,EAAOv0D,EAAE80D,EAAIh5D,MACtBygB,EAAW3e,EAAGgD,EAAa,wBACtC8H,EAAgB9K,EAAGuM,EAAI,GACvBzB,EAAgB9K,EAAGk3D,EAAI53D,MAChB,KAYT63D,EAAQ,CACV,KA3HY,SAASn3D,GACrB,IAAIuM,EAAI7L,EAAWV,GACnB,GAAU,IAANuM,EACAyqD,EAAYh3D,EAAG,OACd,CACD,IAAI2D,EAAI,IAAIsa,EACZwC,EAAczgB,EAAG2D,GACjB,IAAK,IAAIhJ,EAAI,EAAGA,GAAK4R,EAAG5R,IACpBq8D,EAAYh3D,EAAGrF,GACf0pB,EAAc1gB,GAElBkd,EAAgBld,GAEpB,OAAO,GA+GP,UA3Dc,SAAS3D,GACvB,IAAIoC,EAAIud,EAAiB3f,EAAG,GACxB0wD,EAAOkG,EAAWrxC,EAAgBvlB,EAAG,EAAG,GAAIoC,EAAEnJ,QAC9C03D,EAAOiG,EAAWrxC,EAAgBvlB,EAAG,EAAG0wD,GAAOtuD,EAAEnJ,QAKrD,GAHAqrB,EAActkB,EAAG0wD,GAAQ,EAAG,EAAG,gBAC/BpsC,EAActkB,EAAG2wD,GAAQvuD,EAAEnJ,OAAQ,EAAG,gBAElCy3D,EAAOC,EAAM,OAAO,EACxB,GAAIA,EAAOD,GAAQh0D,OAAO6+C,iBACtB,OAAO58B,EAAW3e,EAAG,yBACzB,IAAIuM,EAAKokD,EAAOD,EAAQ,EAGxB,IAFAvuC,EAAgBniB,EAAGuM,EAAG,yBACtBA,EAAI,EACCmkD,GAAQ,EAAGA,EAAOC,GAAO,CAC1B,IAAIuG,EAAMJ,EAAY10D,EAAGsuD,GACzB,GAAY,OAARwG,EACA,OAAOv4C,EAAW3e,EAAG,sBACzB8K,EAAgB9K,EAAGk3D,EAAI53D,MACvBoxD,EAAOwG,EAAIh5D,IACXqO,IAEJ,OAAOA,GAsCP,MAXe,SAASvM,GAKxB,OAJA2f,EAAiB3f,EAAG,GACpB8O,EAAkB9O,EAAGi3D,GACrB39C,EAActZ,EAAG,GACjB8K,EAAgB9K,EAAG,GACZ,GAOP,IAhKW,SAASA,GACpB,IAAIuM,EAAI,EACJnK,EAAIud,EAAiB3f,EAAG,GACxBkC,EAAME,EAAEnJ,OACRy3D,EAAOkG,EAAWrxC,EAAgBvlB,EAAG,EAAG,GAAIkC,GAC5Ck1D,EAAOR,EAAWrxC,EAAgBvlB,EAAG,GAAI,GAAIkC,GAKjD,IAHAoiB,EAActkB,EAAG,GAAK0wD,KAAUA,GAAQxuD,EAAK,EAAG,kCAChDoiB,EAActkB,IAAKo3D,EAAOl1D,EAAK,EAAG,gCAE3BwuD,GAAQ0G,GAAM,CACjB,IAAIF,EAAMJ,EAAY10D,EAAGsuD,GACzB,GAAY,OAARwG,EAGA,OAFA/9C,EAAYnZ,GACZ8K,EAAgB9K,EAAG0wD,EAAO,GACnB,EAEXA,EAAOwG,EAAIh5D,IACXqO,IAGJ,OADAzB,EAAgB9K,EAAGuM,GACZ,GA4IP,OA3Ge,SAASvM,GACxB,IAAIoC,EAAIud,EAAiB3f,EAAG,GACxBuM,EAAI0T,EAAkBjgB,EAAG,GACzB0wD,EAAOnkD,GAAK,EAAI,EAAInK,EAAEnJ,OAAS,EAKnC,GAJAy3D,EAAOkG,EAAWrxC,EAAgBvlB,EAAG,EAAG0wD,GAAOtuD,EAAEnJ,QAEjDqrB,EAActkB,EAAG,GAAK0wD,KAAUA,GAAQtuD,EAAEnJ,OAAQ,EAAG,yBAE3C,IAANsT,EAEA,KAAOmkD,EAAO,GAAKiG,EAAOv0D,EAAEsuD,KAAQA,SAKpC,GAHIiG,EAAOv0D,EAAEsuD,KACT/xC,EAAW3e,EAAG,2CAEduM,EAAI,EACJ,KAAOA,EAAI,GAAKmkD,EAAO,GAAG,CACtB,GACIA,UACKA,EAAO,GAAKiG,EAAOv0D,EAAEsuD,KAC9BnkD,SAIJ,IADAA,IACOA,EAAI,GAAKmkD,EAAOtuD,EAAEnJ,QAAQ,CAC7B,GACIy3D,UACKiG,EAAOv0D,EAAEsuD,KAClBnkD,IAUZ,OALU,IAANA,EACAzB,EAAgB9K,EAAG0wD,EAAO,GAE1Bv3C,EAAYnZ,GAET,IAyELq3D,EAAWx1D,EAAa,GAAI,EAAG,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAStF2B,EAAOC,QAAQglC,aAPM,SAASzoC,GAI1B,OAHAiL,EAAYjL,EAAGm3D,GACf51D,EAAevB,EAAGq3D,GAClBrsD,EAAahL,GAAI,EAAGgD,EAAa,eAAe,IACzC,gCCzPX,MAAM,aACFmE,EAAY,cACZD,EAAa,YACbI,EACA/B,gBAAgB,aACZG,EAAY,SACZc,EAAQ,mBACRb,EAAkB,YAClBS,EAAW,SACXX,EAAQ,YACRG,EAAW,YACXS,EAAW,YACXC,EAAW,YACXH,EAAW,WACXL,EAAU,cACVE,GACH,aACDhD,GACA,EAAQ,OACN,OACF04B,EAAM,IACNhL,EAAG,kBACHmG,EACA9N,UAAU,OACN0M,EAAM,QACNmI,EAAO,QACPW,EAAO,OACPT,EAAM,QACNE,EAAO,QACP9B,EAAO,WACPkd,EAAU,UACV5jB,EAAS,OACTgI,EAAM,MACN7H,EAAK,YACL1F,EAAW,WACXgpB,EAAU,WACVC,EAAU,YACV3mB,EAAW,YACXC,EAAW,YACXL,EAAW,QACXuL,EAAO,OACPjQ,EAAM,MACNsR,EAAK,OACLN,EAAM,YACN9L,EAAW,SACXxC,EAAQ,UACRC,EAAS,WACTvE,EAAU,MACVgT,EAAK,OACLzB,EAAM,QACNnK,EAAO,OACPiK,EAAM,YACN8b,EAAW,OACX5kB,EAAM,OACNkJ,EAAM,UACNhH,EAAS,QACTG,EAAO,WACPK,GAAU,YACVM,GAAW,YACXC,GAAW,YACXF,GAAW,OACX+G,GAAM,OACNE,GAAM,OACNpB,GAAM,YACNb,GAAW,QACX9N,GAAO,WACPH,GAAU,YACV+N,GAAW,YACXkd,GAAW,OACXljB,GAAM,UACNojB,KAEJ,EAAQ,OACN,eACFvL,GAAc,eACdC,GAAc,oBACdC,IACA,EAAQ,OACN,WACFrlB,GAAU,YACVilB,IACA,EAAQ,MACNpiC,GAAU,EAAQ,MAClBD,GAAU,EAAQ,MAClBE,GAAU,EAAQ,OAClB,WACFC,GAAU,cACViyC,GAAa,iBACb9T,IACA,EAAQ,MACNx+B,GAAU,EAAQ,MAClBQ,GAAU,EAAQ,MAClBE,GAAU,EAAQ,MAClBX,GAAU,EAAQ,MA6DlBksD,GAAK,SAASt3D,EAAGsoB,EAAM3tB,GACzB,OAAO2tB,EAAO3tB,EAAEoxB,GAGdwrC,GAAK,SAASv3D,EAAGsoB,EAAM3tB,GACzB,OAAO2tB,EAAO3tB,EAAEylB,GAOdo3C,GAAM,SAASx3D,EAAGsoB,EAAMrZ,EAAGtU,GAC7B,OAAO+1B,EAAI/1B,EAAEylB,GAAKnR,EAAEysB,EAAO/gC,EAAEylB,IAAMpgB,EAAE+M,MAAMub,EAAO3tB,EAAEylB,IAGlDq3C,GAAM,SAASz3D,EAAGsoB,EAAMrZ,EAAGtU,GAC7B,OAAO+1B,EAAI/1B,EAAEgzB,GAAK1e,EAAEysB,EAAO/gC,EAAEgzB,IAAM3tB,EAAE+M,MAAMub,EAAO3tB,EAAEgzB,IA6gBlD+pC,GAAS,SAAS13D,EAAGqM,EAAI1R,EAAG0kB,GAC9B,IAAIpd,EAAItH,EAAEoxB,EACA,IAAN9pB,GAASsJ,GAAMi5B,WAAWxkC,EAAGqM,EAAGyuB,OAAS74B,EAAI,GACjDoK,EAAGouB,WAAa9/B,EAAE6xB,IAAMnN,GAGtBs4C,GAAa,SAAS33D,EAAGqM,GAC3BqrD,GAAO13D,EAAGqM,EAAIA,EAAGw2B,OAAOx2B,EAAGouB,WAAY,IAIrCnmB,GAAgB,SAAStU,EAAGc,EAAGqB,GACjC,GAAIrB,EAAE4yC,cAAgBvxC,EAAEuxC,aACpB,OAAOkkB,GAAM92D,EAAGqB,GAAK,EAAI,EACxB,GAAIrB,EAAE2P,cAAgBtO,EAAEsO,aACzB,OAAOonD,GAAS/2D,EAAEmmC,UAAW9kC,EAAE8kC,WAAa,EAAI,EAAI,EACnD,CACD,IAAIpzB,EAAMhI,GAAIioD,iBAAiB9zD,EAAGc,EAAGqB,EAAG0J,GAAI+wB,IAAIkC,OAGhD,OAFY,OAARjrB,GACAzI,GAAO40B,gBAAgBhgC,EAAGc,EAAGqB,GAC1B0R,EAAM,EAAI,IAInBU,GAAiB,SAASvU,EAAGc,EAAGqB,GAClC,IAAI0R,EAEJ,OAAI/S,EAAE4yC,cAAgBvxC,EAAEuxC,aACbokB,GAAMh3D,EAAGqB,GAAK,EAAI,EACpBrB,EAAE2P,cAAgBtO,EAAEsO,aAClBonD,GAAS/2D,EAAEmmC,UAAW9kC,EAAE8kC,YAAc,EAAI,EAAI,GAErDpzB,EAAMhI,GAAIioD,iBAAiB9zD,EAAGc,EAAGqB,EAAG0J,GAAI+wB,IAAIoC,OAChC,OAARnrB,EACOA,EAAM,EAAI,GAGzB7T,EAAEqM,GAAG2F,YAAcvG,GAAO69C,SAC1Bz1C,EAAMhI,GAAIioD,iBAAiB9zD,EAAGmC,EAAGrB,EAAG+K,GAAI+wB,IAAIkC,OAC5C9+B,EAAEqM,GAAG2F,YAAcvG,GAAO69C,SACd,OAARz1C,GACAzI,GAAO40B,gBAAgBhgC,EAAGc,EAAGqB,GAC1B0R,EAAM,EAAI,KAGfQ,GAAgB,SAASrU,EAAGigC,EAAIC,GAClC,GAAID,EAAG/vB,UAAYgwB,EAAGhwB,QAClB,OAAI+vB,EAAGzwB,UAAY0wB,EAAG1wB,SAAWywB,EAAGzwB,UAAY5J,EACrC,EAGCq6B,EAAGp8B,QAAUq8B,EAAGr8B,MAAS,EAAI,EAI7C,IAAI64B,EAGJ,OAAOuD,EAAG/vB,SACN,KAAKzK,EACD,OAAO,EACX,KAAKC,EACD,OAAOu6B,EAAGp8B,OAASq8B,EAAGr8B,MAAQ,EAAI,EACtC,KAAK8B,EACL,KAAKW,EACL,KAAKD,EACL,KAAKG,EACD,OAAOy5B,EAAGp8B,QAAUq8B,EAAGr8B,MAAQ,EAAI,EACvC,KAAKsC,EACL,KAAKC,EACD,OAAOu3C,GAAc1d,EAAGgH,UAAW/G,EAAG+G,WAAa,EAAI,EAE3D,KAAKjhC,EACL,KAAKF,EACD,GAAIm6B,EAAGp8B,QAAUq8B,EAAGr8B,MAAO,OAAO,EAC7B,GAAU,OAAN7D,EAAY,OAAO,EAE5B08B,EAAK7wB,GAAI+nD,OAAO5zD,EAAGigC,EAAGp8B,MAAM6R,UAAW7J,GAAI+wB,IAAIgC,OACpC,OAAPlC,IACAA,EAAK7wB,GAAI+nD,OAAO5zD,EAAGkgC,EAAGr8B,MAAM6R,UAAW7J,GAAI+wB,IAAIgC,QACnD,MACJ,QACI,OAAOqB,EAAGp8B,QAAUq8B,EAAGr8B,MAAQ,EAAI,EAG3C,GAAW,OAAP64B,EACA,OAAO,EAEX,IAAIllB,EAAK,IAAIhM,GAAQS,OAErB,OADAJ,GAAIynD,YAAYtzD,EAAG08B,EAAIuD,EAAIC,EAAI1oB,EAAI,GAC5BA,EAAG4D,YAAc,EAAI,GAO1B28C,GAAW,SAAStiD,EAAKuiD,GAC3B,IAAIC,GAAU,EACVC,EAASC,GAAe1iD,EAAKuiD,EAAO,EAAI,EAAI,GAChD,IAAe,IAAXE,EAAkB,CAClB,IAAI3rD,EAAI0E,GAASwE,GACjB,IAAU,IAANlJ,EACA,OAAO,EAEP,EAAIA,GACJ2rD,EAASpqB,GACLkqB,EAAO,IAAGC,GAAU,KAExBC,EAASnqB,GACLiqB,GAAQ,IAAGC,GAAU,IAIjC,MAAO,CACHA,QAASA,EACTC,OAAQA,IAUVC,GAAiB,SAAS1iD,EAAKoC,GACjC,GAAIpC,EAAIm2B,YAAa,CACjB,IAAIr/B,EAAIkJ,EAAI5R,MACRsM,EAAInM,KAAKwiB,MAAMja,GAEnB,GAAIA,IAAM4D,EAAG,CACT,GAAa,IAAT0H,EACA,OAAO,EACFA,EAAO,IACZ1H,GAAK,GAGb,OAAO69B,GAAoB79B,GACxB,GAAIsF,EAAIgB,cACX,OAAOhB,EAAI5R,MACR,GAAIu0D,GAAQ3iD,GAAM,CACrB,IAAIpT,EAAI,IAAImJ,GAAQS,OACpB,GAAIT,GAAQ0P,aAAazF,EAAI7E,SAAUvO,KAAQoT,EAAIoE,QAAU,EACzD,OAAOs+C,GAAe91D,EAAGwV,GAGjC,OAAO,GAGL9G,GAAY,SAASnE,GACvB,OAAOA,EAAE6J,cAAgB7J,EAAE/I,MAAQs0D,GAAevrD,EAAG,IAGnDqE,GAAW,SAASrE,GACtB,GAAIA,EAAE4C,UAAY5J,EACd,OAAOgH,EAAE/I,MAEb,GAAIu0D,GAAQxrD,GAAI,CACZ,IAAIvK,EAAI,IAAImJ,GAAQS,OACpB,GAAIT,GAAQ0P,aAAatO,EAAEgE,SAAUvO,KAAQuK,EAAEiN,QAAU,EACrD,OAAOxX,EAAEwB,MAGjB,OAAO,GAQL+zD,GAAQ,SAAS92D,EAAGqB,GACtB,OAAOrB,EAAE+C,MAAQ1B,EAAE0B,OAMjBi0D,GAAQ,SAASh3D,EAAGqB,GACtB,OAAOrB,EAAE+C,OAAS1B,EAAE0B,OAOlBg0D,GAAW,SAAS9qC,EAAIsrC,GAC1B,IAAIv3D,EAAI+oC,GAAiB9c,GACrB5qB,EAAI0nC,GAAiBwuB,GAEzB,OAAIv3D,IAAMqB,EACC,EACFrB,EAAIqB,GACD,EAED,GAMTsV,GAAc,SAASzX,EAAGs4D,EAAIC,GAChC,IAAI77B,EACJ,OAAO67B,EAAGroD,SACN,KAAKpK,EAAY,CACb,IAAIurB,EAAIknC,EAAG10D,MAEX,GADA64B,EAAK7wB,GAAI+nD,OAAO5zD,EAAGqxB,EAAE3b,UAAW7J,GAAI+wB,IAAI8B,QAC7B,OAAPhC,EAAa,MAEjB,YADA47B,EAAGrkB,UAAUloC,GAAO+N,UAAUuX,IAGlC,KAAKlrB,EACL,KAAKC,EAED,YADAkyD,EAAGrkB,UAAUskB,EAAG1+C,SAEpB,QACI6iB,EAAK7wB,GAAI23B,gBAAgBxjC,EAAGu4D,EAAI1sD,GAAI+wB,IAAI8B,QACpChC,EAAGhiB,WACHtP,GAAOm0B,eAAev/B,EAAGu4D,EAAIv1D,EAAa,iBAAiB,IAKvE6I,GAAIynD,YAAYtzD,EAAG08B,EAAI67B,EAAIA,EAAID,EAAI,IAIjC1iB,GAAY5xC,KAAKw0D,MAAQ,SAASv2D,EAAG0B,GACvC,IACI80D,EAAU,MAAJx2D,EAENy2D,EAAU,MAAJ/0D,EAKV,OAAS80D,EAAMC,IARJz2D,IAAM,GAAM,OAQQy2D,EAAMD,GAN1B90D,IAAM,GAAM,QAM4B,KAAQ,GAAK,GAG9DmyC,GAAW,SAAS91C,EAAGoO,EAAG7B,GAG5B,OAFU,IAANA,GACAnB,GAAOq0B,cAAcz/B,EAAGgD,EAAa,8BAChB,EAAlBgB,KAAKwiB,MAAMpY,EAAI7B,IAIpBspC,GAAW,SAAS71C,EAAGoO,EAAG7B,GAG5B,OAFU,IAANA,GACAnB,GAAOq0B,cAAcz/B,EAAGgD,EAAa,8BACjCoL,EAAIpK,KAAKwiB,MAAMpY,EAAI7B,GAAKA,EAAG,GAKjCwpC,GAAc,SAAS50C,EAAGilC,GAC5B,OAAIA,EAAI,EACAA,IAJE,GAIkB,EACZjlC,KAAOilC,EAGfA,GARE,GAQiB,EACXjlC,GAAKilC,GASnBuyB,GAAY,SAASxqD,EAAGyqD,EAAO7rD,EAAOub,GACxC,IAAIxlB,EAAIqL,EAAElL,MACV,GAAU,OAANH,EAAY,CACZ,IAAImT,EAAK9H,EAAEkC,SACP6R,EAAMjM,EAAGhd,OACb,IAAK,IAAI0B,EAAI,EAAGA,EAAIunB,EAAKvnB,IAAK,CAC1B,IAAI0H,EAAI4T,EAAGtb,GAAGwsC,QAAUp6B,EAAMub,EAAOrS,EAAGtb,GAAGf,KAAOg/D,EAAM3iD,EAAGtb,GAAGf,KAC9D,GAAIkJ,EAAEyN,OAAO5V,KAAO0H,EAChB,OAAO,MAGnB,OAAOS,GAOL+1D,GAAc,SAAS74D,EAAGmO,EAAGyqD,EAAOtwC,EAAMgwC,GAC5C,IAAIp2C,EAAM/T,EAAEkC,SAASpX,OACjBgd,EAAK9H,EAAEkC,SACPyoD,EAAM,IAAIttD,GAAQ08B,SAASloC,EAAGkiB,GAClC42C,EAAI3qD,EAAIA,EACRnO,EAAE+M,MAAMurD,GAAI7jB,YAAYqkB,GACxB,IAAK,IAAIn+D,EAAI,EAAGA,EAAIunB,EAAKvnB,IACjBsb,EAAGtb,GAAGwsC,QACN2xB,EAAIvoD,OAAO5V,GAAK4Q,GAAMw8B,eAAe/nC,EAAGsoB,EAAOrS,EAAGtb,GAAGf,KAErDk/D,EAAIvoD,OAAO5V,GAAKi+D,EAAM3iD,EAAGtb,GAAGf,KAEpCuU,EAAElL,MAAQ61D,GAGRpoD,GAAU,SAAS9D,GACrB,OAAOA,EAAE8mC,cAGP0kB,GAAU,SAASxrD,GACrB,OAAOA,EAAE6D,cAGPsoD,GAAW,SAAS/4D,EAAGrF,GACzB,IAAIiS,EAAI5M,EAAE+M,MAAMpS,GAEhB,QAAIiS,EAAE6D,gBAEFC,GAAQ9D,KACRpB,GAAQmF,cAAc3Q,EAAG4M,IAClB,IAMTosD,GAAa,SAASpsD,GACxB,OAAOA,EAAE6D,cAA8B,IAAd7D,EAAEiN,SAIzBo/C,GAAY,SAASj5D,EAAGoM,EAAKG,EAAG2U,GAClC,IAAIg4C,EAAK,EACT,EAAG,CACC,IAAI1hD,EAAKxX,EAAE+M,MAAMX,EAAIG,GACjBzL,EAAI0W,EAAGqC,QACPzX,EAAIoV,EAAG5G,SACXsQ,EAAKhF,IAAI9Z,EAAG82D,GACZA,GAAMp4D,UACCyL,EAAI,IAObkI,GAAc,SAASzU,EAAGm5D,GAC5BxwC,GAAWwwC,GAAS,GACpB,EAAG,CACC,IAAI/sD,EAAMpM,EAAEoM,IACRG,EAAI,EAER,IAAMvM,EAAE+M,MAAMX,EAAI,GAAGqE,cAAgBC,GAAQ1Q,EAAE+M,MAAMX,EAAI,MAAS2sD,GAAS/4D,EAAGoM,EAAM,GAE7E,GAAI4sD,GAAWh5D,EAAE+M,MAAMX,EAAI,IAC9B2sD,GAAS/4D,EAAGoM,EAAM,QACf,GAAI4sD,GAAWh5D,EAAE+M,MAAMX,EAAI,IAC9BZ,GAAQuC,UAAU/N,EAAGoM,EAAM,EAAGA,EAAM,OACjC,CAEH,IAAI8sD,EAAKl5D,EAAE+M,MAAMX,EAAI,GAAGyN,QAExB,IAAKtN,EAAI,EAAGA,EAAI4sD,GAASJ,GAAS/4D,EAAGoM,EAAMG,EAAI,GAAIA,IAE/C2sD,GADQl5D,EAAE+M,MAAMX,EAAMG,EAAI,GAAGsN,QAGjC,IAAIqH,EAAO,IAAIpf,WAAWo3D,GAC1BD,GAAUj5D,EAAGoM,EAAKG,EAAG2U,GACrB,IAAIlI,EAAKtN,GAAW1L,EAAGkhB,GACvB1V,GAAQo2B,YAAY5hC,EAAGoM,EAAMG,EAAGyM,QAhBhCnN,GAAIuqC,cAAcp2C,EAAGA,EAAE+M,MAAMX,EAAI,GAAIpM,EAAE+M,MAAMX,EAAI,GAAIpM,EAAE+M,MAAMX,EAAI,GAAIP,GAAI+wB,IAAI+B,WAoBjF,IAFAw6B,GAAS5sD,EAAI,EAENvM,EAAEoM,IAAMA,GAAKG,EAAE,WACXvM,EAAE+M,QAAQ/M,EAAEoM,WAClB+sD,EAAQ,IAKf5pD,GAAgB,SAASvP,EAAG9E,EAAGk2B,EAAKknC,GACtC,IAAK,IAAIx2C,EAAO,EAAGA,EAHJ,IAGuBA,IAAQ,CAC1C,IAAI4a,EAEJ,GAAKxhC,EAAEwU,YAKA,CACH,IAAI0pD,EAAOrtD,GAAO2N,SAAS1Z,EAAG9E,EAAE2I,MAAOutB,GACvC,IAAKgoC,EAAK1+C,UAEN,YADAlP,GAAQwC,SAAShO,EAAGs4D,EAAIc,GAIxB,GADA18B,EAAK7wB,GAAI+nD,OAAO5zD,EAAG9E,EAAE2I,MAAM6R,UAAW7J,GAAI+wB,IAAIC,UACnC,OAAPH,EAEA,YADA18B,EAAE+M,MAAMurD,GAAIn1B,mBAZpBzG,EAAK7wB,GAAI23B,gBAAgBxjC,EAAG9E,EAAG2Q,GAAI+wB,IAAIC,UACnCH,EAAGhiB,WACHtP,GAAOm0B,eAAev/B,EAAG9E,EAAG8H,EAAa,SAAS,IAgB1D,GAAI05B,EAAGoE,eAEH,YADAj1B,GAAIynD,YAAYtzD,EAAG08B,EAAIxhC,EAAGk2B,EAAKpxB,EAAE+M,MAAMurD,GAAK,GAGhDp9D,EAAIwhC,EAGRtxB,GAAOq0B,cAAcz/B,EAAGgD,EAAa,2CAA2C,KAG9EmM,GAAW,SAASnP,EAAG9E,EAAGk2B,EAAKhhB,GACjC,IAAK,IAAI0R,EAAO,EAAGA,EApCJ,IAoCuBA,IAAQ,CAC1C,IAAI4a,EACJ,GAAIxhC,EAAEwU,YAAa,CACf,IAAI2hB,EAAIn2B,EAAE2I,MAEV,IADWkI,GAAO2N,SAAS1Z,EAAGqxB,EAAGD,GACvB1W,WAAwE,QAA1DgiB,EAAK7wB,GAAI+nD,OAAO5zD,EAAGqxB,EAAE3b,UAAW7J,GAAI+wB,IAAIE,cAG5D,OAFA/wB,GAAOiO,aAAaha,EAAGqxB,EAAGD,EAAKhhB,QAC/BrE,GAAOkO,kBAAkBoX,QAKxBqL,EAAK7wB,GAAI23B,gBAAgBxjC,EAAG9E,EAAG2Q,GAAI+wB,IAAIE,cAAcpiB,WACtDtP,GAAOm0B,eAAev/B,EAAG9E,EAAG8H,EAAa,SAAS,IAG1D,GAAI05B,EAAGoE,eAEH,YADAj1B,GAAIynD,YAAYtzD,EAAG08B,EAAIxhC,EAAGk2B,EAAKhhB,EAAK,GAGxClV,EAAIwhC,EAGRtxB,GAAOq0B,cAAcz/B,EAAGgD,EAAa,8CAA8C,KAIvFQ,EAAOC,QAAQiN,QAAmBA,GAClClN,EAAOC,QAAQ20D,QAAmBA,GAClC50D,EAAOC,QAAQ8L,cAAmBA,GAClC/L,EAAOC,QAAQgR,YAAmBA,GAClCjR,EAAOC,QAAQqyC,SAAmBA,GAClCtyC,EAAOC,QAAQ4Q,cAAmBA,GAClC7Q,EAAOC,QAAQogC,aAx8BM,SAAS7jC,GAC1B,IAAIqM,EAAKrM,EAAEqM,GAEXA,EAAG2F,YAAcvG,GAAO49C,WACxBgQ,EACA,OAAS,CACL1wC,GAAWtc,IAAOrM,EAAEqM,IACpB,IAAIsC,EAAKtC,EAAGc,KAAKtJ,MACboL,EAAIN,EAAGR,EAAEc,EACTqZ,EAAOjc,EAAGyuB,OAEVngC,EAAI0R,EAAGw2B,OAAOx2B,EAAGouB,aAEjBz6B,EAAEqgC,UAAYl5B,EAAeD,IAC7BkE,GAAOg1B,eAAepgC,GAG1B,IAAIs4D,EAAKhB,GAAGt3D,EAAGsoB,EAAM3tB,GAGrB,OAFaA,EAAEixB,QAGX,KAAKqH,EACDznB,GAAQuC,UAAU/N,EAAGs4D,EAAIf,GAAGv3D,EAAGsoB,EAAM3tB,IACrC,MAEJ,KAAKw1B,EAAU,CACX,IAAImpC,EAAQrqD,EAAEtU,EAAE6hC,IAChBhxB,GAAQwC,SAAShO,EAAGs4D,EAAIgB,GACxB,MAEJ,KAAKlpC,EAAW,CACZzH,GAAWtc,EAAGw2B,OAAOx2B,EAAGouB,WAAW7O,SAAWqE,GAC9C,IAAIqpC,EAAQrqD,EAAE5C,EAAGw2B,OAAOx2B,EAAGouB,aAAagC,IACxCjxB,GAAQwC,SAAShO,EAAGs4D,EAAIgB,GACxB,MAEJ,KAAK3mC,EACD3yB,EAAE+M,MAAMurD,GAAIjkB,UAAkB,IAAR15C,EAAEylB,GAEZ,IAARzlB,EAAEgzB,GACFthB,EAAGouB,YAEP,MAEJ,KAAK5O,EACD,IAAK,IAAI9J,EAAI,EAAGA,GAAKpnB,EAAEylB,EAAG2B,IACtB/hB,EAAE+M,MAAMurD,EAAKv2C,GAAGohB,cACpB,MAEJ,KAAKhR,EAAa,CACd,IAAIxuB,EAAIhJ,EAAEylB,EACV5U,GAAQwC,SAAShO,EAAGs4D,EAAI3pD,EAAG4B,OAAO5M,IAClC,MAEJ,KAAK6uB,EAAa,CACd,IAAIyrB,EAAQtvC,EAAG4B,OAAO5V,EAAEylB,GACpBm5C,EAAK9B,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,GACzB4U,GAAcvP,EAAGi+C,EAAOsb,EAAIjB,GAC5B,MAEJ,KAAK/lC,EAAa,CACd,IAAIgmC,EAAKv4D,EAAE+M,MAAMwqD,GAAGv3D,EAAGsoB,EAAM3tB,IACzB4+D,EAAK9B,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,GACzB4U,GAAcvP,EAAGu4D,EAAIgB,EAAIjB,GACzB,MAEJ,KAAKjhC,GAAa,CACd,IAAI4mB,EAAQtvC,EAAG4B,OAAO5V,EAAEoxB,GACpBwsC,EAAKf,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GACrB4+D,EAAK9B,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,GACzBwU,GAASnP,EAAGi+C,EAAOsa,EAAIgB,GACvB,MAEJ,KAAKpiC,GACQxoB,EAAG4B,OAAO5V,EAAEylB,GAClB5R,QAAQxO,EAAE+M,MAAMurD,IACnB,MAEJ,KAAKlhC,GAAa,CACd,IAAI+6B,EAAQnyD,EAAE+M,MAAMurD,GAChBlnC,EAAMomC,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GACtB0H,EAAIo1D,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,GAExBwU,GAASnP,EAAGmyD,EAAO/gC,EAAK/uB,GACxB,MAEJ,KAAK22C,EACDh5C,EAAE+M,MAAMurD,GAAI5jB,UAAU3oC,GAAOgE,SAAS/P,IACtC,MAEJ,KAAKy2B,EAAS,CACV,IAAI8hC,EAAKhB,GAAGv3D,EAAGsoB,EAAM3tB,GACjB4+D,EAAK9B,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,GACzB6Q,GAAQuC,UAAU/N,EAAGs4D,EAAK,EAAGC,GAC7BhpD,GAAcvP,EAAGA,EAAE+M,MAAMwrD,GAAKgB,EAAIjB,GAClC,MAEJ,KAAK7iC,EAAQ,CACT,IAEI+jC,EAAWC,EAFXC,EAAMlC,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GACtBg/D,EAAMlC,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,GAGtB++D,EAAIjjD,eAAiBkjD,EAAIljD,cACzBzW,EAAE+M,MAAMurD,GAAIrkB,UAAWylB,EAAI71D,MAAQ81D,EAAI91D,MAAO,IACP,KAA/B21D,EAAYvoD,GAASyoD,MAAmD,KAA/BD,EAAYxoD,GAAS0oD,IACtE35D,EAAE+M,MAAMurD,GAAIvkB,YAAYylB,EAAYC,GAEpC5tD,GAAIuqC,cAAcp2C,EAAG05D,EAAKC,EAAK35D,EAAE+M,MAAMurD,GAAKzsD,GAAI+wB,IAAIG,QAExD,MAEJ,KAAKC,GAAQ,CACT,IAEIw8B,EAAWC,EAFXC,EAAMlC,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GACtBg/D,EAAMlC,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,GAGtB++D,EAAIjjD,eAAiBkjD,EAAIljD,cACzBzW,EAAE+M,MAAMurD,GAAIrkB,UAAWylB,EAAI71D,MAAQ81D,EAAI91D,MAAO,IACP,KAA/B21D,EAAYvoD,GAASyoD,MAAmD,KAA/BD,EAAYxoD,GAAS0oD,IACtE35D,EAAE+M,MAAMurD,GAAIvkB,YAAYylB,EAAYC,GAEpC5tD,GAAIuqC,cAAcp2C,EAAG05D,EAAKC,EAAK35D,EAAE+M,MAAMurD,GAAKzsD,GAAI+wB,IAAIK,QAExD,MAEJ,KAAKC,EAAQ,CACT,IAEIs8B,EAAWC,EAFXC,EAAMlC,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GACtBg/D,EAAMlC,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,GAGtB++D,EAAIjjD,eAAiBkjD,EAAIljD,cACzBzW,EAAE+M,MAAMurD,GAAIrkB,UAAU2B,GAAU8jB,EAAI71D,MAAO81D,EAAI91D,SACR,KAA/B21D,EAAYvoD,GAASyoD,MAAmD,KAA/BD,EAAYxoD,GAAS0oD,IACtE35D,EAAE+M,MAAMurD,GAAIvkB,YAAYylB,EAAYC,GAEpC5tD,GAAIuqC,cAAcp2C,EAAG05D,EAAKC,EAAK35D,EAAE+M,MAAMurD,GAAKzsD,GAAI+wB,IAAIO,QAExD,MAEJ,KAAKC,EAAQ,CACT,IAEIo8B,EAAWC,EAFXC,EAAMlC,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GACtBg/D,EAAMlC,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,GAGtB++D,EAAIjjD,eAAiBkjD,EAAIljD,cACzBzW,EAAE+M,MAAMurD,GAAIrkB,UAAU4B,GAAS71C,EAAG05D,EAAI71D,MAAO81D,EAAI91D,SACV,KAA/B21D,EAAYvoD,GAASyoD,MAAmD,KAA/BD,EAAYxoD,GAAS0oD,IACtE35D,EAAE+M,MAAMurD,GAAIvkB,YAAYnG,GAAY5tC,EAAGw5D,EAAWC,IAElD5tD,GAAIuqC,cAAcp2C,EAAG05D,EAAKC,EAAK35D,EAAE+M,MAAMurD,GAAKzsD,GAAI+wB,IAAIS,QAExD,MAEJ,KAAKC,EAAQ,CACT,IAEIk8B,EAAWC,EAFXC,EAAMlC,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GACtBg/D,EAAMlC,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,IAGU,KAA/B6+D,EAAYvoD,GAASyoD,MAAmD,KAA/BD,EAAYxoD,GAAS0oD,IAC/D35D,EAAE+M,MAAMurD,GAAIvkB,YAAY/vC,KAAKiyC,IAAIujB,EAAWC,IAE5C5tD,GAAIuqC,cAAcp2C,EAAG05D,EAAKC,EAAK35D,EAAE+M,MAAMurD,GAAKzsD,GAAI+wB,IAAIW,QAExD,MAEJ,KAAKC,EAAQ,CACT,IAEIg8B,EAAWC,EAFXC,EAAMlC,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GACtBg/D,EAAMlC,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,IAGU,KAA/B6+D,EAAYvoD,GAASyoD,MAAmD,KAA/BD,EAAYxoD,GAAS0oD,IAC/D35D,EAAE+M,MAAMurD,GAAIvkB,YAAYylB,EAAYC,GAEpC5tD,GAAIuqC,cAAcp2C,EAAG05D,EAAKC,EAAK35D,EAAE+M,MAAMurD,GAAKzsD,GAAI+wB,IAAIa,QAExD,MAEJ,KAAKC,EAAS,CACV,IAEI87B,EAAWC,EAFXC,EAAMlC,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GACtBg/D,EAAMlC,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,GAGtB++D,EAAIjjD,eAAiBkjD,EAAIljD,cACzBzW,EAAE+M,MAAMurD,GAAIrkB,UAAU6B,GAAS91C,EAAG05D,EAAI71D,MAAO81D,EAAI91D,SACV,KAA/B21D,EAAYvoD,GAASyoD,MAAmD,KAA/BD,EAAYxoD,GAAS0oD,IACtE35D,EAAE+M,MAAMurD,GAAIvkB,YAAY/vC,KAAKwiB,MAAMgzC,EAAYC,IAE/C5tD,GAAIuqC,cAAcp2C,EAAG05D,EAAKC,EAAK35D,EAAE+M,MAAMurD,GAAKzsD,GAAI+wB,IAAIe,SAExD,MAEJ,KAAKC,EAAS,CACV,IAEI47B,EAAWC,EAFXC,EAAMlC,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GACtBg/D,EAAMlC,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,IAGW,KAAhC6+D,EAAYzoD,GAAU2oD,MAAoD,KAAhCD,EAAY1oD,GAAU4oD,IACjE35D,EAAE+M,MAAMurD,GAAIrkB,UAAUulB,EAAYC,GAElC5tD,GAAIuqC,cAAcp2C,EAAG05D,EAAKC,EAAK35D,EAAE+M,MAAMurD,GAAKzsD,GAAI+wB,IAAIiB,SAExD,MAEJ,KAAKC,EAAQ,CACT,IAEI07B,EAAWC,EAFXC,EAAMlC,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GACtBg/D,EAAMlC,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,IAGW,KAAhC6+D,EAAYzoD,GAAU2oD,MAAoD,KAAhCD,EAAY1oD,GAAU4oD,IACjE35D,EAAE+M,MAAMurD,GAAIrkB,UAAUulB,EAAYC,GAElC5tD,GAAIuqC,cAAcp2C,EAAG05D,EAAKC,EAAK35D,EAAE+M,MAAMurD,GAAKzsD,GAAI+wB,IAAImB,QAExD,MAEJ,KAAKC,EAAS,CACV,IAEIw7B,EAAWC,EAFXC,EAAMlC,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GACtBg/D,EAAMlC,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,IAGW,KAAhC6+D,EAAYzoD,GAAU2oD,MAAoD,KAAhCD,EAAY1oD,GAAU4oD,IACjE35D,EAAE+M,MAAMurD,GAAIrkB,UAAUulB,EAAYC,GAElC5tD,GAAIuqC,cAAcp2C,EAAG05D,EAAKC,EAAK35D,EAAE+M,MAAMurD,GAAKzsD,GAAI+wB,IAAIqB,SAExD,MAEJ,KAAKC,GAAQ,CACT,IAEIs7B,EAAWC,EAFXC,EAAMlC,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GACtBg/D,EAAMlC,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,IAGW,KAAhC6+D,EAAYzoD,GAAU2oD,MAAoD,KAAhCD,EAAY1oD,GAAU4oD,IACjE35D,EAAE+M,MAAMurD,GAAIrkB,UAAU8B,GAAYyjB,EAAWC,IAE7C5tD,GAAIuqC,cAAcp2C,EAAG05D,EAAKC,EAAK35D,EAAE+M,MAAMurD,GAAKzsD,GAAI+wB,IAAIuB,QAExD,MAEJ,KAAKC,GAAQ,CACT,IAEIo7B,EAAWC,EAFXC,EAAMlC,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GACtBg/D,EAAMlC,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,IAGW,KAAhC6+D,EAAYzoD,GAAU2oD,MAAoD,KAAhCD,EAAY1oD,GAAU4oD,IACjE35D,EAAE+M,MAAMurD,GAAIrkB,UAAU8B,GAAYyjB,GAAYC,IAE9C5tD,GAAIuqC,cAAcp2C,EAAG05D,EAAKC,EAAK35D,EAAE+M,MAAMurD,GAAKzsD,GAAI+wB,IAAIyB,QAExD,MAEJ,KAAKpI,GAAQ,CACT,IACI2jC,EADAxmD,EAAKpT,EAAE+M,MAAMwqD,GAAGv3D,EAAGsoB,EAAM3tB,IAGzByY,EAAGqD,cACHzW,EAAE+M,MAAMurD,GAAIrkB,UAAsB,GAAV7gC,EAAGvP,QACU,KAA7B+1D,EAAW3oD,GAASmC,IAC5BpT,EAAE+M,MAAMurD,GAAIvkB,aAAa6lB,GAEzB/tD,GAAIuqC,cAAcp2C,EAAGoT,EAAIA,EAAIpT,EAAE+M,MAAMurD,GAAKzsD,GAAI+wB,IAAI0B,QAEtD,MAEJ,KAAKC,EAAS,CACV,IAAInrB,EAAKpT,EAAE+M,MAAMwqD,GAAGv3D,EAAGsoB,EAAM3tB,IAEzByY,EAAGqD,cACHzW,EAAE+M,MAAMurD,GAAIrkB,WAAW7gC,EAAGvP,OAE1BgI,GAAIuqC,cAAcp2C,EAAGoT,EAAIA,EAAIpT,EAAE+M,MAAMurD,GAAKzsD,GAAI+wB,IAAI4B,SAEtD,MAEJ,KAAKpK,EAAQ,CACT,IAAIhhB,EAAKpT,EAAE+M,MAAMwqD,GAAGv3D,EAAGsoB,EAAM3tB,IAC7BqF,EAAE+M,MAAMurD,GAAIjkB,UAAUjhC,EAAGgI,aACzB,MAEJ,KAAKqjB,EACDhnB,GAAYzX,EAAGA,EAAE+M,MAAMurD,GAAKt4D,EAAE+M,MAAMwqD,GAAGv3D,EAAGsoB,EAAM3tB,KAChD,MAEJ,KAAK66B,EAAW,CACZ,IAAI7xB,EAAIhJ,EAAEylB,EACNtd,EAAInI,EAAEgzB,EACV3tB,EAAEoM,IAAMkc,EAAOxlB,EAAI,EACnB2R,GAAYzU,EAAG8C,EAAIa,EAAI,GACvB,IAAI40D,EAAKjwC,EAAO3kB,EAChB6H,GAAQuC,UAAU/N,EAAGs4D,EAAIC,GACzBltD,GAAIsC,WAAW3N,EAAGqM,EAAGD,KACrB,MAEJ,KAAKqhB,EACDiqC,GAAO13D,EAAGqM,EAAI1R,EAAG,GACjB,MAEJ,KAAKg7B,EACGthB,GAAcrU,EAAGw3D,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GAAI88D,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,MAAQA,EAAEoxB,EAC/D1f,EAAGouB,YAEHk9B,GAAW33D,EAAGqM,GAClB,MAEJ,KAAKwyB,EACGvqB,GAActU,EAAGw3D,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GAAI88D,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,MAAQA,EAAEoxB,EAC/D1f,EAAGouB,YAEHk9B,GAAW33D,EAAGqM,GAClB,MAEJ,KAAK0yB,EACGxqB,GAAevU,EAAGw3D,GAAIx3D,EAAGsoB,EAAMrZ,EAAGtU,GAAI88D,GAAIz3D,EAAGsoB,EAAMrZ,EAAGtU,MAAQA,EAAEoxB,EAChE1f,EAAGouB,YAEHk9B,GAAW33D,EAAGqM,GAClB,MAEJ,KAAKgiB,IACG1zB,EAAEgzB,EAAI3tB,EAAE+M,MAAMurD,GAAIl9C,aAAepb,EAAE+M,MAAMurD,GAAIl9C,aAC7C/O,EAAGouB,YAEHk9B,GAAW33D,EAAGqM,GAClB,MAEJ,KAAK6hB,GAAY,CACb,IAAI2rC,EAAQtC,GAAGv3D,EAAGsoB,EAAM3tB,GACpB49D,EAAKv4D,EAAE+M,MAAM8sD,IACbl/D,EAAEgzB,EAAI4qC,EAAGn9C,aAAem9C,EAAGn9C,aAC3B/O,EAAGouB,aAEHjvB,GAAQuC,UAAU/N,EAAGs4D,EAAIuB,GACzBlC,GAAW33D,EAAGqM,IAElB,MAEJ,KAAK6vB,EAAS,CACV,IAAIv4B,EAAIhJ,EAAEylB,EACN7O,EAAW5W,EAAEgzB,EAAI,EAErB,GADU,IAANhqB,GAAS0H,GAAIsC,WAAW3N,EAAGs4D,EAAG30D,IAC9B0H,GAAIk3B,aAAaviC,EAAGs4D,EAAI/mD,GAGrB,CACHlF,EAAKrM,EAAEqM,GACP,SAASgtD,EAJL9nD,GAAY,GACZlG,GAAIsC,WAAW3N,EAAGqM,EAAGD,KAM7B,MAEJ,KAAK+vB,GAAa,CACd,IAAIx4B,EAAIhJ,EAAEylB,EAEV,GADU,IAANzc,GAAS0H,GAAIsC,WAAW3N,EAAGs4D,EAAG30D,IAC9B0H,GAAIk3B,aAAaviC,EAAGs4D,EAAIhxD,GACrB,CAEH,IAAIwyD,EAAM95D,EAAEqM,GACR0tD,EAAMD,EAAIruC,SACVuuC,EAAQF,EAAI3sD,KACZ8sD,EAAWH,EAAIttD,QACf0tD,EAAWH,EAAIvtD,QACf21B,EAAM23B,EAAIh/B,OAASk/B,EAAMn2D,MAAMsK,EAAE0sB,UACjClsB,EAAGR,EAAEA,EAAElV,OAAS,GAAGsS,GAAMi5B,WAAWxkC,EAAG+5D,EAAIj/B,QAC/C,IAAK,IAAIjgB,EAAM,EAAGo/C,EAAWp/C,EAAMsnB,EAAKtnB,IACpCrP,GAAQuC,UAAU/N,EAAGk6D,EAAWr/C,EAAKo/C,EAAWp/C,GACpDk/C,EAAIj/B,OAASo/B,GAAYJ,EAAIh/B,OAASm/B,GACtCF,EAAI3tD,IAAM8tD,GAAYl6D,EAAEoM,IAAM6tD,GAC9B5uD,GAAIsC,WAAW3N,EAAG+5D,EAAI3tD,KACtB2tD,EAAIl3B,OAASi3B,EAAIj3B,OACjBk3B,EAAIt/B,UAAYq/B,EAAIr/B,UACpBs/B,EAAI/nD,YAAcvG,GAAO6vB,UACzBy+B,EAAI1sC,KAAO,KACXhhB,EAAKrM,EAAEqM,GAAK0tD,EAEZpxC,GAAW3oB,EAAEoM,MAAQ2tD,EAAIj/B,OAAS96B,EAAE+M,MAAMmtD,GAAUr2D,MAAMsK,EAAEqiB,cAE5D,SAAS6oC,EAEb,MAEJ,KAAK/iC,EAAW,CACR3nB,EAAGR,EAAEA,EAAElV,OAAS,GAAGsS,GAAMi5B,WAAWxkC,EAAGsoB,GAC3C,IAAI3kB,EAAI0H,GAAIq3B,aAAa1iC,EAAGqM,EAAIisD,EAAa,IAAR39D,EAAEylB,EAAUzlB,EAAEylB,EAAI,EAAIpgB,EAAEoM,IAAMksD,GAEnE,GAAIjsD,EAAG2F,WAAavG,GAAO49C,WACvB,OAEJh9C,EAAKrM,EAAEqM,GACH1I,GAAG0H,GAAIsC,WAAW3N,EAAGqM,EAAGD,KAC5Buc,GAAWtc,EAAG2F,WAAavG,GAAOwG,UAClC0W,GAAWtc,EAAGw2B,OAAOx2B,EAAGouB,UAAY,GAAG7O,SAAWsQ,GAClD,SAASm9B,EAEb,KAAKpgB,EACD,GAAIj5C,EAAE+M,MAAMurD,GAAI7hD,cAAe,CAC3B,IAAIuhD,EAAOh4D,EAAE+M,MAAMurD,EAAK,GAAGz0D,MACvBjK,EAAOoG,EAAE+M,MAAMurD,GAAIz0D,MAAQm0D,EAAM,EACjChZ,EAAQh/C,EAAE+M,MAAMurD,EAAK,GAAGz0D,OAExB,EAAIm0D,EAAOp+D,GAAOolD,EAAQA,GAASplD,KACnCyS,EAAGouB,WAAa9/B,EAAE6xB,IAClBxsB,EAAE+M,MAAMurD,GAAIpkB,UAAUt6C,GACtBoG,EAAE+M,MAAMurD,EAAK,GAAGrkB,UAAUr6C,QAE3B,CACH,IAAIo+D,EAAOh4D,EAAE+M,MAAMurD,EAAK,GAAGz0D,MACvBjK,EAAMoG,EAAE+M,MAAMurD,GAAIz0D,MAAQm0D,EAC1BhZ,EAAQh/C,EAAE+M,MAAMurD,EAAK,GAAGz0D,OAExB,EAAIm0D,EAAOp+D,GAAOolD,EAAQA,GAASplD,KACnCyS,EAAGouB,WAAa9/B,EAAE6xB,IAClBxsB,EAAE+M,MAAMurD,GAAItkB,YAAYp6C,GACxBoG,EAAE+M,MAAMurD,EAAK,GAAGvkB,YAAYn6C,IAGpC,MAEJ,KAAKs/C,EAAY,CACb,IAGIihB,EAHAvnB,EAAO5yC,EAAE+M,MAAMurD,GACf8B,EAASp6D,EAAE+M,MAAMurD,EAAK,GACtB+B,EAAQr6D,EAAE+M,MAAMurD,EAAK,GAGzB,GAAI1lB,EAAKn8B,eAAiB4jD,EAAM5jD,gBAAkB0jD,EAASpC,GAASqC,EAAQC,EAAMx2D,QAAS,CAEvF,IAAIy2D,EAAQH,EAAOlC,QAAU,EAAIrlB,EAAK/uC,MACtCu2D,EAAOv2D,MAAQs2D,EAAOjC,OACtBtlB,EAAK/uC,MAASy2D,EAAQD,EAAMx2D,MAAO,MAChC,CACH,IAAI02D,EAAQC,EAAOC,GACiB,KAA/BF,EAAStpD,GAASmpD,KACnBhvD,GAAOq0B,cAAcz/B,EAAGgD,EAAa,gCAAgC,IACzEhD,EAAE+M,MAAMurD,EAAK,GAAGvkB,YAAYwmB,IACM,KAA7BC,EAAQvpD,GAASopD,KAClBjvD,GAAOq0B,cAAcz/B,EAAGgD,EAAa,+BAA+B,IACxEhD,EAAE+M,MAAMurD,EAAK,GAAGvkB,YAAYymB,IACK,KAA5BC,EAAQxpD,GAAS2hC,KAClBxnC,GAAOq0B,cAAcz/B,EAAGgD,EAAa,wCAAwC,IACjFhD,EAAE+M,MAAMurD,GAAIvkB,YAAY0mB,EAAQD,GAGpCnuD,EAAGouB,WAAa9/B,EAAE6xB,IAClB,MAEJ,KAAKyP,GAAa,CACd,IAAIy+B,EAAKpC,EAAK,EACd9sD,GAAQuC,UAAU/N,EAAG06D,EAAG,EAAGpC,EAAG,GAC9B9sD,GAAQuC,UAAU/N,EAAG06D,EAAG,EAAGpC,EAAG,GAC9B9sD,GAAQuC,UAAU/N,EAAG06D,EAAIpC,GACzBjtD,GAAIsC,WAAW3N,EAAG06D,EAAG,GACrBrvD,GAAIiH,UAAUtS,EAAG06D,EAAI//D,EAAEgzB,GACvBtiB,GAAIsC,WAAW3N,EAAGqM,EAAGD,KAErBzR,EAAI0R,EAAGw2B,OAAOx2B,EAAGouB,aACjB69B,EAAKhB,GAAGt3D,EAAGsoB,EAAM3tB,GACjBguB,GAAWhuB,EAAEixB,SAAWutB,IAG5B,KAAKA,GACIn5C,EAAE+M,MAAMurD,EAAK,GAAG59C,YACjBlP,GAAQuC,UAAU/N,EAAGs4D,EAAIA,EAAK,GAC9BjsD,EAAGouB,WAAa9/B,EAAE6xB,KAEtB,MAEJ,KAAKsK,GAAY,CACb,IAAIvqB,EAAI5R,EAAEylB,EACNtd,EAAInI,EAAEgzB,EAEA,IAANphB,IAASA,EAAIvM,EAAEoM,IAAMksD,EAAK,GAEpB,IAANx1D,IACA6lB,GAAWtc,EAAGw2B,OAAOx2B,EAAGouB,WAAW7O,SAAWqE,GAC9CntB,EAAIuJ,EAAGw2B,OAAOx2B,EAAGouB,aAAagC,IAGlC,IAAIpL,EAAIrxB,EAAE+M,MAAMurD,GAAIz0D,MAChBwiB,GAASvjB,EAAI,GAAK+zB,EAAqBtqB,EAE3C,KAAOA,EAAI,EAAGA,IACVR,GAAOoO,YAAYkX,EAAGhL,IAAQrmB,EAAE+M,MAAMurD,EAAK/rD,IAE/ClB,GAAIsC,WAAW3N,EAAGqM,EAAGD,KACrB,MAEJ,KAAKgtC,EAAY,CACb,IAAIjrC,EAAIQ,EAAGR,EAAEA,EAAExT,EAAE6hC,IACbs8B,EAAMH,GAAUxqD,EAAGQ,EAAG4B,OAAQvQ,EAAE+M,MAAOub,GAC/B,OAARwwC,EACAD,GAAY74D,EAAGmO,EAAGQ,EAAG4B,OAAQ+X,EAAMgwC,GAEnCt4D,EAAE+M,MAAMurD,GAAI7jB,YAAYqkB,GAC5B,MAEJ,KAAKzf,GAAW,CACZ,IAEIt3B,EAFApe,EAAIhJ,EAAEylB,EAAI,EACV7T,EAAI+b,EAAOjc,EAAGG,QAAUmC,EAAGR,EAAE0sB,UAAY,EAY7C,IATItuB,EAAI,IACJA,EAAI,GAEJ5I,EAAI,IACJA,EAAI4I,EACJlB,GAAI22B,gBAAgBhiC,EAAGuM,GACvBlB,GAAIsC,WAAW3N,EAAGs4D,EAAK/rD,IAGtBwV,EAAI,EAAGA,EAAIpe,GAAKoe,EAAIxV,EAAGwV,IACxBvW,GAAQuC,UAAU/N,EAAGs4D,EAAKv2C,EAAGuG,EAAO/b,EAAIwV,GAE5C,KAAOA,EAAIpe,EAAGoe,IACV/hB,EAAE+M,MAAMurD,EAAKv2C,GAAGohB,cACpB,MAEJ,KAAKlT,EACD,MAAMz4B,MAAM,qBAqc5BgM,EAAOC,QAAQ4gC,cArhCO,SAASrkC,GAC3B,IAAIqM,EAAKrM,EAAEqM,GACPic,EAAOjc,EAAGyuB,OACV6/B,EAAOtuD,EAAGw2B,OAAOx2B,EAAGouB,UAAY,GAChCrnB,EAAKunD,EAAK/uC,OAEd,OAAQxY,GACJ,KAAKqiB,EAAQ,KAAKuH,GAAQ,KAAKE,EAAQ,KAAKM,EAAQ,KAAKE,EACzD,KAAKE,EAAS,KAAKE,EAAQ,KAAKE,EAAS,KAAKE,GAAQ,KAAKE,GAC3D,KAAKhB,EAAQ,KAAKE,EAClB,KAAKrH,GAAQ,KAAKsI,EAAS,KAAKE,EAChC,KAAKjM,EAAa,KAAKD,EAAa,KAAKkE,EACrCjrB,GAAQuC,UAAU/N,EAAGsoB,EAAOqyC,EAAK5uC,EAAG/rB,EAAEoM,IAAI,UACnCpM,EAAE+M,QAAQ/M,EAAEoM,KACnB,MAEJ,KAAK2yB,EAAO,KAAKF,EAAO,KAAKlJ,EAAO,CAChC,IAAI9hB,GAAO7T,EAAE+M,MAAM/M,EAAEoM,IAAM,GAAGgP,mBACvBpb,EAAE+M,QAAQ/M,EAAEoM,KACfC,EAAG2F,WAAavG,GAAO69C,WACvB3gC,GAAWvV,IAAO2rB,GAClB1yB,EAAG2F,YAAcvG,GAAO69C,SACxBz1C,GAAOA,GAEX8U,GAAWtc,EAAGw2B,OAAOx2B,EAAGouB,WAAW7O,SAAW6B,GAC1C5Z,MAAS8mD,EAAK5uC,GACd1f,EAAGouB,YACP,MAEJ,KAAKjF,EAAW,CACZ,IAAIppB,EAAMpM,EAAEoM,IAAM,EAEd+sD,EAAQ/sD,EAAM,GAAKkc,EADfqyC,EAAKv6C,GAEb5U,GAAQuC,UAAU/N,EAAGoM,EAAM,EAAGA,GAC1B+sD,EAAQ,IACRn5D,EAAEoM,IAAMA,EAAM,EACdqI,GAAYzU,EAAGm5D,IAGnB3tD,GAAQuC,UAAU/N,EAAGqM,EAAGyuB,OAAS6/B,EAAK5uC,EAAG/rB,EAAEoM,IAAM,GACjDf,GAAIsC,WAAW3N,EAAGqM,EAAGD,KACrB,MAEJ,KAAK6vB,GACDtT,GAAWtc,EAAGw2B,OAAOx2B,EAAGouB,WAAW7O,SAAWutB,IAC9C9tC,GAAIsC,WAAW3N,EAAGqM,EAAGD,KACrB,MAEJ,KAAK8vB,EACGy+B,EAAKhtC,EAAI,GAAK,GACdtiB,GAAIsC,WAAW3N,EAAGqM,EAAGD,OAo+BrC5I,EAAOC,QAAQmyC,UAAmBA,GAClCpyC,EAAOC,QAAQ8Q,eAAmBA,GAClC/Q,EAAOC,QAAQ6Q,cAAmBA,GAClC9Q,EAAOC,QAAQoyC,SAAmBA,GAClCryC,EAAOC,QAAQgU,YAAmBA,GAClCjU,EAAOC,QAAQm3D,iBAxWU,SAAS36B,EAAIC,GAClC,OAAO7rB,GAAc,KAAM4rB,EAAIC,IAwWnC18B,EAAOC,QAAQsyC,YAAmBA,GAClCvyC,EAAOC,QAAQ00D,eAAmBA,GAClC30D,EAAOC,QAAQ0L,SAAmBA,GAClC3L,EAAOC,QAAQsN,UAAmBA,GAClCvN,EAAOC,QAAQwN,SAAmBA,gCCloClC,MAAM,WAAE0X,GAAe,EAAQ,MA8CzBkyC,EAAY,SAAS/iD,GACvB,IAAIoJ,EAAOpJ,EAAEH,OAAOG,EAAE9X,EAAG8X,EAAElD,MAC3B,GAAa,OAATsM,EACA,OALI,EAMRyH,EAAWzH,aAAgBpf,WAAY,6CACvC,IAAIqW,EAAO+I,EAAKjoB,OAChB,OAAa,IAATkf,GARI,GAURL,EAAE2D,OAASyF,EACXpJ,EAAE0qB,IAAM,EACR1qB,EAAEvL,EAAI4L,EAAO,EACNL,EAAE2D,OAAO3D,EAAE0qB,SA4BtBh/B,EAAOC,QAAQqmC,KAzCH,EA0CZtmC,EAAOC,QAAQsmC,YA7EK,SAAS7oB,GACzB,OAAOA,EAAKzF,OAAOvC,SAAS,EAAGgI,EAAK3U,IA6ExC/I,EAAOC,QAAQumC,gBA1ES,SAAS9oB,EAAMvmB,GACnCumB,EAAK3U,GAAK5R,GA0Ed6I,EAAOC,QAAQo3D,UAAoBA,EACnCr3D,EAAOC,QAAQmxD,UA3BG,SAAS98C,EAAGnU,EAAGm3D,EAAUvuD,GACvC,KAAOA,GAAG,CACN,GAAY,IAARuL,EAAEvL,EAAS,CACX,IArBA,IAqBIsuD,EAAU/iD,GACV,OAAOvL,EAEPuL,EAAEvL,IACFuL,EAAE0qB,MAGV,IAAIp0B,EAAK7B,GAAKuL,EAAEvL,EAAKA,EAAIuL,EAAEvL,EAC3B,IAAK,IAAI5R,EAAE,EAAGA,EAAEyT,EAAGzT,IACfgJ,EAAEm3D,KAAchjD,EAAE2D,OAAO3D,EAAE0qB,OAE/B1qB,EAAEvL,GAAK6B,EACK,IAAR0J,EAAEvL,IACFuL,EAAE2D,OAAS,MACflP,GAAK6B,EAGT,OAAO,GAQX5K,EAAOC,QAAQwmC,iBAzEU,SAAS/oB,GAC9BA,EAAK3U,EAAI,GAyEb/I,EAAOC,QAAQymC,kBAtEW,SAASlqC,EAAGkhB,EAAM/I,GACxC,IAAIqI,EAAU,IAAI1e,WAAWqW,GACzB+I,EAAKzF,QACL+E,EAAQtE,IAAIgF,EAAKzF,QACrByF,EAAKzF,OAAS+E,GAmElBhd,EAAOC,QAAQ89B,QA1Ff,MACI34B,cACIlR,KAAK+jB,OAAS,KACd/jB,KAAK6U,EAAI,IAwFjB/I,EAAOC,QAAQuI,IAjEf,MACIpD,YAAY5I,EAAG2X,EAAQ/C,GACnBld,KAAKsI,EAAIA,EACT2oB,EAA4B,mBAAVhR,EAAsB,yBACxCjgB,KAAKigB,OAASA,EACdjgB,KAAKkd,KAAOA,EACZld,KAAK6U,EAAI,EACT7U,KAAK+jB,OAAS,KACd/jB,KAAK8qC,IAAM,EAGf+C,QACI,OAAS7tC,KAAK6U,KAAO,EAAK7U,KAAK+jB,OAAO/jB,KAAK8qC,OAASq4B,EAAUnjE,qCCrCtE8L,EAAOC,QAAU,EAAjB,6BCCAD,EAAOC,QAAU,CACf,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,UACA,SACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,6BChEF,IAUIs3D,EAAc,kIAEdC,EAAc,mCAMdC,EAAc,IAAIC,OAAO,OAASH,EAAW,IAAMC,EAA1B,4HAEzBG,EAAyB,IAAID,OAAO,OAASH,EAAW,IAAMC,EAAY,KAE9Ex3D,EAAOC,QAAQ,EAAcw3D,EAC7Bz3D,EAAOC,QAAQ,EAAyB03D,+BClBxC,IAAIC,EAAkBruB,OAAOsuB,UAAUC,eAEvC,SAASC,EAAIC,EAAQpqC,GACnB,OAAOgqC,EAAgB74D,KAAKi5D,EAAQpqC,GA+BtC,SAASqqC,EAAkB34D,GAGzB,QAAIA,GAAK,OAAUA,GAAK,OAEpBA,GAAK,OAAUA,GAAK,OACH,QAAZ,MAAJA,IAA2C,QAAZ,MAAJA,IAE5BA,GAAK,GAAQA,GAAK,GACZ,KAANA,GACAA,GAAK,IAAQA,GAAK,IAClBA,GAAK,KAAQA,GAAK,KAElBA,EAAI,SAIV,SAAS44D,EAAc54D,GAErB,GAAIA,EAAI,MAAQ,CAEd,IAAI64D,EAAa,QADjB74D,GAAK,QAC2B,IAC5B84D,EAAa,OAAc,KAAJ94D,GAE3B,OAAOqB,OAAOC,aAAau3D,EAAYC,GAEzC,OAAOz3D,OAAOC,aAAatB,GAI7B,IAAI+4D,EAAkB,8CAElBC,EAAkB,IAAIZ,OAAOW,EAAe5yD,OAAS,IADnC,6BACmDA,OAAQ,MAE7E8yD,EAAyB,qCAEzBC,EAAW,EAAQ,MA2CnBC,EAAsB,SACtBC,EAAyB,UACzBC,EAAoB,CACtB,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,UAGP,SAASC,EAAkBC,GACzB,OAAOF,EAAkBE,GAY3B,IAAIC,EAAmB,uBAwCnBC,EAAmB,EAAQ,MAiH/B94D,EAAQ2e,IAAsB,GAC9B3e,EAAQ2e,IAAIo6C,MAAZ,QACA/4D,EAAQ2e,IAAIq6C,QAAZ,OAEAh5D,EAAQi5D,OA5RR,SAAgBjnD,GACd,IAAIknD,EAAUt5D,MAAMg4D,UAAU18D,MAAM4D,KAAKE,UAAW,GAcpD,OAZAk6D,EAAQ1vB,SAAQ,SAAUhkC,GACxB,GAAKA,EAAL,CAEA,GAAsB,iBAAXA,EACT,MAAM,IAAI/F,UAAU+F,EAAS,kBAG/B8jC,OAAO6vB,KAAK3zD,GAAQgkC,SAAQ,SAAU7b,GACpC3b,EAAI2b,GAAOnoB,EAAOmoB,UAIf3b,GA8QThS,EAAQo5D,SAvSR,SAAkBpnD,GAAO,MAAuB,oBAFhD,SAAgBA,GAAO,OAAOs3B,OAAOsuB,UAAUz2D,SAASrC,KAAKkT,GAE7BqnD,CAAOrnD,IAwSvChS,EAAQ83D,IAAsBA,EAC9B93D,EAAQs5D,WAtMR,SAAoBzkE,GAClB,OAAIA,EAAI2B,QAAQ,MAAQ,EAAY3B,EAC7BA,EAAIJ,QAAQ2jE,EAAgB,OAqMrCp4D,EAAQu5D,YAlMR,SAAqB1kE,GACnB,OAAIA,EAAI2B,QAAQ,MAAQ,GAAK3B,EAAI2B,QAAQ,KAAO,EAAY3B,EAErDA,EAAIJ,QAAQ4jE,GAAiB,SAAU5e,EAAO+f,EAASC,GAC5D,OAAID,GAlCR,SAA8B/f,EAAOp0C,GACnC,IAAIxJ,EAAO,EAEX,OAAIi8D,EAAIS,EAAUlzD,GACTkzD,EAASlzD,GAGS,KAAvBA,EAAK3P,WAAW,IAAsB4iE,EAAuBprB,KAAK7nC,IAIhE2yD,EAHJn8D,EAAiC,MAA1BwJ,EAAK,GAAGhO,cACbytB,SAASzf,EAAKnK,MAAM,GAAI,IAAM4pB,SAASzf,EAAKnK,MAAM,GAAI,KAG/C+8D,EAAcp8D,GAIlB49C,EAmBEigB,CAAqBjgB,EAAOggB,OA8LvCz5D,EAAQg4D,kBAAsBA,EAC9Bh4D,EAAQi4D,cAAsBA,EAE9Bj4D,EAAQ25D,WA9KR,SAAoB9kE,GAClB,OAAI2jE,EAAoBtrB,KAAKr4C,GACpBA,EAAIJ,QAAQgkE,EAAwBE,GAEtC9jE,GA2KTmL,EAAQ45D,eAjRR,SAAwB/lE,EAAK4G,EAAKo/D,GAChC,MAAO,GAAGC,OAAOjmE,EAAIqH,MAAM,EAAGT,GAAMo/D,EAAahmE,EAAIqH,MAAMT,EAAM,KAiRnEuF,EAAQ+5D,QA/JR,SAAiBl+D,GACf,OAAQA,GACN,KAAK,EACL,KAAK,GACH,OAAO,EAEX,OAAO,GA0JTmE,EAAQvK,aAtJR,SAAsBoG,GACpB,GAAIA,GAAQ,MAAUA,GAAQ,KAAU,OAAO,EAC/C,OAAQA,GACN,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,MACH,OAAO,EAEX,OAAO,GAuITmE,EAAQg6D,eAlHR,SAAwBpB,GACtB,OAAQA,GACN,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACH,OAAO,EACT,QACE,OAAO,IA+Eb54D,EAAQi6D,YA/HR,SAAqBrB,GACnB,OAAOE,EAAiB5rB,KAAK0rB,IA+H/B54D,EAAQk6D,SAzKR,SAAkBrlE,GAChB,OAAOA,EAAIJ,QAAQokE,EAAkB,SAyKvC74D,EAAQm6D,mBA3ER,SAA4BtlE,GA+C1B,OA5CAA,EAAMA,EAAI6G,OAAOjH,QAAQ,OAAQ,KAQP,MAAtB,IAAI4C,gBACNxC,EAAMA,EAAIJ,QAAQ,KAAM,MAmCnBI,EAAIwC,cAAc+iE,4CCxR3B,IAAIC,EAAkB,EAAQ,MAG1BC,EAAS,CAGX,CAAE,QAAc,EAAQ,MAA6B,CAAE,YAAa,cACpE,CAAE,OAAc,EAAQ,OACxB,CAAE,QAAc,EAAQ,MAA6B,CAAE,YAAa,YAAa,aAAc,SAC/F,CAAE,aAAc,EAAQ,MAA6B,CAAE,YAAa,YAAa,aAAc,SAC/F,CAAE,KAAc,EAAQ,MAA6B,CAAE,YAAa,YAAa,aAAc,SAC/F,CAAE,OAAc,EAAQ,MAA6B,CAAE,YAAa,YAAa,eACjF,CAAE,YAAc,EAAQ,OACxB,CAAE,aAAc,EAAQ,MAA6B,CAAE,YAAa,YAAa,eACjF,CAAE,UAAc,EAAQ,MAA6B,CAAE,YAAa,YAAa,eACjF,CAAE,WAAc,EAAQ,OACxB,CAAE,YAAc,EAAQ,OAO1B,SAASC,IAMPtmE,KAAKK,MAAQ,IAAI+lE,EAEjB,IAAK,IAAInjE,EAAI,EAAGA,EAAIojE,EAAO9kE,OAAQ0B,IACjCjD,KAAKK,MAAMQ,KAAKwlE,EAAOpjE,GAAG,GAAIojE,EAAOpjE,GAAG,GAAI,CAAEsjE,KAAMF,EAAOpjE,GAAG,IAAM,IAAIgE,UAO5Eq/D,EAAY3C,UAAUj8D,SAAW,SAAU3H,EAAOymE,EAAWC,GAQ3D,IAPA,IAAQxjE,EACJ7C,EAAQJ,KAAKK,MAAMqmE,SAAS,IAC5Bl8D,EAAMpK,EAAMmB,OACZ27B,EAAOspC,EACPG,GAAgB,EAChBjnE,EAAaK,EAAMlB,GAAGI,QAAQS,WAE3Bw9B,EAAOupC,IACZ1mE,EAAMm9B,KAAOA,EAAOn9B,EAAM6mE,eAAe1pC,KACrCA,GAAQupC,OAIR1mE,EAAM8mE,OAAO3pC,GAAQn9B,EAAM+mE,YANV,CAUrB,GAAI/mE,EAAMgB,OAASrB,EAAY,CAC7BK,EAAMm9B,KAAOupC,EACb,MAUF,IAAKxjE,EAAI,EAAGA,EAAIuH,IACTpK,EAAM6C,GAAGlD,EAAOm9B,EAAMupC,GAAS,GADjBxjE,KAOrBlD,EAAMgnE,OAASJ,EAGX5mE,EAAMinE,QAAQjnE,EAAMm9B,KAAO,KAC7BypC,GAAgB,IAGlBzpC,EAAOn9B,EAAMm9B,MAEFupC,GAAW1mE,EAAMinE,QAAQ9pC,KAClCypC,GAAgB,EAChBzpC,IACAn9B,EAAMm9B,KAAOA,KAWnBopC,EAAY3C,UAAUhkE,MAAQ,SAAUC,EAAKf,EAAIgB,EAAKonE,GACpD,IAAIlnE,EAECH,IAELG,EAAQ,IAAIC,KAAKC,MAAML,EAAKf,EAAIgB,EAAKonE,GAErCjnE,KAAK0H,SAAS3H,EAAOA,EAAMm9B,KAAMn9B,EAAMmnE,WAIzCZ,EAAY3C,UAAU1jE,MAAQ,EAAQ,MAGtC6L,EAAOC,QAAUu6D,+BChHjB,IAAIF,EAAS,EAAQ,MAGjBC,EAAS,CACX,CAAE,YAAkB,EAAQ,OAC5B,CAAE,QAAkB,EAAQ,OAC5B,CAAE,SAAkB,EAAQ,OAC5B,CAAE,UAAkB,EAAQ,MAC5B,CAAE,eAAkB,EAAQ,OAC5B,CAAE,cAAkB,EAAQ,OAG5B,CAAE,YAAkB,EAAQ,QAO9B,SAASc,IAMPnnE,KAAKK,MAAQ,IAAI+lE,EAEjB,IAAK,IAAInjE,EAAI,EAAGA,EAAIojE,EAAO9kE,OAAQ0B,IACjCjD,KAAKK,MAAMQ,KAAKwlE,EAAOpjE,GAAG,GAAIojE,EAAOpjE,GAAG,IAU5CkkE,EAAKxD,UAAUzjE,QAAU,SAAUH,GACjC,IAAIkD,EAAGmG,EAAGhJ,EAIV,IAAK6C,EAAI,EAAGmG,GAFZhJ,EAAQJ,KAAKK,MAAMqmE,SAAS,KAENnlE,OAAQ0B,EAAImG,EAAGnG,IACnC7C,EAAM6C,GAAGlD,IAIbonE,EAAKxD,UAAU1jE,MAAQ,EAAQ,MAG/B6L,EAAOC,QAAUo7D,+BCpDjB,IAAIf,EAAkB,EAAQ,MAM1BC,EAAS,CACX,CAAE,OAAmB,EAAQ,OAC7B,CAAE,UAAmB,EAAQ,OAC7B,CAAE,UAAmB,EAAQ,OAC7B,CAAE,SAAmB,EAAQ,OAC7B,CAAE,YAAmB,EAAQ,OAC7B,CAAE,gBAAmB,WACrB,CAAE,WAAmB,WACrB,CAAE,OAAmB,EAAQ,OAC7B,CAAE,QAAmB,EAAQ,OAC7B,CAAE,WAAmB,EAAQ,OAC7B,CAAE,cAAmB,EAAQ,OAC7B,CAAE,SAAmB,EAAQ,QAQ3Be,EAAU,CACZ,CAAE,gBAAmB,EAAQ,OAC7B,CAAE,gBAAmB,WACrB,CAAE,WAAmB,WAGrB,CAAE,iBAAmB,EAAQ,QAO/B,SAASC,IACP,IAAIpkE,EASJ,IAFAjD,KAAKK,MAAQ,IAAI+lE,EAEZnjE,EAAI,EAAGA,EAAIojE,EAAO9kE,OAAQ0B,IAC7BjD,KAAKK,MAAMQ,KAAKwlE,EAAOpjE,GAAG,GAAIojE,EAAOpjE,GAAG,IAW1C,IAFAjD,KAAKsnE,OAAS,IAAIlB,EAEbnjE,EAAI,EAAGA,EAAImkE,EAAQ7lE,OAAQ0B,IAC9BjD,KAAKsnE,OAAOzmE,KAAKumE,EAAQnkE,GAAG,GAAImkE,EAAQnkE,GAAG,IAQ/CokE,EAAa1D,UAAU4D,UAAY,SAAUxnE,GAC3C,IAAIynE,EAAIvkE,EAAGuD,EAAMzG,EAAMyG,IACnBpG,EAAQJ,KAAKK,MAAMqmE,SAAS,IAC5Bl8D,EAAMpK,EAAMmB,OACZ7B,EAAaK,EAAMlB,GAAGI,QAAQS,WAC9B6L,EAAQxL,EAAMwL,MAGlB,QAA0B,IAAfA,EAAM/E,GAAjB,CAKA,GAAIzG,EAAMgB,MAAQrB,EAChB,IAAKuD,EAAI,EAAGA,EAAIuH,IAKdzK,EAAMgB,QACNymE,EAAKpnE,EAAM6C,GAAGlD,GAAO,GACrBA,EAAMgB,SAEFymE,GATevkE,UAuBrBlD,EAAMyG,IAAMzG,EAAMsH,OAGfmgE,GAAMznE,EAAMyG,MACjB+E,EAAM/E,GAAOzG,EAAMyG,SAhCjBzG,EAAMyG,IAAM+E,EAAM/E,IAsCtB6gE,EAAa1D,UAAUj8D,SAAW,SAAU3H,GAO1C,IANA,IAAIynE,EAAIvkE,EACJ7C,EAAQJ,KAAKK,MAAMqmE,SAAS,IAC5Bl8D,EAAMpK,EAAMmB,OACZmB,EAAM3C,EAAMsH,OACZ3H,EAAaK,EAAMlB,GAAGI,QAAQS,WAE3BK,EAAMyG,IAAM9D,GAAK,CAQtB,GAAI3C,EAAMgB,MAAQrB,EAChB,IAAKuD,EAAI,EAAGA,EAAIuH,KACdg9D,EAAKpnE,EAAM6C,GAAGlD,GAAO,IADFkD,KAMvB,GAAIukE,GACF,GAAIznE,EAAMyG,KAAO9D,EAAO,WAI1B3C,EAAM0nE,SAAW1nE,EAAMH,IAAIG,EAAMyG,OAG/BzG,EAAM0nE,SACR1nE,EAAM2nE,eAUVL,EAAa1D,UAAUhkE,MAAQ,SAAUiB,EAAK/B,EAAIgB,EAAKonE,GACrD,IAAIhkE,EAAG7C,EAAOoK,EACVzK,EAAQ,IAAIC,KAAKC,MAAMW,EAAK/B,EAAIgB,EAAKonE,GAOzC,IALAjnE,KAAK0H,SAAS3H,GAGdyK,GADApK,EAAQJ,KAAKsnE,OAAOZ,SAAS,KACjBnlE,OAEP0B,EAAI,EAAGA,EAAIuH,EAAKvH,IACnB7C,EAAM6C,GAAGlD,IAKbsnE,EAAa1D,UAAU1jE,MAAQ,EAAQ,MAGvC6L,EAAOC,QAAUs7D,yBCjKjB,SAASjB,IAUPpmE,KAAK2nE,UAAY,GAOjB3nE,KAAK4nE,UAAY,KASnBxB,EAAMzC,UAAUkE,SAAW,SAAUz2D,GACnC,IAAK,IAAInO,EAAI,EAAGA,EAAIjD,KAAK2nE,UAAUpmE,OAAQ0B,IACzC,GAAIjD,KAAK2nE,UAAU1kE,GAAGmO,OAASA,EAC7B,OAAOnO,EAGX,OAAQ,GAMVmjE,EAAMzC,UAAUmE,YAAc,WAC5B,IAAIxvB,EAAOt4C,KACP+nE,EAAS,CAAE,IAGfzvB,EAAKqvB,UAAUpyB,SAAQ,SAAUyyB,GAC1BA,EAAKC,SAEVD,EAAKzB,IAAIhxB,SAAQ,SAAU2yB,GACrBH,EAAOxlE,QAAQ2lE,GAAW,GAC5BH,EAAOlnE,KAAKqnE,SAKlB5vB,EAAKsvB,UAAY,GAEjBG,EAAOxyB,SAAQ,SAAU4yB,GACvB7vB,EAAKsvB,UAAUO,GAAS,GACxB7vB,EAAKqvB,UAAUpyB,SAAQ,SAAUyyB,GAC1BA,EAAKC,UAENE,GAASH,EAAKzB,IAAIhkE,QAAQ4lE,GAAS,GAEvC7vB,EAAKsvB,UAAUO,GAAOtnE,KAAKmnE,EAAKhxD,YA+BtCovD,EAAMzC,UAAUyE,GAAK,SAAUh3D,EAAM4F,EAAI/X,GACvC,IAAIopE,EAAQroE,KAAK6nE,SAASz2D,GACtB+jD,EAAMl2D,GAAW,GAErB,IAAe,IAAXopE,EAAgB,MAAM,IAAIvoE,MAAM,0BAA4BsR,GAEhEpR,KAAK2nE,UAAUU,GAAOrxD,GAAKA,EAC3BhX,KAAK2nE,UAAUU,GAAO9B,IAAMpR,EAAIoR,KAAO,GACvCvmE,KAAK4nE,UAAY,MA4BnBxB,EAAMzC,UAAU2E,OAAS,SAAUC,EAAYC,EAAUxxD,EAAI/X,GAC3D,IAAIopE,EAAQroE,KAAK6nE,SAASU,GACtBpT,EAAMl2D,GAAW,GAErB,IAAe,IAAXopE,EAAgB,MAAM,IAAIvoE,MAAM,0BAA4ByoE,GAEhEvoE,KAAK2nE,UAAUjhE,OAAO2hE,EAAO,EAAG,CAC9Bj3D,KAAMo3D,EACNP,SAAS,EACTjxD,GAAIA,EACJuvD,IAAKpR,EAAIoR,KAAO,KAGlBvmE,KAAK4nE,UAAY,MA4BnBxB,EAAMzC,UAAU8E,MAAQ,SAAUC,EAAWF,EAAUxxD,EAAI/X,GACzD,IAAIopE,EAAQroE,KAAK6nE,SAASa,GACtBvT,EAAMl2D,GAAW,GAErB,IAAe,IAAXopE,EAAgB,MAAM,IAAIvoE,MAAM,0BAA4B4oE,GAEhE1oE,KAAK2nE,UAAUjhE,OAAO2hE,EAAQ,EAAG,EAAG,CAClCj3D,KAAMo3D,EACNP,SAAS,EACTjxD,GAAIA,EACJuvD,IAAKpR,EAAIoR,KAAO,KAGlBvmE,KAAK4nE,UAAY,MA0BnBxB,EAAMzC,UAAU9iE,KAAO,SAAU2nE,EAAUxxD,EAAI/X,GAC7C,IAAIk2D,EAAMl2D,GAAW,GAErBe,KAAK2nE,UAAU9mE,KAAK,CAClBuQ,KAAMo3D,EACNP,SAAS,EACTjxD,GAAIA,EACJuvD,IAAKpR,EAAIoR,KAAO,KAGlBvmE,KAAK4nE,UAAY,MAgBnBxB,EAAMzC,UAAUgF,OAAS,SAAUjzC,EAAMkzC,GAClCj9D,MAAMk9D,QAAQnzC,KAASA,EAAO,CAAEA,IAErC,IAAIypB,EAAS,GAeb,OAZAzpB,EAAK6f,SAAQ,SAAUnkC,GACrB,IAAIlP,EAAMlC,KAAK6nE,SAASz2D,GAExB,GAAIlP,EAAM,EAAG,CACX,GAAI0mE,EAAiB,OACrB,MAAM,IAAI9oE,MAAM,oCAAsCsR,GAExDpR,KAAK2nE,UAAUzlE,GAAK+lE,SAAU,EAC9B9oB,EAAOt+C,KAAKuQ,KACXpR,MAEHA,KAAK4nE,UAAY,KACVzoB,GAcTinB,EAAMzC,UAAUmF,WAAa,SAAUpzC,EAAMkzC,GACtCj9D,MAAMk9D,QAAQnzC,KAASA,EAAO,CAAEA,IAErC11B,KAAK2nE,UAAUpyB,SAAQ,SAAUyyB,GAAQA,EAAKC,SAAU,KAExDjoE,KAAK2oE,OAAOjzC,EAAMkzC,IAgBpBxC,EAAMzC,UAAUhhE,QAAU,SAAU+yB,EAAMkzC,GACnCj9D,MAAMk9D,QAAQnzC,KAASA,EAAO,CAAEA,IAErC,IAAIypB,EAAS,GAeb,OAZAzpB,EAAK6f,SAAQ,SAAUnkC,GACrB,IAAIlP,EAAMlC,KAAK6nE,SAASz2D,GAExB,GAAIlP,EAAM,EAAG,CACX,GAAI0mE,EAAiB,OACrB,MAAM,IAAI9oE,MAAM,oCAAsCsR,GAExDpR,KAAK2nE,UAAUzlE,GAAK+lE,SAAU,EAC9B9oB,EAAOt+C,KAAKuQ,KACXpR,MAEHA,KAAK4nE,UAAY,KACVzoB,GAaTinB,EAAMzC,UAAU+C,SAAW,SAAUqC,GAMnC,OALuB,OAAnB/oE,KAAK4nE,WACP5nE,KAAK8nE,cAIA9nE,KAAK4nE,UAAUmB,IAAc,IAGtCj9D,EAAOC,QAAUq6D,+BC3VjB,IAAIN,EAAU,gBAGdh6D,EAAOC,QAAU,SAAoBhM,EAAOymE,EAAWC,EAASlgE,GAC9D,IAAIyiE,EACArE,EACA1hE,EACAgmE,EACA7/D,EACA8/D,EACAC,EACAC,EACAv0C,EACAw0C,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA7nE,EACA8nE,EACAC,EAAahqE,EAAMmnE,QACnB1gE,EAAMzG,EAAMiqE,OAAOxD,GAAazmE,EAAMkqE,OAAOzD,GAC7C39C,EAAM9oB,EAAMmqE,OAAO1D,GAGvB,GAAIzmE,EAAM8mE,OAAOL,GAAazmE,EAAM+mE,WAAa,EAAK,OAAO,EAG7D,GAAoC,KAAhC/mE,EAAMH,IAAI6B,WAAW+E,KAA0B,OAAO,EAI1D,GAAID,EAAU,OAAO,EAqCrB,IAlCA0iE,EAAUp0C,EAAS90B,EAAM8mE,OAAOL,GAAa,EAGX,KAA9BzmE,EAAMH,IAAI6B,WAAW+E,IAGvBA,IACAyiE,IACAp0C,IACAm0C,GAAY,EACZW,GAAmB,GACoB,IAA9B5pE,EAAMH,IAAI6B,WAAW+E,IAC9BmjE,GAAmB,GAEd5pE,EAAMoqE,QAAQ3D,GAAa3xC,GAAU,GAAM,GAG9CruB,IACAyiE,IACAp0C,IACAm0C,GAAY,GAKZA,GAAY,GAGdW,GAAmB,EAGrBN,EAAY,CAAEtpE,EAAMiqE,OAAOxD,IAC3BzmE,EAAMiqE,OAAOxD,GAAahgE,EAEnBA,EAAMqiB,IACX87C,EAAK5kE,EAAMH,IAAI6B,WAAW+E,GAEtBs/D,EAAQnB,KACC,IAAPA,EACF9vC,GAAU,GAAKA,EAAS90B,EAAMoqE,QAAQ3D,IAAcwC,EAAY,EAAI,IAAM,EAE1En0C,IAMJruB,IAqCF,IAlCA8iE,EAAa,CAAEvpE,EAAMoqE,QAAQ3D,IAC7BzmE,EAAMoqE,QAAQ3D,GAAazmE,EAAM8mE,OAAOL,GAAa,GAAKmD,EAAmB,EAAI,GAEjFT,EAAgB1iE,GAAOqiB,EAEvB4gD,EAAY,CAAE1pE,EAAM8mE,OAAOL,IAC3BzmE,EAAM8mE,OAAOL,GAAa3xC,EAASo0C,EAEnCS,EAAY,CAAE3pE,EAAMkqE,OAAOzD,IAC3BzmE,EAAMkqE,OAAOzD,GAAahgE,EAAMzG,EAAMiqE,OAAOxD,GAE7CqD,EAAkB9pE,EAAMlB,GAAGE,MAAMsB,MAAMqmE,SAAS,cAEhD8C,EAAgBzpE,EAAMqqE,WACtBrqE,EAAMqqE,WAAa,aAoBdhB,EAAW5C,EAAY,EAAG4C,EAAW3C,IASxCqD,EAAc/pE,EAAM8mE,OAAOuC,GAAYrpE,EAAM+mE,aAE7CtgE,EAAMzG,EAAMiqE,OAAOZ,GAAYrpE,EAAMkqE,OAAOb,MAC5CvgD,EAAM9oB,EAAMmqE,OAAOd,MAZ8BA,IAmBjD,GAAoC,KAAhCrpE,EAAMH,IAAI6B,WAAW+E,MAA2BsjE,EAApD,CAoEA,GAAIZ,EAAiB,MAIrB,IADAU,GAAY,EACP3mE,EAAI,EAAGmG,EAAIygE,EAAgBtoE,OAAQ0B,EAAImG,EAAGnG,IAC7C,GAAI4mE,EAAgB5mE,GAAGlD,EAAOqpE,EAAU3C,GAAS,GAAO,CACtDmD,GAAY,EACZ,MAIJ,GAAIA,EAAW,CAKb7pE,EAAMmnE,QAAUkC,EAEQ,IAApBrpE,EAAM+mE,YAIRuC,EAAUxoE,KAAKd,EAAMiqE,OAAOZ,IAC5BE,EAAWzoE,KAAKd,EAAMoqE,QAAQf,IAC9BM,EAAU7oE,KAAKd,EAAMkqE,OAAOb,IAC5BK,EAAU5oE,KAAKd,EAAM8mE,OAAOuC,IAC5BrpE,EAAM8mE,OAAOuC,IAAarpE,EAAM+mE,WAGlC,MAGFuC,EAAUxoE,KAAKd,EAAMiqE,OAAOZ,IAC5BE,EAAWzoE,KAAKd,EAAMoqE,QAAQf,IAC9BM,EAAU7oE,KAAKd,EAAMkqE,OAAOb,IAC5BK,EAAU5oE,KAAKd,EAAM8mE,OAAOuC,IAI5BrpE,EAAM8mE,OAAOuC,IAAa,MA3G1B,CAsCE,IAlCAH,EAAUp0C,EAAS90B,EAAM8mE,OAAOuC,GAAY,EAGV,KAA9BrpE,EAAMH,IAAI6B,WAAW+E,IAGvBA,IACAyiE,IACAp0C,IACAm0C,GAAY,EACZW,GAAmB,GACoB,IAA9B5pE,EAAMH,IAAI6B,WAAW+E,IAC9BmjE,GAAmB,GAEd5pE,EAAMoqE,QAAQf,GAAYv0C,GAAU,GAAM,GAG7CruB,IACAyiE,IACAp0C,IACAm0C,GAAY,GAKZA,GAAY,GAGdW,GAAmB,EAGrBN,EAAUxoE,KAAKd,EAAMiqE,OAAOZ,IAC5BrpE,EAAMiqE,OAAOZ,GAAY5iE,EAElBA,EAAMqiB,IACX87C,EAAK5kE,EAAMH,IAAI6B,WAAW+E,GAEtBs/D,EAAQnB,KACC,IAAPA,EACF9vC,GAAU,GAAKA,EAAS90B,EAAMoqE,QAAQf,IAAaJ,EAAY,EAAI,IAAM,EAEzEn0C,IAMJruB,IAGF0iE,EAAgB1iE,GAAOqiB,EAEvBygD,EAAWzoE,KAAKd,EAAMoqE,QAAQf,IAC9BrpE,EAAMoqE,QAAQf,GAAYrpE,EAAM8mE,OAAOuC,GAAY,GAAKO,EAAmB,EAAI,GAE/EF,EAAU5oE,KAAKd,EAAM8mE,OAAOuC,IAC5BrpE,EAAM8mE,OAAOuC,GAAYv0C,EAASo0C,EAElCS,EAAU7oE,KAAKd,EAAMkqE,OAAOb,IAC5BrpE,EAAMkqE,OAAOb,GAAY5iE,EAAMzG,EAAMiqE,OAAOZ,GAiEhD,IAlBAG,EAAYxpE,EAAM+mE,UAClB/mE,EAAM+mE,UAAY,GAElB9kE,EAAejC,EAAMc,KAAK,kBAAmB,aAAc,IACrDwpE,OAAS,IACfroE,EAAMuB,IAAS4lE,EAAQ,CAAE3C,EAAW,GAEpCzmE,EAAMlB,GAAGE,MAAM2I,SAAS3H,EAAOymE,EAAW4C,IAE1CpnE,EAAejC,EAAMc,KAAK,mBAAoB,cAAe,IACvDwpE,OAAS,IAEftqE,EAAMmnE,QAAU6C,EAChBhqE,EAAMqqE,WAAaZ,EACnBL,EAAM,GAAKppE,EAAMm9B,KAIZj6B,EAAI,EAAGA,EAAIymE,EAAUnoE,OAAQ0B,IAChClD,EAAMiqE,OAAO/mE,EAAIujE,GAAa6C,EAAUpmE,GACxClD,EAAMkqE,OAAOhnE,EAAIujE,GAAakD,EAAUzmE,GACxClD,EAAM8mE,OAAO5jE,EAAIujE,GAAaiD,EAAUxmE,GACxClD,EAAMoqE,QAAQlnE,EAAIujE,GAAa8C,EAAWrmE,GAI5C,OAFAlD,EAAM+mE,UAAYyC,GAEX,0BCrRTz9D,EAAOC,QAAU,SAAchM,EAAOymE,EAAWC,GAC/C,IAAI2C,EAAUz6C,EAAM3sB,EAEpB,GAAIjC,EAAM8mE,OAAOL,GAAazmE,EAAM+mE,UAAY,EAAK,OAAO,EAI5D,IAFAn4C,EAAOy6C,EAAW5C,EAAY,EAEvB4C,EAAW3C,GAChB,GAAI1mE,EAAMinE,QAAQoC,GAChBA,QADF,CAKA,KAAIrpE,EAAM8mE,OAAOuC,GAAYrpE,EAAM+mE,WAAa,GAKhD,MAHEn4C,IADAy6C,EAaJ,OANArpE,EAAMm9B,KAAOvO,GAEb3sB,EAAgBjC,EAAMc,KAAK,aAAc,OAAQ,IAC3CG,QAAUjB,EAAMuqE,SAAS9D,EAAW73C,EAAM,EAAI5uB,EAAM+mE,WAAW,GAAS,KAC9E9kE,EAAMuB,IAAU,CAAEijE,EAAWzmE,EAAMm9B,OAE5B,0BC3BTpxB,EAAOC,QAAU,SAAehM,EAAOymE,EAAWC,EAASlgE,GACzD,IAAIgkE,EAAQ//D,EAAKggE,EAAQpB,EAAUqB,EAAKzoE,EAAOqoE,EAC3CK,GAAgB,EAChBlkE,EAAMzG,EAAMiqE,OAAOxD,GAAazmE,EAAMkqE,OAAOzD,GAC7C39C,EAAM9oB,EAAMmqE,OAAO1D,GAGvB,GAAIzmE,EAAM8mE,OAAOL,GAAazmE,EAAM+mE,WAAa,EAAK,OAAO,EAE7D,GAAItgE,EAAM,EAAIqiB,EAAO,OAAO,EAI5B,GAAe,OAFf0hD,EAASxqE,EAAMH,IAAI6B,WAAW+E,KAEW,KAAX+jE,EAC5B,OAAO,EAST,GALAE,EAAMjkE,GAGNgE,GAFAhE,EAAMzG,EAAM4qE,UAAUnkE,EAAK+jE,IAEfE,GAEF,EAAK,OAAO,EAKtB,GAHAJ,EAAStqE,EAAMH,IAAIqH,MAAMwjE,EAAKjkE,GAC9BgkE,EAASzqE,EAAMH,IAAIqH,MAAMT,EAAKqiB,GAEf,KAAX0hD,GACEC,EAAOjoE,QAAQkK,OAAOC,aAAa69D,KAAY,EACjD,OAAO,EAKX,GAAIhkE,EAAU,OAAO,EAKrB,IAFA6iE,EAAW5C,MAGT4C,GACgB3C,IAMhBjgE,EAAMikE,EAAM1qE,EAAMiqE,OAAOZ,GAAYrpE,EAAMkqE,OAAOb,KAClDvgD,EAAM9oB,EAAMmqE,OAAOd,KAEFrpE,EAAM8mE,OAAOuC,GAAYrpE,EAAM+mE,YAOhD,GAAI/mE,EAAMH,IAAI6B,WAAW+E,KAAS+jE,KAE9BxqE,EAAM8mE,OAAOuC,GAAYrpE,EAAM+mE,WAAa,IAKhDtgE,EAAMzG,EAAM4qE,UAAUnkE,EAAK+jE,IAGjBE,EAAMjgE,IAGhBhE,EAAMzG,EAAM6qE,WAAWpkE,IAEbqiB,GAAV,CAEA6hD,GAAgB,EAEhB,MAcF,OAVAlgE,EAAMzK,EAAM8mE,OAAOL,GAEnBzmE,EAAMm9B,KAAOksC,GAAYsB,EAAgB,EAAI,IAE7C1oE,EAAgBjC,EAAMc,KAAK,QAAS,OAAQ,IACtC8zB,KAAU61C,EAChBxoE,EAAMhB,QAAUjB,EAAMuqE,SAAS9D,EAAY,EAAG4C,EAAU5+D,GAAK,GAC7DxI,EAAMqoE,OAAUA,EAChBroE,EAAMuB,IAAU,CAAEijE,EAAWzmE,EAAMm9B,OAE5B,gCC5FT,IAAI4oC,EAAU,gBAGdh6D,EAAOC,QAAU,SAAiBhM,EAAOymE,EAAWC,EAASlgE,GAC3D,IAAIo+D,EAAI5jE,EAAO8pE,EAAK7oE,EAChBwE,EAAMzG,EAAMiqE,OAAOxD,GAAazmE,EAAMkqE,OAAOzD,GAC7C39C,EAAM9oB,EAAMmqE,OAAO1D,GAGvB,GAAIzmE,EAAM8mE,OAAOL,GAAazmE,EAAM+mE,WAAa,EAAK,OAAO,EAI7D,GAAW,MAFXnC,EAAM5kE,EAAMH,IAAI6B,WAAW+E,KAEDA,GAAOqiB,EAAO,OAAO,EAK/C,IAFA9nB,EAAQ,EACR4jE,EAAK5kE,EAAMH,IAAI6B,aAAa+E,GACd,KAAPm+D,GAAsBn+D,EAAMqiB,GAAO9nB,GAAS,GACjDA,IACA4jE,EAAK5kE,EAAMH,IAAI6B,aAAa+E,GAG9B,QAAIzF,EAAQ,GAAMyF,EAAMqiB,IAAQi9C,EAAQnB,KAEpCp+D,IAIJsiB,EAAM9oB,EAAM+qE,eAAejiD,EAAKriB,IAChCqkE,EAAM9qE,EAAMgrE,cAAcliD,EAAK,GAAMriB,IAC3BA,GAAOs/D,EAAQ/lE,EAAMH,IAAI6B,WAAWopE,EAAM,MAClDhiD,EAAMgiD,GAGR9qE,EAAMm9B,KAAOspC,EAAY,GAEzBxkE,EAAejC,EAAMc,KAAK,eAAgB,IAAM4L,OAAO1L,GAAQ,IACzDspE,OAAS,WAAWpjE,MAAM,EAAGlG,GACnCiB,EAAMuB,IAAS,CAAEijE,EAAWzmE,EAAMm9B,OAElCl7B,EAAiBjC,EAAMc,KAAK,SAAU,GAAI,IACpCG,QAAWjB,EAAMH,IAAIqH,MAAMT,EAAKqiB,GAAKphB,OAC3CzF,EAAMuB,IAAW,CAAEijE,EAAWzmE,EAAMm9B,MACpCl7B,EAAMV,SAAW,IAEjBU,EAAejC,EAAMc,KAAK,gBAAiB,IAAM4L,OAAO1L,IAAS,IAC3DspE,OAAS,WAAWpjE,MAAM,EAAGlG,IAtBd,kCCzBvB,IAAI+kE,EAAU,gBAGdh6D,EAAOC,QAAU,SAAYhM,EAAOymE,EAAWC,EAASlgE,GACtD,IAAIgkE,EAAQS,EAAKrG,EAAI3iE,EACjBwE,EAAMzG,EAAMiqE,OAAOxD,GAAazmE,EAAMkqE,OAAOzD,GAC7C39C,EAAM9oB,EAAMmqE,OAAO1D,GAGvB,GAAIzmE,EAAM8mE,OAAOL,GAAazmE,EAAM+mE,WAAa,EAAK,OAAO,EAK7D,GAAe,MAHfyD,EAASxqE,EAAMH,IAAI6B,WAAW+E,OAIf,KAAX+jE,GACW,KAAXA,EACF,OAAO,EAMT,IADAS,EAAM,EACCxkE,EAAMqiB,GAAK,CAEhB,IADA87C,EAAK5kE,EAAMH,IAAI6B,WAAW+E,QACf+jE,IAAWzE,EAAQnB,GAAO,OAAO,EACxCA,IAAO4F,GAAUS,IAGvB,QAAIA,EAAM,IAENzkE,IAEJxG,EAAMm9B,KAAOspC,EAAY,GAEzBxkE,EAAejC,EAAMc,KAAK,KAAM,KAAM,IAChC0C,IAAS,CAAEijE,EAAWzmE,EAAMm9B,MAClCl7B,EAAMqoE,OAAS1+D,MAAMq/D,EAAM,GAAGvnE,KAAKgJ,OAAOC,aAAa69D,KANlC,kCC9BvB,IAAIU,EAAc,EAAQ,MACtBxH,EAAyB,UAKzByH,EAAiB,CACnB,CAAE,6CAA8C,oCAAoC,GACpF,CAAE,QAAgB,OAAS,GAC3B,CAAE,OAAgB,OAAS,GAC3B,CAAE,WAAgB,KAAS,GAC3B,CAAE,eAAgB,SAAS,GAC3B,CAAE,IAAI1H,OAAO,QAAUyH,EAAYxnE,KAAK,KAAO,mBAAoB,KAAM,MAAM,GAC/E,CAAE,IAAI+/D,OAAOC,EAAuBlyD,OAAS,SAAW,MAAM,IAIhEzF,EAAOC,QAAU,SAAoBhM,EAAOymE,EAAWC,EAASlgE,GAC9D,IAAItD,EAAGmmE,EAAUpnE,EAAOmpE,EACpB3kE,EAAMzG,EAAMiqE,OAAOxD,GAAazmE,EAAMkqE,OAAOzD,GAC7C39C,EAAM9oB,EAAMmqE,OAAO1D,GAGvB,GAAIzmE,EAAM8mE,OAAOL,GAAazmE,EAAM+mE,WAAa,EAAK,OAAO,EAE7D,IAAK/mE,EAAMlB,GAAGI,QAAQC,KAAQ,OAAO,EAErC,GAAkC,KAA9Ba,EAAMH,IAAI6B,WAAW+E,GAAwB,OAAO,EAIxD,IAFA2kE,EAAWprE,EAAMH,IAAIqH,MAAMT,EAAKqiB,GAE3B5lB,EAAI,EAAGA,EAAIioE,EAAe3pE,SACzB2pE,EAAejoE,GAAG,GAAGg2C,KAAKkyB,GADOloE,KAIvC,GAAIA,IAAMioE,EAAe3pE,OAAU,OAAO,EAE1C,GAAIgF,EAEF,OAAO2kE,EAAejoE,GAAG,GAO3B,GAJAmmE,EAAW5C,EAAY,GAIlB0E,EAAejoE,GAAG,GAAGg2C,KAAKkyB,GAC7B,KAAO/B,EAAW3C,KACZ1mE,EAAM8mE,OAAOuC,GAAYrpE,EAAM+mE,WADVsC,IAOzB,GAJA5iE,EAAMzG,EAAMiqE,OAAOZ,GAAYrpE,EAAMkqE,OAAOb,GAC5CvgD,EAAM9oB,EAAMmqE,OAAOd,GACnB+B,EAAWprE,EAAMH,IAAIqH,MAAMT,EAAKqiB,GAE5BqiD,EAAejoE,GAAG,GAAGg2C,KAAKkyB,GAAW,CACf,IAApBA,EAAS5pE,QAAgB6nE,IAC7B,MAWN,OANArpE,EAAMm9B,KAAOksC,GAEbpnE,EAAgBjC,EAAMc,KAAK,aAAc,GAAI,IACvC0C,IAAU,CAAEijE,EAAW4C,GAC7BpnE,EAAMhB,QAAUjB,EAAMuqE,SAAS9D,EAAW4C,EAAUrpE,EAAM+mE,WAAW,IAE9D,0BCnETh7D,EAAOC,QAAU,SAAkBhM,EAAOymE,EAAWC,GACnD,IAAIzlE,EAAS4oE,EAAW3mE,EAAGmG,EAAGpH,EAAOwE,EAAKqiB,EAAK9nB,EAAOwpE,EACxBf,EAA1BJ,EAAW5C,EAAY,EACvBqD,EAAkB9pE,EAAMlB,GAAGE,MAAMsB,MAAMqmE,SAAS,aAGpD,GAAI3mE,EAAM8mE,OAAOL,GAAazmE,EAAM+mE,WAAa,EAAK,OAAO,EAM7D,IAJA0C,EAAgBzpE,EAAMqqE,WACtBrqE,EAAMqqE,WAAa,YAGZhB,EAAW3C,IAAY1mE,EAAMinE,QAAQoC,GAAWA,IAGrD,KAAIrpE,EAAM8mE,OAAOuC,GAAYrpE,EAAM+mE,UAAY,GAA/C,CAKA,GAAI/mE,EAAM8mE,OAAOuC,IAAarpE,EAAM+mE,YAClCtgE,EAAMzG,EAAMiqE,OAAOZ,GAAYrpE,EAAMkqE,OAAOb,KAC5CvgD,EAAM9oB,EAAMmqE,OAAOd,MAKF,MAFfmB,EAASxqE,EAAMH,IAAI6B,WAAW+E,KAEW,KAAX+jE,KAC5B/jE,EAAMzG,EAAM4qE,UAAUnkE,EAAK+jE,IAC3B/jE,EAAMzG,EAAM6qE,WAAWpkE,KAEZqiB,GAAK,CACd9nB,EAAoB,KAAXwpE,EAAyB,EAAI,EACtC,MAOR,KAAIxqE,EAAM8mE,OAAOuC,GAAY,GAA7B,CAIA,IADAQ,GAAY,EACP3mE,EAAI,EAAGmG,EAAIygE,EAAgBtoE,OAAQ0B,EAAImG,EAAGnG,IAC7C,GAAI4mE,EAAgB5mE,GAAGlD,EAAOqpE,EAAU3C,GAAS,GAAO,CACtDmD,GAAY,EACZ,MAGJ,GAAIA,EAAa,OAGnB,QAAK7oE,IAKLC,EAAUjB,EAAMuqE,SAAS9D,EAAW4C,EAAUrpE,EAAM+mE,WAAW,GAAOr/D,OAEtE1H,EAAMm9B,KAAOksC,EAAW,GAExBpnE,EAAiBjC,EAAMc,KAAK,eAAgB,IAAM4L,OAAO1L,GAAQ,IAC3DspE,OAAW59D,OAAOC,aAAa69D,GACrCvoE,EAAMuB,IAAW,CAAEijE,EAAWzmE,EAAMm9B,OAEpCl7B,EAAiBjC,EAAMc,KAAK,SAAU,GAAI,IACpCG,QAAWA,EACjBgB,EAAMuB,IAAW,CAAEijE,EAAWzmE,EAAMm9B,KAAO,GAC3Cl7B,EAAMV,SAAW,IAEjBU,EAAiBjC,EAAMc,KAAK,gBAAiB,IAAM4L,OAAO1L,IAAS,IAC7DspE,OAAW59D,OAAOC,aAAa69D,GAErCxqE,EAAMqqE,WAAaZ,GAEZ,iCC7ET,IAAI1D,EAAU,gBAKd,SAASsF,EAAqBrrE,EAAOymE,GACnC,IAAI+D,EAAQ/jE,EAAKqiB,EAAK87C,EAOtB,OALAn+D,EAAMzG,EAAMiqE,OAAOxD,GAAazmE,EAAMkqE,OAAOzD,GAC7C39C,EAAM9oB,EAAMmqE,OAAO1D,GAIJ,MAFf+D,EAASxqE,EAAMH,IAAI6B,WAAW+E,OAGf,KAAX+jE,GACW,KAAXA,GAIA/jE,EAAMqiB,IACR87C,EAAK5kE,EAAMH,IAAI6B,WAAW+E,IAErBs/D,EAAQnB,KANL,EAYHn+D,EAKT,SAAS6kE,EAAsBtrE,EAAOymE,GACpC,IAAI7B,EACAtiE,EAAQtC,EAAMiqE,OAAOxD,GAAazmE,EAAMkqE,OAAOzD,GAC/ChgE,EAAMnE,EACNwmB,EAAM9oB,EAAMmqE,OAAO1D,GAGvB,GAAIhgE,EAAM,GAAKqiB,EAAO,OAAQ,EAI9B,IAFA87C,EAAK5kE,EAAMH,IAAI6B,WAAW+E,MAEjB,IAAem+D,EAAK,GAAe,OAAQ,EAEpD,OAAS,CAEP,GAAIn+D,GAAOqiB,EAAO,OAAQ,EAI1B,MAFA87C,EAAK5kE,EAAMH,IAAI6B,WAAW+E,OAEhB,IAAem+D,GAAM,IAA/B,CAUA,GAAW,KAAPA,GAA6B,KAAPA,EACxB,MAGF,OAAQ,EAVN,GAAIn+D,EAAMnE,GAAS,GAAM,OAAQ,EAcrC,OAAImE,EAAMqiB,IACR87C,EAAK5kE,EAAMH,IAAI6B,WAAW+E,IAErBs/D,EAAQnB,KAEH,EAGLn+D,EAiBTsF,EAAOC,QAAU,SAAchM,EAAOymE,EAAWC,EAASlgE,GACxD,IAAIo+D,EACA2G,EACAroE,EACAsoE,EACAC,EACAvC,EACAwC,EACAC,EACAtiE,EACAuiE,EACAC,EACAC,EACAC,EACAjjD,EACAugD,EACAv0C,EACAk3C,EACAvC,EACAC,EACAC,EACAsC,EACAxlE,EACAylE,EACAC,EACA7pE,EACAunE,EACAC,EACA7nE,EACAmqE,GAAyB,EACzBpF,GAAQ,EAGZ,GAAIhnE,EAAM8mE,OAAOL,GAAazmE,EAAM+mE,WAAa,EAAK,OAAO,EAQ7D,GAAI/mE,EAAMqsE,YAAc,GACpBrsE,EAAM8mE,OAAOL,GAAazmE,EAAMqsE,YAAc,GAC9CrsE,EAAM8mE,OAAOL,GAAazmE,EAAM+mE,UAClC,OAAO,EAiBT,GAZIvgE,GAA+B,cAArBxG,EAAMqqE,YAMdrqE,EAAM8mE,OAAOL,IAAczmE,EAAM+mE,YACnCqF,GAAyB,IAKxBF,EAAiBZ,EAAsBtrE,EAAOymE,KAAe,GAOhE,GANAiF,GAAY,EACZppE,EAAQtC,EAAMiqE,OAAOxD,GAAazmE,EAAMkqE,OAAOzD,GAC/CsF,EAAc9mE,OAAOjF,EAAMH,IAAIqH,MAAM5E,EAAO4pE,EAAiB,IAIzDE,GAA0C,IAAhBL,EAAmB,OAAO,MAEnD,OAAKG,EAAiBb,EAAqBrrE,EAAOymE,KAAe,GAItE,OAAO,EAHPiF,GAAY,EAQd,GAAIU,GACEpsE,EAAM6qE,WAAWqB,IAAmBlsE,EAAMmqE,OAAO1D,GAAY,OAAO,EAO1E,GAHAqF,EAAiB9rE,EAAMH,IAAI6B,WAAWwqE,EAAiB,GAGnD1lE,EAAU,OAAO,EA6BrB,IA1BAqlE,EAAa7rE,EAAMI,OAAOoB,OAEtBkqE,GACFzpE,EAAcjC,EAAMc,KAAK,oBAAqB,KAAM,GAChC,IAAhBirE,IACF9pE,EAAM2E,MAAQ,CAAE,CAAE,QAASmlE,MAI7B9pE,EAAcjC,EAAMc,KAAK,mBAAoB,KAAM,GAGrDmB,EAAMuB,IAASooE,EAAY,CAAEnF,EAAW,GACxCxkE,EAAMqoE,OAAS59D,OAAOC,aAAam/D,GAMnCzC,EAAW5C,EACX0F,GAAe,EACfrC,EAAkB9pE,EAAMlB,GAAGE,MAAMsB,MAAMqmE,SAAS,QAEhD8C,EAAgBzpE,EAAMqqE,WACtBrqE,EAAMqqE,WAAa,OAEZhB,EAAW3C,GAAS,CAMzB,IALAjgE,EAAMylE,EACNpjD,EAAM9oB,EAAMmqE,OAAOd,GAEnBH,EAAUp0C,EAAS90B,EAAM8mE,OAAOuC,GAAY6C,GAAkBlsE,EAAMiqE,OAAOxD,GAAazmE,EAAMkqE,OAAOzD,IAE9FhgE,EAAMqiB,GAAK,CAGhB,GAAW,KAFX87C,EAAK5kE,EAAMH,IAAI6B,WAAW+E,IAGxBquB,GAAU,GAAKA,EAAS90B,EAAMoqE,QAAQf,IAAa,MAC9C,IAAW,KAAPzE,EAGT,MAFA9vC,IAKFruB,IA+EF,IAxEEglE,GAJFF,EAAe9kE,IAEKqiB,EAEE,EAEAgM,EAASo0C,GAKP,IAAKuC,EAAoB,GAIjDD,EAAStC,EAAUuC,GAGnBxpE,EAAejC,EAAMc,KAAK,iBAAkB,KAAM,IAC5CwpE,OAAS59D,OAAOC,aAAam/D,GACnC7pE,EAAMuB,IAASmoE,EAAY,CAAElF,EAAW,GACpCiF,IACFzpE,EAAM2yB,KAAO50B,EAAMH,IAAIqH,MAAM5E,EAAO4pE,EAAiB,IAIvDD,EAAWjsE,EAAMgnE,MACjB2C,EAAY3pE,EAAMkqE,OAAOzD,GACzBiD,EAAY1pE,EAAM8mE,OAAOL,GAMzBuF,EAAgBhsE,EAAMqsE,WACtBrsE,EAAMqsE,WAAarsE,EAAM+mE,UACzB/mE,EAAM+mE,UAAYyE,EAElBxrE,EAAMgnE,OAAQ,EACdhnE,EAAMkqE,OAAOzD,GAAa8E,EAAevrE,EAAMiqE,OAAOxD,GACtDzmE,EAAM8mE,OAAOL,GAAa3xC,EAEtBy2C,GAAgBziD,GAAO9oB,EAAMinE,QAAQR,EAAY,GAQnDzmE,EAAMm9B,KAAO5wB,KAAKC,IAAIxM,EAAMm9B,KAAO,EAAGupC,GAEtC1mE,EAAMlB,GAAGE,MAAM2I,SAAS3H,EAAOymE,EAAWC,GAAS,GAIhD1mE,EAAMgnE,QAASmF,IAClBnF,GAAQ,GAIVmF,EAAgBnsE,EAAMm9B,KAAOspC,EAAa,GAAKzmE,EAAMinE,QAAQjnE,EAAMm9B,KAAO,GAE1En9B,EAAM+mE,UAAY/mE,EAAMqsE,WACxBrsE,EAAMqsE,WAAaL,EACnBhsE,EAAMkqE,OAAOzD,GAAakD,EAC1B3pE,EAAM8mE,OAAOL,GAAaiD,EAC1B1pE,EAAMgnE,MAAQiF,GAEdhqE,EAAejC,EAAMc,KAAK,kBAAmB,MAAO,IAC9CwpE,OAAS59D,OAAOC,aAAam/D,GAEnCzC,EAAW5C,EAAYzmE,EAAMm9B,KAC7BwuC,EAAU,GAAKtC,EACfkC,EAAevrE,EAAMiqE,OAAOxD,GAExB4C,GAAY3C,EAAW,MAK3B,GAAI1mE,EAAM8mE,OAAOuC,GAAYrpE,EAAM+mE,UAAa,MAGhD,GAAI/mE,EAAM8mE,OAAOL,GAAazmE,EAAM+mE,WAAa,EAAK,MAItD,IADA8C,GAAY,EACP3mE,EAAI,EAAGmG,EAAIygE,EAAgBtoE,OAAQ0B,EAAImG,EAAGnG,IAC7C,GAAI4mE,EAAgB5mE,GAAGlD,EAAOqpE,EAAU3C,GAAS,GAAO,CACtDmD,GAAY,EACZ,MAGJ,GAAIA,EAAa,MAGjB,GAAI6B,EAAW,CAEb,IADAQ,EAAiBZ,EAAsBtrE,EAAOqpE,IACzB,EAAK,MAC1B/mE,EAAQtC,EAAMiqE,OAAOZ,GAAYrpE,EAAMkqE,OAAOb,QAG9C,IADA6C,EAAiBb,EAAqBrrE,EAAOqpE,IACxB,EAAK,MAG5B,GAAIyC,IAAmB9rE,EAAMH,IAAI6B,WAAWwqE,EAAiB,GAAM,MAqBrE,OAhBEjqE,EADEypE,EACM1rE,EAAMc,KAAK,qBAAsB,MAAO,GAExCd,EAAMc,KAAK,oBAAqB,MAAO,IAE3CwpE,OAAS59D,OAAOC,aAAam/D,GAEnCF,EAAU,GAAKvC,EACfrpE,EAAMm9B,KAAOksC,EAEbrpE,EAAMqqE,WAAaZ,EAGfzC,GAjRN,SAA6BhnE,EAAOmC,GAClC,IAAIe,EAAGmG,EACHrI,EAAQhB,EAAMgB,MAAQ,EAE1B,IAAKkC,EAAIf,EAAM,EAAGkH,EAAIrJ,EAAMI,OAAOoB,OAAS,EAAG0B,EAAImG,EAAGnG,IAChDlD,EAAMI,OAAO8C,GAAGlC,QAAUA,GAAkC,mBAAzBhB,EAAMI,OAAO8C,GAAG7B,OACrDrB,EAAMI,OAAO8C,EAAI,GAAGopE,QAAS,EAC7BtsE,EAAMI,OAAO8C,GAAGopE,QAAS,EACzBppE,GAAK,GA0QPqpE,CAAoBvsE,EAAO6rE,IAGtB,yBCrWT9/D,EAAOC,QAAU,SAAmBhM,EAAOymE,GACzC,IAAIxlE,EAAS4oE,EAAW3mE,EAAGmG,EAAGpH,EAAOwnE,EACjCJ,EAAW5C,EAAY,EACvBqD,EAAkB9pE,EAAMlB,GAAGE,MAAMsB,MAAMqmE,SAAS,aAChDD,EAAU1mE,EAAMmnE,QAMpB,IAJAsC,EAAgBzpE,EAAMqqE,WACtBrqE,EAAMqqE,WAAa,YAGZhB,EAAW3C,IAAY1mE,EAAMinE,QAAQoC,GAAWA,IAGrD,KAAIrpE,EAAM8mE,OAAOuC,GAAYrpE,EAAM+mE,UAAY,GAG3C/mE,EAAM8mE,OAAOuC,GAAY,GAA7B,CAIA,IADAQ,GAAY,EACP3mE,EAAI,EAAGmG,EAAIygE,EAAgBtoE,OAAQ0B,EAAImG,EAAGnG,IAC7C,GAAI4mE,EAAgB5mE,GAAGlD,EAAOqpE,EAAU3C,GAAS,GAAO,CACtDmD,GAAY,EACZ,MAGJ,GAAIA,EAAa,MAmBnB,OAhBA5oE,EAAUjB,EAAMuqE,SAAS9D,EAAW4C,EAAUrpE,EAAM+mE,WAAW,GAAOr/D,OAEtE1H,EAAMm9B,KAAOksC,GAEbpnE,EAAiBjC,EAAMc,KAAK,iBAAkB,IAAK,IAC7C0C,IAAW,CAAEijE,EAAWzmE,EAAMm9B,OAEpCl7B,EAAiBjC,EAAMc,KAAK,SAAU,GAAI,IACpCG,QAAWA,EACjBgB,EAAMuB,IAAW,CAAEijE,EAAWzmE,EAAMm9B,MACpCl7B,EAAMV,SAAW,GAEjBU,EAAiBjC,EAAMc,KAAK,kBAAmB,KAAM,GAErDd,EAAMqqE,WAAaZ,GAEZ,gCC/CT,IAAItD,EAAuB,2BACvBJ,EAAuB,gBAG3Bh6D,EAAOC,QAAU,SAAmBhM,EAAOymE,EAAW+F,EAAUhmE,GAC9D,IAAIo+D,EACA6H,EACAC,EACAhG,EACAtlE,EACA8B,EACAmG,EACAkgD,EACAojB,EACAlD,EACArtD,EACA9Z,EACAzB,EACAgpE,EACAC,EACAtkE,EACA4jE,EAAQ,EACR3iE,EAAMzG,EAAMiqE,OAAOxD,GAAazmE,EAAMkqE,OAAOzD,GAC7C39C,EAAM9oB,EAAMmqE,OAAO1D,GACnB4C,EAAW5C,EAAY,EAG3B,GAAIzmE,EAAM8mE,OAAOL,GAAazmE,EAAM+mE,WAAa,EAAK,OAAO,EAE7D,GAAkC,KAA9B/mE,EAAMH,IAAI6B,WAAW+E,GAAwB,OAAO,EAIxD,OAASA,EAAMqiB,GACb,GAAkC,KAA9B9oB,EAAMH,IAAI6B,WAAW+E,IACa,KAAlCzG,EAAMH,IAAI6B,WAAW+E,EAAM,GAAoB,CACjD,GAAIA,EAAM,IAAMqiB,EAAO,OAAO,EAC9B,GAAsC,KAAlC9oB,EAAMH,IAAI6B,WAAW+E,EAAM,GAAsB,OAAO,EAC5D,MAYJ,IARAigE,EAAU1mE,EAAMmnE,QAGhB2C,EAAkB9pE,EAAMlB,GAAGE,MAAMsB,MAAMqmE,SAAS,aAEhD8C,EAAgBzpE,EAAMqqE,WACtBrqE,EAAMqqE,WAAa,YAEZhB,EAAW3C,IAAY1mE,EAAMinE,QAAQoC,GAAWA,IAGrD,KAAIrpE,EAAM8mE,OAAOuC,GAAYrpE,EAAM+mE,UAAY,GAG3C/mE,EAAM8mE,OAAOuC,GAAY,GAA7B,CAIA,IADAQ,GAAY,EACP3mE,EAAI,EAAGmG,EAAIygE,EAAgBtoE,OAAQ0B,EAAImG,EAAGnG,IAC7C,GAAI4mE,EAAgB5mE,GAAGlD,EAAOqpE,EAAU3C,GAAS,GAAO,CACtDmD,GAAY,EACZ,MAGJ,GAAIA,EAAa,MAMnB,IAFA/gD,GADAjoB,EAAMb,EAAMuqE,SAAS9D,EAAW4C,EAAUrpE,EAAM+mE,WAAW,GAAOr/D,QACxDlG,OAELiF,EAAM,EAAGA,EAAMqiB,EAAKriB,IAAO,CAE9B,GAAW,MADXm+D,EAAK/jE,EAAIa,WAAW+E,IAElB,OAAO,EACF,GAAW,KAAPm+D,EAAqB,CAC9B+H,EAAWlmE,EACX,OACgB,KAAPm+D,GAEO,KAAPA,KACTn+D,EACUqiB,GAA+B,KAAxBjoB,EAAIa,WAAW+E,KAHhC2iE,IASJ,GAAIuD,EAAW,GAAsC,KAAjC9rE,EAAIa,WAAWirE,EAAW,GAAsB,OAAO,EAI3E,IAAKlmE,EAAMkmE,EAAW,EAAGlmE,EAAMqiB,EAAKriB,IAElC,GAAW,MADXm+D,EAAK/jE,EAAIa,WAAW+E,IAElB2iE,SACK,IAAIrD,EAAQnB,GAGjB,MAOJ,KADAxoD,EAAMpc,EAAMlB,GAAG8tE,QAAQC,qBAAqBhsE,EAAK4F,EAAKqiB,IAC7C2+C,GAAM,OAAO,EAGtB,GADArmE,EAAOpB,EAAMlB,GAAGguE,cAAc1wD,EAAIvb,MAC7Bb,EAAMlB,GAAGiuE,aAAa3rE,GAAS,OAAO,EAY3C,IANAqrE,EAJAhmE,EAAM2V,EAAI3V,IAKVimE,EAJAtD,GAAShtD,EAAIgtD,MAQb9mE,EAAQmE,EACDA,EAAMqiB,EAAKriB,IAEhB,GAAW,MADXm+D,EAAK/jE,EAAIa,WAAW+E,IAElB2iE,SACK,IAAIrD,EAAQnB,GAGjB,MAkBJ,IAZAxoD,EAAMpc,EAAMlB,GAAG8tE,QAAQI,eAAensE,EAAK4F,EAAKqiB,GAC5CriB,EAAMqiB,GAAOxmB,IAAUmE,GAAO2V,EAAIqrD,IACpCjiE,EAAQ4W,EAAIvb,IACZ4F,EAAM2V,EAAI3V,IACV2iE,GAAShtD,EAAIgtD,QAEb5jE,EAAQ,GACRiB,EAAMgmE,EACNrD,EAAQsD,GAIHjmE,EAAMqiB,IACX87C,EAAK/jE,EAAIa,WAAW+E,GACfs/D,EAAQnB,KACbn+D,IAGF,GAAIA,EAAMqiB,GAA+B,KAAxBjoB,EAAIa,WAAW+E,IAC1BjB,EAMF,IAHAA,EAAQ,GACRiB,EAAMgmE,EACNrD,EAAQsD,EACDjmE,EAAMqiB,IACX87C,EAAK/jE,EAAIa,WAAW+E,GACfs/D,EAAQnB,KACbn+D,IAKN,QAAIA,EAAMqiB,GAA+B,KAAxBjoB,EAAIa,WAAW+E,MAKhC8iD,EAAQ4c,EAAmBtlE,EAAIqG,MAAM,EAAGylE,OAQpCnmE,SAEgC,IAAzBxG,EAAMF,IAAImtE,aACnBjtE,EAAMF,IAAImtE,WAAa,SAEkB,IAAhCjtE,EAAMF,IAAImtE,WAAW1jB,KAC9BvpD,EAAMF,IAAImtE,WAAW1jB,GAAS,CAAE/jD,MAAOA,EAAOpE,KAAMA,IAGtDpB,EAAMqqE,WAAaZ,EAEnBzpE,EAAMm9B,KAAOspC,EAAY2C,EAAQ,GAXZ,kCCpLvB,IAAIn2B,EAAQ,EAAQ,MAChB8yB,EAAU,gBAGd,SAASmH,EAAWrtE,EAAKf,EAAIgB,EAAKM,GAChC,IAAIwkE,EAAIj6D,EAAGrI,EAAOmE,EAAKgE,EAAK+gE,EAAQ12C,EAAQq4C,EAuD5C,IArDAltE,KAAKJ,IAAMA,EAGXI,KAAKnB,GAASA,EAEdmB,KAAKH,IAAMA,EAMXG,KAAKG,OAASA,EAEdH,KAAKgqE,OAAS,GACdhqE,KAAKkqE,OAAS,GACdlqE,KAAKiqE,OAAS,GACdjqE,KAAK6mE,OAAS,GAYd7mE,KAAKmqE,QAAU,GAGfnqE,KAAK8mE,UAAa,EAElB9mE,KAAKk9B,KAAa,EAClBl9B,KAAKknE,QAAa,EAClBlnE,KAAK+mE,OAAa,EAClB/mE,KAAKmtE,UAAc,EACnBntE,KAAKosE,YAAc,EAInBpsE,KAAKoqE,WAAa,OAElBpqE,KAAKe,MAAQ,EAGbf,KAAKm/C,OAAS,GAKd+tB,GAAe,EAEV7qE,EAAQmE,EAAM+kE,EAAS12C,EAAS,EAAGrqB,GAHxCE,EAAI1K,KAAKJ,KAGuC2B,OAAQiF,EAAMgE,EAAKhE,IAAO,CAGxE,GAFAm+D,EAAKj6D,EAAEjJ,WAAW+E,IAEb0mE,EAAc,CACjB,GAAIpH,EAAQnB,GAAK,CACf4G,IAEW,IAAP5G,EACF9vC,GAAU,EAAIA,EAAS,EAEvBA,IAEF,SAEAq4C,GAAe,EAIR,KAAPvI,GAAen+D,IAAQgE,EAAM,IACpB,KAAPm6D,GAAen+D,IACnBxG,KAAKgqE,OAAOnpE,KAAKwB,GACjBrC,KAAKkqE,OAAOrpE,KAAK2F,GACjBxG,KAAKiqE,OAAOppE,KAAK0qE,GACjBvrE,KAAK6mE,OAAOhmE,KAAKg0B,GACjB70B,KAAKmqE,QAAQtpE,KAAK,GAElBqsE,GAAe,EACf3B,EAAS,EACT12C,EAAS,EACTxyB,EAAQmE,EAAM,GAKlBxG,KAAKgqE,OAAOnpE,KAAK6J,EAAEnJ,QACnBvB,KAAKkqE,OAAOrpE,KAAK6J,EAAEnJ,QACnBvB,KAAKiqE,OAAOppE,KAAK,GACjBb,KAAK6mE,OAAOhmE,KAAK,GACjBb,KAAKmqE,QAAQtpE,KAAK,GAElBb,KAAKknE,QAAUlnE,KAAKgqE,OAAOzoE,OAAS,EAKtC0rE,EAAWtJ,UAAU9iE,KAAO,SAAUO,EAAMQ,EAAKD,GAC/C,IAAIK,EAAQ,IAAIgxC,EAAM5xC,EAAMQ,EAAKD,GAQjC,OAPAK,EAAMjD,OAAQ,EAEV4C,EAAU,GAAG3B,KAAKe,QACtBiB,EAAMjB,MAAQf,KAAKe,MACfY,EAAU,GAAG3B,KAAKe,QAEtBf,KAAKG,OAAOU,KAAKmB,GACVA,GAGTirE,EAAWtJ,UAAUqD,QAAU,SAAiB9pC,GAC9C,OAAOl9B,KAAKgqE,OAAO9sC,GAAQl9B,KAAKiqE,OAAO/sC,IAASl9B,KAAKkqE,OAAOhtC,IAG9D+vC,EAAWtJ,UAAUiD,eAAiB,SAAwBv8D,GAC5D,IAAK,IAAIwe,EAAM7oB,KAAKknE,QAAS78D,EAAOwe,KAC9B7oB,KAAKgqE,OAAO3/D,GAAQrK,KAAKiqE,OAAO5/D,GAAQrK,KAAKkqE,OAAO7/D,IADjBA,KAKzC,OAAOA,GAIT4iE,EAAWtJ,UAAUiH,WAAa,SAAoBpkE,GAGpD,IAFA,IAAIm+D,EAEK97C,EAAM7oB,KAAKJ,IAAI2B,OAAQiF,EAAMqiB,IACpC87C,EAAK3kE,KAAKJ,IAAI6B,WAAW+E,GACpBs/D,EAAQnB,IAF4Bn+D,KAI3C,OAAOA,GAITymE,EAAWtJ,UAAUmH,eAAiB,SAAwBtkE,EAAK+F,GACjE,GAAI/F,GAAO+F,EAAO,OAAO/F,EAEzB,KAAOA,EAAM+F,GACX,IAAKu5D,EAAQ9lE,KAAKJ,IAAI6B,aAAa+E,IAAS,OAAOA,EAAM,EAE3D,OAAOA,GAITymE,EAAWtJ,UAAUgH,UAAY,SAAmBnkE,EAAKoB,GACvD,IAAK,IAAIihB,EAAM7oB,KAAKJ,IAAI2B,OAAQiF,EAAMqiB,GAChC7oB,KAAKJ,IAAI6B,WAAW+E,KAASoB,EADQpB,KAG3C,OAAOA,GAITymE,EAAWtJ,UAAUoH,cAAgB,SAAuBvkE,EAAKoB,EAAM2E,GACrE,GAAI/F,GAAO+F,EAAO,OAAO/F,EAEzB,KAAOA,EAAM+F,GACX,GAAI3E,IAAS5H,KAAKJ,IAAI6B,aAAa+E,GAAQ,OAAOA,EAAM,EAE1D,OAAOA,GAITymE,EAAWtJ,UAAU2G,SAAW,SAAkBtiE,EAAOtF,EAAK6oE,EAAQ6B,GACpE,IAAInqE,EAAGoqE,EAAY1I,EAAIjmC,EAAO/P,EAAM2+C,EAAOC,EACvCrwC,EAAOl1B,EAEX,GAAIA,GAAStF,EACX,MAAO,GAKT,IAFA4qE,EAAQ,IAAI3hE,MAAMjJ,EAAMsF,GAEnB/E,EAAI,EAAGi6B,EAAOx6B,EAAKw6B,IAAQj6B,IAAK,CAWnC,IAVAoqE,EAAa,EACbE,EAAY7uC,EAAQ1+B,KAAKgqE,OAAO9sC,GAI9BvO,EAFEuO,EAAO,EAAIx6B,GAAO0qE,EAEbptE,KAAKkqE,OAAOhtC,GAAQ,EAEpBl9B,KAAKkqE,OAAOhtC,GAGdwB,EAAQ/P,GAAQ0+C,EAAa9B,GAAQ,CAG1C,GAFA5G,EAAK3kE,KAAKJ,IAAI6B,WAAWi9B,GAErBonC,EAAQnB,GACC,IAAPA,EACF0I,GAAc,GAAKA,EAAartE,KAAKmqE,QAAQjtC,IAAS,EAEtDmwC,QAEG,MAAI3uC,EAAQ6uC,EAAYvtE,KAAKiqE,OAAO/sC,IAIzC,MAFAmwC,IAKF3uC,IAMA4uC,EAAMrqE,GAHJoqE,EAAa9B,EAGJ,IAAI5/D,MAAM0hE,EAAa9B,EAAS,GAAG9nE,KAAK,KAAOzD,KAAKJ,IAAIqH,MAAMy3B,EAAO/P,GAErE3uB,KAAKJ,IAAIqH,MAAMy3B,EAAO/P,GAIrC,OAAO2+C,EAAM7pE,KAAK,KAIpBwpE,EAAWtJ,UAAU3wB,MAAQA,EAG7BlnC,EAAOC,QAAUkhE,+BClOjB,IAAInH,EAAU,gBAGd,SAAS0H,EAAQztE,EAAOm9B,GACtB,IAAI12B,EAAMzG,EAAMiqE,OAAO9sC,GAAQn9B,EAAMkqE,OAAO/sC,GACxCrU,EAAM9oB,EAAMmqE,OAAOhtC,GAEvB,OAAOn9B,EAAMH,IAAIqH,MAAMT,EAAKqiB,GAG9B,SAAS4kD,EAAa7sE,GACpB,IAGI+jE,EAHAxlB,EAAS,GACT34C,EAAM,EACNqiB,EAAMjoB,EAAIW,OAEVmsE,GAAY,EACZC,EAAU,EACVr6B,EAAU,GAId,IAFAqxB,EAAM/jE,EAAIa,WAAW+E,GAEdA,EAAMqiB,GACA,MAAP87C,IACG+I,GAOHp6B,GAAW1yC,EAAI6B,UAAUkrE,EAASnnE,EAAM,GACxCmnE,EAAUnnE,IANV24C,EAAOt+C,KAAKyyC,EAAU1yC,EAAI6B,UAAUkrE,EAASnnE,IAC7C8sC,EAAU,GACVq6B,EAAUnnE,EAAM,IAQpBknE,EAAoB,KAAP/I,EACbn+D,IAEAm+D,EAAK/jE,EAAIa,WAAW+E,GAKtB,OAFA24C,EAAOt+C,KAAKyyC,EAAU1yC,EAAI6B,UAAUkrE,IAE7BxuB,EAITrzC,EAAOC,QAAU,SAAehM,EAAOymE,EAAWC,EAASlgE,GACzD,IAAIo+D,EAAIwG,EAAU3kE,EAAKvD,EAAGmG,EAAGggE,EAAUwE,EAASC,EAAa7rE,EACzD8rE,EAAQtqE,EAAGuqE,EAAYC,EAAYxE,EAAeI,EAClDC,EAAiBoE,EAASC,EAG9B,GAAI1H,EAAY,EAAIC,EAAW,OAAO,EAItC,GAFA2C,EAAW5C,EAAY,EAEnBzmE,EAAM8mE,OAAOuC,GAAYrpE,EAAM+mE,UAAa,OAAO,EAGvD,GAAI/mE,EAAM8mE,OAAOuC,GAAYrpE,EAAM+mE,WAAa,EAAK,OAAO,EAO5D,IADAtgE,EAAMzG,EAAMiqE,OAAOZ,GAAYrpE,EAAMkqE,OAAOb,KACjCrpE,EAAMmqE,OAAOd,GAAa,OAAO,EAG5C,GAAgB,OADhB6E,EAAUluE,EAAMH,IAAI6B,WAAW+E,OACY,KAAZynE,GAAuC,KAAZA,EAA2B,OAAO,EAE5F,GAAIznE,GAAOzG,EAAMmqE,OAAOd,GAAa,OAAO,EAG5C,GAAiB,OADjB8E,EAAWnuE,EAAMH,IAAI6B,WAAW+E,OACa,KAAb0nE,GAAyC,KAAbA,IAA6BpI,EAAQoI,GAC/F,OAAO,EAKT,GAAgB,KAAZD,GAA2BnI,EAAQoI,GAAa,OAAO,EAE3D,KAAO1nE,EAAMzG,EAAMmqE,OAAOd,IAAW,CAGnC,GAAW,OAFXzE,EAAK5kE,EAAMH,IAAI6B,WAAW+E,KAEO,KAAPm+D,GAA6B,KAAPA,IAAuBmB,EAAQnB,GAAO,OAAO,EAE7Fn+D,IAOF,IAFAonE,GAFAzC,EAAWqC,EAAQztE,EAAOymE,EAAY,IAEnBljE,MAAM,KACzBwqE,EAAS,GACJ7qE,EAAI,EAAGA,EAAI2qE,EAAQrsE,OAAQ0B,IAAK,CAEnC,KADAO,EAAIoqE,EAAQ3qE,GAAGwE,QACP,CAGN,GAAU,IAANxE,GAAWA,IAAM2qE,EAAQrsE,OAAS,EACpC,SAEA,OAAO,EAIX,IAAK,WAAW03C,KAAKz1C,GAAM,OAAO,EACC,KAA/BA,EAAE/B,WAAW+B,EAAEjC,OAAS,GAC1BusE,EAAOjtE,KAAyB,KAApB2C,EAAE/B,WAAW,GAAqB,SAAW,SAC5B,KAApB+B,EAAE/B,WAAW,GACtBqsE,EAAOjtE,KAAK,QAEZitE,EAAOjtE,KAAK,IAKhB,IAA+B,KAD/BsqE,EAAWqC,EAAQztE,EAAOymE,GAAW/+D,QACxBlF,QAAQ,KAAe,OAAO,EAC3C,GAAIxC,EAAM8mE,OAAOL,GAAazmE,EAAM+mE,WAAa,EAAK,OAAO,EAQ7D,IAPA8G,EAAUH,EAAatC,IACX5pE,QAAyB,KAAfqsE,EAAQ,IAAWA,EAAQO,QAC7CP,EAAQrsE,QAA0C,KAAhCqsE,EAAQA,EAAQrsE,OAAS,IAAWqsE,EAAQQ,MAK9C,KADpBP,EAAcD,EAAQrsE,SACGssE,IAAgBC,EAAOvsE,OAAU,OAAO,EAEjE,GAAIgF,EAAU,OAAO,EAkBrB,IAhBAijE,EAAgBzpE,EAAMqqE,WACtBrqE,EAAMqqE,WAAa,QAInBP,EAAkB9pE,EAAMlB,GAAGE,MAAMsB,MAAMqmE,SAAS,eAEhD1kE,EAAYjC,EAAMc,KAAK,aAAc,QAAS,IACxC0C,IAAMwqE,EAAa,CAAEvH,EAAW,IAEtCxkE,EAAYjC,EAAMc,KAAK,aAAc,QAAS,IACxC0C,IAAM,CAAEijE,EAAWA,EAAY,IAErCxkE,EAAYjC,EAAMc,KAAK,UAAW,KAAM,IAClC0C,IAAM,CAAEijE,EAAWA,EAAY,GAEhCvjE,EAAI,EAAGA,EAAI2qE,EAAQrsE,OAAQ0B,IAC9BjB,EAAiBjC,EAAMc,KAAK,UAAW,KAAM,GACzCitE,EAAO7qE,KACTjB,EAAM2E,MAAS,CAAE,CAAE,QAAS,cAAgBmnE,EAAO7qE,OAGrDjB,EAAiBjC,EAAMc,KAAK,SAAU,GAAI,IACpCG,QAAW4sE,EAAQ3qE,GAAGwE,OAC5BzF,EAAMV,SAAW,GAEjBU,EAAiBjC,EAAMc,KAAK,WAAY,MAAO,GAMjD,IAHAmB,EAAYjC,EAAMc,KAAK,WAAY,MAAO,GAC1CmB,EAAYjC,EAAMc,KAAK,cAAe,SAAU,GAE3CuoE,EAAW5C,EAAY,EAAG4C,EAAW3C,KACpC1mE,EAAM8mE,OAAOuC,GAAYrpE,EAAM+mE,WADcsC,IAAY,CAI7D,IADAQ,GAAY,EACP3mE,EAAI,EAAGmG,EAAIygE,EAAgBtoE,OAAQ0B,EAAImG,EAAGnG,IAC7C,GAAI4mE,EAAgB5mE,GAAGlD,EAAOqpE,EAAU3C,GAAS,GAAO,CACtDmD,GAAY,EACZ,MAIJ,GAAIA,EAAa,MAEjB,KADAuB,EAAWqC,EAAQztE,EAAOqpE,GAAU3hE,QACnB,MACjB,GAAI1H,EAAM8mE,OAAOuC,GAAYrpE,EAAM+mE,WAAa,EAAK,MAarD,KAZA8G,EAAUH,EAAatC,IACX5pE,QAAyB,KAAfqsE,EAAQ,IAAWA,EAAQO,QAC7CP,EAAQrsE,QAA0C,KAAhCqsE,EAAQA,EAAQrsE,OAAS,IAAWqsE,EAAQQ,MAE9DhF,IAAa5C,EAAY,KAC3BxkE,EAAYjC,EAAMc,KAAK,aAAc,QAAS,IACxC0C,IAAMyqE,EAAa,CAAExH,EAAY,EAAG,KAG5CxkE,EAAYjC,EAAMc,KAAK,UAAW,KAAM,IAClC0C,IAAM,CAAE6lE,EAAUA,EAAW,GAE9BnmE,EAAI,EAAGA,EAAI4qE,EAAa5qE,IAC3BjB,EAAiBjC,EAAMc,KAAK,UAAW,KAAM,GACzCitE,EAAO7qE,KACTjB,EAAM2E,MAAS,CAAE,CAAE,QAAS,cAAgBmnE,EAAO7qE,OAGrDjB,EAAiBjC,EAAMc,KAAK,SAAU,GAAI,IACpCG,QAAW4sE,EAAQ3qE,GAAK2qE,EAAQ3qE,GAAGwE,OAAS,GAClDzF,EAAMV,SAAW,GAEjBU,EAAiBjC,EAAMc,KAAK,WAAY,MAAO,GAEjDmB,EAAQjC,EAAMc,KAAK,WAAY,MAAO,GAaxC,OAVImtE,IACFhsE,EAAQjC,EAAMc,KAAK,cAAe,SAAU,GAC5CmtE,EAAW,GAAK5E,GAGlBpnE,EAAQjC,EAAMc,KAAK,cAAe,SAAU,GAC5CktE,EAAW,GAAK3E,EAEhBrpE,EAAMqqE,WAAaZ,EACnBzpE,EAAMm9B,KAAOksC,GACN,0BCxNTt9D,EAAOC,QAAU,SAAehM,GAC9B,IAAIiC,EAEAjC,EAAMsuE,aACRrsE,EAAiB,IAAIjC,EAAMizC,MAAM,SAAU,GAAI,IACzChyC,QAAWjB,EAAMH,IACvBoC,EAAMuB,IAAW,CAAE,EAAG,GACtBvB,EAAMV,SAAW,GACjBvB,EAAMI,OAAOU,KAAKmB,IAElBjC,EAAMlB,GAAGE,MAAMY,MAAMI,EAAMH,IAAKG,EAAMlB,GAAIkB,EAAMF,IAAKE,EAAMI,gCCX/D2L,EAAOC,QAAU,SAAgBhM,GAC/B,IAA2BiH,EAAK/D,EAAGmG,EAA/BjJ,EAASJ,EAAMI,OAGnB,IAAK8C,EAAI,EAAGmG,EAAIjJ,EAAOoB,OAAQ0B,EAAImG,EAAGnG,IAEnB,YADjB+D,EAAM7G,EAAO8C,IACL7B,MACNrB,EAAMlB,GAAGC,OAAOa,MAAMqH,EAAIhG,QAASjB,EAAMlB,GAAIkB,EAAMF,IAAKmH,EAAI1F,uCCFlE,IAAIqkE,EAAiB,uBAMrB,SAAS2I,EAAY1tE,GACnB,MAAO,aAAaq4C,KAAKr4C,GAI3BkL,EAAOC,QAAU,SAAiBhM,GAChC,IAAIkD,EAAGonB,EAAGjhB,EAAGjJ,EAAQ6B,EAAOusE,EAAcC,EAAOC,EAAIC,EAAMloE,EAAKmnE,EAC5D5sE,EAAO4tE,EAAeC,EAAKC,EAASC,EAEpCptE,EAZcd,EAWdmuE,EAAchvE,EAAMI,OAGxB,GAAKJ,EAAMlB,GAAGI,QAAQK,QAEtB,IAAK+qB,EAAI,EAAGjhB,EAAI2lE,EAAYxtE,OAAQ8oB,EAAIjhB,EAAGihB,IACzC,GAA4B,WAAxB0kD,EAAY1kD,GAAGjpB,MACdrB,EAAMlB,GAAGS,QAAQ0vE,QAAQD,EAAY1kD,GAAGrpB,SAU7C,IAJA2tE,EAAgB,EAIX1rE,GANL9C,EAAS4uE,EAAY1kD,GAAG/oB,UAMRC,OAAS,EAAG0B,GAAK,EAAGA,IAIlC,GAA0B,gBAH1BsrE,EAAepuE,EAAO8C,IAGL7B,MAiBjB,GAR0B,gBAAtBmtE,EAAantE,OAzCHR,EA0CG2tE,EAAavtE,QAzC3B,YAAYi4C,KAAKr4C,IAyCsB+tE,EAAgB,GACtDA,IAEEL,EAAYC,EAAavtE,UAC3B2tE,OAGAA,EAAgB,IAEM,SAAtBJ,EAAantE,MAAmBrB,EAAMlB,GAAGS,QAAQ25C,KAAKs1B,EAAavtE,SAAU,CAoB/E,IAlBA0tE,EAAOH,EAAavtE,QACpBU,EAAQ3B,EAAMlB,GAAGS,QAAQkmD,MAAMkpB,GAG/BF,EAAQ,GACRztE,EAAQwtE,EAAaxtE,MACrB4sE,EAAU,EAKNjsE,EAAMH,OAAS,GACI,IAAnBG,EAAM,GAAG2mE,OACTplE,EAAI,GACmB,iBAAvB9C,EAAO8C,EAAI,GAAG7B,OAChBM,EAAQA,EAAMuF,MAAM,IAGjBwnE,EAAK,EAAGA,EAAK/sE,EAAMH,OAAQktE,IAC9BG,EAAMltE,EAAM+sE,GAAIG,IAChBC,EAAU9uE,EAAMlB,GAAGguE,cAAc+B,GAC5B7uE,EAAMlB,GAAGiuE,aAAa+B,KAE3BC,EAAUptE,EAAM+sE,GAAIC,KAWlBI,EALGptE,EAAM+sE,GAAIQ,OAEiB,YAArBvtE,EAAM+sE,GAAIQ,QAAyB,YAAYh2B,KAAK61B,GAGnD/uE,EAAMlB,GAAGqwE,kBAAkBJ,GAF3B/uE,EAAMlB,GAAGqwE,kBAAkB,UAAYJ,GAAStuE,QAAQ,WAAY,IAFpET,EAAMlB,GAAGqwE,kBAAkB,UAAYJ,GAAStuE,QAAQ,aAAc,KAOlFgG,EAAM9E,EAAM+sE,GAAIpG,OAENsF,KACR3rE,EAAgB,IAAIjC,EAAMizC,MAAM,OAAQ,GAAI,IACtChyC,QAAU0tE,EAAKznE,MAAM0mE,EAASnnE,GACpCxE,EAAMjB,MAAUA,EAChBytE,EAAM3tE,KAAKmB,KAGbA,EAAgB,IAAIjC,EAAMizC,MAAM,YAAa,IAAK,IAC5CrsC,MAAU,CAAE,CAAE,OAAQkoE,IAC5B7sE,EAAMjB,MAAUA,IAChBiB,EAAMqoE,OAAU,UAChBroE,EAAM2yB,KAAU,OAChB65C,EAAM3tE,KAAKmB,IAEXA,EAAgB,IAAIjC,EAAMizC,MAAM,OAAQ,GAAI,IACtChyC,QAAU8tE,EAChB9sE,EAAMjB,MAAUA,EAChBytE,EAAM3tE,KAAKmB,IAEXA,EAAgB,IAAIjC,EAAMizC,MAAM,aAAc,KAAM,IAC9CjyC,QAAYA,EAClBiB,EAAMqoE,OAAU,UAChBroE,EAAM2yB,KAAU,OAChB65C,EAAM3tE,KAAKmB,GAEX2rE,EAAUjsE,EAAM+sE,GAAIU,WAElBxB,EAAUe,EAAKntE,UACjBS,EAAgB,IAAIjC,EAAMizC,MAAM,OAAQ,GAAI,IACtChyC,QAAU0tE,EAAKznE,MAAM0mE,GAC3B3rE,EAAMjB,MAAUA,EAChBytE,EAAM3tE,KAAKmB,IAIb+sE,EAAY1kD,GAAG/oB,SAAWnB,EAASwlE,EAAexlE,EAAQ8C,EAAGurE,SA7F7D,IADAvrE,IACO9C,EAAO8C,GAAGlC,QAAUwtE,EAAaxtE,OAA4B,cAAnBZ,EAAO8C,GAAG7B,MACzD6B,4BCvCV,IAAImsE,EAAe,YACfC,EAAe,MAGnBvjE,EAAOC,QAAU,SAAmBhM,GAClC,IAAIa,EAMJA,GAHAA,EAAMb,EAAMH,IAAIY,QAAQ4uE,EAAa,OAG3B5uE,QAAQ6uE,EAAS,KAE3BtvE,EAAMH,IAAMgB,0BCFd,IAAI0uE,EAAU,+BAIVC,EAAsB,gBAEtBC,EAAiB,iBACjBC,EAAc,CAChBrkE,EAAG,IACHX,EAAG,IACHu6B,GAAI,KAGN,SAAS0qC,EAAUlqB,EAAOp0C,GACxB,OAAOq+D,EAAYr+D,EAAKhO,eAG1B,SAASusE,EAAeC,GACtB,IAAI3sE,EAAGjB,EAAO6tE,EAAkB,EAEhC,IAAK5sE,EAAI2sE,EAAaruE,OAAS,EAAG0B,GAAK,EAAGA,IAGrB,UAFnBjB,EAAQ4tE,EAAa3sE,IAEX7B,MAAoByuE,IAC5B7tE,EAAMhB,QAAUgB,EAAMhB,QAAQR,QAAQgvE,EAAgBE,IAGrC,cAAf1tE,EAAMZ,MAAuC,SAAfY,EAAM2yB,MACtCk7C,IAGiB,eAAf7tE,EAAMZ,MAAwC,SAAfY,EAAM2yB,MACvCk7C,IAKN,SAASC,EAAaF,GACpB,IAAI3sE,EAAGjB,EAAO6tE,EAAkB,EAEhC,IAAK5sE,EAAI2sE,EAAaruE,OAAS,EAAG0B,GAAK,EAAGA,IAGrB,UAFnBjB,EAAQ4tE,EAAa3sE,IAEX7B,MAAoByuE,GACxBP,EAAQr2B,KAAKj3C,EAAMhB,WACrBgB,EAAMhB,QAAUgB,EAAMhB,QACnBR,QAAQ,OAAQ,KAGhBA,QAAQ,UAAW,KAAKA,QAAQ,WAAY,QAC5CA,QAAQ,cAAe,UAAUA,QAAQ,SAAU,KAEnDA,QAAQ,0BAA2B,OAEnCA,QAAQ,qBAAsB,OAC9BA,QAAQ,6BAA8B,QAI1B,cAAfwB,EAAMZ,MAAuC,SAAfY,EAAM2yB,MACtCk7C,IAGiB,eAAf7tE,EAAMZ,MAAwC,SAAfY,EAAM2yB,MACvCk7C,IAMN/jE,EAAOC,QAAU,SAAiBhM,GAChC,IAAIgwE,EAEJ,GAAKhwE,EAAMlB,GAAGI,QAAQM,YAEtB,IAAKwwE,EAAShwE,EAAMI,OAAOoB,OAAS,EAAGwuE,GAAU,EAAGA,IAEhB,WAA9BhwE,EAAMI,OAAO4vE,GAAQ3uE,OAErBmuE,EAAoBt2B,KAAKl5C,EAAMI,OAAO4vE,GAAQ/uE,UAChD2uE,EAAe5vE,EAAMI,OAAO4vE,GAAQzuE,UAGlCguE,EAAQr2B,KAAKl5C,EAAMI,OAAO4vE,GAAQ/uE,UACpC8uE,EAAa/vE,EAAMI,OAAO4vE,GAAQzuE,yCChGxC,IAAIE,EAAiB,qBACjBwkE,EAAiB,oBACjBD,EAAiB,uBAEjBiK,EAAgB,OAChBC,EAAW,QAIf,SAASC,EAAUtvE,EAAKynE,EAAO1D,GAC7B,OAAO/jE,EAAIqG,MAAM,EAAGohE,GAAS1D,EAAK/jE,EAAIqG,MAAMohE,EAAQ,GAGtD,SAAS8H,EAAgBhwE,EAAQJ,GAC/B,IAAIkD,EAAGjB,EAAO0sE,EAAMlrE,EAAGgD,EAAKqiB,EAAKunD,EAAWC,EAAMC,EAAUC,EACxDC,EAAiBC,EAAiBC,EAAkBC,EACpDC,EAASC,EAAUxmD,EAAGymD,EAAUz7D,EAAO07D,EAAWC,EAItD,IAFA37D,EAAQ,GAEHpS,EAAI,EAAGA,EAAI9C,EAAOoB,OAAQ0B,IAAK,CAKlC,IAJAjB,EAAQ7B,EAAO8C,GAEfmtE,EAAYjwE,EAAO8C,GAAGlC,MAEjBspB,EAAIhV,EAAM9T,OAAS,EAAG8oB,GAAK,KAC1BhV,EAAMgV,GAAGtpB,OAASqvE,GADW/lD,KAKnC,GAFAhV,EAAM9T,OAAS8oB,EAAI,EAEA,SAAfroB,EAAMZ,KAAV,CAGAoF,EAAM,EACNqiB,GAFA6lD,EAAO1sE,EAAMhB,SAEFO,OAGX0vE,EACA,KAAOzqE,EAAMqiB,IACXonD,EAASd,UAAY3oE,EACrBhD,EAAIysE,EAAS9gD,KAAKu/C,KAFF,CAchB,GATAkC,EAAUC,GAAW,EACrBrqE,EAAMhD,EAAE6kE,MAAQ,EAChByI,EAAqB,MAATttE,EAAE,GAKd8sE,EAAW,GAEP9sE,EAAE6kE,MAAQ,GAAK,EACjBiI,EAAW5B,EAAKjtE,WAAW+B,EAAE6kE,MAAQ,QAErC,IAAKh+C,EAAIpnB,EAAI,EAAGonB,GAAK,GACI,cAAnBlqB,EAAOkqB,GAAGjpB,MAA2C,cAAnBjB,EAAOkqB,GAAGjpB,KAD1BipB,IAEtB,GAAKlqB,EAAOkqB,GAAGrpB,QAAf,CAEAsvE,EAAWnwE,EAAOkqB,GAAGrpB,QAAQS,WAAWtB,EAAOkqB,GAAGrpB,QAAQO,OAAS,GACnE,MASJ,GAFAgvE,EAAW,GAEP/pE,EAAMqiB,EACR0nD,EAAW7B,EAAKjtE,WAAW+E,QAE3B,IAAK6jB,EAAIpnB,EAAI,EAAGonB,EAAIlqB,EAAOoB,QACF,cAAnBpB,EAAOkqB,GAAGjpB,MAA2C,cAAnBjB,EAAOkqB,GAAGjpB,KADfipB,IAEjC,GAAKlqB,EAAOkqB,GAAGrpB,QAAf,CAEAuvE,EAAWpwE,EAAOkqB,GAAGrpB,QAAQS,WAAW,GACxC,MA6CJ,GAzCA+uE,EAAkBzK,EAAeuK,IAAatK,EAAYv5D,OAAOC,aAAa4jE,IAC9EG,EAAkB1K,EAAewK,IAAavK,EAAYv5D,OAAOC,aAAa6jE,IAE9EG,EAAmBlvE,EAAa8uE,IAChCK,EAAmBnvE,EAAa+uE,IAG9BK,GAAU,EACDH,IACHC,GAAoBF,IACxBI,GAAU,IAIVF,EACFG,GAAW,EACFL,IACHG,GAAoBF,IACxBI,GAAW,IAIE,KAAbN,GAAsC,MAAT/sE,EAAE,IAC7B8sE,GAAY,IAAgBA,GAAY,KAE1CO,EAAWD,GAAU,GAIrBA,GAAWC,IAQbD,EAAUJ,EACVK,EAAWJ,GAGRG,GAAYC,EAAjB,CAQA,GAAIA,EAEF,IAAKxmD,EAAIhV,EAAM9T,OAAS,EAAG8oB,GAAK,IAC9BgmD,EAAOh7D,EAAMgV,KACThV,EAAMgV,GAAGtpB,MAAQqvE,IAFY/lD,IAGjC,GAAIgmD,EAAKa,SAAWJ,GAAYz7D,EAAMgV,GAAGtpB,QAAUqvE,EAAW,CAC5DC,EAAOh7D,EAAMgV,GAETymD,GACFC,EAAYhxE,EAAMlB,GAAGI,QAAQO,OAAO,GACpCwxE,EAAajxE,EAAMlB,GAAGI,QAAQO,OAAO,KAErCuxE,EAAYhxE,EAAMlB,GAAGI,QAAQO,OAAO,GACpCwxE,EAAajxE,EAAMlB,GAAGI,QAAQO,OAAO,IAMvCwC,EAAMhB,QAAUkvE,EAAUluE,EAAMhB,QAASwC,EAAE6kE,MAAO2I,GAClD7wE,EAAOkwE,EAAKruE,OAAOhB,QAAUkvE,EAC3B/vE,EAAOkwE,EAAKruE,OAAOhB,QAASqvE,EAAK7pE,IAAKuqE,GAExCvqE,GAAOwqE,EAAWzvE,OAAS,EACvB8uE,EAAKruE,QAAUiB,IAAKuD,GAAOuqE,EAAUxvE,OAAS,GAGlDsnB,GADA6lD,EAAO1sE,EAAMhB,SACFO,OAEX8T,EAAM9T,OAAS8oB,EACf,SAAS4mD,EAKXL,EACFv7D,EAAMxU,KAAK,CACTmB,MAAOiB,EACPuD,IAAKhD,EAAE6kE,MACP6I,OAAQJ,EACR/vE,MAAOqvE,IAEAS,GAAYC,IACrB9uE,EAAMhB,QAAUkvE,EAAUluE,EAAMhB,QAASwC,EAAE6kE,MAvKlC,WAsHLyI,IACF9uE,EAAMhB,QAAUkvE,EAAUluE,EAAMhB,QAASwC,EAAE6kE,MAvHpC,SA8KjBv8D,EAAOC,QAAU,SAAqBhM,GAEpC,IAAIgwE,EAEJ,GAAKhwE,EAAMlB,GAAGI,QAAQM,YAEtB,IAAKwwE,EAAShwE,EAAMI,OAAOoB,OAAS,EAAGwuE,GAAU,EAAGA,IAEhB,WAA9BhwE,EAAMI,OAAO4vE,GAAQ3uE,MACpB4uE,EAAc/2B,KAAKl5C,EAAMI,OAAO4vE,GAAQ/uE,UAI7CmvE,EAAgBpwE,EAAMI,OAAO4vE,GAAQzuE,SAAUvB,iCClMnD,IAAIizC,EAAQ,EAAQ,MAGpB,SAASm+B,EAAUvxE,EAAKf,EAAIgB,GAC1BG,KAAKJ,IAAMA,EACXI,KAAKH,IAAMA,EACXG,KAAKG,OAAS,GACdH,KAAKquE,YAAa,EAClBruE,KAAKnB,GAAKA,EAIZsyE,EAAUxN,UAAU3wB,MAAQA,EAG5BlnC,EAAOC,QAAUolE,yBCTjBrlE,EAAOC,QAAU,SAAmBhM,GAClC,IAAIsqB,EAAGjhB,EAAGjJ,EAAQixE,EAAMvoD,EAAK8F,EACzBogD,EAAchvE,EAAMI,OAExB,IAAKkqB,EAAI,EAAGjhB,EAAI2lE,EAAYxtE,OAAQ8oB,EAAIjhB,EAAGihB,IACzC,GAA4B,WAAxB0kD,EAAY1kD,GAAGjpB,KAAnB,CAKA,IAFAynB,GADA1oB,EAAS4uE,EAAY1kD,GAAG/oB,UACXC,OAER6vE,EAAO,EAAGA,EAAOvoD,EAAKuoD,IACC,iBAAtBjxE,EAAOixE,GAAMhwE,OACfjB,EAAOixE,GAAMhwE,KAAO,QAIxB,IAAKgwE,EAAOziD,EAAO,EAAGyiD,EAAOvoD,EAAKuoD,IACN,SAAtBjxE,EAAOixE,GAAMhwE,MACbgwE,EAAO,EAAIvoD,GACe,SAA1B1oB,EAAOixE,EAAO,GAAGhwE,KAGnBjB,EAAOixE,EAAO,GAAGpwE,QAAUb,EAAOixE,GAAMpwE,QAAUb,EAAOixE,EAAO,GAAGpwE,SAE/DowE,IAASziD,IAAQxuB,EAAOwuB,GAAQxuB,EAAOixE,IAE3CziD,KAIAyiD,IAASziD,IACXxuB,EAAOoB,OAASotB,4BCnCtB,IAAI0iD,EAAc,0IACdC,EAAc,sDAGlBxlE,EAAOC,QAAU,SAAkBhM,EAAOwG,GACxC,IAAIqoE,EAAKC,EAAS7sE,EAAO2iE,EAAItiE,EAAOwmB,EAChCriB,EAAMzG,EAAMyG,IAEhB,GAAkC,KAA9BzG,EAAMH,IAAI6B,WAAW+E,GAAwB,OAAO,EAKxD,IAHAnE,EAAQtC,EAAMyG,IACdqiB,EAAM9oB,EAAMsH,SAEH,CACP,KAAMb,GAAOqiB,EAAK,OAAO,EAIzB,GAAW,MAFX87C,EAAK5kE,EAAMH,IAAI6B,WAAW+E,IAED,OAAO,EAChC,GAAW,KAAPm+D,EAAqB,MAK3B,OAFAiK,EAAM7uE,EAAMH,IAAIqH,MAAM5E,EAAQ,EAAGmE,GAE7B8qE,EAAYr4B,KAAK21B,IACnBC,EAAU9uE,EAAMlB,GAAGguE,cAAc+B,KAC5B7uE,EAAMlB,GAAGiuE,aAAa+B,KAEtBtoE,KACHvE,EAAgBjC,EAAMc,KAAK,YAAa,IAAK,IACvC8F,MAAU,CAAE,CAAE,OAAQkoE,IAC5B7sE,EAAMqoE,OAAU,WAChBroE,EAAM2yB,KAAU,QAEhB3yB,EAAgBjC,EAAMc,KAAK,OAAQ,GAAI,IACjCG,QAAUjB,EAAMlB,GAAGqwE,kBAAkBN,IAE3C5sE,EAAgBjC,EAAMc,KAAK,aAAc,KAAM,IACzCwpE,OAAU,WAChBroE,EAAM2yB,KAAU,QAGlB50B,EAAMyG,KAAOooE,EAAIrtE,OAAS,GACnB,MAGL8vE,EAASp4B,KAAK21B,KAChBC,EAAU9uE,EAAMlB,GAAGguE,cAAc,UAAY+B,KACxC7uE,EAAMlB,GAAGiuE,aAAa+B,KAEtBtoE,KACHvE,EAAgBjC,EAAMc,KAAK,YAAa,IAAK,IACvC8F,MAAU,CAAE,CAAE,OAAQkoE,IAC5B7sE,EAAMqoE,OAAU,WAChBroE,EAAM2yB,KAAU,QAEhB3yB,EAAgBjC,EAAMc,KAAK,OAAQ,GAAI,IACjCG,QAAUjB,EAAMlB,GAAGqwE,kBAAkBN,IAE3C5sE,EAAgBjC,EAAMc,KAAK,aAAc,KAAM,IACzCwpE,OAAU,WAChBroE,EAAM2yB,KAAU,QAGlB50B,EAAMyG,KAAOooE,EAAIrtE,OAAS,GACnB,4BClEXuK,EAAOC,QAAU,SAAkBhM,EAAOwG,GACxC,IAAIlE,EAAOwmB,EAAK0hD,EAAQvoE,EAAOuvE,EAAYC,EAAUC,EAAcC,EAC/DlrE,EAAMzG,EAAMyG,IAGhB,GAAW,KAFFzG,EAAMH,IAAI6B,WAAW+E,GAEJ,OAAO,EAOjC,IALAnE,EAAQmE,EACRA,IACAqiB,EAAM9oB,EAAMsH,OAGLb,EAAMqiB,GAAqC,KAA9B9oB,EAAMH,IAAI6B,WAAW+E,IAAwBA,IAKjE,GAFAirE,GADAlH,EAASxqE,EAAMH,IAAIqH,MAAM5E,EAAOmE,IACVjF,OAElBxB,EAAM4xE,mBAAqB5xE,EAAM6xE,UAAUH,IAAiB,IAAMpvE,EAGpE,OAFKkE,IAAQxG,EAAM0nE,SAAW8C,GAC9BxqE,EAAMyG,KAAOirE,GACN,EAMT,IAHAF,EAAaC,EAAWhrE,GAGoC,KAApD+qE,EAAaxxE,EAAMH,IAAI2C,QAAQ,IAAKivE,KAAmB,CAI7D,IAHAA,EAAWD,EAAa,EAGjBC,EAAW3oD,GAA0C,KAAnC9oB,EAAMH,IAAI6B,WAAW+vE,IAA6BA,IAI3E,IAFAE,EAAeF,EAAWD,KAELE,EAUnB,OARKlrE,KACHvE,EAAYjC,EAAMc,KAAK,cAAe,OAAQ,IACxCwpE,OAAUE,EAChBvoE,EAAMhB,QAAUjB,EAAMH,IAAIqH,MAAMT,EAAK+qE,GAClC/wE,QAAQ,MAAO,KACfA,QAAQ,WAAY,OAEzBT,EAAMyG,IAAMgrE,GACL,EAITzxE,EAAM6xE,UAAUF,GAAgBH,EAQlC,OAJAxxE,EAAM4xE,kBAAmB,EAEpBprE,IAAQxG,EAAM0nE,SAAW8C,GAC9BxqE,EAAMyG,KAAOirE,GACN,0BCxDT,SAASI,EAAkB9xE,EAAO+xE,GAChC,IAAIC,EAAWC,EAAWC,EAAQC,EAAQC,EAAcC,EACpDC,EAAYC,EACZC,EAAgB,GAChB1pD,EAAMipD,EAAWvwE,OAErB,GAAKsnB,EAAL,CAGA,IAAI2pD,EAAY,EACZC,GAAgB,EAChBC,EAAQ,GAEZ,IAAKX,EAAY,EAAGA,EAAYlpD,EAAKkpD,IAqBnC,GApBAE,EAASH,EAAWC,GAEpBW,EAAM7xE,KAAK,GAMPixE,EAAWU,GAAWjI,SAAW0H,EAAO1H,QAAUkI,IAAiBR,EAAOjwE,MAAQ,IACpFwwE,EAAYT,GAGdU,EAAeR,EAAOjwE,MAMtBiwE,EAAO1wE,OAAS0wE,EAAO1wE,QAAU,EAE5B0wE,EAAOU,MAAZ,CAgBA,IAVKJ,EAAc3O,eAAeqO,EAAO1H,UACvCgI,EAAcN,EAAO1H,QAAU,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAGxD4H,EAAeI,EAAcN,EAAO1H,SAAS0H,EAAOtmD,KAAO,EAAI,GAAMsmD,EAAO1wE,OAAS,GAIrF6wE,EAFAJ,EAAYQ,EAAYE,EAAMF,GAAa,EAIpCR,EAAYG,EAAcH,GAAaU,EAAMV,GAAa,EAG/D,IAFAE,EAASJ,EAAWE,IAETzH,SAAW0H,EAAO1H,QAEzB2H,EAAOvmD,MAAQumD,EAAOxvE,IAAM,IAE9B2vE,GAAa,GASTH,EAAOS,OAASV,EAAOtmD,QACpBumD,EAAO3wE,OAAS0wE,EAAO1wE,QAAU,GAAM,IACtC2wE,EAAO3wE,OAAS,GAAM,GAAK0wE,EAAO1wE,OAAS,GAAM,IACnD8wE,GAAa,KAKdA,GAAY,CAKfC,EAAWN,EAAY,IAAMF,EAAWE,EAAY,GAAGrmD,KACrD+mD,EAAMV,EAAY,GAAK,EACvB,EAEFU,EAAMX,GAAaA,EAAYC,EAAYM,EAC3CI,EAAMV,GAAaM,EAEnBL,EAAOtmD,MAAQ,EACfumD,EAAOxvE,IAAQqvE,EACfG,EAAOS,OAAQ,EACfP,GAAmB,EAGnBK,GAAgB,EAChB,OAKmB,IAArBL,IAQFG,EAAcN,EAAO1H,SAAS0H,EAAOtmD,KAAO,EAAI,IAAOsmD,EAAO1wE,QAAU,GAAK,GAAM6wE,KAMzFtmE,EAAOC,QAAU,SAAoBhM,GACnC,IAAIqxE,EACAwB,EAAc7yE,EAAM6yE,YACpB/pD,EAAM9oB,EAAM6yE,YAAYrxE,OAI5B,IAFAswE,EAAkB9xE,EAAOA,EAAM+xE,YAE1BV,EAAO,EAAGA,EAAOvoD,EAAKuoD,IACrBwB,EAAYxB,IAASwB,EAAYxB,GAAMU,YACzCD,EAAkB9xE,EAAO6yE,EAAYxB,GAAMU,oCCxEjD,SAASe,EAAY9yE,EAAO+xE,GAC1B,IAAI7uE,EACA6vE,EACAC,EACA/wE,EACA2iE,EACAqO,EAGJ,IAAK/vE,EAFK6uE,EAAWvwE,OAEN,EAAG0B,GAAK,EAAGA,IAGE,MAF1B6vE,EAAahB,EAAW7uE,IAETsnE,QAAgD,KAAtBuI,EAAWvI,SAK5B,IAApBuI,EAAWpwE,MAIfqwE,EAAWjB,EAAWgB,EAAWpwE,KAOjCswE,EAAW/vE,EAAI,GACJ6uE,EAAW7uE,EAAI,GAAGP,MAAQowE,EAAWpwE,IAAM,GAE3CovE,EAAW7uE,EAAI,GAAGsnE,SAAWuI,EAAWvI,QACxCuH,EAAW7uE,EAAI,GAAGjB,QAAU8wE,EAAW9wE,MAAQ,GAE/C8vE,EAAWgB,EAAWpwE,IAAM,GAAGV,QAAU+wE,EAAS/wE,MAAQ,EAErE2iE,EAAKl4D,OAAOC,aAAaomE,EAAWvI,SAEpCvoE,EAAgBjC,EAAMI,OAAO2yE,EAAW9wE,QAClCZ,KAAU4xE,EAAW,cAAgB,UAC3ChxE,EAAMJ,IAAUoxE,EAAW,SAAW,KACtChxE,EAAML,QAAU,EAChBK,EAAMqoE,OAAU2I,EAAWrO,EAAKA,EAAKA,EACrC3iE,EAAMhB,QAAU,IAEhBgB,EAAgBjC,EAAMI,OAAO4yE,EAAS/wE,QAChCZ,KAAU4xE,EAAW,eAAiB,WAC5ChxE,EAAMJ,IAAUoxE,EAAW,SAAW,KACtChxE,EAAML,SAAW,EACjBK,EAAMqoE,OAAU2I,EAAWrO,EAAKA,EAAKA,EACrC3iE,EAAMhB,QAAU,GAEZgyE,IACFjzE,EAAMI,OAAO2xE,EAAW7uE,EAAI,GAAGjB,OAAOhB,QAAU,GAChDjB,EAAMI,OAAO2xE,EAAWgB,EAAWpwE,IAAM,GAAGV,OAAOhB,QAAU,GAC7DiC,MAtGN6I,EAAOC,QAAQ,EAAW,SAAkBhM,EAAOwG,GACjD,IAAItD,EAAGgwE,EACH5wE,EAAQtC,EAAMyG,IACd+jE,EAASxqE,EAAMH,IAAI6B,WAAWY,GAElC,GAAIkE,EAAU,OAAO,EAErB,GAAe,KAAXgkE,GAAsC,KAAXA,EAA2B,OAAO,EAIjE,IAFA0I,EAAUlzE,EAAMmzE,WAAWnzE,EAAMyG,IAAgB,KAAX+jE,GAEjCtnE,EAAI,EAAGA,EAAIgwE,EAAQ1xE,OAAQ0B,IACdlD,EAAMc,KAAK,OAAQ,GAAI,GACjCG,QAAUyL,OAAOC,aAAa69D,GAEpCxqE,EAAM+xE,WAAWjxE,KAAK,CAGpB0pE,OAAQA,EAIRhpE,OAAQ0xE,EAAQ1xE,OAIhBS,MAAQjC,EAAMI,OAAOoB,OAAS,EAK9BmB,KAAS,EAKTipB,KAAQsnD,EAAQE,SAChBR,MAAQM,EAAQG,YAMpB,OAFArzE,EAAMyG,KAAOysE,EAAQ1xE,QAEd,GAmETuK,EAAOC,QAAQ,EAAc,SAAkBhM,GAC7C,IAAIqxE,EACAwB,EAAc7yE,EAAM6yE,YACpB/pD,EAAM9oB,EAAM6yE,YAAYrxE,OAI5B,IAFAsxE,EAAY9yE,EAAOA,EAAM+xE,YAEpBV,EAAO,EAAGA,EAAOvoD,EAAKuoD,IACrBwB,EAAYxB,IAASwB,EAAYxB,GAAMU,YACzCe,EAAY9yE,EAAO6yE,EAAYxB,GAAMU,0CC1H3C,IAAIxN,EAAoB,EAAQ,MAC5BT,EAAoB,YACpBE,EAAoB,0BACpBC,EAAoB,sBAGpBqP,EAAa,uCACbC,EAAa,4BAGjBxnE,EAAOC,QAAU,SAAgBhM,EAAOwG,GACtC,IAAQqB,EAAM49C,EAAOxjD,EAAOwE,EAAMzG,EAAMyG,IAAKqiB,EAAM9oB,EAAMsH,OAEzD,GAAkC,KAA9BtH,EAAMH,IAAI6B,WAAW+E,GAAsB,OAAO,EAEtD,GAAIA,EAAM,GAAKqiB,EAAK,OAAO,EAI3B,GAAW,KAFN9oB,EAAMH,IAAI6B,WAAW+E,EAAM,IAI9B,GADAg/C,EAAQzlD,EAAMH,IAAIqH,MAAMT,GAAKg/C,MAAM6tB,GAWjC,OATK9sE,IACHqB,EAAqC,MAA9B49C,EAAM,GAAG,GAAGpiD,cAAwBytB,SAAS20B,EAAM,GAAGv+C,MAAM,GAAI,IAAM4pB,SAAS20B,EAAM,GAAI,KAEhGxjD,EAAgBjC,EAAMc,KAAK,eAAgB,GAAI,IACzCG,QAAU+iE,EAAkBn8D,GAAQo8D,EAAcp8D,GAAQo8D,EAAc,OAC9EhiE,EAAMqoE,OAAU7kB,EAAM,GACtBxjD,EAAM2yB,KAAU,UAElB50B,EAAMyG,KAAOg/C,EAAM,GAAGjkD,QACf,OAIT,IADAikD,EAAQzlD,EAAMH,IAAIqH,MAAMT,GAAKg/C,MAAM8tB,KAE7BzP,EAAIS,EAAU9e,EAAM,IAQtB,OAPKj/C,KACHvE,EAAgBjC,EAAMc,KAAK,eAAgB,GAAI,IACzCG,QAAUsjE,EAAS9e,EAAM,IAC/BxjD,EAAMqoE,OAAU7kB,EAAM,GACtBxjD,EAAM2yB,KAAU,UAElB50B,EAAMyG,KAAOg/C,EAAM,GAAGjkD,QACf,EAKb,OAAO,gCC7CT,IAJA,IAAIukE,EAAU,gBAEVyN,EAAU,GAELtwE,EAAI,EAAGA,EAAI,IAAKA,IAAOswE,EAAQ1yE,KAAK,GAE7C,qCACGyC,MAAM,IAAIiyC,SAAQ,SAAUovB,GAAM4O,EAAQ5O,EAAGljE,WAAW,IAAM,KAGjEqK,EAAOC,QAAU,SAAgBhM,EAAOwG,GACtC,IAAIitE,EAAKC,EAAKC,EAASC,EAAY3xE,EAAOwE,EAAMzG,EAAMyG,IAAKqiB,EAAM9oB,EAAMsH,OAEvE,GAAkC,KAA9BtH,EAAMH,IAAI6B,WAAW+E,GAAsB,OAAO,EAItD,KAHAA,GAGWqiB,EAAK,OAAO,EAIvB,GAAY,MAFZ2qD,EAAMzzE,EAAMH,IAAI6B,WAAW+E,IAET,CAOhB,IANKD,GACHxG,EAAMc,KAAK,YAAa,KAAM,GAGhC2F,IAEOA,EAAMqiB,IACX2qD,EAAMzzE,EAAMH,IAAI6B,WAAW+E,GACtBs/D,EAAQ0N,KACbhtE,IAIF,OADAzG,EAAMyG,IAAMA,GACL,EA8BT,OA3BAmtE,EAAa5zE,EAAMH,IAAI4G,GAEnBgtE,GAAO,OAAUA,GAAO,OAAUhtE,EAAM,EAAIqiB,IAC9C4qD,EAAM1zE,EAAMH,IAAI6B,WAAW+E,EAAM,KAEtB,OAAUitE,GAAO,QAC1BE,GAAc5zE,EAAMH,IAAI4G,EAAM,GAC9BA,KAIJktE,EAAU,KAAOC,EAEZptE,IACHvE,EAAQjC,EAAMc,KAAK,eAAgB,GAAI,GAEnC2yE,EAAM,KAAwB,IAAjBD,EAAQC,GACvBxxE,EAAMhB,QAAU2yE,EAEhB3xE,EAAMhB,QAAU0yE,EAGlB1xE,EAAMqoE,OAASqJ,EACf1xE,EAAM2yB,KAAS,UAGjB50B,EAAMyG,IAAMA,EAAM,GACX,0BC1DTsF,EAAOC,QAAU,SAAwBhM,GACvC,IAAIqxE,EAAMziD,EACN5tB,EAAQ,EACRZ,EAASJ,EAAMI,OACf0oB,EAAM9oB,EAAMI,OAAOoB,OAEvB,IAAK6vE,EAAOziD,EAAO,EAAGyiD,EAAOvoD,EAAKuoD,IAG5BjxE,EAAOixE,GAAMzvE,QAAU,GAAGZ,IAC9BZ,EAAOixE,GAAMrwE,MAAQA,EACjBZ,EAAOixE,GAAMzvE,QAAU,GAAGZ,IAEJ,SAAtBZ,EAAOixE,GAAMhwE,MACbgwE,EAAO,EAAIvoD,GACe,SAA1B1oB,EAAOixE,EAAO,GAAGhwE,KAGnBjB,EAAOixE,EAAO,GAAGpwE,QAAUb,EAAOixE,GAAMpwE,QAAUb,EAAOixE,EAAO,GAAGpwE,SAE/DowE,IAASziD,IAAQxuB,EAAOwuB,GAAQxuB,EAAOixE,IAE3CziD,KAIAyiD,IAASziD,IACXxuB,EAAOoB,OAASotB,iCCjCpB,IAAI40C,EAAc,UAkBlBz3D,EAAOC,QAAU,SAAqBhM,EAAOwG,GAC3C,IAAIo+D,EAAInf,EAAO38B,EAAK7mB,EAhBFpB,EAiBd4F,EAAMzG,EAAMyG,IAEhB,SAAKzG,EAAMlB,GAAGI,QAAQC,OAGtB2pB,EAAM9oB,EAAMsH,OACsB,KAA9BtH,EAAMH,IAAI6B,WAAW+E,IACrBA,EAAM,GAAKqiB,GAMJ,MADX87C,EAAK5kE,EAAMH,IAAI6B,WAAW+E,EAAM,KAErB,KAAPm+D,GACO,KAAPA,IAxBN,SAAkBA,GAEhB,IAAIiP,EAAU,GAALjP,EACT,OAAQiP,GAAM,IAAiBA,GAAM,IAsBhCjsE,CAASg9D,MAIdnf,EAAQzlD,EAAMH,IAAIqH,MAAMT,GAAKg/C,MAAM+d,MAG9Bh9D,KACHvE,EAAgBjC,EAAMc,KAAK,cAAe,GAAI,IACxCG,QAAUjB,EAAMH,IAAIqH,MAAMT,EAAKA,EAAMg/C,EAAM,GAAGjkD,QA1CpCX,EA4CDoB,EAAMhB,QA3ChB,YAAYi4C,KAAKr4C,IA2CUb,EAAM8zE,YAzC1C,SAAqBjzE,GACnB,MAAO,aAAaq4C,KAAKr4C,GAyCnB0tE,CAAYtsE,EAAMhB,UAAUjB,EAAM8zE,aAExC9zE,EAAMyG,KAAOg/C,EAAM,GAAGjkD,OACf,mCCpDT,IAAI2kE,EAAuB,2BACvBJ,EAAuB,gBAG3Bh6D,EAAOC,QAAU,SAAehM,EAAOwG,GACrC,IAAII,EACAiB,EACA5G,EACAsoD,EACAojB,EACAoH,EACAttE,EACAwe,EACA7I,EACA5W,EACAvD,EACA7B,EACAkC,EACAlB,EAAO,GACP4yE,EAASh0E,EAAMyG,IACfqiB,EAAM9oB,EAAMsH,OAEhB,GAAwC,KAApCtH,EAAMH,IAAI6B,WAAW1B,EAAMyG,KAAwB,OAAO,EAC9D,GAA4C,KAAxCzG,EAAMH,IAAI6B,WAAW1B,EAAMyG,IAAM,GAAsB,OAAO,EAMlE,GAJAstE,EAAa/zE,EAAMyG,IAAM,GACzBkmE,EAAW3sE,EAAMlB,GAAG8tE,QAAQqH,eAAej0E,EAAOA,EAAMyG,IAAM,GAAG,IAGlD,EAAK,OAAO,EAG3B,IADAA,EAAMkmE,EAAW,GACP7jD,GAAqC,KAA9B9oB,EAAMH,IAAI6B,WAAW+E,GAAsB,CAQ1D,IADAA,IACOA,EAAMqiB,IACXjhB,EAAO7H,EAAMH,IAAI6B,WAAW+E,GACvBs/D,EAAQl+D,IAAkB,KAATA,GAFNpB,KAIlB,GAAIA,GAAOqiB,EAAO,OAAO,EAkBzB,IAdAxmB,EAAQmE,GACR2V,EAAMpc,EAAMlB,GAAG8tE,QAAQC,qBAAqB7sE,EAAMH,IAAK4G,EAAKzG,EAAMsH,SAC1DmgE,KACNrmE,EAAOpB,EAAMlB,GAAGguE,cAAc1wD,EAAIvb,KAC9Bb,EAAMlB,GAAGiuE,aAAa3rE,GACxBqF,EAAM2V,EAAI3V,IAEVrF,EAAO,IAMXkB,EAAQmE,EACDA,EAAMqiB,IACXjhB,EAAO7H,EAAMH,IAAI6B,WAAW+E,GACvBs/D,EAAQl+D,IAAkB,KAATA,GAFNpB,KAQlB,GADA2V,EAAMpc,EAAMlB,GAAG8tE,QAAQI,eAAehtE,EAAMH,IAAK4G,EAAKzG,EAAMsH,QACxDb,EAAMqiB,GAAOxmB,IAAUmE,GAAO2V,EAAIqrD,GAMpC,IALAjiE,EAAQ4W,EAAIvb,IACZ4F,EAAM2V,EAAI3V,IAIHA,EAAMqiB,IACXjhB,EAAO7H,EAAMH,IAAI6B,WAAW+E,GACvBs/D,EAAQl+D,IAAkB,KAATA,GAFNpB,UAKlBjB,EAAQ,GAGV,GAAIiB,GAAOqiB,GAAqC,KAA9B9oB,EAAMH,IAAI6B,WAAW+E,GAErC,OADAzG,EAAMyG,IAAMutE,GACL,EAETvtE,QACK,CAIL,QAAoC,IAAzBzG,EAAMF,IAAImtE,WAA8B,OAAO,EAmB1D,GAjBIxmE,EAAMqiB,GAAqC,KAA9B9oB,EAAMH,IAAI6B,WAAW+E,IACpCnE,EAAQmE,EAAM,GACdA,EAAMzG,EAAMlB,GAAG8tE,QAAQqH,eAAej0E,EAAOyG,KAClC,EACT8iD,EAAQvpD,EAAMH,IAAIqH,MAAM5E,EAAOmE,KAE/BA,EAAMkmE,EAAW,GAGnBlmE,EAAMkmE,EAAW,EAKdpjB,IAASA,EAAQvpD,EAAMH,IAAIqH,MAAM6sE,EAAYpH,MAElD1nD,EAAMjlB,EAAMF,IAAImtE,WAAW9G,EAAmB5c,KAG5C,OADAvpD,EAAMyG,IAAMutE,GACL,EAET5yE,EAAO6jB,EAAI7jB,KACXoE,EAAQyf,EAAIzf,MA6Bd,OAtBKgB,IACHvF,EAAUjB,EAAMH,IAAIqH,MAAM6sE,EAAYpH,GAEtC3sE,EAAMlB,GAAGC,OAAOa,MACdqB,EACAjB,EAAMlB,GACNkB,EAAMF,IACNM,EAAS,KAGX6B,EAAiBjC,EAAMc,KAAK,QAAS,MAAO,IACtC8F,MAAWA,EAAQ,CAAE,CAAE,MAAOxF,GAAQ,CAAE,MAAO,KACrDa,EAAMV,SAAWnB,EACjB6B,EAAMhB,QAAWA,EAEbuE,GACFoB,EAAM9F,KAAK,CAAE,QAAS0E,KAI1BxF,EAAMyG,IAAMA,EACZzG,EAAMsH,OAASwhB,GACR,gCClJT,IAAIq9C,EAAuB,2BACvBJ,EAAuB,gBAG3Bh6D,EAAOC,QAAU,SAAchM,EAAOwG,GACpC,IAAII,EACAiB,EACA0hD,EACAojB,EACAoH,EACAttE,EACA2V,EACA6I,EAEA7jB,EAAO,GACPoE,EAAQ,GACRwuE,EAASh0E,EAAMyG,IACfqiB,EAAM9oB,EAAMsH,OACZhF,EAAQtC,EAAMyG,IACdytE,GAAiB,EAErB,GAAwC,KAApCl0E,EAAMH,IAAI6B,WAAW1B,EAAMyG,KAAwB,OAAO,EAM9D,GAJAstE,EAAa/zE,EAAMyG,IAAM,GACzBkmE,EAAW3sE,EAAMlB,GAAG8tE,QAAQqH,eAAej0E,EAAOA,EAAMyG,KAAK,IAG9C,EAAK,OAAO,EAG3B,IADAA,EAAMkmE,EAAW,GACP7jD,GAAqC,KAA9B9oB,EAAMH,IAAI6B,WAAW+E,GAAsB,CAW1D,IALAytE,GAAiB,EAIjBztE,IACOA,EAAMqiB,IACXjhB,EAAO7H,EAAMH,IAAI6B,WAAW+E,GACvBs/D,EAAQl+D,IAAkB,KAATA,GAFNpB,KAIlB,GAAIA,GAAOqiB,EAAO,OAAO,EAMzB,GAFAxmB,EAAQmE,GACR2V,EAAMpc,EAAMlB,GAAG8tE,QAAQC,qBAAqB7sE,EAAMH,IAAK4G,EAAKzG,EAAMsH,SAC1DmgE,GAAI,CAWV,IAVArmE,EAAOpB,EAAMlB,GAAGguE,cAAc1wD,EAAIvb,KAC9Bb,EAAMlB,GAAGiuE,aAAa3rE,GACxBqF,EAAM2V,EAAI3V,IAEVrF,EAAO,GAKTkB,EAAQmE,EACDA,EAAMqiB,IACXjhB,EAAO7H,EAAMH,IAAI6B,WAAW+E,GACvBs/D,EAAQl+D,IAAkB,KAATA,GAFNpB,KAQlB,GADA2V,EAAMpc,EAAMlB,GAAG8tE,QAAQI,eAAehtE,EAAMH,IAAK4G,EAAKzG,EAAMsH,QACxDb,EAAMqiB,GAAOxmB,IAAUmE,GAAO2V,EAAIqrD,GAMpC,IALAjiE,EAAQ4W,EAAIvb,IACZ4F,EAAM2V,EAAI3V,IAIHA,EAAMqiB,IACXjhB,EAAO7H,EAAMH,IAAI6B,WAAW+E,GACvBs/D,EAAQl+D,IAAkB,KAATA,GAFNpB,OAOlBA,GAAOqiB,GAAqC,KAA9B9oB,EAAMH,IAAI6B,WAAW+E,MAErCytE,GAAiB,GAEnBztE,IAGF,GAAIytE,EAAgB,CAIlB,QAAoC,IAAzBl0E,EAAMF,IAAImtE,WAA8B,OAAO,EAmB1D,GAjBIxmE,EAAMqiB,GAAqC,KAA9B9oB,EAAMH,IAAI6B,WAAW+E,IACpCnE,EAAQmE,EAAM,GACdA,EAAMzG,EAAMlB,GAAG8tE,QAAQqH,eAAej0E,EAAOyG,KAClC,EACT8iD,EAAQvpD,EAAMH,IAAIqH,MAAM5E,EAAOmE,KAE/BA,EAAMkmE,EAAW,GAGnBlmE,EAAMkmE,EAAW,EAKdpjB,IAASA,EAAQvpD,EAAMH,IAAIqH,MAAM6sE,EAAYpH,MAElD1nD,EAAMjlB,EAAMF,IAAImtE,WAAW9G,EAAmB5c,KAG5C,OADAvpD,EAAMyG,IAAMutE,GACL,EAET5yE,EAAO6jB,EAAI7jB,KACXoE,EAAQyf,EAAIzf,MA0Bd,OAnBKgB,IACHxG,EAAMyG,IAAMstE,EACZ/zE,EAAMsH,OAASqlE,EAEA3sE,EAAMc,KAAK,YAAa,IAAK,GACtC8F,MAASA,EAAQ,CAAE,CAAE,OAAQxF,IAC/BoE,GACFoB,EAAM9F,KAAK,CAAE,QAAS0E,IAGxBxF,EAAM8zE,YACN9zE,EAAMlB,GAAGC,OAAO4I,SAAS3H,GACzBA,EAAM8zE,YAES9zE,EAAMc,KAAK,aAAc,KAAM,IAGhDd,EAAMyG,IAAMA,EACZzG,EAAMsH,OAASwhB,GACR,0BC9IT,IAAIqrD,EAAY,0CAGhBpoE,EAAOC,QAAU,SAAiBhM,EAAOwG,GACvC,IAAIC,EAAUg/C,EAAO2uB,EAAOC,EAAMxF,EAAKC,EAAS7sE,EAEhD,SAAKjC,EAAMlB,GAAGI,QAAQK,SAClBS,EAAM8zE,UAAY,IAEtBrtE,EAAMzG,EAAMyG,KAGF,EAFJzG,EAAMsH,QAGsB,KAA9BtH,EAAMH,IAAI6B,WAAW+E,IACa,KAAlCzG,EAAMH,IAAI6B,WAAW+E,EAAM,IACO,KAAlCzG,EAAMH,IAAI6B,WAAW+E,EAAM,MAE/Bg/C,EAAQzlD,EAAM0nE,QAAQjiB,MAAM0uB,MAG5BC,EAAQ3uB,EAAM,KAEd4uB,EAAOr0E,EAAMlB,GAAGS,QAAQ+0E,aAAat0E,EAAMH,IAAIqH,MAAMT,EAAM2tE,EAAM5yE,YAMjEqtE,GAHAA,EAAMwF,EAAKxF,KAGDpuE,QAAQ,OAAQ,IAE1BquE,EAAU9uE,EAAMlB,GAAGguE,cAAc+B,IAC5B7uE,EAAMlB,GAAGiuE,aAAa+B,KAEtBtoE,IACHxG,EAAM0nE,QAAU1nE,EAAM0nE,QAAQxgE,MAAM,GAAIktE,EAAM5yE,SAE9CS,EAAgBjC,EAAMc,KAAK,YAAa,IAAK,IACvC8F,MAAU,CAAE,CAAE,OAAQkoE,IAC5B7sE,EAAMqoE,OAAU,UAChBroE,EAAM2yB,KAAU,QAEhB3yB,EAAgBjC,EAAMc,KAAK,OAAQ,GAAI,IACjCG,QAAUjB,EAAMlB,GAAGqwE,kBAAkBN,IAE3C5sE,EAAgBjC,EAAMc,KAAK,aAAc,KAAM,IACzCwpE,OAAU,UAChBroE,EAAM2yB,KAAU,QAGlB50B,EAAMyG,KAAOooE,EAAIrtE,OAAS4yE,EAAM5yE,OACzB,oCCpDT,IAAIukE,EAAU,gBAGdh6D,EAAOC,QAAU,SAAiBhM,EAAOwG,GACvC,IAAI+tE,EAAMzrD,EAAK0rD,EAAI/tE,EAAMzG,EAAMyG,IAE/B,GAAkC,KAA9BzG,EAAMH,IAAI6B,WAAW+E,GAAyB,OAAO,EASzD,GAPA8tE,EAAOv0E,EAAM0nE,QAAQlmE,OAAS,EAC9BsnB,EAAM9oB,EAAMsH,QAMPd,EACH,GAAI+tE,GAAQ,GAAwC,KAAnCv0E,EAAM0nE,QAAQhmE,WAAW6yE,GACxC,GAAIA,GAAQ,GAA4C,KAAvCv0E,EAAM0nE,QAAQhmE,WAAW6yE,EAAO,GAAa,CAG5D,IADAC,EAAKD,EAAO,EACLC,GAAM,GAA0C,KAArCx0E,EAAM0nE,QAAQhmE,WAAW8yE,EAAK,IAAaA,IAE7Dx0E,EAAM0nE,QAAU1nE,EAAM0nE,QAAQxgE,MAAM,EAAGstE,GACvCx0E,EAAMc,KAAK,YAAa,KAAM,QAE9Bd,EAAM0nE,QAAU1nE,EAAM0nE,QAAQxgE,MAAM,GAAI,GACxClH,EAAMc,KAAK,YAAa,KAAM,QAIhCd,EAAMc,KAAK,YAAa,KAAM,GAOlC,IAHA2F,IAGOA,EAAMqiB,GAAOi9C,EAAQ/lE,EAAMH,IAAI6B,WAAW+E,KAASA,IAG1D,OADAzG,EAAMyG,IAAMA,GACL,gCCvCT,IAAIwsC,EAAiB,EAAQ,MACzBxxC,EAAiB,qBACjBwkE,EAAiB,oBACjBD,EAAiB,uBAGrB,SAASyO,EAAY50E,EAAKf,EAAIgB,EAAKonE,GACjCjnE,KAAKJ,IAAMA,EACXI,KAAKH,IAAMA,EACXG,KAAKnB,GAAKA,EACVmB,KAAKG,OAAS8mE,EACdjnE,KAAK4yE,YAAcjnE,MAAMs7D,EAAU1lE,QAEnCvB,KAAKwG,IAAM,EACXxG,KAAKqH,OAASrH,KAAKJ,IAAI2B,OACvBvB,KAAKe,MAAQ,EACbf,KAAKynE,QAAU,GACfznE,KAAKy0E,aAAe,EAIpBz0E,KAAKuL,MAAQ,GAGbvL,KAAK8xE,WAAa,GAGlB9xE,KAAK00E,iBAAmB,GAGxB10E,KAAK4xE,UAAY,GACjB5xE,KAAK2xE,kBAAmB,EAIxB3xE,KAAK6zE,UAAY,EAMnBW,EAAY7Q,UAAU+D,YAAc,WAClC,IAAI1lE,EAAQ,IAAIgxC,EAAM,OAAQ,GAAI,GAKlC,OAJAhxC,EAAMhB,QAAUhB,KAAKynE,QACrBzlE,EAAMjB,MAAQf,KAAKy0E,aACnBz0E,KAAKG,OAAOU,KAAKmB,GACjBhC,KAAKynE,QAAU,GACRzlE,GAOTwyE,EAAY7Q,UAAU9iE,KAAO,SAAUO,EAAMQ,EAAKD,GAC5C3B,KAAKynE,SACPznE,KAAK0nE,cAGP,IAAI1lE,EAAQ,IAAIgxC,EAAM5xC,EAAMQ,EAAKD,GAC7BgzE,EAAa,KAqBjB,OAnBIhzE,EAAU,IAEZ3B,KAAKe,QACLf,KAAK8xE,WAAa9xE,KAAK00E,iBAAiBtG,OAG1CpsE,EAAMjB,MAAQf,KAAKe,MAEfY,EAAU,IAEZ3B,KAAKe,QACLf,KAAK00E,iBAAiB7zE,KAAKb,KAAK8xE,YAChC9xE,KAAK8xE,WAAa,GAClB6C,EAAa,CAAE7C,WAAY9xE,KAAK8xE,aAGlC9xE,KAAKy0E,aAAez0E,KAAKe,MACzBf,KAAKG,OAAOU,KAAKmB,GACjBhC,KAAK4yE,YAAY/xE,KAAK8zE,GACf3yE,GAUTwyE,EAAY7Q,UAAUuP,WAAa,SAAU7wE,EAAOuyE,GAClD,IAAiBtE,EAAUC,EAAUluC,EAAO8wC,EAAUC,EAClD1C,EAAkBF,EAClBG,EAAkBF,EAFlBjqE,EAAMnE,EAGNwyE,GAAgB,EAChBC,GAAiB,EACjBjsD,EAAM7oB,KAAKqH,OACXkjE,EAASvqE,KAAKJ,IAAI6B,WAAWY,GAKjC,IAFAiuE,EAAWjuE,EAAQ,EAAIrC,KAAKJ,IAAI6B,WAAWY,EAAQ,GAAK,GAEjDmE,EAAMqiB,GAAO7oB,KAAKJ,IAAI6B,WAAW+E,KAAS+jE,GAAU/jE,IAqC3D,OAnCA67B,EAAQ77B,EAAMnE,EAGdkuE,EAAW/pE,EAAMqiB,EAAM7oB,KAAKJ,IAAI6B,WAAW+E,GAAO,GAElDgqE,EAAkBzK,EAAeuK,IAAatK,EAAYv5D,OAAOC,aAAa4jE,IAC9EG,EAAkB1K,EAAewK,IAAavK,EAAYv5D,OAAOC,aAAa6jE,IAE9EG,EAAmBlvE,EAAa8uE,IAChCK,EAAmBnvE,EAAa+uE,IAG9BsE,GAAgB,EACPpE,IACHC,GAAoBF,IACxBqE,GAAgB,IAIhBnE,EACFoE,GAAiB,EACRtE,IACHG,GAAoBF,IACxBqE,GAAiB,IAIhBF,GAIHzB,EAAY0B,EACZzB,EAAY0B,IAJZ3B,EAAY0B,KAAoBC,GAAkBtE,GAClD4C,EAAY0B,KAAoBD,GAAkBpE,IAM7C,CACL0C,SAAWA,EACXC,UAAWA,EACX7xE,OAAW8gC,IAMfmyC,EAAY7Q,UAAU3wB,MAAQA,EAG9BlnC,EAAOC,QAAUyoE,yBC7GjB,SAAS3B,EAAY9yE,EAAO+xE,GAC1B,IAAI7uE,EAAGonB,EACHyoD,EACAC,EACA/wE,EACA+yE,EAAc,GACdlsD,EAAMipD,EAAWvwE,OAErB,IAAK0B,EAAI,EAAGA,EAAI4lB,EAAK5lB,IAGO,OAF1B6vE,EAAahB,EAAW7uE,IAETsnE,SAIS,IAApBuI,EAAWpwE,MAIfqwE,EAAWjB,EAAWgB,EAAWpwE,MAEjCV,EAAgBjC,EAAMI,OAAO2yE,EAAW9wE,QAClCZ,KAAU,SAChBY,EAAMJ,IAAU,IAChBI,EAAML,QAAU,EAChBK,EAAMqoE,OAAU,KAChBroE,EAAMhB,QAAU,IAEhBgB,EAAgBjC,EAAMI,OAAO4yE,EAAS/wE,QAChCZ,KAAU,UAChBY,EAAMJ,IAAU,IAChBI,EAAML,SAAW,EACjBK,EAAMqoE,OAAU,KAChBroE,EAAMhB,QAAU,GAE8B,SAA1CjB,EAAMI,OAAO4yE,EAAS/wE,MAAQ,GAAGZ,MACY,MAA7CrB,EAAMI,OAAO4yE,EAAS/wE,MAAQ,GAAGhB,SAEnC+zE,EAAYl0E,KAAKkyE,EAAS/wE,MAAQ,IAUtC,KAAO+yE,EAAYxzE,QAAQ,CAIzB,IAFA8oB,GADApnB,EAAI8xE,EAAY3G,OACR,EAED/jD,EAAItqB,EAAMI,OAAOoB,QAAmC,YAAzBxB,EAAMI,OAAOkqB,GAAGjpB,MAChDipB,IAKEpnB,MAFJonB,IAGEroB,EAAQjC,EAAMI,OAAOkqB,GACrBtqB,EAAMI,OAAOkqB,GAAKtqB,EAAMI,OAAO8C,GAC/BlD,EAAMI,OAAO8C,GAAKjB,IAtGxB8J,EAAOC,QAAQ,EAAW,SAAuBhM,EAAOwG,GACtD,IAAItD,EAAGgwE,EAAgBzoE,EAAKm6D,EACxBtiE,EAAQtC,EAAMyG,IACd+jE,EAASxqE,EAAMH,IAAI6B,WAAWY,GAElC,GAAIkE,EAAU,OAAO,EAErB,GAAe,MAAXgkE,EAA0B,OAAO,EAMrC,GAHA//D,GADAyoE,EAAUlzE,EAAMmzE,WAAWnzE,EAAMyG,KAAK,IACxBjF,OACdojE,EAAKl4D,OAAOC,aAAa69D,GAErB//D,EAAM,EAAK,OAAO,EAQtB,IANIA,EAAM,IACQzK,EAAMc,KAAK,OAAQ,GAAI,GACjCG,QAAU2jE,EAChBn6D,KAGGvH,EAAI,EAAGA,EAAIuH,EAAKvH,GAAK,EACRlD,EAAMc,KAAK,OAAQ,GAAI,GACjCG,QAAU2jE,EAAKA,EAErB5kE,EAAM+xE,WAAWjxE,KAAK,CACpB0pE,OAAQA,EACRhpE,OAAQ,EACRS,MAAQjC,EAAMI,OAAOoB,OAAS,EAC9BmB,KAAS,EACTipB,KAAQsnD,EAAQE,SAChBR,MAAQM,EAAQG,YAMpB,OAFArzE,EAAMyG,KAAOysE,EAAQ1xE,QAEd,GAyETuK,EAAOC,QAAQ,EAAc,SAAuBhM,GAClD,IAAIqxE,EACAwB,EAAc7yE,EAAM6yE,YACpB/pD,EAAM9oB,EAAM6yE,YAAYrxE,OAI5B,IAFAsxE,EAAY9yE,EAAOA,EAAM+xE,YAEpBV,EAAO,EAAGA,EAAOvoD,EAAKuoD,IACrBwB,EAAYxB,IAASwB,EAAYxB,GAAMU,YACzCe,EAAY9yE,EAAO6yE,EAAYxB,GAAMU,oCCjH3C,SAASkD,EAAiBrQ,GACxB,OAAQA,GACN,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACH,OAAO,EACT,QACE,OAAO,GAIb74D,EAAOC,QAAU,SAAchM,EAAOwG,GAGpC,IAFA,IAAIC,EAAMzG,EAAMyG,IAETA,EAAMzG,EAAMsH,SAAW2tE,EAAiBj1E,EAAMH,IAAI6B,WAAW+E,KAClEA,IAGF,OAAIA,IAAQzG,EAAMyG,MAEbD,IAAUxG,EAAM0nE,SAAW1nE,EAAMH,IAAIqH,MAAMlH,EAAMyG,IAAKA,IAE3DzG,EAAMyG,IAAMA,GAEL,2BC3CT,SAASwsC,EAAM5xC,EAAMQ,EAAKD,GAMxB3B,KAAKoB,KAAWA,EAOhBpB,KAAK4B,IAAWA,EAOhB5B,KAAK2G,MAAW,KAOhB3G,KAAKuD,IAAW,KAWhBvD,KAAK2B,QAAWA,EAOhB3B,KAAKe,MAAW,EAOhBf,KAAKsB,SAAW,KAQhBtB,KAAKgB,QAAW,GAOhBhB,KAAKqqE,OAAW,GAWhBrqE,KAAK20B,KAAW,GAOhB30B,KAAKkH,KAAW,KAQhBlH,KAAKjB,OAAW,EAQhBiB,KAAKqsE,QAAW,EASlBr5B,EAAM2wB,UAAUsR,UAAY,SAAmB7jE,GAC7C,IAAIzK,EAAO1D,EAAGuH,EAEd,IAAKxK,KAAK2G,MAAS,OAAQ,EAI3B,IAAK1D,EAAI,EAAGuH,GAFZ7D,EAAQ3G,KAAK2G,OAEWpF,OAAQ0B,EAAIuH,EAAKvH,IACvC,GAAI0D,EAAM1D,GAAG,KAAOmO,EAAQ,OAAOnO,EAErC,OAAQ,GASV+vC,EAAM2wB,UAAUuR,SAAW,SAAkBC,GACvCn1E,KAAK2G,MACP3G,KAAK2G,MAAM9F,KAAKs0E,GAEhBn1E,KAAK2G,MAAQ,CAAEwuE,IAUnBniC,EAAM2wB,UAAUyR,QAAU,SAAiBhkE,EAAMjF,GAC/C,IAAIjK,EAAMlC,KAAKi1E,UAAU7jE,GACrB+jE,EAAW,CAAE/jE,EAAMjF,GAEnBjK,EAAM,EACRlC,KAAKk1E,SAASC,GAEdn1E,KAAK2G,MAAMzE,GAAOizE,GAUtBniC,EAAM2wB,UAAUziE,QAAU,SAAiBkQ,GACzC,IAAIlP,EAAMlC,KAAKi1E,UAAU7jE,GAAOjF,EAAQ,KAIxC,OAHIjK,GAAO,IACTiK,EAAQnM,KAAK2G,MAAMzE,GAAK,IAEnBiK,GAUT6mC,EAAM2wB,UAAU0R,SAAW,SAAkBjkE,EAAMjF,GACjD,IAAIjK,EAAMlC,KAAKi1E,UAAU7jE,GAErBlP,EAAM,EACRlC,KAAKk1E,SAAS,CAAE9jE,EAAMjF,IAEtBnM,KAAK2G,MAAMzE,GAAK,GAAKlC,KAAK2G,MAAMzE,GAAK,GAAK,IAAMiK,GAKpDL,EAAOC,QAAUinC,cCtMhB,WACG,aAEA,IAAIsiC,EAAK,CACLC,WAAY,OACZC,SAAU,OACVC,SAAU,OACVC,cAAe,OACfC,OAAQ,UACRC,YAAa,eACbC,KAAM,MACNC,SAAU,OACVpH,KAAM,YACNqH,OAAQ,WACRC,YAAa,2FACbt8C,IAAK,sBACLu8C,WAAY,wBACZC,aAAc,aACdC,KAAM,SAGV,SAASjkB,EAAQx4B,GAEb,OAAO08C,EAAeC,EAAc38C,GAAM3uB,WAO9C,SAASqrE,EAAeE,EAAYC,GAChC,IAAiDxvD,EAAkB9jB,EAAGsU,EAAGi/D,EAAIpxB,EAAKqxB,EAAeC,EAAYC,EAAaR,EAAtHS,EAAS,EAAGC,EAAcP,EAAW/0E,OAAab,EAAS,GAC/D,IAAKuC,EAAI,EAAGA,EAAI4zE,EAAa5zE,IACzB,GAA6B,iBAAlBqzE,EAAWrzE,GAClBvC,GAAU41E,EAAWrzE,QAEpB,GAA6B,iBAAlBqzE,EAAWrzE,GAAiB,CAExC,IADAuzE,EAAKF,EAAWrzE,IACTiiE,KAEH,IADAn+C,EAAMwvD,EAAKK,GACNr/D,EAAI,EAAGA,EAAIi/D,EAAGtR,KAAK3jE,OAAQgW,IAAK,CACjC,GAAWuiC,MAAP/yB,EACA,MAAM,IAAIjnB,MAAMoyD,EAAQ,gEAAiEskB,EAAGtR,KAAK3tD,GAAIi/D,EAAGtR,KAAK3tD,EAAE,KAEnHwP,EAAMA,EAAIyvD,EAAGtR,KAAK3tD,SAItBwP,EADKyvD,EAAGM,SACFP,EAAKC,EAAGM,UAGRP,EAAKK,KAOf,GAJItB,EAAGG,SAASx8B,KAAKu9B,EAAGp1E,OAASk0E,EAAGI,cAAcz8B,KAAKu9B,EAAGp1E,OAAS2lB,aAAemyB,WAC9EnyB,EAAMA,KAGNuuD,EAAGM,YAAY38B,KAAKu9B,EAAGp1E,OAAyB,iBAAR2lB,GAAoB+J,MAAM/J,GAClE,MAAM,IAAIvb,UAAU0mD,EAAQ,0CAA2CnrC,IAO3E,OAJIuuD,EAAGK,OAAO18B,KAAKu9B,EAAGp1E,QAClBu1E,EAAc5vD,GAAO,GAGjByvD,EAAGp1E,MACP,IAAK,IACD2lB,EAAM8J,SAAS9J,EAAK,IAAI7Z,SAAS,GACjC,MACJ,IAAK,IACD6Z,EAAMta,OAAOC,aAAamkB,SAAS9J,EAAK,KACxC,MACJ,IAAK,IACL,IAAK,IACDA,EAAM8J,SAAS9J,EAAK,IACpB,MACJ,IAAK,IACDA,EAAM+2B,KAAKC,UAAUh3B,EAAK,KAAMyvD,EAAGO,MAAQlmD,SAAS2lD,EAAGO,OAAS,GAChE,MACJ,IAAK,IACDhwD,EAAMyvD,EAAGQ,UAAYr3B,WAAW54B,GAAKkwD,cAAcT,EAAGQ,WAAar3B,WAAW54B,GAAKkwD,gBACnF,MACJ,IAAK,IACDlwD,EAAMyvD,EAAGQ,UAAYr3B,WAAW54B,GAAKmwD,QAAQV,EAAGQ,WAAar3B,WAAW54B,GACxE,MACJ,IAAK,IACDA,EAAMyvD,EAAGQ,UAAYvqE,OAAOzH,OAAO+hB,EAAIg2C,YAAYyZ,EAAGQ,aAAer3B,WAAW54B,GAChF,MACJ,IAAK,IACDA,GAAO8J,SAAS9J,EAAK,MAAQ,GAAG7Z,SAAS,GACzC,MACJ,IAAK,IACD6Z,EAAMta,OAAOsa,GACbA,EAAOyvD,EAAGQ,UAAYjwD,EAAItkB,UAAU,EAAG+zE,EAAGQ,WAAajwD,EACvD,MACJ,IAAK,IACDA,EAAMta,SAASsa,GACfA,EAAOyvD,EAAGQ,UAAYjwD,EAAItkB,UAAU,EAAG+zE,EAAGQ,WAAajwD,EACvD,MACJ,IAAK,IACDA,EAAMsuB,OAAOsuB,UAAUz2D,SAASrC,KAAKkc,GAAK9f,MAAM,GAAI,GAAG7D,cACvD2jB,EAAOyvD,EAAGQ,UAAYjwD,EAAItkB,UAAU,EAAG+zE,EAAGQ,WAAajwD,EACvD,MACJ,IAAK,IACDA,EAAM8J,SAAS9J,EAAK,MAAQ,EAC5B,MACJ,IAAK,IACDA,EAAMA,EAAIowD,UACVpwD,EAAOyvD,EAAGQ,UAAYjwD,EAAItkB,UAAU,EAAG+zE,EAAGQ,WAAajwD,EACvD,MACJ,IAAK,IACDA,GAAO8J,SAAS9J,EAAK,MAAQ,GAAG7Z,SAAS,IACzC,MACJ,IAAK,IACD6Z,GAAO8J,SAAS9J,EAAK,MAAQ,GAAG7Z,SAAS,IAAIi5D,cAGjDmP,EAAGO,KAAK58B,KAAKu9B,EAAGp1E,MAChBV,GAAUqmB,IAGNuuD,EAAGK,OAAO18B,KAAKu9B,EAAGp1E,OAAWu1E,IAAeH,EAAGL,KAK/CA,EAAO,IAJPA,EAAOQ,EAAc,IAAM,IAC3B5vD,EAAMA,EAAI7Z,WAAW1M,QAAQ80E,EAAGa,KAAM,KAK1CM,EAAgBD,EAAGY,SAA2B,MAAhBZ,EAAGY,SAAmB,IAAMZ,EAAGY,SAASC,OAAO,GAAK,IAClFX,EAAaF,EAAGO,OAASZ,EAAOpvD,GAAKxlB,OACrC6jD,EAAMoxB,EAAGO,OAASL,EAAa,EAAID,EAAc31E,OAAO41E,GAAoB,GAC5Eh2E,GAAU81E,EAAGjhB,MAAQ4gB,EAAOpvD,EAAMq+B,EAAyB,MAAlBqxB,EAAwBN,EAAO/wB,EAAMr+B,EAAMq+B,EAAM+wB,EAAOpvD,GAI7G,OAAOrmB,EAGX,IAAI42E,EAAgBjiC,OAAOC,OAAO,MAElC,SAAS+gC,EAAcp1D,GACnB,GAAIq2D,EAAcr2D,GACd,OAAOq2D,EAAcr2D,GAIzB,IADA,IAAgBukC,EAAZ+xB,EAAOt2D,EAAYq1D,EAAa,GAAIkB,EAAY,EAC7CD,GAAM,CACT,GAAqC,QAAhC/xB,EAAQ8vB,EAAG5G,KAAKv/C,KAAKooD,IACtBjB,EAAWz1E,KAAK2kD,EAAM,SAErB,GAAuC,QAAlCA,EAAQ8vB,EAAGS,OAAO5mD,KAAKooD,IAC7BjB,EAAWz1E,KAAK,SAEf,IAA4C,QAAvC2kD,EAAQ8vB,EAAGU,YAAY7mD,KAAKooD,IA6ClC,MAAM,IAAIE,YAAY,oCA5CtB,GAAIjyB,EAAM,GAAI,CACVgyB,GAAa,EACb,IAAIE,EAAa,GAAIC,EAAoBnyB,EAAM,GAAIoyB,EAAc,GACjE,GAAuD,QAAlDA,EAActC,EAAG57C,IAAIvK,KAAKwoD,IAe3B,MAAM,IAAIF,YAAY,gDAbtB,IADAC,EAAW72E,KAAK+2E,EAAY,IACwD,MAA5ED,EAAoBA,EAAkBl1E,UAAUm1E,EAAY,GAAGr2E,UACnE,GAA8D,QAAzDq2E,EAActC,EAAGW,WAAW9mD,KAAKwoD,IAClCD,EAAW72E,KAAK+2E,EAAY,QAE3B,IAAgE,QAA3DA,EAActC,EAAGY,aAAa/mD,KAAKwoD,IAIzC,MAAM,IAAIF,YAAY,gDAHtBC,EAAW72E,KAAK+2E,EAAY,IAUxCpyB,EAAM,GAAKkyB,OAGXF,GAAa,EAEjB,GAAkB,IAAdA,EACA,MAAM,IAAI13E,MAAM,6EAGpBw2E,EAAWz1E,KACP,CACIm1E,YAAaxwB,EAAM,GACnBsxB,SAAatxB,EAAM,GACnB0f,KAAa1f,EAAM,GACnB2wB,KAAa3wB,EAAM,GACnB4xB,SAAa5xB,EAAM,GACnB+P,MAAa/P,EAAM,GACnBuxB,MAAavxB,EAAM,GACnBwxB,UAAaxxB,EAAM,GACnBpkD,KAAaokD,EAAM,KAO/B+xB,EAAOA,EAAK90E,UAAU+iD,EAAM,GAAGjkD,QAEnC,OAAO+1E,EAAcr2D,GAAOq1D,EAWV,oBAAXnxE,SACPA,OAAgB,QAAI+sD,EACpB/sD,OAAiB,SA9LrB,SAAkB8b,EAAKs1D,GACnB,OAAOrkB,EAAQviC,MAAM,KAAM,CAAC1O,GAAK4kD,OAAO0Q,GAAQ,OA3BvD,aCFDzqE,EAAOC,QAAQ,+BCAfD,EAAOC,QAAQ,kOCAfD,EAAOC,QAAQ,+2DCAfD,EAAOC,QAAQ,uFCEfA,EAAQ8rE,IAAM,EAAd,MACA9rE,EAAQ+rE,GAAR,QACA/rE,EAAQgsE,GAAR,QACAhsE,EAAQisE,EAAR,QACAjsE,EAAQqxD,EAAR,kBCNAtxD,EAAOC,QAAQ,u0+CCCXksE,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBr+B,IAAjBs+B,EACH,OAAOA,EAAarsE,QAGrB,IAAID,EAASmsE,EAAyBE,GAAY,CAGjDpsE,QAAS,IAOV,OAHAssE,EAAoBF,GAAUttE,KAAKiB,EAAOC,QAASD,EAAQA,EAAOC,QAASmsE,GAGpEpsE,EAAOC,QCpBfmsE,EAAoBztE,EAAKsB,IACH,oBAAXusE,QAA0BA,OAAOC,aAC1CljC,OAAOmjC,eAAezsE,EAASusE,OAAOC,YAAa,CAAEpsE,MAAO,WAE7DkpC,OAAOmjC,eAAezsE,EAAS,aAAc,CAAEI,OAAO,KCLvD+rE,EAAoBzhE,EAAI,GCGEyhE,EAAoB","sources":["webpack://moontale/./src/convert.ts","webpack://moontale/./src/index.ts","webpack://moontale/./src/rules/content_block.ts","webpack://moontale/./src/rules/expression.ts","webpack://moontale/./src/rules/passage_link.ts","webpack://moontale/./src/rules/script_block.ts","webpack://moontale/./src/rules/variable.ts","webpack://moontale/./src/runtime.ts","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/defs.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/fengari.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/fengaricore.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/fengarilib.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lapi.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lauxlib.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lbaselib.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lcode.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lcorolib.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/ldblib.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/ldebug.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/ldo.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/ldump.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lfunc.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/linit.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/ljstype.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/llex.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/llimits.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lmathlib.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/loadlib.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lobject.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lopcodes.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/loslib.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lparser.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lstate.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lstring.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lstrlib.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/ltable.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/ltablib.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/ltm.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lua.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/luaconf.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lualib.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lundump.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lutf8lib.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lvm.js","webpack://moontale/./.yarn/cache/fengari-npm-0.1.4-f367acc87f-bd6b04f973.zip/node_modules/fengari/src/lzio.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/common/entities.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/common/html_blocks.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/common/html_re.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/common/utils.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/parser_block.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/parser_core.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/parser_inline.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/ruler.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_block/blockquote.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_block/code.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_block/fence.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_block/heading.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_block/hr.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_block/html_block.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_block/lheading.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_block/list.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_block/paragraph.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_block/reference.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_block/state_block.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_block/table.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_core/block.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_core/inline.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_core/linkify.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_core/normalize.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_core/replacements.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_core/state_core.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_core/text_join.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_inline/autolink.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_inline/backticks.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_inline/entity.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_inline/escape.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_inline/fragments_join.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_inline/image.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_inline/link.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_inline/linkify.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_inline/newline.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/rules_inline/text.js","webpack://moontale/./.yarn/cache/markdown-it-npm-13.0.1-dcb1a8675c-faf5891d38.zip/node_modules/markdown-it/lib/token.js","webpack://moontale/./.yarn/cache/sprintf-js-npm-1.1.2-ea16269a6d-d4bb464646.zip/node_modules/sprintf-js/src/sprintf.js","webpack://moontale/./.yarn/cache/uc.micro-npm-1.0.6-36f3dc2fc4-6898bb5563.zip/node_modules/uc.micro/categories/Cc/regex.js","webpack://moontale/./.yarn/cache/uc.micro-npm-1.0.6-36f3dc2fc4-6898bb5563.zip/node_modules/uc.micro/categories/Cf/regex.js","webpack://moontale/./.yarn/cache/uc.micro-npm-1.0.6-36f3dc2fc4-6898bb5563.zip/node_modules/uc.micro/categories/P/regex.js","webpack://moontale/./.yarn/cache/uc.micro-npm-1.0.6-36f3dc2fc4-6898bb5563.zip/node_modules/uc.micro/categories/Z/regex.js","webpack://moontale/./.yarn/cache/uc.micro-npm-1.0.6-36f3dc2fc4-6898bb5563.zip/node_modules/uc.micro/index.js","webpack://moontale/./.yarn/cache/uc.micro-npm-1.0.6-36f3dc2fc4-6898bb5563.zip/node_modules/uc.micro/properties/Any/regex.js","webpack://moontale/webpack/bootstrap","webpack://moontale/webpack/runtime/make namespace object","webpack://moontale/webpack/runtime/publicPath","webpack://moontale/webpack/startup"],"sourcesContent":["import content_block from './rules/content_block'\nimport expression from './rules/expression'\nimport passage_link from './rules/passage_link'\nimport variable from './rules/variable'\nimport script_block from './rules/script_block'\nimport Token from 'markdown-it/lib/token'\nimport ParserInline from 'markdown-it/lib/parser_inline'\nimport ParserBlock from 'markdown-it/lib/parser_block'\nimport ParserCore from 'markdown-it/lib/parser_core'\nimport { isWhiteSpace } from 'markdown-it/lib/common/utils'\n\n// We construct our own MarkdownIt instance here to exclude the features we don't use\n// (which saves on the bundle size)\nconst md = {\n    inline: new ParserInline(),\n    block: new ParserBlock(),\n    core: new ParserCore(),\n    options: {\n        html:         false,\n        xhtmlOut:     false,\n        breaks:       false,\n        langPrefix:   'language-',\n        linkify:      false,\n        typographer:  true,\n        quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n        highlight: null as null,\n        maxNesting:   100\n    },\n    parse: function(src: string, env: object) {\n        if (typeof src !== 'string') {\n            throw new Error('Input data should be a String');\n        }\n        var state = new this.core.State(src, this, env);\n        this.core.process(state);\n        return state.tokens;\n    } \n}\n\nconst rules = md.inline.ruler\nrules.disable(['link', 'image', 'autolink'])\nrules.push('passage_link', passage_link)\nrules.push('content_block', content_block)\nrules.push('expression', expression)\nrules.push('script_block', script_block)\nrules.push('variable', variable)\nmd.block.ruler.disable(['reference'])\n\nfunction escape(input: string): string {\n    return input\n        .replace(/\\'/g, '\\\\\\'')\n        .replace(/\\n/g, '\\\\\\n')\n}\n\nfunction renderOne(input: Token, output: string[], state: {level: number, links: string[]}) {\n\n    function add(str: string) {\n        output.push(`${'  '.repeat(state.level)}${str}`)\n    }\n    // Undo the placeholder character added in preprocess()\n    input.content = input.content?.replace(/\\f/g, '\\n')\n    const changer = input.attrGet('changer')?.replace(/\\f/g, '\\n')\n    const href = escape(input.attrGet('href') ?? '')\n    switch (input.type) {\n    case 'inline':\n        for (const child of input.children) {\n            renderOne(child, output, state)\n        }\n        break\n    case 'text':\n        let content = input.content\n        if (content.length > 0) {\n            if (!isWhiteSpace(content.charCodeAt(content.length - 1))) {\n                content = content + ' '\n            }\n            add(`Text('${escape(content)}')`)\n        }\n        break\n    case 'link_open':\n        if (changer == null) {\n            add(`Link('${href}')(function()`)\n        } else {\n            add(`Combine(AsChanger(${changer}), Link('${href}'))(function()`)\n        }\n        state.level++\n        state.links.push(href)\n        break\n    case 'link_inline':\n        if (changer == null) {\n            add(`Display('${href}')`)\n        } else {\n            add(`AsChanger(${changer})(function() Display('${href}') end)`)\n        }\n        break\n    case 'content_open':\n        if (changer == null) {\n            add(`Show(function()`)\n        } else {\n            add(`AsChanger(${changer})(function()`)\n        }\n        state.level++\n        break\n    case 'code_variable':\n    case 'code_expression':\n        add(`Show(${input.content})`)\n        break\n    case 'code_block':\n        add(input.content)\n        break\n    default: \n        switch (input.nesting) {\n        case 1:\n            add(`Style.${input.tag}(function()`)\n            state.level++\n            break\n        case -1:\n            state.level--\n            add(`end)`)\n            break\n        case 0:\n            if (input.type == 'softbreak') {\n            } else if (input.tag != \"\") {\n                add(`Object('${input.tag}')`)\n            }\n            break\n        }\n    }\n}\n\nexport function parse(src: string) { return md.parse(preprocess(src), {}) }\n\nexport function markdownToLua(src: string, outputBuffer: string[], state: {level: number, links: string[]}) {\n    let startLevel = state.level\n    for(const token of md.parse(preprocess(src), {})) {\n        renderOne(token, outputBuffer, state)\n    }\n    while (state.level > startLevel) {\n        renderOne(new Token('content_close', '', -1), outputBuffer, state)\n    }\n}\n\nfunction preprocess(src: string): string {\n    let idx = 0\n    let out = \"\"\n    while (idx < src.length) {\n        let i1 = src.indexOf(\"{$\", idx)\n        let i2 = src.indexOf(\"<$\", idx)\n        let search: string\n        let start: number\n        if (i1 >= 0) {\n            start = i1\n            search = \"$}\"\n        } else if (i2 >= 0) {\n            start = i2\n            search = \"$>\"\n        } else {\n            out += src.substring(idx)\n            break\n        }\n        out += src.substring(idx, start)\n        let end = src.indexOf(search, idx + 2)\n        if (end < 0) {\n            end = src.length;\n        } else {\n            end = end + 2;\n        }\n        // Swap out newlines for a placeholder character, to force them to be 'inline'\n        out += src.substring(start, end).replace(/\\n/g, '\\f')\n        idx = end\n    }\n    return out\n}\n\nexport function storyToLua(story: Element): string {\n    let startNode = story.getAttribute('startnode')\n    let startNodeName: string | null = null\n    const buf: string[] = ['-- Generated with Moontale']\n    buf.push(`story = '${escape(story.getAttribute('name'))}'`)\n    buf.push(`Passages = {`)\n    for (let i = 0; i < story.children.length; i++) {\n        let node = story.children[i]\n        if (node.tagName.toLowerCase() === \"tw-passagedata\") {\n            if (startNode === node.getAttribute('pid')) {\n                startNodeName = node.getAttribute('name')\n            }\n            buf.push(`  ['${escape(node.getAttribute('name'))}'] = {`)\n            let tags = node.getAttribute('tags').split(' ')\n            if (tags.length === 1 && tags[0] === '') {\n                tags = []\n            }\n            buf.push(`    tags = { ${tags.map(t => `['${escape(t)}'] = true`).join(',')} },`)\n            buf.push(`    position = {${node.getAttribute('position')}},`)\n            buf.push(`    content = function()`)\n            let links: string[] = []\n            markdownToLua(node.textContent, buf, {level: 3, links})\n            buf.push(`    end,`)\n            buf.push(`    links = { ${links.map(t => `'${escape(t)}'`).join(',')} }`)\n            buf.push(`  },`)\n        }\n    }\n    buf.push(`}`)\n    buf.push(`StartPassage = '${escape(startNodeName)}'`)\n\n    return buf.join('\\n')\n}","\nimport { storyToLua } from './convert'\nimport { loadStory, start, raiseEvent, update } from './runtime'\nimport './style.css'\nimport moontaleLib from '../moontale-unity/Packages/com.hmilne.moontale/Runtime/moontale.lua'\nimport \"@fortawesome/fontawesome-free/svgs/solid/code.svg\"\n\nconst transitionTime = 200\n\nlet output = document.getElementById('output')\nlet outputContainer = document.getElementById('outputContainer')\nlet luaCode = document.getElementById('lua')\nlet inputDisabled = false\n\nlet toggle = document.getElementById('outputToggleInput') as HTMLInputElement\nfunction outputDisplay() {\n    outputContainer.style.display = toggle.checked ? 'none' : 'block'\n    luaCode.style.display = toggle.checked ? 'block' : 'none'\n}\ntoggle.onchange = event => {\n    outputContainer.style.opacity = toggle.checked ? '0' : '1'\n    luaCode.style.opacity = toggle.checked ? '1' : '0'\n    setTimeout(outputDisplay, transitionTime)\n}\n\nlet luaSrc = storyToLua(document.getElementById('storyData').children[0])\nluaCode.textContent = luaSrc\n\nlet download = document.getElementById('download') as HTMLAreaElement\ndownload.href = window.URL.createObjectURL(new Blob([luaSrc], {type: \"octet/stream\"}))\ndownload.download = document.title + \".lua\"\n\nfunction onNewText(html: string) {\n    output.innerHTML = html\n    output.style.opacity = '1'\n    inputDisabled = false\n}\n\nloadStory([moontaleLib, luaSrc], (html, invalidate) => {\n    if (invalidate) {\n        inputDisabled = true\n        output.style.opacity = '0'\n        setTimeout(onNewText, transitionTime, html)\n    } else {\n        onNewText(html)\n    }\n}, (message) => {\n    console.error(message)\n})\n\nfunction getEventId(event: Event): string | null {\n    let target = event.target as Element\n    while (target && !(Number(target.id) > 0)) {\n        target = target.parentElement\n    }\n    if (!target) {\n        return null\n    }\n    return target.id\n}\n\nlet hovering: string | null = null\n\nwindow.addEventListener('click', event => {\n    if (inputDisabled) {\n        return\n    }\n    let id = getEventId(event)\n    if (id !== null) {\n        hovering = null\n        raiseEvent(event.type, id)\n    }\n})\nwindow.addEventListener('mouseover', event => {\n    if (inputDisabled) {\n        return\n    }\n    let id = getEventId(event)\n    if (id === hovering) {\n        return\n    }\n    if (id !== null) {\n        if (hovering !== null) {\n            raiseEvent('mouseout', hovering)\n        }\n        hovering = id\n        raiseEvent(event.type, id)\n    }\n})\nwindow.addEventListener('mouseout', event => {\n    if (inputDisabled) {\n        return\n    }\n    let id = getEventId(event)\n    if (id !== null && id === hovering) {\n        hovering = null\n        raiseEvent(event.type, id)\n    }\n})\n\nlet lastTime = performance.now()\nlet callback: FrameRequestCallback = time => {\n    update((time - lastTime) * 1000)\n    lastTime = time\n    window.requestAnimationFrame(callback)\n}\nwindow.requestAnimationFrame(callback)\n\nstart()\n","// Handle [nested [content blocks]]\nimport StateInline from 'markdown-it/lib/rules_inline/state_inline'\n\nexport default function (state: StateInline, silent: boolean): boolean {\n\n    if (state.src.charCodeAt(state.pos) === 0x5B /* [ */) {\n\n        // If we immediately followed a variable or expression, use it as a Changer for this content:\n        const prevToken = state.tokens[state.tokens.length - 1]\n        let changer: string | null\n        if (prevToken && (prevToken.type == 'code_variable' || prevToken.type == 'code_expression')) {\n            // Remove the expression token; we don't want it to be printed in the output\n            state.tokens.splice(state.tokens.length - 1, 1)\n            changer = prevToken.content\n        } else {\n            changer = null\n        }\n\n        state.push('content_open', '', 1).attrs = [['changer', changer]]\n        state.pos++\n        return true\n    }\n\n    if (state.src.charCodeAt(state.pos) === 0x5D /* ] */) {\n        state.push('content_close', '', state.level <= 0 ? 0 : -1)\n        state.pos++\n        return true\n    }\n\n    return false\n}\n","// Handle <$ lua_expression $>\nimport StateInline from 'markdown-it/lib/rules_inline/state_inline'\n\nexport default function (state: StateInline, silent: boolean): boolean {\n\n    const markerLength = 2\n    if (!state.src.startsWith('<$', state.pos)) {\n        return false\n    }\n    const endMarker = state.src.indexOf('$>', state.pos + markerLength)\n    let endBlock: number, endSyntax: number;\n    if (endMarker < 0) {\n        endBlock = state.src.length\n        endSyntax = state.src.length\n    } else {\n        endBlock = endMarker\n        endSyntax = endMarker + markerLength\n    }\n    let tok = state.push('code_expression', '', 0)\n    tok.content = state.src.slice(state.pos + markerLength, endBlock)\n    tok.meta = state.pos\n    state.pos = endSyntax\n    return true\n}","// Handle [[passage->links]], all three forms\nimport StateInline from 'markdown-it/lib/rules_inline/state_inline'\n\nexport default function (state: StateInline, silent: boolean): boolean {\n\n    const markerLength = 2\n    if (!state.src.startsWith('[[', state.pos)) {\n        return false\n    }\n\n    const startPos = state.pos + markerLength\n    const srcEnd = state.posMax\n    let endPos = startPos\n    let ltrLink = -1\n    let rtlLink = -1\n    while (endPos < srcEnd && !state.src.startsWith(']]', endPos)) {\n        // For complex links, we always want to minimise the length of the 'target' and maximise the length of the 'label'\n        // So for RTL links, we want to take the left-most (first) occurrence, and for LTR, the right-most (last)\n        if (rtlLink === -1 && state.src.startsWith('<-', endPos)) {\n            rtlLink = endPos\n        } else if (state.src.startsWith('->', endPos)) {\n            ltrLink = endPos\n        }\n        endPos++\n    }\n\n    if (endPos === srcEnd) {\n        // No ']]' found; not a valid link\n        return false\n    }\n\n    if (ltrLink !== -1 && rtlLink !== -1) {\n        // In the first instance, prefer the form where the marker is closest to its 'end'\n        const rtlLength = rtlLink - startPos\n        const ltrLength = endPos - (ltrLink + markerLength)\n        // If it's something stupid like [[foo<- ->bar]] or [[foo-> <-bar]], prefer LTR links\n        if (rtlLength < ltrLength) {\n            ltrLink = -1\n        } else {\n            rtlLink = -1\n        }\n    }\n\n    // Slice up the target and label based on the link form\n    let target: string\n    if (ltrLink !== -1) {\n        target = state.src.slice(ltrLink + markerLength, endPos).trim()\n        state.pos = startPos\n        state.posMax = ltrLink\n    } else if (rtlLink !== -1) {\n        target = state.src.slice(startPos, rtlLink).trim()\n        state.pos = rtlLink + markerLength\n        state.posMax = endPos\n    } else {\n        target = state.src.slice(startPos, endPos).trim()\n        state.pos = startPos\n        state.posMax = endPos\n    }\n\n    // If we immediately followed a variable or expression, use it as a Changer for this content:\n    const prevToken = state.tokens[state.tokens.length - 1]\n    let changer: string | null\n    if (prevToken && (prevToken.type == 'code_variable' || prevToken.type == 'code_expression')) {\n        // Remove the expression token; we don't want it to be printed in the output\n        state.tokens.splice(state.tokens.length - 1, 1)\n        changer = prevToken.content\n    } else {\n        changer = null\n    }\n\n    // If the link matches [[ ->Foo]], then just display Foo inline\n    if (ltrLink !== -1 && state.src.slice(state.pos, state.posMax).trim() == \"\") {\n        state.push('link_inline', '', 0).attrs = [ ['href', target], ['changer', changer] ]\n    } else {\n        // The label can contain tokens itself, so we need to call 'tokenize' here\n        state.push('link_open', 'a', 1).attrs = [ ['href', target], ['changer', changer] ]\n        state.md.inline.tokenize(state)\n        state.push('link_close', 'a', -1)\n    }\n\n    // Restore the state to its original... state\n    state.pos = endPos + markerLength\n    state.posMax = srcEnd\n    return true\n\n}","// Handle {$ lua_script $}\nimport StateInline from 'markdown-it/lib/rules_inline/state_inline'\n\nexport default function (state: StateInline, silent: boolean): boolean {\n\n    const markerLength = 2\n    if (!state.src.startsWith('{$', state.pos)) {\n        return false\n    }\n    const endMarker = state.src.indexOf('$}', state.pos + markerLength)\n    let endBlock: number, endSyntax: number;\n    if (endMarker < 0) {\n        endBlock = state.src.length\n        endSyntax = state.src.length\n    } else {\n        endBlock = endMarker\n        endSyntax = endMarker + markerLength\n    }\n    let tok = state.push('code_block', '', 0)\n    tok.content = state.src.slice(state.pos + markerLength, endBlock)\n    tok.meta = state.pos\n    state.pos = endSyntax\n    return true\n}","// Handle $variables\nimport StateInline from 'markdown-it/lib/rules_inline/state_inline'\n\nfunction isLetter(code: number): boolean {\n    return code === 0x5F || (code >= 0x41 && code <= 0x5A) || (code >= 0x61 && code <= 0x7A)\n}\n\nfunction isLetterOrNumber(code: number): boolean {\n    return isLetter(code) || (code >= 0x30 && code <= 0x39)\n}\n\nfunction propertyExpression(state: StateInline, output: string[]): boolean {\n    let start = state.pos\n    if (state.src.charCodeAt(state.pos) != 0x2E /* . */) {\n        return false\n    }\n    if (!isLetter(state.src.charCodeAt(state.pos + 1))) {\n        return false\n    }\n    state.pos++\n    do {\n        state.pos++\n    } while (state.pos < state.src.length && isLetterOrNumber(state.src.charCodeAt(state.pos)))\n    output.push(state.src.slice(start, state.pos))\n    return true\n}\n\nfunction callExpression(state: StateInline, output: string[], begin: number, end: number): boolean {\n    if (state.src.charCodeAt(state.pos) != begin) {\n        return false\n    }\n    let start = state.pos\n    let pos = state.pos\n    let level = 1\n    let code: Number\n    do {\n        pos++\n        code = state.src.charCodeAt(pos)\n        if (code == begin) {\n            level++\n        } else if (code == end) {\n            level--\n        }\n    } while (level > 0 && code != 0x0A && pos < state.src.length)\n    if (level == 0) {\n        state.pos = pos + 1\n        output.push(state.src.slice(start, state.pos))\n        return true\n    }\n    return false\n}\n\nfunction lambdaExpression(state: StateInline, output: string[]): boolean {\n    if (!state.src.startsWith(\"<<\", state.pos)) {\n        return false\n    }\n    let found = state.src.indexOf(\">>\", state.pos + 2)\n    if (found < 0) {\n        return false\n    }\n    output.push(\"(function() \")\n    output.push(state.src.slice(state.pos + 2, found))\n    output.push(\" end)\")\n    state.pos = found + 2\n    return true\n}\n\nexport default function (state: StateInline, silent: boolean): boolean {\n\n    if (state.src.charCodeAt(state.pos) !== 0x24 /* $ */) {\n        return false\n    }\n    if (!isLetter(state.src.charCodeAt(state.pos + 1))) {\n        return false\n    }\n    const start = state.pos = state.pos + 1\n    do {\n        state.pos++\n    } while (isLetterOrNumber(state.src.charCodeAt(state.pos)))\n    let output = [state.src.slice(start, state.pos)]\n    while (propertyExpression(state, output) // foo.bar\n        || callExpression(state, output, 0x28, 0x29) // foo(bar)\n        || callExpression(state, output, 0x7B, 0x7D) // foo{bar}\n        || lambdaExpression(state, output) // foo<<bar>>\n    ) {\n        // Continue\n    }\n    let tok = state.push('code_variable', '', 0)\n    tok.content = output.join('')\n    tok.meta = start\n    return true\n}","import { lua, lauxlib, lualib, lua_State } from 'fengari'\n\nconst enc = new TextEncoder()\nlet L: lua_State | null = null\nlet tags: string[] = []\nlet buf: string[] = []\nlet emit: (html: string, invalidate: boolean)=>void | undefined\nlet wasChanged = false\nlet invalidated = false\n\nexport function loadStory(src: string[], emitFn: (html: string, invalidate: boolean)=>void, logFn: (error: string, trace: string)=>void) {\n    emit = emitFn\n    L = lauxlib.luaL_newstate()\n\n    lua.lua_atpanic(L, L => {\n        logFn(lua.lua_tojsstring(L, lua.lua_gettop(L)), \"Panic\")\n        return 0\n    })\n\n    lualib.luaL_openlibs(L)\n\n    lua.lua_register(L, \"print\", L => {\n        let l = lua.lua_gettop(L)\n        let args = []\n        for (let i = 1; i <= l; i++) {\n            args.push(lua.lua_tojsstring(L, i))\n        }\n        console.log(...args)\n        return 0\n    })\n\n    lua.lua_register(L, \"Log\", L => {\n        let top = lua.lua_gettop(L)\n        logFn(lua.lua_tojsstring(L, 1), lua.lua_tojsstring(L, 2))\n        return 0\n    })\n\n    lua.lua_register(L, \"Push\", L => {\n        let str = lua.lua_tojsstring(L, 1)\n        tags.push(str)\n        if (str == 'a') {\n            buf.push(`<a href=\"#\" id=\"${lua.lua_tonumber(L, 2)}\">`)\n            lua.lua_pop(L, 1)\n        } else if (str == 'color') {\n            buf.push(`<span style=\"color: ${lua.lua_tojsstring(L, 2)};\">`)\n        } else {\n            buf.push(`<${str}>`)\n        }\n        wasChanged = true\n        return 0\n    })\n    lua.lua_register(L, \"Pop\", L => {\n        let str = tags.splice(tags.length - 1, 1)[0]\n        if (str) {\n            if (str === \"color\") {\n                buf.push(`</span>`)\n            } else {\n                buf.push(`</${str}>`)\n            }\n        }\n        wasChanged = true\n        return 0\n    })\n    lua.lua_register(L, \"Text\", L => {\n        let str = lua.lua_tojsstring(L, 1)\n        buf.push(str)\n        wasChanged = true\n        return 0\n    })\n    lua.lua_register(L, \"Object\", L => {\n        let str = lua.lua_tojsstring(L, 1)\n        buf.push(`<${str}>`)\n        wasChanged = true\n        return 0\n    })\n    lua.lua_register(L, \"Clear\", L => {\n        buf = []\n        wasChanged = true\n        return 0\n    })\n    lua.lua_register(L, \"Invalidate\", L => {\n        invalidated = true\n        wasChanged = true\n        return 0\n    })\n\n    src.map(x => lauxlib.luaL_dostring(L, enc.encode(x)))\n}\n\nexport function raiseEvent(event: string, id: string) {\n    lua.lua_getglobal(L, 'RaiseEvent')\n    lua.lua_pushstring(L, event)\n    lua.lua_pushstring(L, id)\n    lua.lua_call(L, 2, 0)\n    if (wasChanged) {\n        wasChanged = false\n        emit?.(buf.join(''), invalidated)\n        invalidated = false;\n    }\n}\n\nexport function start() {\n    lua.lua_getglobal(L, 'SoftReset')\n    lua.lua_call(L, 0, 0)\n    emit?.(buf.join(''), invalidated)\n    invalidated = false\n    wasChanged = false\n}\n\nexport function update(deltaTime: number) {\n    lua.lua_getglobal(L, 'Update')\n    lua.lua_pushnumber(L, deltaTime)\n    lua.lua_call(L, 1, 0)\n    if (wasChanged) {\n        wasChanged = false\n        emit?.(buf.join(''), invalidated)\n        invalidated = false;\n    }\n}","\"use strict\";\n\n/*\n * Fengari specific string conversion functions\n */\n\nlet luastring_from;\nif (typeof Uint8Array.from === \"function\") {\n    luastring_from = Uint8Array.from.bind(Uint8Array);\n} else {\n    luastring_from = function(a) {\n        let i = 0;\n        let len = a.length;\n        let r = new Uint8Array(len);\n        while (len > i) r[i] = a[i++];\n        return r;\n    };\n}\n\nlet luastring_indexOf;\nif (typeof (new Uint8Array().indexOf) === \"function\") {\n    luastring_indexOf = function(s, v, i) {\n        return s.indexOf(v, i);\n    };\n} else {\n    /* Browsers that don't support Uint8Array.indexOf seem to allow using Array.indexOf on Uint8Array objects e.g. IE11 */\n    let array_indexOf = [].indexOf;\n    if (array_indexOf.call(new Uint8Array(1), 0) !== 0) throw Error(\"missing .indexOf\");\n    luastring_indexOf = function(s, v, i) {\n        return array_indexOf.call(s, v, i);\n    };\n}\n\nlet luastring_of;\nif (typeof Uint8Array.of === \"function\") {\n    luastring_of = Uint8Array.of.bind(Uint8Array);\n} else {\n    luastring_of = function() {\n        return luastring_from(arguments);\n    };\n}\n\nconst is_luastring = function(s) {\n    return s instanceof Uint8Array;\n};\n\n/* test two lua strings for equality */\nconst luastring_eq = function(a, b) {\n    if (a !== b) {\n        let len = a.length;\n        if (len !== b.length) return false;\n        /* XXX: Should this be a constant time algorithm? */\n        for (let i=0; i<len; i++)\n            if (a[i] !== b[i]) return false;\n    }\n    return true;\n};\n\nconst unicode_error_message = \"cannot convert invalid utf8 to javascript string\";\nconst to_jsstring = function(value, from, to, replacement_char) {\n    if (!is_luastring(value)) throw new TypeError(\"to_jsstring expects a Uint8Array\");\n\n    if (to === void 0) {\n        to = value.length;\n    } else {\n        to = Math.min(value.length, to);\n    }\n\n    let str = \"\";\n    for (let i = (from!==void 0?from:0); i < to;) {\n        let u0 = value[i++];\n        if (u0 < 0x80) {\n            /* single byte sequence */\n            str += String.fromCharCode(u0);\n        } else if (u0 < 0xC2 || u0 > 0xF4) {\n            if (!replacement_char) throw RangeError(unicode_error_message);\n            str += \"�\";\n        } else if (u0 <= 0xDF) {\n            /* two byte sequence */\n            if (i >= to) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u1 = value[i++];\n            if ((u1&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            str += String.fromCharCode(((u0 & 0x1F) << 6) + (u1 & 0x3F));\n        } else if (u0 <= 0xEF) {\n            /* three byte sequence */\n            if (i+1 >= to) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u1 = value[i++];\n            if ((u1&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u2 = value[i++];\n            if ((u2&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u = ((u0 & 0x0F) << 12) + ((u1 & 0x3F) << 6) + (u2 & 0x3F);\n            if (u <= 0xFFFF) { /* BMP codepoint */\n                str += String.fromCharCode(u);\n            } else { /* Astral codepoint */\n                u -= 0x10000;\n                let s1 = (u >> 10) + 0xD800;\n                let s2 = (u % 0x400) + 0xDC00;\n                str += String.fromCharCode(s1, s2);\n            }\n        } else {\n            /* four byte sequence */\n            if (i+2 >= to) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u1 = value[i++];\n            if ((u1&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u2 = value[i++];\n            if ((u2&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u3 = value[i++];\n            if ((u3&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            /* Has to be astral codepoint */\n            let u = ((u0 & 0x07) << 18) + ((u1 & 0x3F) << 12) + ((u2 & 0x3F) << 6) + (u3 & 0x3F);\n            u -= 0x10000;\n            let s1 = (u >> 10) + 0xD800;\n            let s2 = (u % 0x400) + 0xDC00;\n            str += String.fromCharCode(s1, s2);\n        }\n    }\n    return str;\n};\n\n/* bytes allowed unescaped in a uri */\nconst uri_allowed = (\";,/?:@&=+$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789,-_.!~*'()#\").split('').reduce(function(uri_allowed, c) {\n    uri_allowed[c.charCodeAt(0)] = true;\n    return uri_allowed;\n}, {});\n\n/* utility function to convert a lua string to a js string with uri escaping */\nconst to_uristring = function(a) {\n    if (!is_luastring(a)) throw new TypeError(\"to_uristring expects a Uint8Array\");\n    let s = \"\";\n    for (let i=0; i<a.length; i++) {\n        let v = a[i];\n        if (uri_allowed[v]) {\n            s += String.fromCharCode(v);\n        } else {\n            s += \"%\" + (v<0x10?\"0\":\"\") + v.toString(16);\n        }\n    }\n    return s;\n};\n\nconst to_luastring_cache = {};\n\nconst to_luastring = function(str, cache) {\n    if (typeof str !== \"string\") throw new TypeError(\"to_luastring expects a javascript string\");\n\n    if (cache) {\n        let cached = to_luastring_cache[str];\n        if (is_luastring(cached)) return cached;\n    }\n\n    let len = str.length;\n    let outU8Array = Array(len); /* array is at *least* going to be length of string */\n    let outIdx = 0;\n    for (let i = 0; i < len; ++i) {\n        let u = str.charCodeAt(i);\n        if (u <= 0x7F) {\n            outU8Array[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n            outU8Array[outIdx++] = 0xC0 | (u >> 6);\n            outU8Array[outIdx++] = 0x80 | (u & 63);\n        } else {\n            /* This part is to work around possible lack of String.codePointAt */\n            if (u >= 0xD800 && u <= 0xDBFF && (i+1) < len) {\n                /* is first half of surrogate pair */\n                let v = str.charCodeAt(i+1);\n                if (v >= 0xDC00 && v <= 0xDFFF) {\n                    /* is valid low surrogate */\n                    i++;\n                    u = (u - 0xD800) * 0x400 + v + 0x2400;\n                }\n            }\n            if (u <= 0xFFFF) {\n                outU8Array[outIdx++] = 0xE0 | (u >> 12);\n                outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n                outU8Array[outIdx++] = 0x80 | (u & 63);\n            } else {\n                outU8Array[outIdx++] = 0xF0 | (u >> 18);\n                outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n                outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n                outU8Array[outIdx++] = 0x80 | (u & 63);\n            }\n        }\n    }\n    outU8Array = luastring_from(outU8Array);\n\n    if (cache) to_luastring_cache[str] = outU8Array;\n\n    return outU8Array;\n};\n\nconst from_userstring = function(str) {\n    if (!is_luastring(str)) {\n        if (typeof str === \"string\") {\n            str = to_luastring(str);\n        } else {\n            throw new TypeError(\"expects an array of bytes or javascript string\");\n        }\n    }\n    return str;\n};\n\nmodule.exports.luastring_from    = luastring_from;\nmodule.exports.luastring_indexOf = luastring_indexOf;\nmodule.exports.luastring_of      = luastring_of;\nmodule.exports.is_luastring      = is_luastring;\nmodule.exports.luastring_eq      = luastring_eq;\nmodule.exports.to_jsstring       = to_jsstring;\nmodule.exports.to_uristring      = to_uristring;\nmodule.exports.to_luastring      = to_luastring;\nmodule.exports.from_userstring   = from_userstring;\n\n\n/* mark for precompiled code ('<esc>Lua') */\nconst LUA_SIGNATURE = to_luastring(\"\\x1bLua\");\n\nconst LUA_VERSION_MAJOR   = \"5\";\nconst LUA_VERSION_MINOR   = \"3\";\nconst LUA_VERSION_NUM     = 503;\nconst LUA_VERSION_RELEASE = \"4\";\n\nconst LUA_VERSION         = \"Lua \" + LUA_VERSION_MAJOR + \".\" + LUA_VERSION_MINOR;\nconst LUA_RELEASE         = LUA_VERSION + \".\" + LUA_VERSION_RELEASE;\nconst LUA_COPYRIGHT       = LUA_RELEASE + \"  Copyright (C) 1994-2017 Lua.org, PUC-Rio\";\nconst LUA_AUTHORS         = \"R. Ierusalimschy, L. H. de Figueiredo, W. Celes\";\n\nmodule.exports.LUA_SIGNATURE       = LUA_SIGNATURE;\nmodule.exports.LUA_VERSION_MAJOR   = LUA_VERSION_MAJOR;\nmodule.exports.LUA_VERSION_MINOR   = LUA_VERSION_MINOR;\nmodule.exports.LUA_VERSION_NUM     = LUA_VERSION_NUM;\nmodule.exports.LUA_VERSION_RELEASE = LUA_VERSION_RELEASE;\nmodule.exports.LUA_VERSION         = LUA_VERSION;\nmodule.exports.LUA_RELEASE         = LUA_RELEASE;\nmodule.exports.LUA_COPYRIGHT       = LUA_COPYRIGHT;\nmodule.exports.LUA_AUTHORS         = LUA_AUTHORS;\n\n\nconst thread_status = {\n    LUA_OK:        0,\n    LUA_YIELD:     1,\n    LUA_ERRRUN:    2,\n    LUA_ERRSYNTAX: 3,\n    LUA_ERRMEM:    4,\n    LUA_ERRGCMM:   5,\n    LUA_ERRERR:    6\n};\n\nconst constant_types = {\n    LUA_TNONE:          -1,\n    LUA_TNIL:           0,\n    LUA_TBOOLEAN:       1,\n    LUA_TLIGHTUSERDATA: 2,\n    LUA_TNUMBER:        3,\n    LUA_TSTRING:        4,\n    LUA_TTABLE:         5,\n    LUA_TFUNCTION:      6,\n    LUA_TUSERDATA:      7,\n    LUA_TTHREAD:        8,\n    LUA_NUMTAGS:        9\n};\n\nconstant_types.LUA_TSHRSTR = constant_types.LUA_TSTRING | (0 << 4);  /* short strings */\nconstant_types.LUA_TLNGSTR = constant_types.LUA_TSTRING | (1 << 4);  /* long strings */\n\nconstant_types.LUA_TNUMFLT = constant_types.LUA_TNUMBER | (0 << 4);  /* float numbers */\nconstant_types.LUA_TNUMINT = constant_types.LUA_TNUMBER | (1 << 4);  /* integer numbers */\n\nconstant_types.LUA_TLCL = constant_types.LUA_TFUNCTION | (0 << 4);  /* Lua closure */\nconstant_types.LUA_TLCF = constant_types.LUA_TFUNCTION | (1 << 4);  /* light C function */\nconstant_types.LUA_TCCL = constant_types.LUA_TFUNCTION | (2 << 4);  /* C closure */\n\n/*\n** Comparison and arithmetic functions\n*/\n\nconst LUA_OPADD  = 0;   /* ORDER TM, ORDER OP */\nconst LUA_OPSUB  = 1;\nconst LUA_OPMUL  = 2;\nconst LUA_OPMOD  = 3;\nconst LUA_OPPOW  = 4;\nconst LUA_OPDIV  = 5;\nconst LUA_OPIDIV = 6;\nconst LUA_OPBAND = 7;\nconst LUA_OPBOR  = 8;\nconst LUA_OPBXOR = 9;\nconst LUA_OPSHL  = 10;\nconst LUA_OPSHR  = 11;\nconst LUA_OPUNM  = 12;\nconst LUA_OPBNOT = 13;\n\nconst LUA_OPEQ = 0;\nconst LUA_OPLT = 1;\nconst LUA_OPLE = 2;\n\nconst LUA_MINSTACK = 20;\n\nconst { LUAI_MAXSTACK } = require('./luaconf.js');\nconst LUA_REGISTRYINDEX = -LUAI_MAXSTACK - 1000;\n\nconst lua_upvalueindex = function(i) {\n    return LUA_REGISTRYINDEX - i;\n};\n\n/* predefined values in the registry */\nconst LUA_RIDX_MAINTHREAD = 1;\nconst LUA_RIDX_GLOBALS    = 2;\nconst LUA_RIDX_LAST       = LUA_RIDX_GLOBALS;\n\nclass lua_Debug {\n    constructor() {\n        this.event = NaN;\n        this.name = null;           /* (n) */\n        this.namewhat = null;       /* (n) 'global', 'local', 'field', 'method' */\n        this.what = null;           /* (S) 'Lua', 'C', 'main', 'tail' */\n        this.source = null;         /* (S) */\n        this.currentline = NaN;     /* (l) */\n        this.linedefined = NaN;     /* (S) */\n        this.lastlinedefined = NaN; /* (S) */\n        this.nups = NaN;            /* (u) number of upvalues */\n        this.nparams = NaN;         /* (u) number of parameters */\n        this.isvararg = NaN;        /* (u) */\n        this.istailcall = NaN;      /* (t) */\n        this.short_src = null;      /* (S) */\n        /* private part */\n        this.i_ci = null;           /* active function */\n    }\n}\n\n/*\n** Event codes\n*/\nconst LUA_HOOKCALL     = 0;\nconst LUA_HOOKRET      = 1;\nconst LUA_HOOKLINE     = 2;\nconst LUA_HOOKCOUNT    = 3;\nconst LUA_HOOKTAILCALL = 4;\n\n\n/*\n** Event masks\n*/\nconst LUA_MASKCALL  = (1 << LUA_HOOKCALL);\nconst LUA_MASKRET   = (1 << LUA_HOOKRET);\nconst LUA_MASKLINE  = (1 << LUA_HOOKLINE);\nconst LUA_MASKCOUNT = (1 << LUA_HOOKCOUNT);\n\nmodule.exports.LUA_HOOKCALL            = LUA_HOOKCALL;\nmodule.exports.LUA_HOOKCOUNT           = LUA_HOOKCOUNT;\nmodule.exports.LUA_HOOKLINE            = LUA_HOOKLINE;\nmodule.exports.LUA_HOOKRET             = LUA_HOOKRET;\nmodule.exports.LUA_HOOKTAILCALL        = LUA_HOOKTAILCALL;\nmodule.exports.LUA_MASKCALL            = LUA_MASKCALL;\nmodule.exports.LUA_MASKCOUNT           = LUA_MASKCOUNT;\nmodule.exports.LUA_MASKLINE            = LUA_MASKLINE;\nmodule.exports.LUA_MASKRET             = LUA_MASKRET;\nmodule.exports.LUA_MINSTACK            = LUA_MINSTACK;\nmodule.exports.LUA_MULTRET             = -1;\nmodule.exports.LUA_OPADD               = LUA_OPADD;\nmodule.exports.LUA_OPBAND              = LUA_OPBAND;\nmodule.exports.LUA_OPBNOT              = LUA_OPBNOT;\nmodule.exports.LUA_OPBOR               = LUA_OPBOR;\nmodule.exports.LUA_OPBXOR              = LUA_OPBXOR;\nmodule.exports.LUA_OPDIV               = LUA_OPDIV;\nmodule.exports.LUA_OPEQ                = LUA_OPEQ;\nmodule.exports.LUA_OPIDIV              = LUA_OPIDIV;\nmodule.exports.LUA_OPLE                = LUA_OPLE;\nmodule.exports.LUA_OPLT                = LUA_OPLT;\nmodule.exports.LUA_OPMOD               = LUA_OPMOD;\nmodule.exports.LUA_OPMUL               = LUA_OPMUL;\nmodule.exports.LUA_OPPOW               = LUA_OPPOW;\nmodule.exports.LUA_OPSHL               = LUA_OPSHL;\nmodule.exports.LUA_OPSHR               = LUA_OPSHR;\nmodule.exports.LUA_OPSUB               = LUA_OPSUB;\nmodule.exports.LUA_OPUNM               = LUA_OPUNM;\nmodule.exports.LUA_REGISTRYINDEX       = LUA_REGISTRYINDEX;\nmodule.exports.LUA_RIDX_GLOBALS        = LUA_RIDX_GLOBALS;\nmodule.exports.LUA_RIDX_LAST           = LUA_RIDX_LAST;\nmodule.exports.LUA_RIDX_MAINTHREAD     = LUA_RIDX_MAINTHREAD;\nmodule.exports.constant_types          = constant_types;\nmodule.exports.lua_Debug               = lua_Debug;\nmodule.exports.lua_upvalueindex        = lua_upvalueindex;\nmodule.exports.thread_status           = thread_status;\n","/**\n@license MIT\n\nCopyright © 2017-2018 Benoit Giannangeli\nCopyright © 2017-2018 Daurnimator\nCopyright © 1994–2017 Lua.org, PUC-Rio.\n*/\n\n\"use strict\";\n\nconst core = require(\"./fengaricore.js\");\n\nmodule.exports.FENGARI_AUTHORS         = core.FENGARI_AUTHORS;\nmodule.exports.FENGARI_COPYRIGHT       = core.FENGARI_COPYRIGHT;\nmodule.exports.FENGARI_RELEASE         = core.FENGARI_RELEASE;\nmodule.exports.FENGARI_VERSION         = core.FENGARI_VERSION;\nmodule.exports.FENGARI_VERSION_MAJOR   = core.FENGARI_VERSION_MAJOR;\nmodule.exports.FENGARI_VERSION_MINOR   = core.FENGARI_VERSION_MINOR;\nmodule.exports.FENGARI_VERSION_NUM     = core.FENGARI_VERSION_NUM;\nmodule.exports.FENGARI_VERSION_RELEASE = core.FENGARI_VERSION_RELEASE;\n\nmodule.exports.luastring_eq      = core.luastring_eq;\nmodule.exports.luastring_indexOf = core.luastring_indexOf;\nmodule.exports.luastring_of      = core.luastring_of;\nmodule.exports.to_jsstring       = core.to_jsstring;\nmodule.exports.to_luastring      = core.to_luastring;\nmodule.exports.to_uristring      = core.to_uristring;\n\nconst luaconf = require('./luaconf.js');\nconst lua     = require('./lua.js');\nconst lauxlib = require('./lauxlib.js');\nconst lualib  = require('./lualib.js');\n\nmodule.exports.luaconf = luaconf;\nmodule.exports.lua     = lua;\nmodule.exports.lauxlib = lauxlib;\nmodule.exports.lualib  = lualib;\n","/* Fengari specific functions\n *\n * This file includes fengari-specific data or and functionality for users to\n * manipulate fengari's string type.\n * The fields are exposed to the user on the 'fengari' entry point; however to\n * avoid a dependency on defs.js from lauxlib.js they are defined in this file.\n */\n\nconst defs = require(\"./defs.js\");\n\nconst FENGARI_VERSION_MAJOR   = \"0\";\nconst FENGARI_VERSION_MINOR   = \"1\";\nconst FENGARI_VERSION_NUM     = 1;\nconst FENGARI_VERSION_RELEASE = \"4\";\nconst FENGARI_VERSION         = \"Fengari \" + FENGARI_VERSION_MAJOR + \".\" + FENGARI_VERSION_MINOR;\nconst FENGARI_RELEASE         = FENGARI_VERSION + \".\" + FENGARI_VERSION_RELEASE;\nconst FENGARI_AUTHORS         = \"B. Giannangeli, Daurnimator\";\nconst FENGARI_COPYRIGHT       = FENGARI_RELEASE + \"  Copyright (C) 2017-2018 \" + FENGARI_AUTHORS + \"\\nBased on: \" + defs.LUA_COPYRIGHT;\n\nmodule.exports.FENGARI_AUTHORS         = FENGARI_AUTHORS;\nmodule.exports.FENGARI_COPYRIGHT       = FENGARI_COPYRIGHT;\nmodule.exports.FENGARI_RELEASE         = FENGARI_RELEASE;\nmodule.exports.FENGARI_VERSION         = FENGARI_VERSION;\nmodule.exports.FENGARI_VERSION_MAJOR   = FENGARI_VERSION_MAJOR;\nmodule.exports.FENGARI_VERSION_MINOR   = FENGARI_VERSION_MINOR;\nmodule.exports.FENGARI_VERSION_NUM     = FENGARI_VERSION_NUM;\nmodule.exports.FENGARI_VERSION_RELEASE = FENGARI_VERSION_RELEASE;\nmodule.exports.is_luastring            = defs.is_luastring;\nmodule.exports.luastring_eq            = defs.luastring_eq;\nmodule.exports.luastring_from          = defs.luastring_from;\nmodule.exports.luastring_indexOf       = defs.luastring_indexOf;\nmodule.exports.luastring_of            = defs.luastring_of;\nmodule.exports.to_jsstring             = defs.to_jsstring;\nmodule.exports.to_luastring            = defs.to_luastring;\nmodule.exports.to_uristring            = defs.to_uristring;\nmodule.exports.from_userstring         = defs.from_userstring;\n","const {\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_setfield\n} = require('./lua.js');\nconst {\n    luaL_newlib\n} = require('./lauxlib.js');\nconst {\n    FENGARI_AUTHORS,\n    FENGARI_COPYRIGHT,\n    FENGARI_RELEASE,\n    FENGARI_VERSION,\n    FENGARI_VERSION_MAJOR,\n    FENGARI_VERSION_MINOR,\n    FENGARI_VERSION_NUM,\n    FENGARI_VERSION_RELEASE,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nconst luaopen_fengari = function(L) {\n    luaL_newlib(L, {});\n    lua_pushliteral(L, FENGARI_AUTHORS);\n    lua_setfield(L, -2, to_luastring(\"AUTHORS\"));\n    lua_pushliteral(L, FENGARI_COPYRIGHT);\n    lua_setfield(L, -2, to_luastring(\"COPYRIGHT\"));\n    lua_pushliteral(L, FENGARI_RELEASE);\n    lua_setfield(L, -2, to_luastring(\"RELEASE\"));\n    lua_pushliteral(L, FENGARI_VERSION);\n    lua_setfield(L, -2, to_luastring(\"VERSION\"));\n    lua_pushliteral(L, FENGARI_VERSION_MAJOR);\n    lua_setfield(L, -2, to_luastring(\"VERSION_MAJOR\"));\n    lua_pushliteral(L, FENGARI_VERSION_MINOR);\n    lua_setfield(L, -2, to_luastring(\"VERSION_MINOR\"));\n    lua_pushinteger(L, FENGARI_VERSION_NUM);\n    lua_setfield(L, -2, to_luastring(\"VERSION_NUM\"));\n    lua_pushliteral(L, FENGARI_VERSION_RELEASE);\n    lua_setfield(L, -2, to_luastring(\"VERSION_RELEASE\"));\n    return 1;\n};\n\nmodule.exports.luaopen_fengari = luaopen_fengari;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    LUA_OPBNOT,\n    LUA_OPEQ,\n    LUA_OPLE,\n    LUA_OPLT,\n    LUA_OPUNM,\n    LUA_REGISTRYINDEX,\n    LUA_RIDX_GLOBALS,\n    LUA_VERSION_NUM,\n    constant_types: {\n        LUA_NUMTAGS,\n        LUA_TBOOLEAN,\n        LUA_TCCL,\n        LUA_TFUNCTION,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNONE,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TTABLE,\n        LUA_TTHREAD,\n        LUA_TUSERDATA\n    },\n    thread_status: { LUA_OK },\n    from_userstring,\n    to_luastring,\n} = require('./defs.js');\nconst { api_check } = require('./llimits.js');\nconst ldebug    = require('./ldebug.js');\nconst ldo       = require('./ldo.js');\nconst { luaU_dump } = require('./ldump.js');\nconst lfunc     = require('./lfunc.js');\nconst lobject   = require('./lobject.js');\nconst lstate    = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_new,\n    luaS_newliteral\n} = require('./lstring.js');\nconst ltm       = require('./ltm.js');\nconst { LUAI_MAXSTACK } = require('./luaconf.js');\nconst lvm       = require('./lvm.js');\nconst ltable    = require('./ltable.js');\nconst { ZIO } = require('./lzio.js');\nconst TValue    = lobject.TValue;\nconst CClosure  = lobject.CClosure;\n\nconst api_incr_top = function(L) {\n    L.top++;\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n};\n\nconst api_checknelems = function(L, n) {\n    api_check(L, n < (L.top - L.ci.funcOff), \"not enough elements in the stack\");\n};\n\nconst fengari_argcheck = function(c) {\n    if (!c) throw TypeError(\"invalid argument\");\n};\n\nconst fengari_argcheckinteger = function(n) {\n    fengari_argcheck(typeof n === \"number\" && (n|0) === n);\n};\n\nconst isvalid = function(o) {\n    return o !== lobject.luaO_nilobject;\n};\n\nconst lua_version = function(L) {\n    if (L === null) return LUA_VERSION_NUM;\n    else return L.l_G.version;\n};\n\nconst lua_atpanic = function(L, panicf) {\n    let old = L.l_G.panic;\n    L.l_G.panic = panicf;\n    return old;\n};\n\nconst lua_atnativeerror = function(L, errorf) {\n    let old = L.l_G.atnativeerror;\n    L.l_G.atnativeerror = errorf;\n    return old;\n};\n\n// Return value for idx on stack\nconst index2addr = function(L, idx) {\n    let ci = L.ci;\n    if (idx > 0) {\n        let o = ci.funcOff + idx;\n        api_check(L, idx <= ci.top - (ci.funcOff + 1), \"unacceptable index\");\n        if (o >= L.top) return lobject.luaO_nilobject;\n        else return L.stack[o];\n    } else if (idx > LUA_REGISTRYINDEX) {\n        api_check(L, idx !== 0 && -idx <= L.top, \"invalid index\");\n        return L.stack[L.top + idx];\n    } else if (idx === LUA_REGISTRYINDEX) {\n        return L.l_G.l_registry;\n    } else { /* upvalues */\n        idx = LUA_REGISTRYINDEX - idx;\n        api_check(L, idx <= lfunc.MAXUPVAL + 1, \"upvalue index too large\");\n        if (ci.func.ttislcf()) /* light C function? */\n            return lobject.luaO_nilobject; /* it has no upvalues */\n        else {\n            return idx <= ci.func.value.nupvalues ? ci.func.value.upvalue[idx - 1] : lobject.luaO_nilobject;\n        }\n    }\n};\n\n// Like index2addr but returns the index on stack; doesn't allow pseudo indices\nconst index2addr_ = function(L, idx) {\n    let ci = L.ci;\n    if (idx > 0) {\n        let o = ci.funcOff + idx;\n        api_check(L, idx <= ci.top - (ci.funcOff + 1), \"unacceptable index\");\n        if (o >= L.top) return null;\n        else return o;\n    } else if (idx > LUA_REGISTRYINDEX) {\n        api_check(L, idx !== 0 && -idx <= L.top, \"invalid index\");\n        return L.top + idx;\n    } else { /* registry or upvalue */\n        throw Error(\"attempt to use pseudo-index\");\n    }\n};\n\nconst lua_checkstack = function(L, n) {\n    let res;\n    let ci = L.ci;\n    api_check(L, n >= 0, \"negative 'n'\");\n    if (L.stack_last - L.top > n) /* stack large enough? */\n        res = true;\n    else { /* no; need to grow stack */\n        let inuse = L.top + lstate.EXTRA_STACK;\n        if (inuse > LUAI_MAXSTACK - n)  /* can grow without overflow? */\n            res = false;  /* no */\n        else { /* try to grow stack */\n            ldo.luaD_growstack(L, n);\n            res = true;\n        }\n    }\n\n    if (res && ci.top < L.top + n)\n        ci.top = L.top + n;  /* adjust frame top */\n\n    return res;\n};\n\nconst lua_xmove = function(from, to, n) {\n    if (from === to) return;\n    api_checknelems(from, n);\n    api_check(from, from.l_G === to.l_G, \"moving among independent states\");\n    api_check(from, to.ci.top - to.top >= n, \"stack overflow\");\n    from.top -= n;\n    for (let i = 0; i < n; i++) {\n        to.stack[to.top] = new lobject.TValue();\n        lobject.setobj2s(to, to.top, from.stack[from.top + i]);\n        delete from.stack[from.top + i];\n        to.top++;\n    }\n};\n\n/*\n** basic stack manipulation\n*/\n\n/*\n** convert an acceptable stack index into an absolute index\n*/\nconst lua_absindex = function(L, idx) {\n    return (idx > 0 || idx <= LUA_REGISTRYINDEX)\n        ? idx\n        : (L.top - L.ci.funcOff) + idx;\n};\n\nconst lua_gettop = function(L) {\n    return L.top - (L.ci.funcOff + 1);\n};\n\nconst lua_pushvalue = function(L, idx) {\n    lobject.pushobj2s(L, index2addr(L, idx));\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n};\n\nconst lua_settop = function(L, idx) {\n    let func = L.ci.funcOff;\n    let newtop;\n    if (idx >= 0) {\n        api_check(L, idx <= L.stack_last - (func + 1), \"new top too large\");\n        newtop = func + 1 + idx;\n    } else {\n        api_check(L, -(idx + 1) <= L.top - (func + 1), \"invalid new top\");\n        newtop = L.top + idx + 1; /* 'subtract' index (index is negative) */\n    }\n    ldo.adjust_top(L, newtop);\n};\n\nconst lua_pop = function(L, n) {\n    lua_settop(L, -n - 1);\n};\n\nconst reverse = function(L, from, to) {\n    for (; from < to; from++, to--) {\n        let fromtv = L.stack[from];\n        let temp = new TValue(fromtv.type, fromtv.value);\n        lobject.setobjs2s(L, from, to);\n        lobject.setobj2s(L, to, temp);\n    }\n};\n\n/*\n** Let x = AB, where A is a prefix of length 'n'. Then,\n** rotate x n === BA. But BA === (A^r . B^r)^r.\n*/\nconst lua_rotate = function(L, idx, n) {\n    let t = L.top - 1;\n    let pIdx = index2addr_(L, idx);\n    let p = L.stack[pIdx];\n    api_check(L, isvalid(p) && idx > LUA_REGISTRYINDEX, \"index not in the stack\");\n    api_check(L, (n >= 0 ? n : -n) <= (t - pIdx + 1), \"invalid 'n'\");\n    let m = n >= 0 ? t - n : pIdx - n - 1;  /* end of prefix */\n    reverse(L, pIdx, m);\n    reverse(L, m + 1, L.top - 1);\n    reverse(L, pIdx, L.top - 1);\n};\n\nconst lua_copy = function(L, fromidx, toidx) {\n    let from = index2addr(L, fromidx);\n    index2addr(L, toidx).setfrom(from);\n};\n\nconst lua_remove = function(L, idx) {\n    lua_rotate(L, idx, -1);\n    lua_pop(L, 1);\n};\n\nconst lua_insert = function(L, idx) {\n    lua_rotate(L, idx, 1);\n};\n\nconst lua_replace = function(L, idx) {\n    lua_copy(L, -1, idx);\n    lua_pop(L, 1);\n};\n\n/*\n** push functions (JS -> stack)\n*/\n\nconst lua_pushnil = function(L) {\n    L.stack[L.top] = new TValue(LUA_TNIL, null);\n    api_incr_top(L);\n};\n\nconst lua_pushnumber = function(L, n) {\n    fengari_argcheck(typeof n === \"number\");\n    L.stack[L.top] = new TValue(LUA_TNUMFLT, n);\n    api_incr_top(L);\n};\n\nconst lua_pushinteger = function(L, n) {\n    fengari_argcheckinteger(n);\n    L.stack[L.top] = new TValue(LUA_TNUMINT, n);\n    api_incr_top(L);\n};\n\nconst lua_pushlstring = function(L, s, len) {\n    fengari_argcheckinteger(len);\n    let ts;\n    if (len === 0) {\n        s = to_luastring(\"\", true);\n        ts = luaS_bless(L, s);\n    } else {\n        s = from_userstring(s);\n        api_check(L, s.length >= len, \"invalid length to lua_pushlstring\");\n        ts = luaS_new(L, s.subarray(0, len));\n    }\n    lobject.pushsvalue2s(L, ts);\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return ts.value;\n};\n\nconst lua_pushstring = function (L, s) {\n    if (s === undefined || s === null) {\n        L.stack[L.top] = new TValue(LUA_TNIL, null);\n        L.top++;\n    } else {\n        let ts = luaS_new(L, from_userstring(s));\n        lobject.pushsvalue2s(L, ts);\n        s = ts.getstr(); /* internal copy */\n    }\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return s;\n};\n\nconst lua_pushvfstring = function (L, fmt, argp) {\n    fmt = from_userstring(fmt);\n    return lobject.luaO_pushvfstring(L, fmt, argp);\n};\n\nconst lua_pushfstring = function (L, fmt, ...argp) {\n    fmt = from_userstring(fmt);\n    return lobject.luaO_pushvfstring(L, fmt, argp);\n};\n\n/* Similar to lua_pushstring, but takes a JS string */\nconst lua_pushliteral = function (L, s) {\n    if (s === undefined || s === null) {\n        L.stack[L.top] = new TValue(LUA_TNIL, null);\n        L.top++;\n    } else {\n        fengari_argcheck(typeof s === \"string\");\n        let ts = luaS_newliteral(L, s);\n        lobject.pushsvalue2s(L, ts);\n        s = ts.getstr(); /* internal copy */\n    }\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n\n    return s;\n};\n\nconst lua_pushcclosure = function(L, fn, n) {\n    fengari_argcheck(typeof fn === \"function\");\n    fengari_argcheckinteger(n);\n    if (n === 0)\n        L.stack[L.top] = new TValue(LUA_TLCF, fn);\n    else {\n        api_checknelems(L, n);\n        api_check(L, n <= lfunc.MAXUPVAL, \"upvalue index too large\");\n        let cl = new CClosure(L, fn, n);\n        for (let i=0; i<n; i++)\n            cl.upvalue[i].setfrom(L.stack[L.top - n + i]);\n        for (let i=1; i<n; i++)\n            delete L.stack[--L.top];\n        if (n>0)\n            --L.top;\n        L.stack[L.top].setclCvalue(cl);\n    }\n    api_incr_top(L);\n};\n\nconst lua_pushjsclosure = lua_pushcclosure;\n\nconst lua_pushcfunction = function(L, fn) {\n    lua_pushcclosure(L, fn, 0);\n};\n\nconst lua_pushjsfunction = lua_pushcfunction;\n\nconst lua_pushboolean = function(L, b) {\n    L.stack[L.top] = new TValue(LUA_TBOOLEAN, !!b);\n    api_incr_top(L);\n};\n\nconst lua_pushlightuserdata = function(L, p) {\n    L.stack[L.top] = new TValue(LUA_TLIGHTUSERDATA, p);\n    api_incr_top(L);\n};\n\nconst lua_pushthread = function(L) {\n    L.stack[L.top] = new TValue(LUA_TTHREAD, L);\n    api_incr_top(L);\n    return L.l_G.mainthread === L;\n};\n\nconst lua_pushglobaltable = function(L) {\n    lua_rawgeti(L, LUA_REGISTRYINDEX, LUA_RIDX_GLOBALS);\n};\n\n/*\n** set functions (stack -> Lua)\n*/\n\n/*\n** t[k] = value at the top of the stack (where 'k' is a string)\n*/\nconst auxsetstr = function(L, t, k) {\n    let str = luaS_new(L, from_userstring(k));\n    api_checknelems(L, 1);\n    lobject.pushsvalue2s(L, str); /* push 'str' (to make it a TValue) */\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    lvm.settable(L, t, L.stack[L.top - 1], L.stack[L.top - 2]);\n    /* pop value and key */\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_setglobal = function(L, name) {\n    auxsetstr(L, ltable.luaH_getint(L.l_G.l_registry.value, LUA_RIDX_GLOBALS), name);\n};\n\nconst lua_setmetatable = function(L, objindex) {\n    api_checknelems(L, 1);\n    let mt;\n    let obj = index2addr(L, objindex);\n    if (L.stack[L.top - 1].ttisnil())\n        mt = null;\n    else {\n        api_check(L, L.stack[L.top - 1].ttistable(), \"table expected\");\n        mt = L.stack[L.top - 1].value;\n    }\n\n    switch (obj.ttnov()) {\n        case LUA_TUSERDATA:\n        case LUA_TTABLE: {\n            obj.value.metatable = mt;\n            break;\n        }\n        default: {\n            L.l_G.mt[obj.ttnov()] = mt;\n            break;\n        }\n    }\n\n    delete L.stack[--L.top];\n    return true;\n};\n\nconst lua_settable = function(L, idx) {\n    api_checknelems(L, 2);\n    let t = index2addr(L, idx);\n    lvm.settable(L, t, L.stack[L.top - 2], L.stack[L.top - 1]);\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_setfield = function(L, idx, k) {\n    auxsetstr(L, index2addr(L, idx), k);\n};\n\nconst lua_seti = function(L, idx, n) {\n    fengari_argcheckinteger(n);\n    api_checknelems(L, 1);\n    let t = index2addr(L, idx);\n    L.stack[L.top] = new TValue(LUA_TNUMINT, n);\n    api_incr_top(L);\n    lvm.settable(L, t, L.stack[L.top - 1], L.stack[L.top - 2]);\n    /* pop value and key */\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_rawset = function(L, idx) {\n    api_checknelems(L, 2);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttistable(), \"table expected\");\n    let k = L.stack[L.top - 2];\n    let v = L.stack[L.top - 1];\n    ltable.luaH_setfrom(L, o.value, k, v);\n    ltable.invalidateTMcache(o.value);\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_rawseti = function(L, idx, n) {\n    fengari_argcheckinteger(n);\n    api_checknelems(L, 1);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttistable(), \"table expected\");\n    ltable.luaH_setint(o.value, n, L.stack[L.top - 1]);\n    delete L.stack[--L.top];\n};\n\nconst lua_rawsetp = function(L, idx, p) {\n    api_checknelems(L, 1);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttistable(), \"table expected\");\n    let k = new TValue(LUA_TLIGHTUSERDATA, p);\n    let v = L.stack[L.top - 1];\n    ltable.luaH_setfrom(L, o.value, k, v);\n    delete L.stack[--L.top];\n};\n\n/*\n** get functions (Lua -> stack)\n*/\n\nconst auxgetstr = function(L, t, k) {\n    let str = luaS_new(L, from_userstring(k));\n    lobject.pushsvalue2s(L, str);\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    lvm.luaV_gettable(L, t, L.stack[L.top - 1], L.top - 1);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_rawgeti = function(L, idx, n) {\n    let t = index2addr(L, idx);\n    fengari_argcheckinteger(n);\n    api_check(L, t.ttistable(), \"table expected\");\n    lobject.pushobj2s(L, ltable.luaH_getint(t.value, n));\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_rawgetp = function(L, idx, p) {\n    let t = index2addr(L, idx);\n    api_check(L, t.ttistable(), \"table expected\");\n    let k = new TValue(LUA_TLIGHTUSERDATA, p);\n    lobject.pushobj2s(L, ltable.luaH_get(L, t.value, k));\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_rawget = function(L, idx) {\n    let t = index2addr(L, idx);\n    api_check(L, t.ttistable(t), \"table expected\");\n    lobject.setobj2s(L, L.top - 1, ltable.luaH_get(L, t.value, L.stack[L.top - 1]));\n    return L.stack[L.top - 1].ttnov();\n};\n\n// narray and nrec are mostly useless for this implementation\nconst lua_createtable = function(L, narray, nrec) {\n    let t = new lobject.TValue(LUA_TTABLE, ltable.luaH_new(L));\n    L.stack[L.top] = t;\n    api_incr_top(L);\n};\n\nconst luaS_newudata = function(L, size) {\n    return new lobject.Udata(L, size);\n};\n\nconst lua_newuserdata = function(L, size) {\n    let u = luaS_newudata(L, size);\n    L.stack[L.top] = new lobject.TValue(LUA_TUSERDATA, u);\n    api_incr_top(L);\n    return u.data;\n};\n\nconst aux_upvalue = function(L, fi, n) {\n    fengari_argcheckinteger(n);\n    switch(fi.ttype()) {\n        case LUA_TCCL: {  /* C closure */\n            let f = fi.value;\n            if (!(1 <= n && n <= f.nupvalues)) return null;\n            return {\n                name: to_luastring(\"\", true),\n                val: f.upvalue[n-1]\n            };\n        }\n        case LUA_TLCL: {  /* Lua closure */\n            let f = fi.value;\n            let p = f.p;\n            if (!(1 <= n && n <= p.upvalues.length)) return null;\n            let name = p.upvalues[n-1].name;\n            return {\n                name: name ? name.getstr() : to_luastring(\"(*no name)\", true),\n                val: f.upvals[n-1]\n            };\n        }\n        default: return null;  /* not a closure */\n    }\n};\n\nconst lua_getupvalue = function(L, funcindex, n) {\n    let up = aux_upvalue(L, index2addr(L, funcindex), n);\n    if (up) {\n        let name = up.name;\n        let val = up.val;\n        lobject.pushobj2s(L, val);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n        return name;\n    }\n    return null;\n};\n\nconst lua_setupvalue = function(L, funcindex, n) {\n    let fi = index2addr(L, funcindex);\n    api_checknelems(L, 1);\n    let aux = aux_upvalue(L, fi, n);\n    if (aux) {\n        let name = aux.name;\n        let val = aux.val;\n        val.setfrom(L.stack[L.top-1]);\n        delete L.stack[--L.top];\n        return name;\n    }\n    return null;\n};\n\nconst lua_newtable = function(L) {\n    lua_createtable(L, 0, 0);\n};\n\nconst lua_register = function(L, n, f) {\n    lua_pushcfunction(L, f);\n    lua_setglobal(L, n);\n};\n\nconst lua_getmetatable = function(L, objindex) {\n    let obj = index2addr(L, objindex);\n    let mt;\n    let res = false;\n    switch (obj.ttnov()) {\n        case LUA_TTABLE:\n        case LUA_TUSERDATA:\n            mt = obj.value.metatable;\n            break;\n        default:\n            mt = L.l_G.mt[obj.ttnov()];\n            break;\n    }\n\n    if (mt !== null && mt !== undefined) {\n        L.stack[L.top] = new TValue(LUA_TTABLE, mt);\n        api_incr_top(L);\n        res = true;\n    }\n\n    return res;\n};\n\nconst lua_getuservalue = function(L, idx) {\n    let o = index2addr(L, idx);\n    api_check(L, o.ttisfulluserdata(), \"full userdata expected\");\n    let uv = o.value.uservalue;\n    L.stack[L.top] = new TValue(uv.type, uv.value);\n    api_incr_top(L);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_gettable = function(L, idx) {\n    let t = index2addr(L, idx);\n    lvm.luaV_gettable(L, t, L.stack[L.top - 1], L.top - 1);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_getfield = function(L, idx, k) {\n    return auxgetstr(L, index2addr(L, idx), k);\n};\n\nconst lua_geti = function(L, idx, n) {\n    let t = index2addr(L, idx);\n    fengari_argcheckinteger(n);\n    L.stack[L.top] = new TValue(LUA_TNUMINT, n);\n    api_incr_top(L);\n    lvm.luaV_gettable(L, t, L.stack[L.top - 1], L.top - 1);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_getglobal = function(L, name) {\n    return auxgetstr(L, ltable.luaH_getint(L.l_G.l_registry.value, LUA_RIDX_GLOBALS), name);\n};\n\n/*\n** access functions (stack -> JS)\n*/\n\nconst lua_toboolean = function(L, idx) {\n    let o = index2addr(L, idx);\n    return !o.l_isfalse();\n};\n\nconst lua_tolstring = function(L, idx) {\n    let o = index2addr(L, idx);\n\n    if (!o.ttisstring()) {\n        if (!lvm.cvt2str(o)) {  /* not convertible? */\n            return null;\n        }\n        lobject.luaO_tostring(L, o);\n    }\n    return o.svalue();\n};\n\nconst lua_tostring =  lua_tolstring;\n\nconst lua_tojsstring = function(L, idx) {\n    let o = index2addr(L, idx);\n\n    if (!o.ttisstring()) {\n        if (!lvm.cvt2str(o)) {  /* not convertible? */\n            return null;\n        }\n        lobject.luaO_tostring(L, o);\n    }\n    return o.jsstring();\n};\n\nconst lua_todataview = function(L, idx) {\n    let u8 = lua_tolstring(L, idx);\n    return new DataView(u8.buffer, u8.byteOffset, u8.byteLength);\n};\n\nconst lua_rawlen = function(L, idx) {\n    let o = index2addr(L, idx);\n    switch (o.ttype()) {\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR:\n            return o.vslen();\n        case LUA_TUSERDATA:\n            return o.value.len;\n        case LUA_TTABLE:\n            return ltable.luaH_getn(o.value);\n        default:\n            return 0;\n    }\n};\n\nconst lua_tocfunction = function(L, idx) {\n    let o = index2addr(L, idx);\n    if (o.ttislcf() || o.ttisCclosure()) return o.value;\n    else return null;  /* not a C function */\n};\n\nconst lua_tointeger = function(L, idx) {\n    let n = lua_tointegerx(L, idx);\n    return n === false ? 0 : n;\n};\n\nconst lua_tointegerx = function(L, idx) {\n    return lvm.tointeger(index2addr(L, idx));\n};\n\nconst lua_tonumber = function(L, idx) {\n    let n = lua_tonumberx(L, idx);\n    return n === false ? 0 : n;\n};\n\nconst lua_tonumberx = function(L, idx) {\n    return lvm.tonumber(index2addr(L, idx));\n};\n\nconst lua_touserdata = function(L, idx) {\n    let o = index2addr(L, idx);\n    switch (o.ttnov()) {\n        case LUA_TUSERDATA:\n            return o.value.data;\n        case LUA_TLIGHTUSERDATA:\n            return o.value;\n        default: return null;\n    }\n};\n\nconst lua_tothread = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttisthread() ? o.value : null;\n};\n\nconst lua_topointer = function(L, idx) {\n    let o = index2addr(L, idx);\n    switch (o.ttype()) {\n        case LUA_TTABLE:\n        case LUA_TLCL:\n        case LUA_TCCL:\n        case LUA_TLCF:\n        case LUA_TTHREAD:\n        case LUA_TUSERDATA: /* note: this differs in behaviour to reference lua implementation */\n        case LUA_TLIGHTUSERDATA:\n            return o.value;\n        default:\n            return null;\n    }\n};\n\n\n/* A proxy is a function that the same lua value to the given lua state. */\n\n/* Having a weakmap of created proxies was only way I could think of to provide an 'isproxy' function */\nconst seen = new WeakMap();\n\n/* is the passed object a proxy? is it from the given state? (if passed) */\nconst lua_isproxy = function(p, L) {\n    let G = seen.get(p);\n    if (!G)\n        return false;\n    return (L === null) || (L.l_G === G);\n};\n\n/* Use 'create_proxy' helper function so that 'L' is not in scope */\nconst create_proxy = function(G, type, value) {\n    let proxy = function(L) {\n        api_check(L, L instanceof lstate.lua_State && G === L.l_G, \"must be from same global state\");\n        L.stack[L.top] = new TValue(type, value);\n        api_incr_top(L);\n    };\n    seen.set(proxy, G);\n    return proxy;\n};\n\nconst lua_toproxy = function(L, idx) {\n    let tv = index2addr(L, idx);\n    /* pass broken down tv incase it is an upvalue index */\n    return create_proxy(L.l_G, tv.type, tv.value);\n};\n\n\nconst lua_compare = function(L, index1, index2, op) {\n    let o1 = index2addr(L, index1);\n    let o2 = index2addr(L, index2);\n\n    let i = 0;\n\n    if (isvalid(o1) && isvalid(o2)) {\n        switch (op) {\n            case LUA_OPEQ: i = lvm.luaV_equalobj(L, o1, o2); break;\n            case LUA_OPLT: i = lvm.luaV_lessthan(L, o1, o2); break;\n            case LUA_OPLE: i = lvm.luaV_lessequal(L, o1, o2); break;\n            default: api_check(L, false, \"invalid option\");\n        }\n    }\n\n    return i;\n};\n\nconst lua_stringtonumber = function(L, s) {\n    let tv = new TValue();\n    let sz = lobject.luaO_str2num(s, tv);\n    if (sz !== 0) {\n        L.stack[L.top] = tv;\n        api_incr_top(L);\n    }\n    return sz;\n};\n\nconst f_call = function(L, ud) {\n    ldo.luaD_callnoyield(L, ud.funcOff, ud.nresults);\n};\n\nconst lua_type = function(L, idx) {\n    let o = index2addr(L, idx);\n    return isvalid(o) ?  o.ttnov() : LUA_TNONE;\n};\n\nconst lua_typename = function(L, t) {\n    api_check(L, LUA_TNONE <= t && t < LUA_NUMTAGS, \"invalid tag\");\n    return ltm.ttypename(t);\n};\n\nconst lua_iscfunction = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttislcf(o) || o.ttisCclosure();\n};\n\nconst lua_isnil = function(L, n) {\n    return lua_type(L, n) === LUA_TNIL;\n};\n\nconst lua_isboolean = function(L, n) {\n    return lua_type(L, n) === LUA_TBOOLEAN;\n};\n\nconst lua_isnone = function(L, n) {\n    return lua_type(L, n) === LUA_TNONE;\n};\n\nconst lua_isnoneornil = function(L, n) {\n    return lua_type(L, n) <= 0;\n};\n\nconst lua_istable = function(L, idx) {\n    return index2addr(L, idx).ttistable();\n};\n\nconst lua_isinteger = function(L, idx) {\n    return index2addr(L, idx).ttisinteger();\n};\n\nconst lua_isnumber = function(L, idx) {\n    return lvm.tonumber(index2addr(L, idx)) !== false;\n};\n\nconst lua_isstring = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttisstring() || lvm.cvt2str(o);\n};\n\nconst lua_isuserdata = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttisfulluserdata(o) || o.ttislightuserdata();\n};\n\nconst lua_isthread = function(L, idx) {\n    return lua_type(L, idx) === LUA_TTHREAD;\n};\n\nconst lua_isfunction = function(L, idx) {\n    return lua_type(L, idx) === LUA_TFUNCTION;\n};\n\nconst lua_islightuserdata = function(L, idx) {\n    return lua_type(L, idx) === LUA_TLIGHTUSERDATA;\n};\n\nconst lua_rawequal = function(L, index1, index2) {\n    let o1 = index2addr(L, index1);\n    let o2 = index2addr(L, index2);\n    return isvalid(o1) && isvalid(o2) ? lvm.luaV_equalobj(null, o1, o2) : 0;\n};\n\nconst lua_arith = function(L, op) {\n    if (op !== LUA_OPUNM && op !== LUA_OPBNOT)\n        api_checknelems(L, 2);  /* all other operations expect two operands */\n    else {  /* for unary operations, add fake 2nd operand */\n        api_checknelems(L, 1);\n        lobject.pushobj2s(L, L.stack[L.top-1]);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    }\n    /* first operand at top - 2, second at top - 1; result go to top - 2 */\n    lobject.luaO_arith(L, op, L.stack[L.top - 2], L.stack[L.top - 1], L.stack[L.top - 2]);\n    delete L.stack[--L.top];  /* remove second operand */\n};\n\n/*\n** 'load' and 'call' functions (run Lua code)\n*/\n\nconst default_chunkname = to_luastring(\"?\");\nconst lua_load = function(L, reader, data, chunkname, mode) {\n    if (!chunkname) chunkname = default_chunkname;\n    else chunkname = from_userstring(chunkname);\n    if (mode !== null) mode = from_userstring(mode);\n    let z = new ZIO(L, reader, data);\n    let status = ldo.luaD_protectedparser(L, z, chunkname, mode);\n    if (status === LUA_OK) {  /* no errors? */\n        let f = L.stack[L.top - 1].value; /* get newly created function */\n        if (f.nupvalues >= 1) {  /* does it have an upvalue? */\n            /* get global table from registry */\n            let gt = ltable.luaH_getint(L.l_G.l_registry.value, LUA_RIDX_GLOBALS);\n            /* set global table as 1st upvalue of 'f' (may be LUA_ENV) */\n            f.upvals[0].setfrom(gt);\n        }\n    }\n    return status;\n};\n\nconst lua_dump = function(L, writer, data, strip) {\n    api_checknelems(L, 1);\n    let o = L.stack[L.top -1];\n    if (o.ttisLclosure())\n        return luaU_dump(L, o.value.p, writer, data, strip);\n    return 1;\n};\n\nconst lua_status = function(L) {\n    return L.status;\n};\n\nconst lua_setuservalue = function(L, idx) {\n    api_checknelems(L, 1);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttisfulluserdata(), \"full userdata expected\");\n    o.value.uservalue.setfrom(L.stack[L.top - 1]);\n    delete L.stack[--L.top];\n};\n\nconst checkresults = function(L,na,nr) {\n    api_check(L, nr === LUA_MULTRET || (L.ci.top - L.top >= (nr) - (na)),\n        \"results from function overflow current stack size\");\n};\n\nconst lua_callk = function(L, nargs, nresults, ctx, k) {\n    api_check(L, k === null || !(L.ci.callstatus & lstate.CIST_LUA), \"cannot use continuations inside hooks\");\n    api_checknelems(L, nargs + 1);\n    api_check(L, L.status === LUA_OK, \"cannot do calls on non-normal thread\");\n    checkresults(L, nargs, nresults);\n    let func = L.top - (nargs + 1);\n    if (k !== null && L.nny === 0) { /* need to prepare continuation? */\n        L.ci.c_k = k;\n        L.ci.c_ctx = ctx;\n        ldo.luaD_call(L, func, nresults);\n    } else { /* no continuation or no yieldable */\n        ldo.luaD_callnoyield(L, func, nresults);\n    }\n\n    if (nresults === LUA_MULTRET && L.ci.top < L.top)\n        L.ci.top = L.top;\n};\n\nconst lua_call = function(L, n, r) {\n    lua_callk(L, n, r, 0, null);\n};\n\nconst lua_pcallk = function(L, nargs, nresults, errfunc, ctx, k) {\n    api_check(L, k === null || !(L.ci.callstatus & lstate.CIST_LUA), \"cannot use continuations inside hooks\");\n    api_checknelems(L, nargs + 1);\n    api_check(L, L.status === LUA_OK, \"cannot do calls on non-normal thread\");\n    checkresults(L, nargs, nresults);\n    let status;\n    let func;\n    if (errfunc === 0)\n        func = 0;\n    else {\n        func = index2addr_(L, errfunc);\n    }\n    let funcOff = L.top - (nargs + 1); /* function to be called */\n    if (k === null || L.nny > 0) { /* no continuation or no yieldable? */\n        let c = {\n            funcOff: funcOff,\n            nresults: nresults /* do a 'conventional' protected call */\n        };\n        status = ldo.luaD_pcall(L, f_call, c, funcOff, func);\n    } else { /* prepare continuation (call is already protected by 'resume') */\n        let ci = L.ci;\n        ci.c_k = k;  /* prepare continuation (call is already protected by 'resume') */\n        ci.c_ctx = ctx;  /* prepare continuation (call is already protected by 'resume') */\n        /* save information for error recovery */\n        ci.extra = funcOff;\n        ci.c_old_errfunc = L.errfunc;\n        L.errfunc = func;\n        ci.callstatus &= ~lstate.CIST_OAH | L.allowhook;\n        ci.callstatus |= lstate.CIST_YPCALL;  /* function can do error recovery */\n        ldo.luaD_call(L, funcOff, nresults);  /* do the call */\n        ci.callstatus &= ~lstate.CIST_YPCALL;\n        L.errfunc = ci.c_old_errfunc;\n        status = LUA_OK;\n    }\n\n    if (nresults === LUA_MULTRET && L.ci.top < L.top)\n        L.ci.top = L.top;\n\n    return status;\n};\n\nconst lua_pcall = function(L, n, r, f) {\n    return lua_pcallk(L, n, r, f, 0, null);\n};\n\n/*\n** miscellaneous functions\n*/\n\nconst lua_error = function(L) {\n    api_checknelems(L, 1);\n    ldebug.luaG_errormsg(L);\n};\n\nconst lua_next = function(L, idx) {\n    let t = index2addr(L, idx);\n    api_check(L, t.ttistable(), \"table expected\");\n    L.stack[L.top] = new TValue();\n    let more = ltable.luaH_next(L, t.value, L.top - 1);\n    if (more) {\n        api_incr_top(L);\n        return 1;\n    } else {\n        delete L.stack[L.top];\n        delete L.stack[--L.top];\n        return 0;\n    }\n};\n\nconst lua_concat = function(L, n) {\n    api_checknelems(L, n);\n    if (n >= 2)\n        lvm.luaV_concat(L, n);\n    else if (n === 0) {\n        lobject.pushsvalue2s(L, luaS_bless(L, to_luastring(\"\", true)));\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    }\n};\n\nconst lua_len = function(L, idx) {\n    let t = index2addr(L, idx);\n    let tv = new TValue();\n    lvm.luaV_objlen(L, tv, t);\n    L.stack[L.top] = tv;\n    api_incr_top(L);\n};\n\nconst getupvalref = function(L, fidx, n) {\n    let fi = index2addr(L, fidx);\n    api_check(L, fi.ttisLclosure(), \"Lua function expected\");\n    let f = fi.value;\n    fengari_argcheckinteger(n);\n    api_check(L, 1 <= n && n <= f.p.upvalues.length, \"invalid upvalue index\");\n    return {\n        f: f,\n        i: n - 1\n    };\n};\n\nconst lua_upvalueid = function(L, fidx, n) {\n    let fi = index2addr(L, fidx);\n    switch (fi.ttype()) {\n        case LUA_TLCL: {  /* lua closure */\n            let ref = getupvalref(L, fidx, n);\n            return ref.f.upvals[ref.i];\n        }\n        case LUA_TCCL: {  /* C closure */\n            let f = fi.value;\n            api_check(L, (n|0) === n && n > 0 && n <= f.nupvalues, \"invalid upvalue index\");\n            return f.upvalue[n - 1];\n        }\n        default: {\n            api_check(L, false, \"closure expected\");\n            return null;\n        }\n    }\n};\n\nconst lua_upvaluejoin = function(L, fidx1, n1, fidx2, n2) {\n    let ref1 = getupvalref(L, fidx1, n1);\n    let ref2 = getupvalref(L, fidx2, n2);\n    let up2 = ref2.f.upvals[ref2.i];\n    ref1.f.upvals[ref1.i] = up2;\n};\n\n// This functions are only there for compatibility purposes\nconst lua_gc = function () {};\n\nconst lua_getallocf = function () {\n    console.warn(\"lua_getallocf is not available\");\n    return 0;\n};\n\nconst lua_setallocf = function () {\n    console.warn(\"lua_setallocf is not available\");\n    return 0;\n};\n\nconst lua_getextraspace = function () {\n    console.warn(\"lua_getextraspace is not available\");\n    return 0;\n};\n\nmodule.exports.api_incr_top          = api_incr_top;\nmodule.exports.api_checknelems       = api_checknelems;\nmodule.exports.lua_absindex          = lua_absindex;\nmodule.exports.lua_arith             = lua_arith;\nmodule.exports.lua_atpanic           = lua_atpanic;\nmodule.exports.lua_atnativeerror     = lua_atnativeerror;\nmodule.exports.lua_call              = lua_call;\nmodule.exports.lua_callk             = lua_callk;\nmodule.exports.lua_checkstack        = lua_checkstack;\nmodule.exports.lua_compare           = lua_compare;\nmodule.exports.lua_concat            = lua_concat;\nmodule.exports.lua_copy              = lua_copy;\nmodule.exports.lua_createtable       = lua_createtable;\nmodule.exports.lua_dump              = lua_dump;\nmodule.exports.lua_error             = lua_error;\nmodule.exports.lua_gc                = lua_gc;\nmodule.exports.lua_getallocf         = lua_getallocf;\nmodule.exports.lua_getextraspace     = lua_getextraspace;\nmodule.exports.lua_getfield          = lua_getfield;\nmodule.exports.lua_getglobal         = lua_getglobal;\nmodule.exports.lua_geti              = lua_geti;\nmodule.exports.lua_getmetatable      = lua_getmetatable;\nmodule.exports.lua_gettable          = lua_gettable;\nmodule.exports.lua_gettop            = lua_gettop;\nmodule.exports.lua_getupvalue        = lua_getupvalue;\nmodule.exports.lua_getuservalue      = lua_getuservalue;\nmodule.exports.lua_insert            = lua_insert;\nmodule.exports.lua_isboolean         = lua_isboolean;\nmodule.exports.lua_iscfunction       = lua_iscfunction;\nmodule.exports.lua_isfunction        = lua_isfunction;\nmodule.exports.lua_isinteger         = lua_isinteger;\nmodule.exports.lua_islightuserdata   = lua_islightuserdata;\nmodule.exports.lua_isnil             = lua_isnil;\nmodule.exports.lua_isnone            = lua_isnone;\nmodule.exports.lua_isnoneornil       = lua_isnoneornil;\nmodule.exports.lua_isnumber          = lua_isnumber;\nmodule.exports.lua_isproxy           = lua_isproxy;\nmodule.exports.lua_isstring          = lua_isstring;\nmodule.exports.lua_istable           = lua_istable;\nmodule.exports.lua_isthread          = lua_isthread;\nmodule.exports.lua_isuserdata        = lua_isuserdata;\nmodule.exports.lua_len               = lua_len;\nmodule.exports.lua_load              = lua_load;\nmodule.exports.lua_newtable          = lua_newtable;\nmodule.exports.lua_newuserdata       = lua_newuserdata;\nmodule.exports.lua_next              = lua_next;\nmodule.exports.lua_pcall             = lua_pcall;\nmodule.exports.lua_pcallk            = lua_pcallk;\nmodule.exports.lua_pop               = lua_pop;\nmodule.exports.lua_pushboolean       = lua_pushboolean;\nmodule.exports.lua_pushcclosure      = lua_pushcclosure;\nmodule.exports.lua_pushcfunction     = lua_pushcfunction;\nmodule.exports.lua_pushfstring       = lua_pushfstring;\nmodule.exports.lua_pushglobaltable   = lua_pushglobaltable;\nmodule.exports.lua_pushinteger       = lua_pushinteger;\nmodule.exports.lua_pushjsclosure     = lua_pushjsclosure;\nmodule.exports.lua_pushjsfunction    = lua_pushjsfunction;\nmodule.exports.lua_pushlightuserdata = lua_pushlightuserdata;\nmodule.exports.lua_pushliteral       = lua_pushliteral;\nmodule.exports.lua_pushlstring       = lua_pushlstring;\nmodule.exports.lua_pushnil           = lua_pushnil;\nmodule.exports.lua_pushnumber        = lua_pushnumber;\nmodule.exports.lua_pushstring        = lua_pushstring;\nmodule.exports.lua_pushthread        = lua_pushthread;\nmodule.exports.lua_pushvalue         = lua_pushvalue;\nmodule.exports.lua_pushvfstring      = lua_pushvfstring;\nmodule.exports.lua_rawequal          = lua_rawequal;\nmodule.exports.lua_rawget            = lua_rawget;\nmodule.exports.lua_rawgeti           = lua_rawgeti;\nmodule.exports.lua_rawgetp           = lua_rawgetp;\nmodule.exports.lua_rawlen            = lua_rawlen;\nmodule.exports.lua_rawset            = lua_rawset;\nmodule.exports.lua_rawseti           = lua_rawseti;\nmodule.exports.lua_rawsetp           = lua_rawsetp;\nmodule.exports.lua_register          = lua_register;\nmodule.exports.lua_remove            = lua_remove;\nmodule.exports.lua_replace           = lua_replace;\nmodule.exports.lua_rotate            = lua_rotate;\nmodule.exports.lua_setallocf         = lua_setallocf;\nmodule.exports.lua_setfield          = lua_setfield;\nmodule.exports.lua_setglobal         = lua_setglobal;\nmodule.exports.lua_seti              = lua_seti;\nmodule.exports.lua_setmetatable      = lua_setmetatable;\nmodule.exports.lua_settable          = lua_settable;\nmodule.exports.lua_settop            = lua_settop;\nmodule.exports.lua_setupvalue        = lua_setupvalue;\nmodule.exports.lua_setuservalue      = lua_setuservalue;\nmodule.exports.lua_status            = lua_status;\nmodule.exports.lua_stringtonumber    = lua_stringtonumber;\nmodule.exports.lua_toboolean         = lua_toboolean;\nmodule.exports.lua_tocfunction       = lua_tocfunction;\nmodule.exports.lua_todataview        = lua_todataview;\nmodule.exports.lua_tointeger         = lua_tointeger;\nmodule.exports.lua_tointegerx        = lua_tointegerx;\nmodule.exports.lua_tojsstring        = lua_tojsstring;\nmodule.exports.lua_tolstring         = lua_tolstring;\nmodule.exports.lua_tonumber          = lua_tonumber;\nmodule.exports.lua_tonumberx         = lua_tonumberx;\nmodule.exports.lua_topointer         = lua_topointer;\nmodule.exports.lua_toproxy           = lua_toproxy;\nmodule.exports.lua_tostring          = lua_tostring;\nmodule.exports.lua_tothread          = lua_tothread;\nmodule.exports.lua_touserdata        = lua_touserdata;\nmodule.exports.lua_type              = lua_type;\nmodule.exports.lua_typename          = lua_typename;\nmodule.exports.lua_upvalueid         = lua_upvalueid;\nmodule.exports.lua_upvaluejoin       = lua_upvaluejoin;\nmodule.exports.lua_version           = lua_version;\nmodule.exports.lua_xmove             = lua_xmove;\n","\"use strict\";\n\nconst {\n    LUAL_BUFFERSIZE\n} = require('./luaconf.js');\nconst {\n    LUA_ERRERR,\n    LUA_MULTRET,\n    LUA_REGISTRYINDEX,\n    LUA_SIGNATURE,\n    LUA_TBOOLEAN,\n    LUA_TLIGHTUSERDATA,\n    LUA_TNIL,\n    LUA_TNONE,\n    LUA_TNUMBER,\n    LUA_TSTRING,\n    LUA_TTABLE,\n    LUA_VERSION_NUM,\n    lua_Debug,\n    lua_absindex,\n    lua_atpanic,\n    lua_call,\n    lua_checkstack,\n    lua_concat,\n    lua_copy,\n    lua_createtable,\n    lua_error,\n    lua_getfield,\n    lua_getinfo,\n    lua_getmetatable,\n    lua_getstack,\n    lua_gettop,\n    lua_insert,\n    lua_isinteger,\n    lua_isnil,\n    lua_isnumber,\n    lua_isstring,\n    lua_istable,\n    lua_len,\n    lua_load,\n    lua_newstate,\n    lua_newtable,\n    lua_next,\n    lua_pcall,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcclosure,\n    lua_pushcfunction,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushlstring,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_pushvfstring,\n    lua_rawequal,\n    lua_rawget,\n    lua_rawgeti,\n    lua_rawlen,\n    lua_rawseti,\n    lua_remove,\n    lua_setfield,\n    lua_setglobal,\n    lua_setmetatable,\n    lua_settop,\n    lua_toboolean,\n    lua_tointeger,\n    lua_tointegerx,\n    lua_tojsstring,\n    lua_tolstring,\n    lua_tonumber,\n    lua_tonumberx,\n    lua_topointer,\n    lua_tostring,\n    lua_touserdata,\n    lua_type,\n    lua_typename,\n    lua_version\n} = require('./lua.js');\nconst {\n    from_userstring,\n    luastring_eq,\n    to_luastring,\n    to_uristring\n} = require(\"./fengaricore.js\");\n\n/* extra error code for 'luaL_loadfilex' */\nconst LUA_ERRFILE = LUA_ERRERR+1;\n\n/* key, in the registry, for table of loaded modules */\nconst LUA_LOADED_TABLE = to_luastring(\"_LOADED\");\n\n/* key, in the registry, for table of preloaded loaders */\nconst LUA_PRELOAD_TABLE = to_luastring(\"_PRELOAD\");\n\nconst LUA_FILEHANDLE = to_luastring(\"FILE*\");\n\nconst LUAL_NUMSIZES  = 4*16 + 8;\n\nconst __name = to_luastring(\"__name\");\nconst __tostring = to_luastring(\"__tostring\");\n\nconst empty = new Uint8Array(0);\n\nclass luaL_Buffer {\n    constructor() {\n        this.L = null;\n        this.b = empty;\n        this.n = 0;\n    }\n}\n\nconst LEVELS1 = 10;  /* size of the first part of the stack */\nconst LEVELS2 = 11;  /* size of the second part of the stack */\n\n/*\n** search for 'objidx' in table at index -1.\n** return 1 + string at top if find a good name.\n*/\nconst findfield = function(L, objidx, level) {\n    if (level === 0 || !lua_istable(L, -1))\n        return 0;  /* not found */\n\n    lua_pushnil(L);  /* start 'next' loop */\n\n    while (lua_next(L, -2)) {  /* for each pair in table */\n        if (lua_type(L, -2) === LUA_TSTRING) {  /* ignore non-string keys */\n            if (lua_rawequal(L, objidx, -1)) {  /* found object? */\n                lua_pop(L, 1);  /* remove value (but keep name) */\n                return 1;\n            } else if (findfield(L, objidx, level - 1)) {  /* try recursively */\n                lua_remove(L, -2);  /* remove table (but keep name) */\n                lua_pushliteral(L, \".\");\n                lua_insert(L, -2);  /* place '.' between the two names */\n                lua_concat(L, 3);\n                return 1;\n            }\n        }\n        lua_pop(L, 1);  /* remove value */\n    }\n\n    return 0;  /* not found */\n};\n\n/*\n** Search for a name for a function in all loaded modules\n*/\nconst pushglobalfuncname = function(L, ar) {\n    let top = lua_gettop(L);\n    lua_getinfo(L, to_luastring(\"f\"), ar);  /* push function */\n    lua_getfield(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    if (findfield(L, top + 1, 2)) {\n        let name = lua_tostring(L, -1);\n        if (name[0] === 95 /* '_'.charCodeAt(0) */ &&\n            name[1] === 71 /* 'G'.charCodeAt(0) */ &&\n            name[2] === 46 /* '.'.charCodeAt(0) */\n        ) {  /* name start with '_G.'? */\n            lua_pushstring(L, name.subarray(3));  /* push name without prefix */\n            lua_remove(L, -2);  /* remove original name */\n        }\n        lua_copy(L, -1, top + 1);  /* move name to proper place */\n        lua_pop(L, 2);  /* remove pushed values */\n        return 1;\n    } else {\n        lua_settop(L, top);  /* remove function and global table */\n        return 0;\n    }\n};\n\nconst pushfuncname = function(L, ar) {\n    if (pushglobalfuncname(L, ar)) {  /* try first a global name */\n        lua_pushfstring(L, to_luastring(\"function '%s'\"), lua_tostring(L, -1));\n        lua_remove(L, -2);  /* remove name */\n    }\n    else if (ar.namewhat.length !== 0)  /* is there a name from code? */\n        lua_pushfstring(L, to_luastring(\"%s '%s'\"), ar.namewhat, ar.name);  /* use it */\n    else if (ar.what && ar.what[0] === 109 /* 'm'.charCodeAt(0) */)  /* main? */\n        lua_pushliteral(L, \"main chunk\");\n    else if (ar.what && ar.what[0] === 76 /* 'L'.charCodeAt(0) */)  /* for Lua functions, use <file:line> */\n        lua_pushfstring(L, to_luastring(\"function <%s:%d>\"), ar.short_src, ar.linedefined);\n    else  /* nothing left... */\n        lua_pushliteral(L, \"?\");\n};\n\nconst lastlevel = function(L) {\n    let ar = new lua_Debug();\n    let li = 1;\n    let le = 1;\n    /* find an upper bound */\n    while (lua_getstack(L, le, ar)) { li = le; le *= 2; }\n    /* do a binary search */\n    while (li < le) {\n        let m = Math.floor((li + le)/2);\n        if (lua_getstack(L, m, ar)) li = m + 1;\n        else le = m;\n    }\n    return le - 1;\n};\n\nconst luaL_traceback = function(L, L1, msg, level) {\n    let ar = new lua_Debug();\n    let top = lua_gettop(L);\n    let last = lastlevel(L1);\n    let n1 = last - level > LEVELS1 + LEVELS2 ? LEVELS1 : -1;\n    if (msg)\n        lua_pushfstring(L, to_luastring(\"%s\\n\"), msg);\n    luaL_checkstack(L, 10, null);\n    lua_pushliteral(L, \"stack traceback:\");\n    while (lua_getstack(L1, level++, ar)) {\n        if (n1-- === 0) {  /* too many levels? */\n            lua_pushliteral(L, \"\\n\\t...\");  /* add a '...' */\n            level = last - LEVELS2 + 1;  /* and skip to last ones */\n        } else {\n            lua_getinfo(L1, to_luastring(\"Slnt\", true), ar);\n            lua_pushfstring(L, to_luastring(\"\\n\\t%s:\"), ar.short_src);\n            if (ar.currentline > 0)\n                lua_pushliteral(L, `${ar.currentline}:`);\n            lua_pushliteral(L, \" in \");\n            pushfuncname(L, ar);\n            if (ar.istailcall)\n                lua_pushliteral(L, \"\\n\\t(...tail calls..)\");\n            lua_concat(L, lua_gettop(L) - top);\n        }\n    }\n    lua_concat(L, lua_gettop(L) - top);\n};\n\nconst panic = function(L) {\n    let msg = \"PANIC: unprotected error in call to Lua API (\" + lua_tojsstring(L, -1) + \")\";\n    throw new Error(msg);\n};\n\nconst luaL_argerror = function(L, arg, extramsg) {\n    let ar = new lua_Debug();\n\n    if (!lua_getstack(L, 0, ar))  /* no stack frame? */\n        return luaL_error(L, to_luastring(\"bad argument #%d (%s)\"), arg, extramsg);\n\n    lua_getinfo(L, to_luastring(\"n\"), ar);\n\n    if (luastring_eq(ar.namewhat, to_luastring(\"method\"))) {\n        arg--;  /* do not count 'self' */\n        if (arg === 0)  /* error is in the self argument itself? */\n            return luaL_error(L, to_luastring(\"calling '%s' on bad self (%s)\"), ar.name, extramsg);\n    }\n\n    if (ar.name === null)\n        ar.name = pushglobalfuncname(L, ar) ? lua_tostring(L, -1) : to_luastring(\"?\");\n\n    return luaL_error(L, to_luastring(\"bad argument #%d to '%s' (%s)\"), arg, ar.name, extramsg);\n};\n\nconst typeerror = function(L, arg, tname) {\n    let typearg;\n    if (luaL_getmetafield(L, arg, __name) === LUA_TSTRING)\n        typearg = lua_tostring(L, -1);\n    else if (lua_type(L, arg) === LUA_TLIGHTUSERDATA)\n        typearg = to_luastring(\"light userdata\", true);\n    else\n        typearg = luaL_typename(L, arg);\n\n    let msg = lua_pushfstring(L, to_luastring(\"%s expected, got %s\"), tname, typearg);\n    return luaL_argerror(L, arg, msg);\n};\n\nconst luaL_where = function(L, level) {\n    let ar = new lua_Debug();\n    if (lua_getstack(L, level, ar)) {\n        lua_getinfo(L, to_luastring(\"Sl\", true), ar);\n        if (ar.currentline > 0) {\n            lua_pushfstring(L, to_luastring(\"%s:%d: \"), ar.short_src, ar.currentline);\n            return;\n        }\n    }\n    lua_pushstring(L, to_luastring(\"\"));\n};\n\nconst luaL_error = function(L, fmt, ...argp) {\n    luaL_where(L, 1);\n    lua_pushvfstring(L, fmt, argp);\n    lua_concat(L, 2);\n    return lua_error(L);\n};\n\n/* Unlike normal lua, we pass in an error object */\nconst luaL_fileresult = function(L, stat, fname, e) {\n    if (stat) {\n        lua_pushboolean(L, 1);\n        return 1;\n    } else {\n        lua_pushnil(L);\n        let message, errno;\n        if (e) {\n            message = e.message;\n            errno = -e.errno;\n        } else {\n            message = \"Success\"; /* what strerror(0) returns */\n            errno = 0;\n        }\n        if (fname)\n            lua_pushfstring(L, to_luastring(\"%s: %s\"), fname, to_luastring(message));\n        else\n            lua_pushstring(L, to_luastring(message));\n        lua_pushinteger(L, errno);\n        return 3;\n    }\n};\n\n/* Unlike normal lua, we pass in an error object */\nconst luaL_execresult = function(L, e) {\n    let what, stat;\n    if (e === null) {\n        lua_pushboolean(L, 1);\n        lua_pushliteral(L, \"exit\");\n        lua_pushinteger(L, 0);\n        return 3;\n    } else if (e.status) {\n        what = \"exit\";\n        stat = e.status;\n    } else if (e.signal) {\n        what = \"signal\";\n        stat = e.signal;\n    } else {\n        /* XXX: node seems to have e.errno as a string instead of a number */\n        return luaL_fileresult(L, 0, null, e);\n    }\n    lua_pushnil(L);\n    lua_pushliteral(L, what);\n    lua_pushinteger(L, stat);\n    return 3;\n};\n\nconst luaL_getmetatable = function(L, n) {\n    return lua_getfield(L, LUA_REGISTRYINDEX, n);\n};\n\nconst luaL_newmetatable = function(L, tname) {\n    if (luaL_getmetatable(L, tname) !== LUA_TNIL)  /* name already in use? */\n        return 0;  /* leave previous value on top, but return 0 */\n    lua_pop(L, 1);\n    lua_createtable(L, 0, 2);  /* create metatable */\n    lua_pushstring(L, tname);\n    lua_setfield(L, -2, __name);  /* metatable.__name = tname */\n    lua_pushvalue(L, -1);\n    lua_setfield(L, LUA_REGISTRYINDEX, tname);  /* registry.name = metatable */\n    return 1;\n\n};\n\nconst luaL_setmetatable = function(L, tname) {\n    luaL_getmetatable(L, tname);\n    lua_setmetatable(L, -2);\n};\n\nconst luaL_testudata = function(L, ud, tname) {\n    let p = lua_touserdata(L, ud);\n    if (p !== null) {  /* value is a userdata? */\n        if (lua_getmetatable(L, ud)) {  /* does it have a metatable? */\n            luaL_getmetatable(L, tname);  /* get correct metatable */\n            if (!lua_rawequal(L, -1, -2))  /* not the same? */\n                p = null;  /* value is a userdata with wrong metatable */\n            lua_pop(L, 2);  /* remove both metatables */\n            return p;\n        }\n    }\n    return null;  /* value is not a userdata with a metatable */\n};\n\nconst luaL_checkudata = function(L, ud, tname) {\n    let p = luaL_testudata(L, ud, tname);\n    if (p === null) typeerror(L, ud, tname);\n    return p;\n};\n\nconst luaL_checkoption = function(L, arg, def, lst) {\n    let name = def !== null ? luaL_optstring(L, arg, def) : luaL_checkstring(L, arg);\n    for (let i = 0; lst[i]; i++)\n        if (luastring_eq(lst[i], name))\n            return i;\n    return luaL_argerror(L, arg, lua_pushfstring(L, to_luastring(\"invalid option '%s'\"), name));\n};\n\nconst tag_error = function(L, arg, tag) {\n    typeerror(L, arg, lua_typename(L, tag));\n};\n\nconst luaL_newstate = function() {\n    let L = lua_newstate();\n    if (L) lua_atpanic(L, panic);\n    return L;\n};\n\n\nconst luaL_typename = function(L, i) {\n    return lua_typename(L, lua_type(L, i));\n};\n\nconst luaL_argcheck = function(L, cond, arg, extramsg) {\n    if (!cond) luaL_argerror(L, arg, extramsg);\n};\n\nconst luaL_checkany = function(L, arg) {\n    if (lua_type(L, arg) === LUA_TNONE)\n        luaL_argerror(L, arg, to_luastring(\"value expected\", true));\n};\n\nconst luaL_checktype = function(L, arg, t) {\n    if (lua_type(L, arg) !== t)\n        tag_error(L, arg, t);\n};\n\nconst luaL_checklstring = function(L, arg) {\n    let s = lua_tolstring(L, arg);\n    if (s === null || s === undefined) tag_error(L, arg, LUA_TSTRING);\n    return s;\n};\n\nconst luaL_checkstring = luaL_checklstring;\n\nconst luaL_optlstring = function(L, arg, def) {\n    if (lua_type(L, arg) <= 0) {\n        return def === null ? null : from_userstring(def);\n    } else return luaL_checklstring(L, arg);\n};\n\nconst luaL_optstring = luaL_optlstring;\n\nconst interror = function(L, arg) {\n    if (lua_isnumber(L, arg))\n        luaL_argerror(L, arg, to_luastring(\"number has no integer representation\", true));\n    else\n        tag_error(L, arg, LUA_TNUMBER);\n};\n\nconst luaL_checknumber = function(L, arg) {\n    let d = lua_tonumberx(L, arg);\n    if (d === false)\n        tag_error(L, arg, LUA_TNUMBER);\n    return d;\n};\n\nconst luaL_optnumber = function(L, arg, def) {\n    return luaL_opt(L, luaL_checknumber, arg, def);\n};\n\nconst luaL_checkinteger = function(L, arg) {\n    let d = lua_tointegerx(L, arg);\n    if (d === false)\n        interror(L, arg);\n    return d;\n};\n\nconst luaL_optinteger = function(L, arg, def) {\n    return luaL_opt(L, luaL_checkinteger, arg, def);\n};\n\nconst luaL_prepbuffsize = function(B, sz) {\n    let newend = B.n + sz;\n    if (B.b.length < newend) {\n        let newsize = Math.max(B.b.length * 2, newend);  /* double buffer size */\n        let newbuff = new Uint8Array(newsize);  /* create larger buffer */\n        newbuff.set(B.b);  /* copy original content */\n        B.b = newbuff;\n    }\n    return B.b.subarray(B.n, newend);\n};\n\nconst luaL_buffinit = function(L, B) {\n    B.L = L;\n    B.b = empty;\n};\n\nconst luaL_buffinitsize = function(L, B, sz) {\n    luaL_buffinit(L, B);\n    return luaL_prepbuffsize(B, sz);\n};\n\nconst luaL_prepbuffer = function(B) {\n    return luaL_prepbuffsize(B, LUAL_BUFFERSIZE);\n};\n\nconst luaL_addlstring = function(B, s, l) {\n    if (l > 0) {\n        s = from_userstring(s);\n        let b = luaL_prepbuffsize(B, l);\n        b.set(s.subarray(0, l));\n        luaL_addsize(B, l);\n    }\n};\n\nconst luaL_addstring = function(B, s) {\n    s = from_userstring(s);\n    luaL_addlstring(B, s, s.length);\n};\n\nconst luaL_pushresult = function(B) {\n    lua_pushlstring(B.L, B.b, B.n);\n    /* delete old buffer */\n    B.n = 0;\n    B.b = empty;\n};\n\nconst luaL_addchar = function(B, c) {\n    luaL_prepbuffsize(B, 1);\n    B.b[B.n++] = c;\n};\n\nconst luaL_addsize = function(B, s) {\n    B.n += s;\n};\n\nconst luaL_pushresultsize = function(B, sz) {\n    luaL_addsize(B, sz);\n    luaL_pushresult(B);\n};\n\nconst luaL_addvalue = function(B) {\n    let L = B.L;\n    let s = lua_tostring(L, -1);\n    luaL_addlstring(B, s, s.length);\n    lua_pop(L, 1);  /* remove value */\n};\n\nconst luaL_opt = function(L, f, n, d) {\n    return lua_type(L, n) <= 0 ? d : f(L, n);\n};\n\nconst getS = function(L, ud) {\n    let s = ud.string;\n    ud.string = null;\n    return s;\n};\n\nconst luaL_loadbufferx = function(L, buff, size, name, mode) {\n    return lua_load(L, getS, {string: buff}, name, mode);\n};\n\nconst luaL_loadbuffer = function(L, s, sz, n) {\n    return luaL_loadbufferx(L, s, sz, n, null);\n};\n\nconst luaL_loadstring = function(L, s) {\n    return luaL_loadbuffer(L, s, s.length, s);\n};\n\nconst luaL_dostring = function(L, s) {\n    return (luaL_loadstring(L, s) || lua_pcall(L, 0, LUA_MULTRET, 0));\n};\n\nconst luaL_getmetafield = function(L, obj, event) {\n    if (!lua_getmetatable(L, obj))  /* no metatable? */\n        return LUA_TNIL;\n    else {\n        lua_pushstring(L, event);\n        let tt = lua_rawget(L, -2);\n        if (tt === LUA_TNIL)  /* is metafield nil? */\n            lua_pop(L, 2);  /* remove metatable and metafield */\n        else\n            lua_remove(L, -2);  /* remove only metatable */\n        return tt;  /* return metafield type */\n    }\n};\n\nconst luaL_callmeta = function(L, obj, event) {\n    obj = lua_absindex(L, obj);\n    if (luaL_getmetafield(L, obj, event) === LUA_TNIL)\n        return false;\n\n    lua_pushvalue(L, obj);\n    lua_call(L, 1, 1);\n\n    return true;\n};\n\nconst luaL_len = function(L, idx) {\n    lua_len(L, idx);\n    let l = lua_tointegerx(L, -1);\n    if (l === false)\n        luaL_error(L, to_luastring(\"object length is not an integer\", true));\n    lua_pop(L, 1);  /* remove object */\n    return l;\n};\n\nconst p_I = to_luastring(\"%I\");\nconst p_f = to_luastring(\"%f\");\nconst luaL_tolstring = function(L, idx) {\n    if (luaL_callmeta(L, idx, __tostring)) {\n        if (!lua_isstring(L, -1))\n            luaL_error(L, to_luastring(\"'__tostring' must return a string\"));\n    } else {\n        let t = lua_type(L, idx);\n        switch(t) {\n            case LUA_TNUMBER: {\n                if (lua_isinteger(L, idx))\n                    lua_pushfstring(L, p_I, lua_tointeger(L, idx));\n                else\n                    lua_pushfstring(L, p_f, lua_tonumber(L, idx));\n                break;\n            }\n            case LUA_TSTRING:\n                lua_pushvalue(L, idx);\n                break;\n            case LUA_TBOOLEAN:\n                lua_pushliteral(L, (lua_toboolean(L, idx) ? \"true\" : \"false\"));\n                break;\n            case LUA_TNIL:\n                lua_pushliteral(L, \"nil\");\n                break;\n            default: {\n                let tt = luaL_getmetafield(L, idx, __name);\n                let kind = tt === LUA_TSTRING ? lua_tostring(L, -1) : luaL_typename(L, idx);\n                lua_pushfstring(L, to_luastring(\"%s: %p\"), kind, lua_topointer(L, idx));\n                if (tt !== LUA_TNIL)\n                    lua_remove(L, -2);\n                break;\n            }\n        }\n    }\n\n    return lua_tolstring(L, -1);\n};\n\n/*\n** Stripped-down 'require': After checking \"loaded\" table, calls 'openf'\n** to open a module, registers the result in 'package.loaded' table and,\n** if 'glb' is true, also registers the result in the global table.\n** Leaves resulting module on the top.\n*/\nconst luaL_requiref = function(L, modname, openf, glb) {\n    luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    lua_getfield(L, -1, modname); /* LOADED[modname] */\n    if (!lua_toboolean(L, -1)) {  /* package not already loaded? */\n        lua_pop(L, 1);  /* remove field */\n        lua_pushcfunction(L, openf);\n        lua_pushstring(L, modname);  /* argument to open function */\n        lua_call(L, 1, 1);  /* call 'openf' to open module */\n        lua_pushvalue(L, -1);  /* make copy of module (call result) */\n        lua_setfield(L, -3, modname);  /* LOADED[modname] = module */\n    }\n    lua_remove(L, -2);  /* remove LOADED table */\n    if (glb) {\n        lua_pushvalue(L, -1);  /* copy of module */\n        lua_setglobal(L, modname);  /* _G[modname] = module */\n    }\n};\n\nconst find_subarray = function(arr, subarr, from_index) {\n    var i = from_index >>> 0,\n        sl = subarr.length,\n        l = arr.length + 1 - sl;\n\n    loop: for (; i < l; i++) {\n        for (let j = 0; j < sl; j++)\n            if (arr[i+j] !== subarr[j])\n                continue loop;\n        return i;\n    }\n    return -1;\n};\n\nconst luaL_gsub = function(L, s, p, r) {\n    let wild;\n    let b = new luaL_Buffer();\n    luaL_buffinit(L, b);\n    while ((wild = find_subarray(s, p)) >= 0) {\n        luaL_addlstring(b, s, wild);  /* push prefix */\n        luaL_addstring(b, r);  /* push replacement in place of pattern */\n        s = s.subarray(wild + p.length);  /* continue after 'p' */\n    }\n    luaL_addstring(b, s);  /* push last suffix */\n    luaL_pushresult(b);\n    return lua_tostring(L, -1);\n};\n\n/*\n** ensure that stack[idx][fname] has a table and push that table\n** into the stack\n*/\nconst luaL_getsubtable = function(L, idx, fname) {\n    if (lua_getfield(L, idx, fname) === LUA_TTABLE)\n        return true;  /* table already there */\n    else {\n        lua_pop(L, 1);  /* remove previous result */\n        idx = lua_absindex(L, idx);\n        lua_newtable(L);\n        lua_pushvalue(L, -1);  /* copy to be left at top */\n        lua_setfield(L, idx, fname);  /* assign new table to field */\n        return false;  /* false, because did not find table there */\n    }\n};\n\n/*\n** set functions from list 'l' into table at top - 'nup'; each\n** function gets the 'nup' elements at the top as upvalues.\n** Returns with only the table at the stack.\n*/\nconst luaL_setfuncs = function(L, l, nup) {\n    luaL_checkstack(L, nup, to_luastring(\"too many upvalues\", true));\n    for (let lib in l) {  /* fill the table with given functions */\n        for (let i = 0; i < nup; i++)  /* copy upvalues to the top */\n            lua_pushvalue(L, -nup);\n        lua_pushcclosure(L, l[lib], nup);  /* closure with those upvalues */\n        lua_setfield(L, -(nup + 2), to_luastring(lib));\n    }\n    lua_pop(L, nup);  /* remove upvalues */\n};\n\n/*\n** Ensures the stack has at least 'space' extra slots, raising an error\n** if it cannot fulfill the request. (The error handling needs a few\n** extra slots to format the error message. In case of an error without\n** this extra space, Lua will generate the same 'stack overflow' error,\n** but without 'msg'.)\n*/\nconst luaL_checkstack = function(L, space, msg) {\n    if (!lua_checkstack(L, space)) {\n        if (msg)\n            luaL_error(L, to_luastring(\"stack overflow (%s)\"), msg);\n        else\n            luaL_error(L, to_luastring('stack overflow', true));\n    }\n};\n\nconst luaL_newlibtable = function(L) {\n    lua_createtable(L);\n};\n\nconst luaL_newlib = function(L, l) {\n    lua_createtable(L);\n    luaL_setfuncs(L, l, 0);\n};\n\n/* predefined references */\nconst LUA_NOREF  = -2;\nconst LUA_REFNIL = -1;\n\nconst luaL_ref = function(L, t) {\n    let ref;\n    if (lua_isnil(L, -1)) {\n        lua_pop(L, 1);  /* remove from stack */\n        return LUA_REFNIL;  /* 'nil' has a unique fixed reference */\n    }\n    t = lua_absindex(L, t);\n    lua_rawgeti(L, t, 0);  /* get first free element */\n    ref = lua_tointeger(L, -1);  /* ref = t[freelist] */\n    lua_pop(L, 1);  /* remove it from stack */\n    if (ref !== 0) {  /* any free element? */\n        lua_rawgeti(L, t, ref);  /* remove it from list */\n        lua_rawseti(L, t, 0);  /* (t[freelist] = t[ref]) */\n    }\n    else  /* no free elements */\n        ref = lua_rawlen(L, t) + 1;  /* get a new reference */\n    lua_rawseti(L, t, ref);\n    return ref;\n};\n\n\nconst luaL_unref = function(L, t, ref) {\n    if (ref >= 0) {\n        t = lua_absindex(L, t);\n        lua_rawgeti(L, t, 0);\n        lua_rawseti(L, t, ref);  /* t[ref] = t[freelist] */\n        lua_pushinteger(L, ref);\n        lua_rawseti(L, t, 0);  /* t[freelist] = ref */\n    }\n};\n\n\nconst errfile = function(L, what, fnameindex, error) {\n    let serr = error.message;\n    let filename = lua_tostring(L, fnameindex).subarray(1);\n    lua_pushfstring(L, to_luastring(\"cannot %s %s: %s\"), to_luastring(what), filename, to_luastring(serr));\n    lua_remove(L, fnameindex);\n    return LUA_ERRFILE;\n};\n\nlet getc;\n\nconst utf8_bom = [0XEF, 0XBB, 0XBF];  /* UTF-8 BOM mark */\nconst skipBOM = function(lf) {\n    lf.n = 0;\n    let c;\n    let p = 0;\n    do {\n        c = getc(lf);\n        if (c === null || c !== utf8_bom[p]) return c;\n        p++;\n        lf.buff[lf.n++] = c;  /* to be read by the parser */\n    } while (p < utf8_bom.length);\n    lf.n = 0;  /* prefix matched; discard it */\n    return getc(lf);  /* return next character */\n};\n\n/*\n** reads the first character of file 'f' and skips an optional BOM mark\n** in its beginning plus its first line if it starts with '#'. Returns\n** true if it skipped the first line.  In any case, '*cp' has the\n** first \"valid\" character of the file (after the optional BOM and\n** a first-line comment).\n*/\nconst skipcomment = function(lf) {\n    let c = skipBOM(lf);\n    if (c === 35 /* '#'.charCodeAt(0) */) {  /* first line is a comment (Unix exec. file)? */\n        do {  /* skip first line */\n            c = getc(lf);\n        } while (c && c !== 10 /* '\\n'.charCodeAt(0) */);\n\n        return {\n            skipped: true,\n            c: getc(lf)  /* skip end-of-line, if present */\n        };\n    } else {\n        return {\n            skipped: false,\n            c: c\n        };\n    }\n};\n\nlet luaL_loadfilex;\n\nif (typeof process === \"undefined\") {\n    class LoadF {\n        constructor() {\n            this.n = NaN;  /* number of pre-read characters */\n            this.f = null;  /* file being read */\n            this.buff = new Uint8Array(1024);  /* area for reading file */\n            this.pos = 0;  /* current position in file */\n            this.err = void 0;\n        }\n    }\n\n    const getF = function(L, ud) {\n        let lf = ud;\n\n        if (lf.f !== null && lf.n > 0) {  /* are there pre-read characters to be read? */\n            let bytes = lf.n; /* return them (chars already in buffer) */\n            lf.n = 0;  /* no more pre-read characters */\n            lf.f = lf.f.subarray(lf.pos);  /* we won't use lf.buff anymore */\n            return lf.buff.subarray(0, bytes);\n        }\n\n        let f = lf.f;\n        lf.f = null;\n        return f;\n    };\n\n    getc = function(lf) {\n        return lf.pos < lf.f.length ? lf.f[lf.pos++] : null;\n    };\n\n    luaL_loadfilex = function(L, filename, mode) {\n        let lf = new LoadF();\n        let fnameindex = lua_gettop(L) + 1;  /* index of filename on the stack */\n        if (filename === null) {\n            throw new Error(\"Can't read stdin in the browser\");\n        } else {\n            lua_pushfstring(L, to_luastring(\"@%s\"), filename);\n            let path = to_uristring(filename);\n            let xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", path, false);\n            /*\n            Synchronous xhr in main thread always returns a js string.\n            Some browsers make console noise if you even attempt to set responseType\n            */\n            if (typeof window === \"undefined\") {\n                xhr.responseType = \"arraybuffer\";\n            }\n            xhr.send();\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                if (typeof xhr.response === \"string\") {\n                    lf.f = to_luastring(xhr.response);\n                } else {\n                    lf.f = new Uint8Array(xhr.response);\n                }\n            } else {\n                lf.err = xhr.status;\n                return errfile(L, \"open\", fnameindex, { message: `${xhr.status}: ${xhr.statusText}` });\n            }\n        }\n        let com = skipcomment(lf);\n        /* check for signature first, as we don't want to add line number corrections in binary case */\n        if (com.c === LUA_SIGNATURE[0] && filename) {  /* binary file? */\n            /* no need to re-open */\n        } else if (com.skipped) { /* read initial portion */\n            lf.buff[lf.n++] = 10 /* '\\n'.charCodeAt(0) */;  /* add line to correct line numbers */\n        }\n        if (com.c !== null)\n            lf.buff[lf.n++] = com.c; /* 'c' is the first character of the stream */\n        let status = lua_load(L, getF, lf, lua_tostring(L, -1), mode);\n        let readstatus = lf.err;\n        if (readstatus) {\n            lua_settop(L, fnameindex);  /* ignore results from 'lua_load' */\n            return errfile(L, \"read\", fnameindex, readstatus);\n        }\n        lua_remove(L, fnameindex);\n        return status;\n    };\n} else {\n    const fs = require('fs');\n\n    class LoadF {\n        constructor() {\n            this.n = NaN;  /* number of pre-read characters */\n            this.f = null;  /* file being read */\n            this.buff = Buffer.alloc(1024);  /* area for reading file */\n            this.pos = 0;  /* current position in file */\n            this.err = void 0;\n        }\n    }\n\n    const getF = function(L, ud) {\n        let lf = ud;\n        let bytes = 0;\n        if (lf.n > 0) {  /* are there pre-read characters to be read? */\n            bytes = lf.n; /* return them (chars already in buffer) */\n            lf.n = 0;  /* no more pre-read characters */\n        } else {  /* read a block from file */\n            try {\n                bytes = fs.readSync(lf.f, lf.buff, 0, lf.buff.length, lf.pos); /* read block */\n            } catch(e) {\n                lf.err = e;\n                bytes = 0;\n            }\n            lf.pos += bytes;\n        }\n        if (bytes > 0)\n            return lf.buff.subarray(0, bytes);\n        else return null;\n    };\n\n    getc = function(lf) {\n        let b = Buffer.alloc(1);\n        let bytes;\n        try {\n            bytes = fs.readSync(lf.f, b, 0, 1, lf.pos);\n        } catch(e) {\n            lf.err = e;\n            return null;\n        }\n        lf.pos += bytes;\n        return bytes > 0 ? b.readUInt8() : null;\n    };\n\n    luaL_loadfilex = function(L, filename, mode) {\n        let lf = new LoadF();\n        let fnameindex = lua_gettop(L) + 1;  /* index of filename on the stack */\n        if (filename === null) {\n            lua_pushliteral(L, \"=stdin\");\n            lf.f = process.stdin.fd;\n        } else {\n            lua_pushfstring(L, to_luastring(\"@%s\"), filename);\n            try {\n                lf.f = fs.openSync(filename, \"r\");\n            } catch (e) {\n                return errfile(L, \"open\", fnameindex, e);\n            }\n        }\n        let com = skipcomment(lf);\n        /* check for signature first, as we don't want to add line number corrections in binary case */\n        if (com.c === LUA_SIGNATURE[0] && filename) {  /* binary file? */\n            /* no need to re-open */\n        } else if (com.skipped) { /* read initial portion */\n            lf.buff[lf.n++] = 10 /* '\\n'.charCodeAt(0) */;  /* add line to correct line numbers */\n        }\n        if (com.c !== null)\n            lf.buff[lf.n++] = com.c; /* 'c' is the first character of the stream */\n        let status = lua_load(L, getF, lf, lua_tostring(L, -1), mode);\n        let readstatus = lf.err;\n        if (filename) try { fs.closeSync(lf.f); } catch(e) {}  /* close file (even in case of errors) */\n        if (readstatus) {\n            lua_settop(L, fnameindex);  /* ignore results from 'lua_load' */\n            return errfile(L, \"read\", fnameindex, readstatus);\n        }\n        lua_remove(L, fnameindex);\n        return status;\n    };\n}\n\nconst luaL_loadfile = function(L, filename) {\n    return luaL_loadfilex(L, filename, null);\n};\n\nconst luaL_dofile = function(L, filename) {\n    return (luaL_loadfile(L, filename) || lua_pcall(L, 0, LUA_MULTRET, 0));\n};\n\nconst lua_writestringerror = function() {\n    for (let i=0; i<arguments.length; i++) {\n        let a = arguments[i];\n        if (typeof process === \"undefined\") {\n            /* split along new lines for separate console.error invocations */\n            do {\n                /* regexp uses [\\d\\D] to work around matching new lines\n                   the 's' flag is non-standard */\n                let r = /([^\\n]*)\\n?([\\d\\D]*)/.exec(a);\n                console.error(r[1]);\n                a = r[2];\n            } while (a !== \"\");\n        } else {\n            process.stderr.write(a);\n        }\n    }\n};\n\nconst luaL_checkversion_ = function(L, ver, sz) {\n    let v = lua_version(L);\n    if (sz != LUAL_NUMSIZES)  /* check numeric types */\n        luaL_error(L, to_luastring(\"core and library have incompatible numeric types\"));\n    if (v != lua_version(null))\n        luaL_error(L, to_luastring(\"multiple Lua VMs detected\"));\n    else if (v !== ver)\n        luaL_error(L, to_luastring(\"version mismatch: app. needs %f, Lua core provides %f\"), ver, v);\n};\n\n/* There is no point in providing this function... */\nconst luaL_checkversion = function(L) {\n    luaL_checkversion_(L, LUA_VERSION_NUM, LUAL_NUMSIZES);\n};\n\nmodule.exports.LUA_ERRFILE          = LUA_ERRFILE;\nmodule.exports.LUA_FILEHANDLE       = LUA_FILEHANDLE;\nmodule.exports.LUA_LOADED_TABLE     = LUA_LOADED_TABLE;\nmodule.exports.LUA_NOREF            = LUA_NOREF;\nmodule.exports.LUA_PRELOAD_TABLE    = LUA_PRELOAD_TABLE;\nmodule.exports.LUA_REFNIL           = LUA_REFNIL;\nmodule.exports.luaL_Buffer          = luaL_Buffer;\nmodule.exports.luaL_addchar         = luaL_addchar;\nmodule.exports.luaL_addlstring      = luaL_addlstring;\nmodule.exports.luaL_addsize         = luaL_addsize;\nmodule.exports.luaL_addstring       = luaL_addstring;\nmodule.exports.luaL_addvalue        = luaL_addvalue;\nmodule.exports.luaL_argcheck        = luaL_argcheck;\nmodule.exports.luaL_argerror        = luaL_argerror;\nmodule.exports.luaL_buffinit        = luaL_buffinit;\nmodule.exports.luaL_buffinitsize    = luaL_buffinitsize;\nmodule.exports.luaL_callmeta        = luaL_callmeta;\nmodule.exports.luaL_checkany        = luaL_checkany;\nmodule.exports.luaL_checkinteger    = luaL_checkinteger;\nmodule.exports.luaL_checklstring    = luaL_checklstring;\nmodule.exports.luaL_checknumber     = luaL_checknumber;\nmodule.exports.luaL_checkoption     = luaL_checkoption;\nmodule.exports.luaL_checkstack      = luaL_checkstack;\nmodule.exports.luaL_checkstring     = luaL_checkstring;\nmodule.exports.luaL_checktype       = luaL_checktype;\nmodule.exports.luaL_checkudata      = luaL_checkudata;\nmodule.exports.luaL_checkversion    = luaL_checkversion;\nmodule.exports.luaL_checkversion_   = luaL_checkversion_;\nmodule.exports.luaL_dofile          = luaL_dofile;\nmodule.exports.luaL_dostring        = luaL_dostring;\nmodule.exports.luaL_error           = luaL_error;\nmodule.exports.luaL_execresult      = luaL_execresult;\nmodule.exports.luaL_fileresult      = luaL_fileresult;\nmodule.exports.luaL_getmetafield    = luaL_getmetafield;\nmodule.exports.luaL_getmetatable    = luaL_getmetatable;\nmodule.exports.luaL_getsubtable     = luaL_getsubtable;\nmodule.exports.luaL_gsub            = luaL_gsub;\nmodule.exports.luaL_len             = luaL_len;\nmodule.exports.luaL_loadbuffer      = luaL_loadbuffer;\nmodule.exports.luaL_loadbufferx     = luaL_loadbufferx;\nmodule.exports.luaL_loadfile        = luaL_loadfile;\nmodule.exports.luaL_loadfilex       = luaL_loadfilex;\nmodule.exports.luaL_loadstring      = luaL_loadstring;\nmodule.exports.luaL_newlib          = luaL_newlib;\nmodule.exports.luaL_newlibtable     = luaL_newlibtable;\nmodule.exports.luaL_newmetatable    = luaL_newmetatable;\nmodule.exports.luaL_newstate        = luaL_newstate;\nmodule.exports.luaL_opt             = luaL_opt;\nmodule.exports.luaL_optinteger      = luaL_optinteger;\nmodule.exports.luaL_optlstring      = luaL_optlstring;\nmodule.exports.luaL_optnumber       = luaL_optnumber;\nmodule.exports.luaL_optstring       = luaL_optstring;\nmodule.exports.luaL_prepbuffer      = luaL_prepbuffer;\nmodule.exports.luaL_prepbuffsize    = luaL_prepbuffsize;\nmodule.exports.luaL_pushresult      = luaL_pushresult;\nmodule.exports.luaL_pushresultsize  = luaL_pushresultsize;\nmodule.exports.luaL_ref             = luaL_ref;\nmodule.exports.luaL_requiref        = luaL_requiref;\nmodule.exports.luaL_setfuncs        = luaL_setfuncs;\nmodule.exports.luaL_setmetatable    = luaL_setmetatable;\nmodule.exports.luaL_testudata       = luaL_testudata;\nmodule.exports.luaL_tolstring       = luaL_tolstring;\nmodule.exports.luaL_traceback       = luaL_traceback;\nmodule.exports.luaL_typename        = luaL_typename;\nmodule.exports.luaL_unref           = luaL_unref;\nmodule.exports.luaL_where           = luaL_where;\nmodule.exports.lua_writestringerror = lua_writestringerror;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    LUA_OK,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TNONE,\n    LUA_TNUMBER,\n    LUA_TSTRING,\n    LUA_TTABLE,\n    LUA_VERSION,\n    LUA_YIELD,\n    lua_call,\n    lua_callk,\n    lua_concat,\n    lua_error,\n    lua_getglobal,\n    lua_geti,\n    lua_getmetatable,\n    lua_gettop,\n    lua_insert,\n    lua_isnil,\n    lua_isnone,\n    lua_isstring,\n    lua_load,\n    lua_next,\n    lua_pcallk,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcfunction,\n    lua_pushglobaltable,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawequal,\n    lua_rawget,\n    lua_rawlen,\n    lua_rawset,\n    lua_remove,\n    lua_replace,\n    lua_rotate,\n    lua_setfield,\n    lua_setmetatable,\n    lua_settop,\n    lua_setupvalue,\n    lua_stringtonumber,\n    lua_toboolean,\n    lua_tolstring,\n    lua_tostring,\n    lua_type,\n    lua_typename\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_checkany,\n    luaL_checkinteger,\n    luaL_checkoption,\n    luaL_checkstack,\n    luaL_checktype,\n    luaL_error,\n    luaL_getmetafield,\n    luaL_loadbufferx,\n    luaL_loadfile,\n    luaL_loadfilex,\n    luaL_optinteger,\n    luaL_optstring,\n    luaL_setfuncs,\n    luaL_tolstring,\n    luaL_where\n} = require('./lauxlib.js');\nconst {\n    to_jsstring,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nlet lua_writestring;\nlet lua_writeline;\nif (typeof process === \"undefined\") {\n    if (typeof TextDecoder === \"function\") { /* Older browsers don't have TextDecoder */\n        let buff = \"\";\n        let decoder = new TextDecoder(\"utf-8\");\n        lua_writestring = function(s) {\n            buff += decoder.decode(s, {stream: true});\n        };\n        let empty = new Uint8Array(0);\n        lua_writeline = function() {\n            buff += decoder.decode(empty);\n            console.log(buff);\n            buff = \"\";\n        };\n    } else {\n        let buff = [];\n        lua_writestring = function(s) {\n            try {\n                /* If the string is valid utf8, then we can use to_jsstring */\n                s = to_jsstring(s);\n            } catch(e) {\n                /* otherwise push copy of raw array */\n                let copy = new Uint8Array(s.length);\n                copy.set(s);\n                s = copy;\n            }\n            buff.push(s);\n        };\n        lua_writeline = function() {\n            console.log.apply(console.log, buff);\n            buff = [];\n        };\n    }\n} else {\n    lua_writestring = function(s) {\n        process.stdout.write(Buffer.from(s));\n    };\n    lua_writeline = function() {\n        process.stdout.write(\"\\n\");\n    };\n}\nconst luaB_print = function(L) {\n    let n = lua_gettop(L); /* number of arguments */\n    lua_getglobal(L, to_luastring(\"tostring\", true));\n    for (let i = 1; i <= n; i++) {\n        lua_pushvalue(L, -1);  /* function to be called */\n        lua_pushvalue(L, i);  /* value to print */\n        lua_call(L, 1, 1);\n        let s = lua_tolstring(L, -1);\n        if (s === null)\n            return luaL_error(L, to_luastring(\"'tostring' must return a string to 'print'\"));\n        if (i > 1) lua_writestring(to_luastring(\"\\t\"));\n        lua_writestring(s);\n        lua_pop(L, 1);\n    }\n    lua_writeline();\n    return 0;\n};\n\nconst luaB_tostring = function(L) {\n    luaL_checkany(L, 1);\n    luaL_tolstring(L, 1);\n\n    return 1;\n};\n\nconst luaB_getmetatable = function(L) {\n    luaL_checkany(L, 1);\n    if (!lua_getmetatable(L, 1)) {\n        lua_pushnil(L);\n        return 1;  /* no metatable */\n    }\n    luaL_getmetafield(L, 1, to_luastring(\"__metatable\", true));\n    return 1;  /* returns either __metatable field (if present) or metatable */\n};\n\nconst luaB_setmetatable = function(L) {\n    let t = lua_type(L, 2);\n    luaL_checktype(L, 1, LUA_TTABLE);\n    luaL_argcheck(L, t === LUA_TNIL || t === LUA_TTABLE, 2, \"nil or table expected\");\n    if (luaL_getmetafield(L, 1, to_luastring(\"__metatable\", true)) !== LUA_TNIL)\n        return luaL_error(L, to_luastring(\"cannot change a protected metatable\"));\n    lua_settop(L, 2);\n    lua_setmetatable(L, 1);\n    return 1;\n};\n\nconst luaB_rawequal = function(L) {\n    luaL_checkany(L, 1);\n    luaL_checkany(L, 2);\n    lua_pushboolean(L, lua_rawequal(L, 1, 2));\n    return 1;\n};\n\nconst luaB_rawlen = function(L) {\n    let t = lua_type(L, 1);\n    luaL_argcheck(L, t === LUA_TTABLE || t === LUA_TSTRING, 1, \"table or string expected\");\n    lua_pushinteger(L, lua_rawlen(L, 1));\n    return 1;\n};\n\nconst luaB_rawget = function(L) {\n    luaL_checktype(L, 1, LUA_TTABLE);\n    luaL_checkany(L, 2);\n    lua_settop(L, 2);\n    lua_rawget(L, 1);\n    return 1;\n};\n\nconst luaB_rawset = function(L) {\n    luaL_checktype(L, 1, LUA_TTABLE);\n    luaL_checkany(L, 2);\n    luaL_checkany(L, 3);\n    lua_settop(L, 3);\n    lua_rawset(L, 1);\n    return 1;\n};\n\nconst opts = [\n    \"stop\", \"restart\", \"collect\",\n    \"count\", \"step\", \"setpause\", \"setstepmul\",\n    \"isrunning\"\n].map((e) => to_luastring(e));\nconst luaB_collectgarbage = function(L) {\n    luaL_checkoption(L, 1, \"collect\", opts);\n    luaL_optinteger(L, 2, 0);\n    luaL_error(L, to_luastring(\"lua_gc not implemented\"));\n};\n\nconst luaB_type = function(L) {\n    let t = lua_type(L, 1);\n    luaL_argcheck(L, t !== LUA_TNONE, 1, \"value expected\");\n    lua_pushstring(L, lua_typename(L, t));\n    return 1;\n};\n\nconst pairsmeta = function(L, method, iszero, iter) {\n    luaL_checkany(L, 1);\n    if (luaL_getmetafield(L, 1, method) === LUA_TNIL) {  /* no metamethod? */\n        lua_pushcfunction(L, iter);  /* will return generator, */\n        lua_pushvalue(L, 1);  /* state, */\n        if (iszero) lua_pushinteger(L, 0);  /* and initial value */\n        else lua_pushnil(L);\n    } else {\n        lua_pushvalue(L, 1);  /* argument 'self' to metamethod */\n        lua_call(L, 1, 3);  /* get 3 values from metamethod */\n    }\n    return 3;\n};\n\nconst luaB_next = function(L) {\n    luaL_checktype(L, 1, LUA_TTABLE);\n    lua_settop(L, 2);  /* create a 2nd argument if there isn't one */\n    if (lua_next(L, 1))\n        return 2;\n    else {\n        lua_pushnil(L);\n        return 1;\n    }\n};\n\nconst luaB_pairs = function(L) {\n    return pairsmeta(L, to_luastring(\"__pairs\", true), 0, luaB_next);\n};\n\n/*\n** Traversal function for 'ipairs'\n*/\nconst ipairsaux = function(L) {\n    let i = luaL_checkinteger(L, 2) + 1;\n    lua_pushinteger(L, i);\n    return lua_geti(L, 1, i) === LUA_TNIL ? 1 : 2;\n};\n\n/*\n** 'ipairs' function. Returns 'ipairsaux', given \"table\", 0.\n** (The given \"table\" may not be a table.)\n*/\nconst luaB_ipairs = function(L) {\n    // Lua 5.2\n    // return pairsmeta(L, \"__ipairs\", 1, ipairsaux);\n\n    luaL_checkany(L, 1);\n    lua_pushcfunction(L, ipairsaux);  /* iteration function */\n    lua_pushvalue(L, 1);  /* state */\n    lua_pushinteger(L, 0);  /* initial value */\n    return 3;\n};\n\nconst b_str2int = function(s, base) {\n    try {\n        s = to_jsstring(s);\n    } catch (e) {\n        return null;\n    }\n    let r = /^[\\t\\v\\f \\n\\r]*([+-]?)0*([0-9A-Za-z]+)[\\t\\v\\f \\n\\r]*$/.exec(s);\n    if (!r) return null;\n    let v = parseInt(r[1]+r[2], base);\n    if (isNaN(v)) return null;\n    return v|0;\n};\n\nconst luaB_tonumber = function(L) {\n    if (lua_type(L, 2) <= 0) {  /* standard conversion? */\n        luaL_checkany(L, 1);\n        if (lua_type(L, 1) === LUA_TNUMBER) {  /* already a number? */\n            lua_settop(L, 1);\n            return 1;\n        } else {\n            let s = lua_tostring(L, 1);\n            if (s !== null && lua_stringtonumber(L, s) === s.length+1)\n                return 1;  /* successful conversion to number */\n        }\n    } else {\n        let base = luaL_checkinteger(L, 2);\n        luaL_checktype(L, 1, LUA_TSTRING);  /* no numbers as strings */\n        let s = lua_tostring(L, 1);\n        luaL_argcheck(L, 2 <= base && base <= 36, 2, \"base out of range\");\n        let n = b_str2int(s, base);\n        if (n !== null) {\n            lua_pushinteger(L, n);\n            return 1;\n        }\n    }\n\n    lua_pushnil(L);\n    return 1;\n};\n\nconst luaB_error = function(L) {\n    let level = luaL_optinteger(L, 2, 1);\n    lua_settop(L, 1);\n    if (lua_type(L, 1) === LUA_TSTRING && level > 0) {\n        luaL_where(L, level);  /* add extra information */\n        lua_pushvalue(L, 1);\n        lua_concat(L, 2);\n    }\n    return lua_error(L);\n};\n\nconst luaB_assert = function(L) {\n    if (lua_toboolean(L, 1))  /* condition is true? */\n        return lua_gettop(L);  /* return all arguments */\n    else {\n        luaL_checkany(L, 1);  /* there must be a condition */\n        lua_remove(L, 1);  /* remove it */\n        lua_pushliteral(L, \"assertion failed!\");  /* default message */\n        lua_settop(L, 1);  /* leave only message (default if no other one) */\n        return luaB_error(L);  /* call 'error' */\n    }\n};\n\nconst luaB_select = function(L) {\n    let n = lua_gettop(L);\n    if (lua_type(L, 1) === LUA_TSTRING && lua_tostring(L, 1)[0] === 35 /* '#'.charCodeAt(0) */) {\n        lua_pushinteger(L, n - 1);\n        return 1;\n    } else {\n        let i = luaL_checkinteger(L, 1);\n        if (i < 0) i = n + i;\n        else if (i > n) i = n;\n        luaL_argcheck(L, 1 <= i, 1, \"index out of range\");\n        return n - i;\n    }\n};\n\n/*\n** Continuation function for 'pcall' and 'xpcall'. Both functions\n** already pushed a 'true' before doing the call, so in case of success\n** 'finishpcall' only has to return everything in the stack minus\n** 'extra' values (where 'extra' is exactly the number of items to be\n** ignored).\n*/\nconst finishpcall = function(L, status, extra) {\n    if (status !== LUA_OK && status !== LUA_YIELD) {  /* error? */\n        lua_pushboolean(L, 0);  /* first result (false) */\n        lua_pushvalue(L, -2);  /* error message */\n        return 2;  /* return false, msg */\n    } else\n        return lua_gettop(L) - extra;\n};\n\nconst luaB_pcall = function(L) {\n    luaL_checkany(L, 1);\n    lua_pushboolean(L, 1);  /* first result if no errors */\n    lua_insert(L, 1);  /* put it in place */\n    let status = lua_pcallk(L, lua_gettop(L) - 2, LUA_MULTRET, 0, 0, finishpcall);\n    return finishpcall(L, status, 0);\n};\n\n/*\n** Do a protected call with error handling. After 'lua_rotate', the\n** stack will have <f, err, true, f, [args...]>; so, the function passes\n** 2 to 'finishpcall' to skip the 2 first values when returning results.\n*/\nconst luaB_xpcall = function(L) {\n    let n = lua_gettop(L);\n    luaL_checktype(L, 2, LUA_TFUNCTION);  /* check error function */\n    lua_pushboolean(L, 1);  /* first result */\n    lua_pushvalue(L, 1);  /* function */\n    lua_rotate(L, 3, 2);  /* move them below function's arguments */\n    let status = lua_pcallk(L, n - 2, LUA_MULTRET, 2, 2, finishpcall);\n    return finishpcall(L, status, 2);\n};\n\nconst load_aux = function(L, status, envidx) {\n    if (status === LUA_OK) {\n        if (envidx !== 0) {  /* 'env' parameter? */\n            lua_pushvalue(L, envidx);  /* environment for loaded function */\n            if (!lua_setupvalue(L, -2, 1))  /* set it as 1st upvalue */\n                lua_pop(L, 1);  /* remove 'env' if not used by previous call */\n        }\n        return 1;\n    } else {  /* error (message is on top of the stack) */\n        lua_pushnil(L);\n        lua_insert(L, -2);  /* put before error message */\n        return 2;  /* return nil plus error message */\n    }\n};\n\n/*\n** reserved slot, above all arguments, to hold a copy of the returned\n** string to avoid it being collected while parsed. 'load' has four\n** optional arguments (chunk, source name, mode, and environment).\n*/\nconst RESERVEDSLOT = 5;\n\n/*\n** Reader for generic 'load' function: 'lua_load' uses the\n** stack for internal stuff, so the reader cannot change the\n** stack top. Instead, it keeps its resulting string in a\n** reserved slot inside the stack.\n*/\nconst generic_reader = function(L, ud) {\n    luaL_checkstack(L, 2, \"too many nested functions\");\n    lua_pushvalue(L, 1);  /* get function */\n    lua_call(L, 0, 1);  /* call it */\n    if (lua_isnil(L, -1)) {\n        lua_pop(L, 1);  /* pop result */\n        return null;\n    } else if (!lua_isstring(L, -1))\n        luaL_error(L, to_luastring(\"reader function must return a string\"));\n    lua_replace(L, RESERVEDSLOT);  /* save string in reserved slot */\n    return lua_tostring(L, RESERVEDSLOT);\n};\n\nconst luaB_load = function(L) {\n    let s = lua_tostring(L, 1);\n    let mode = luaL_optstring(L, 3, \"bt\");\n    let env = !lua_isnone(L, 4) ? 4 : 0;  /* 'env' index or 0 if no 'env' */\n    let status;\n    if (s !== null) {  /* loading a string? */\n        let chunkname = luaL_optstring(L, 2, s);\n        status = luaL_loadbufferx(L, s, s.length, chunkname, mode);\n    } else {  /* loading from a reader function */\n        let chunkname = luaL_optstring(L, 2, \"=(load)\");\n        luaL_checktype(L, 1, LUA_TFUNCTION);\n        lua_settop(L, RESERVEDSLOT);  /* create reserved slot */\n        status = lua_load(L, generic_reader, null, chunkname, mode);\n    }\n    return load_aux(L, status, env);\n};\n\nconst luaB_loadfile = function(L) {\n    let fname = luaL_optstring(L, 1, null);\n    let mode = luaL_optstring(L, 2, null);\n    let env = !lua_isnone(L, 3) ? 3 : 0;  /* 'env' index or 0 if no 'env' */\n    let status = luaL_loadfilex(L, fname, mode);\n    return load_aux(L, status, env);\n};\n\nconst dofilecont = function(L, d1, d2) {\n    return lua_gettop(L) - 1;\n};\n\nconst luaB_dofile = function(L) {\n    let fname = luaL_optstring(L, 1, null);\n    lua_settop(L, 1);\n    if (luaL_loadfile(L, fname) !== LUA_OK)\n        return lua_error(L);\n    lua_callk(L, 0, LUA_MULTRET, 0, dofilecont);\n    return dofilecont(L, 0, 0);\n};\n\nconst base_funcs = {\n    \"assert\":         luaB_assert,\n    \"collectgarbage\": luaB_collectgarbage,\n    \"dofile\":         luaB_dofile,\n    \"error\":          luaB_error,\n    \"getmetatable\":   luaB_getmetatable,\n    \"ipairs\":         luaB_ipairs,\n    \"load\":           luaB_load,\n    \"loadfile\":       luaB_loadfile,\n    \"next\":           luaB_next,\n    \"pairs\":          luaB_pairs,\n    \"pcall\":          luaB_pcall,\n    \"print\":          luaB_print,\n    \"rawequal\":       luaB_rawequal,\n    \"rawget\":         luaB_rawget,\n    \"rawlen\":         luaB_rawlen,\n    \"rawset\":         luaB_rawset,\n    \"select\":         luaB_select,\n    \"setmetatable\":   luaB_setmetatable,\n    \"tonumber\":       luaB_tonumber,\n    \"tostring\":       luaB_tostring,\n    \"type\":           luaB_type,\n    \"xpcall\":         luaB_xpcall\n};\n\nconst luaopen_base = function(L) {\n    /* open lib into global table */\n    lua_pushglobaltable(L);\n    luaL_setfuncs(L, base_funcs, 0);\n    /* set global _G */\n    lua_pushvalue(L, -1);\n    lua_setfield(L, -2, to_luastring(\"_G\"));\n    /* set global _VERSION */\n    lua_pushliteral(L, LUA_VERSION);\n    lua_setfield(L, -2, to_luastring(\"_VERSION\"));\n    return 1;\n};\n\nmodule.exports.luaopen_base = luaopen_base;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    LUA_OPADD,\n    LUA_OPBAND,\n    LUA_OPBNOT,\n    LUA_OPBOR,\n    LUA_OPBXOR,\n    LUA_OPDIV,\n    LUA_OPIDIV,\n    LUA_OPMOD,\n    LUA_OPSHL,\n    LUA_OPSHR,\n    LUA_OPUNM,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TTABLE\n    },\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require(\"./llimits.js\");\nconst llex     = require('./llex.js');\nconst lobject  = require('./lobject.js');\nconst lopcodes = require('./lopcodes.js');\nconst lparser  = require('./lparser.js');\nconst ltable   = require('./ltable.js');\nconst lvm      = require('./lvm.js');\n\nconst OpCodesI = lopcodes.OpCodesI;\nconst TValue   = lobject.TValue;\n\n/* Maximum number of registers in a Lua function (must fit in 8 bits) */\nconst MAXREGS = 255;\n\n/*\n** Marks the end of a patch list. It is an invalid value both as an absolute\n** address, and as a list link (would link an element to itself).\n*/\nconst NO_JUMP = -1;\n\nconst BinOpr = {\n    OPR_ADD:      0,\n    OPR_SUB:      1,\n    OPR_MUL:      2,\n    OPR_MOD:      3,\n    OPR_POW:      4,\n    OPR_DIV:      5,\n    OPR_IDIV:     6,\n    OPR_BAND:     7,\n    OPR_BOR:      8,\n    OPR_BXOR:     9,\n    OPR_SHL:      10,\n    OPR_SHR:      11,\n    OPR_CONCAT:   12,\n    OPR_EQ:       13,\n    OPR_LT:       14,\n    OPR_LE:       15,\n    OPR_NE:       16,\n    OPR_GT:       17,\n    OPR_GE:       18,\n    OPR_AND:      19,\n    OPR_OR:       20,\n    OPR_NOBINOPR: 21\n};\n\nconst UnOpr = {\n    OPR_MINUS:    0,\n    OPR_BNOT:     1,\n    OPR_NOT:      2,\n    OPR_LEN:      3,\n    OPR_NOUNOPR:  4\n};\n\nconst hasjumps = function(e) {\n    return e.t !== e.f;\n};\n\n/*\n** If expression is a numeric constant returns either true or a new TValue\n** (depending on 'make_tvalue'). Otherwise, returns false.\n*/\nconst tonumeral = function(e, make_tvalue) {\n    let ek = lparser.expkind;\n    if (hasjumps(e))\n        return false;  /* not a numeral */\n    switch (e.k) {\n        case ek.VKINT:\n            if (make_tvalue) {\n                return new TValue(LUA_TNUMINT, e.u.ival);\n            }\n            return true;\n        case ek.VKFLT:\n            if (make_tvalue) {\n                return new TValue(LUA_TNUMFLT, e.u.nval);\n            }\n            return true;\n        default: return false;\n    }\n};\n\n/*\n** Create a OP_LOADNIL instruction, but try to optimize: if the previous\n** instruction is also OP_LOADNIL and ranges are compatible, adjust\n** range of previous instruction instead of emitting a new one. (For\n** instance, 'local a; local b' will generate a single opcode.)\n*/\nconst luaK_nil = function(fs, from, n) {\n    let previous;\n    let l = from + n - 1;  /* last register to set nil */\n    if (fs.pc > fs.lasttarget) {  /* no jumps to current position? */\n        previous = fs.f.code[fs.pc-1];\n        if (previous.opcode === OpCodesI.OP_LOADNIL) {  /* previous is LOADNIL? */\n            let pfrom = previous.A;  /* get previous range */\n            let pl = pfrom + previous.B;\n            if ((pfrom <= from && from <= pl + 1) ||\n                    (from <= pfrom && pfrom <= l + 1)) {  /* can connect both? */\n                if (pfrom < from) from = pfrom;  /* from = min(from, pfrom) */\n                if (pl > l) l = pl;  /* l = max(l, pl) */\n                lopcodes.SETARG_A(previous, from);\n                lopcodes.SETARG_B(previous, l - from);\n                return;\n            }\n        }  /* else go through */\n    }\n    luaK_codeABC(fs, OpCodesI.OP_LOADNIL, from, n - 1, 0);  /* else no optimization */\n};\n\nconst getinstruction = function(fs, e) {\n    return fs.f.code[e.u.info];\n};\n\n/*\n** Gets the destination address of a jump instruction. Used to traverse\n** a list of jumps.\n*/\nconst getjump = function(fs, pc) {\n    let offset = fs.f.code[pc].sBx;\n    if (offset === NO_JUMP)  /* point to itself represents end of list */\n        return NO_JUMP;  /* end of list */\n    else\n        return pc + 1 + offset;  /* turn offset into absolute position */\n};\n\n/*\n** Fix jump instruction at position 'pc' to jump to 'dest'.\n** (Jump addresses are relative in Lua)\n*/\nconst fixjump = function(fs, pc, dest) {\n    let jmp = fs.f.code[pc];\n    let offset = dest - (pc + 1);\n    lua_assert(dest !== NO_JUMP);\n    if (Math.abs(offset) > lopcodes.MAXARG_sBx)\n        llex.luaX_syntaxerror(fs.ls, to_luastring(\"control structure too long\", true));\n    lopcodes.SETARG_sBx(jmp, offset);\n};\n\n/*\n** Concatenate jump-list 'l2' into jump-list 'l1'\n*/\nconst luaK_concat = function(fs, l1, l2) {\n    if (l2 === NO_JUMP) return l1;  /* nothing to concatenate? */\n    else if (l1 === NO_JUMP)  /* no original list? */\n        l1 = l2;\n    else {\n        let list = l1;\n        let next = getjump(fs, list);\n        while (next !== NO_JUMP) {  /* find last element */\n            list = next;\n            next = getjump(fs, list);\n        }\n        fixjump(fs, list, l2);\n    }\n\n    return l1;\n};\n\n/*\n** Create a jump instruction and return its position, so its destination\n** can be fixed later (with 'fixjump'). If there are jumps to\n** this position (kept in 'jpc'), link them all together so that\n** 'patchlistaux' will fix all them directly to the final destination.\n*/\nconst luaK_jump = function (fs) {\n    let jpc = fs.jpc;  /* save list of jumps to here */\n    fs.jpc = NO_JUMP;  /* no more jumps to here */\n    let j = luaK_codeAsBx(fs, OpCodesI.OP_JMP, 0, NO_JUMP);\n    j = luaK_concat(fs, j, jpc);  /* keep them on hold */\n    return j;\n};\n\nconst luaK_jumpto = function(fs, t) {\n    return luaK_patchlist(fs, luaK_jump(fs), t);\n};\n\n/*\n** Code a 'return' instruction\n*/\nconst luaK_ret = function(fs, first, nret) {\n    luaK_codeABC(fs, OpCodesI.OP_RETURN, first, nret + 1, 0);\n};\n\n/*\n** Code a \"conditional jump\", that is, a test or comparison opcode\n** followed by a jump. Return jump position.\n*/\nconst condjump = function(fs, op, A, B, C) {\n    luaK_codeABC(fs, op, A, B, C);\n    return luaK_jump(fs);\n};\n\n/*\n** returns current 'pc' and marks it as a jump target (to avoid wrong\n** optimizations with consecutive instructions not in the same basic block).\n*/\nconst luaK_getlabel = function(fs) {\n    fs.lasttarget = fs.pc;\n    return fs.pc;\n};\n\n/*\n** Returns the position of the instruction \"controlling\" a given\n** jump (that is, its condition), or the jump itself if it is\n** unconditional.\n*/\nconst getjumpcontroloffset = function(fs, pc) {\n    if (pc >= 1 && lopcodes.testTMode(fs.f.code[pc - 1].opcode))\n        return pc - 1;\n    else\n        return pc;\n};\nconst getjumpcontrol = function(fs, pc) {\n    return fs.f.code[getjumpcontroloffset(fs, pc)];\n};\n\n/*\n** Patch destination register for a TESTSET instruction.\n** If instruction in position 'node' is not a TESTSET, return 0 (\"fails\").\n** Otherwise, if 'reg' is not 'NO_REG', set it as the destination\n** register. Otherwise, change instruction to a simple 'TEST' (produces\n** no register value)\n*/\nconst patchtestreg = function(fs, node, reg) {\n    let pc = getjumpcontroloffset(fs, node);\n    let i = fs.f.code[pc];\n    if (i.opcode !== OpCodesI.OP_TESTSET)\n        return false;  /* cannot patch other instructions */\n    if (reg !== lopcodes.NO_REG && reg !== i.B)\n        lopcodes.SETARG_A(i, reg);\n    else {\n        /* no register to put value or register already has the value;\n           change instruction to simple test */\n        fs.f.code[pc] = lopcodes.CREATE_ABC(OpCodesI.OP_TEST, i.B, 0, i.C);\n    }\n    return true;\n};\n\n/*\n** Traverse a list of tests ensuring no one produces a value\n*/\nconst removevalues = function(fs, list) {\n    for (; list !== NO_JUMP; list = getjump(fs, list))\n        patchtestreg(fs, list, lopcodes.NO_REG);\n};\n\n/*\n** Traverse a list of tests, patching their destination address and\n** registers: tests producing values jump to 'vtarget' (and put their\n** values in 'reg'), other tests jump to 'dtarget'.\n*/\nconst patchlistaux = function(fs, list, vtarget, reg, dtarget) {\n    while (list !== NO_JUMP) {\n        let next = getjump(fs, list);\n        if (patchtestreg(fs, list, reg))\n            fixjump(fs, list, vtarget);\n        else\n            fixjump(fs, list, dtarget);  /* jump to default target */\n        list = next;\n    }\n};\n\n/*\n** Ensure all pending jumps to current position are fixed (jumping\n** to current position with no values) and reset list of pending\n** jumps\n*/\nconst dischargejpc = function(fs) {\n    patchlistaux(fs, fs.jpc, fs.pc, lopcodes.NO_REG, fs.pc);\n    fs.jpc = NO_JUMP;\n};\n\n/*\n** Add elements in 'list' to list of pending jumps to \"here\"\n** (current position)\n*/\nconst luaK_patchtohere = function(fs, list) {\n    luaK_getlabel(fs);  /* mark \"here\" as a jump target */\n    fs.jpc = luaK_concat(fs, fs.jpc, list);\n};\n\n/*\n** Path all jumps in 'list' to jump to 'target'.\n** (The assert means that we cannot fix a jump to a forward address\n** because we only know addresses once code is generated.)\n*/\nconst luaK_patchlist = function(fs, list, target) {\n    if (target === fs.pc)  /* 'target' is current position? */\n        luaK_patchtohere(fs, list);  /* add list to pending jumps */\n    else {\n        lua_assert(target < fs.pc);\n        patchlistaux(fs, list, target, lopcodes.NO_REG, target);\n    }\n};\n\n/*\n** Path all jumps in 'list' to close upvalues up to given 'level'\n** (The assertion checks that jumps either were closing nothing\n** or were closing higher levels, from inner blocks.)\n*/\nconst luaK_patchclose = function(fs, list, level) {\n    level++;  /* argument is +1 to reserve 0 as non-op */\n    for (; list !== NO_JUMP; list = getjump(fs, list)) {\n        let ins = fs.f.code[list];\n        lua_assert(ins.opcode === OpCodesI.OP_JMP && (ins.A === 0 || ins.A >= level));\n        lopcodes.SETARG_A(ins, level);\n    }\n};\n\n/*\n** Emit instruction 'i', checking for array sizes and saving also its\n** line information. Return 'i' position.\n*/\nconst luaK_code = function(fs, i) {\n    let f = fs.f;\n    dischargejpc(fs);  /* 'pc' will change */\n    /* put new instruction in code array */\n    f.code[fs.pc] = i;\n    f.lineinfo[fs.pc] = fs.ls.lastline;\n    return fs.pc++;\n};\n\n/*\n** Format and emit an 'iABC' instruction. (Assertions check consistency\n** of parameters versus opcode.)\n*/\nconst luaK_codeABC = function(fs, o, a, b, c) {\n    lua_assert(lopcodes.getOpMode(o) === lopcodes.iABC);\n    lua_assert(lopcodes.getBMode(o) !== lopcodes.OpArgN || b === 0);\n    lua_assert(lopcodes.getCMode(o) !== lopcodes.OpArgN || c === 0);\n    lua_assert(a <= lopcodes.MAXARG_A && b <= lopcodes.MAXARG_B && c <= lopcodes.MAXARG_C);\n    return luaK_code(fs, lopcodes.CREATE_ABC(o, a, b, c));\n};\n\n/*\n** Format and emit an 'iABx' instruction.\n*/\nconst luaK_codeABx = function(fs, o, a, bc) {\n    lua_assert(lopcodes.getOpMode(o) === lopcodes.iABx || lopcodes.getOpMode(o) === lopcodes.iAsBx);\n    lua_assert(lopcodes.getCMode(o) === lopcodes.OpArgN);\n    lua_assert(a <= lopcodes.MAXARG_A && bc <= lopcodes.MAXARG_Bx);\n    return luaK_code(fs, lopcodes.CREATE_ABx(o, a, bc));\n};\n\nconst luaK_codeAsBx = function(fs,o,A,sBx) {\n    return luaK_codeABx(fs, o, A, (sBx) + lopcodes.MAXARG_sBx);\n};\n\n/*\n** Emit an \"extra argument\" instruction (format 'iAx')\n*/\nconst codeextraarg = function(fs, a) {\n    lua_assert(a <= lopcodes.MAXARG_Ax);\n    return luaK_code(fs, lopcodes.CREATE_Ax(OpCodesI.OP_EXTRAARG, a));\n};\n\n/*\n** Emit a \"load constant\" instruction, using either 'OP_LOADK'\n** (if constant index 'k' fits in 18 bits) or an 'OP_LOADKX'\n** instruction with \"extra argument\".\n*/\nconst luaK_codek = function(fs, reg, k) {\n    if (k <= lopcodes.MAXARG_Bx)\n        return luaK_codeABx(fs, OpCodesI.OP_LOADK, reg, k);\n    else {\n        let p = luaK_codeABx(fs, OpCodesI.OP_LOADKX, reg, 0);\n        codeextraarg(fs, k);\n        return p;\n    }\n};\n\n/*\n** Check register-stack level, keeping track of its maximum size\n** in field 'maxstacksize'\n*/\nconst luaK_checkstack = function(fs, n) {\n    let newstack = fs.freereg + n;\n    if (newstack > fs.f.maxstacksize) {\n        if (newstack >= MAXREGS)\n            llex.luaX_syntaxerror(fs.ls, to_luastring(\"function or expression needs too many registers\", true));\n        fs.f.maxstacksize = newstack;\n    }\n};\n\n/*\n** Reserve 'n' registers in register stack\n*/\nconst luaK_reserveregs = function(fs, n) {\n    luaK_checkstack(fs, n);\n    fs.freereg += n;\n};\n\n/*\n** Free register 'reg', if it is neither a constant index nor\n** a local variable.\n*/\nconst freereg = function(fs, reg) {\n    if (!lopcodes.ISK(reg) && reg >= fs.nactvar) {\n        fs.freereg--;\n        lua_assert(reg === fs.freereg);\n    }\n};\n\n/*\n** Free register used by expression 'e' (if any)\n*/\nconst freeexp = function(fs, e) {\n    if (e.k === lparser.expkind.VNONRELOC)\n        freereg(fs, e.u.info);\n};\n\n/*\n** Free registers used by expressions 'e1' and 'e2' (if any) in proper\n** order.\n*/\nconst freeexps = function(fs, e1, e2) {\n    let r1 = (e1.k === lparser.expkind.VNONRELOC) ? e1.u.info : -1;\n    let r2 = (e2.k === lparser.expkind.VNONRELOC) ? e2.u.info : -1;\n    if (r1 > r2) {\n        freereg(fs, r1);\n        freereg(fs, r2);\n    }\n    else {\n        freereg(fs, r2);\n        freereg(fs, r1);\n    }\n};\n\n\n/*\n** Add constant 'v' to prototype's list of constants (field 'k').\n** Use scanner's table to cache position of constants in constant list\n** and try to reuse constants. Because some values should not be used\n** as keys (nil cannot be a key, integer keys can collapse with float\n** keys), the caller must provide a useful 'key' for indexing the cache.\n*/\nconst addk = function(fs, key, v) {\n    let f = fs.f;\n    let idx = ltable.luaH_get(fs.L, fs.ls.h, key);  /* index scanner table */\n    if (idx.ttisinteger()) {  /* is there an index there? */\n        let k = idx.value;\n        /* correct value? (warning: must distinguish floats from integers!) */\n        if (k < fs.nk && f.k[k].ttype() === v.ttype() && f.k[k].value === v.value)\n            return k;  /* reuse index */\n    }\n    /* constant not found; create a new entry */\n    let k = fs.nk;\n    ltable.luaH_setfrom(fs.L, fs.ls.h, key, new lobject.TValue(LUA_TNUMINT, k));\n    f.k[k] = v;\n    fs.nk++;\n    return k;\n};\n\n/*\n** Add a string to list of constants and return its index.\n*/\nconst luaK_stringK = function(fs, s) {\n    let o = new TValue(LUA_TLNGSTR, s);\n    return addk(fs, o, o);  /* use string itself as key */\n};\n\n\n/*\n** Add an integer to list of constants and return its index.\n** Integers use userdata as keys to avoid collision with floats with\n** same value.\n*/\nconst luaK_intK = function(fs, n) {\n    let k = new TValue(LUA_TLIGHTUSERDATA, n);\n    let o = new TValue(LUA_TNUMINT, n);\n    return addk(fs, k, o);\n};\n\n/*\n** Add a float to list of constants and return its index.\n*/\nconst luaK_numberK = function(fs, r) {\n    let o = new TValue(LUA_TNUMFLT, r);\n    return addk(fs, o, o);  /* use number itself as key */\n};\n\n\n/*\n** Add a boolean to list of constants and return its index.\n*/\nconst boolK = function(fs, b) {\n    let o = new TValue(LUA_TBOOLEAN, b);\n    return addk(fs, o, o);  /* use boolean itself as key */\n};\n\n\n/*\n** Add nil to list of constants and return its index.\n*/\nconst nilK = function(fs) {\n    let v = new TValue(LUA_TNIL, null);\n    let k = new TValue(LUA_TTABLE, fs.ls.h);\n    /* cannot use nil as key; instead use table itself to represent nil */\n    return addk(fs, k, v);\n};\n\n/*\n** Fix an expression to return the number of results 'nresults'.\n** Either 'e' is a multi-ret expression (function call or vararg)\n** or 'nresults' is LUA_MULTRET (as any expression can satisfy that).\n*/\nconst luaK_setreturns = function(fs, e, nresults) {\n    let ek = lparser.expkind;\n    if (e.k === ek.VCALL) {  /* expression is an open function call? */\n        lopcodes.SETARG_C(getinstruction(fs, e), nresults + 1);\n    }\n    else if (e.k === ek.VVARARG) {\n        let pc = getinstruction(fs, e);\n        lopcodes.SETARG_B(pc, nresults + 1);\n        lopcodes.SETARG_A(pc, fs.freereg);\n        luaK_reserveregs(fs, 1);\n    }\n    else lua_assert(nresults === LUA_MULTRET);\n};\n\nconst luaK_setmultret = function(fs, e) {\n    luaK_setreturns(fs, e, LUA_MULTRET);\n};\n\n/*\n** Fix an expression to return one result.\n** If expression is not a multi-ret expression (function call or\n** vararg), it already returns one result, so nothing needs to be done.\n** Function calls become VNONRELOC expressions (as its result comes\n** fixed in the base register of the call), while vararg expressions\n** become VRELOCABLE (as OP_VARARG puts its results where it wants).\n** (Calls are created returning one result, so that does not need\n** to be fixed.)\n*/\nconst luaK_setoneret = function(fs, e) {\n    let ek = lparser.expkind;\n    if (e.k === ek.VCALL) {  /* expression is an open function call? */\n        /* already returns 1 value */\n        lua_assert(getinstruction(fs, e).C === 2);\n        e.k = ek.VNONRELOC;  /* result has fixed position */\n        e.u.info = getinstruction(fs, e).A;\n    } else if (e.k === ek.VVARARG) {\n        lopcodes.SETARG_B(getinstruction(fs, e), 2);\n        e.k = ek.VRELOCABLE;  /* can relocate its simple result */\n    }\n};\n\n/*\n** Ensure that expression 'e' is not a variable.\n*/\nconst luaK_dischargevars = function(fs, e) {\n    let ek = lparser.expkind;\n\n    switch (e.k) {\n        case ek.VLOCAL: {  /* already in a register */\n            e.k =  ek.VNONRELOC;  /* becomes a non-relocatable value */\n            break;\n        }\n        case ek.VUPVAL: {  /* move value to some (pending) register */\n            e.u.info = luaK_codeABC(fs, OpCodesI.OP_GETUPVAL, 0, e.u.info, 0);\n            e.k = ek.VRELOCABLE;\n            break;\n        }\n        case ek.VINDEXED: {\n            let op;\n            freereg(fs, e.u.ind.idx);\n            if (e.u.ind.vt === ek.VLOCAL) {  /* is 't' in a register? */\n                freereg(fs, e.u.ind.t);\n                op = OpCodesI.OP_GETTABLE;\n            } else {\n                lua_assert(e.u.ind.vt === ek.VUPVAL);\n                op = OpCodesI.OP_GETTABUP;  /* 't' is in an upvalue */\n            }\n            e.u.info = luaK_codeABC(fs, op, 0, e.u.ind.t, e.u.ind.idx);\n            e.k = ek.VRELOCABLE;\n            break;\n        }\n        case ek.VVARARG: case ek.VCALL: {\n            luaK_setoneret(fs, e);\n            break;\n        }\n        default: break;  /* there is one value available (somewhere) */\n    }\n};\n\nconst code_loadbool = function(fs, A, b, jump) {\n    luaK_getlabel(fs);  /* those instructions may be jump targets */\n    return luaK_codeABC(fs, OpCodesI.OP_LOADBOOL, A, b, jump);\n};\n\n/*\n** Ensures expression value is in register 'reg' (and therefore\n** 'e' will become a non-relocatable expression).\n*/\nconst discharge2reg = function(fs, e, reg) {\n    let ek = lparser.expkind;\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VNIL: {\n            luaK_nil(fs, reg, 1);\n            break;\n        }\n        case ek.VFALSE: case ek.VTRUE: {\n            luaK_codeABC(fs, OpCodesI.OP_LOADBOOL, reg, e.k === ek.VTRUE, 0);\n            break;\n        }\n        case ek.VK: {\n            luaK_codek(fs, reg, e.u.info);\n            break;\n        }\n        case ek.VKFLT: {\n            luaK_codek(fs, reg, luaK_numberK(fs, e.u.nval));\n            break;\n        }\n        case ek.VKINT: {\n            luaK_codek(fs, reg, luaK_intK(fs, e.u.ival));\n            break;\n        }\n        case ek.VRELOCABLE: {\n            let pc = getinstruction(fs, e);\n            lopcodes.SETARG_A(pc, reg);  /* instruction will put result in 'reg' */\n            break;\n        }\n        case ek.VNONRELOC: {\n            if (reg !== e.u.info)\n                luaK_codeABC(fs, OpCodesI.OP_MOVE, reg, e.u.info, 0);\n            break;\n        }\n        default: {\n            lua_assert(e.k === ek.VJMP);\n            return;  /* nothing to do... */\n        }\n    }\n    e.u.info = reg;\n    e.k = ek.VNONRELOC;\n};\n\n/*\n** Ensures expression value is in any register.\n*/\nconst discharge2anyreg = function(fs, e) {\n    if (e.k !== lparser.expkind.VNONRELOC) {  /* no fixed register yet? */\n        luaK_reserveregs(fs, 1);  /* get a register */\n        discharge2reg(fs, e, fs.freereg-1);  /* put value there */\n    }\n};\n\n/*\n** check whether list has any jump that do not produce a value\n** or produce an inverted value\n*/\nconst need_value = function(fs, list) {\n    for (; list !== NO_JUMP; list = getjump(fs, list)) {\n        let i = getjumpcontrol(fs, list);\n        if (i.opcode !== OpCodesI.OP_TESTSET) return true;\n    }\n    return false;  /* not found */\n};\n\n/*\n** Ensures final expression result (including results from its jump\n** lists) is in register 'reg'.\n** If expression has jumps, need to patch these jumps either to\n** its final position or to \"load\" instructions (for those tests\n** that do not produce values).\n*/\nconst exp2reg = function(fs, e, reg) {\n    let ek = lparser.expkind;\n    discharge2reg(fs, e, reg);\n    if (e.k === ek.VJMP)  /* expression itself is a test? */\n        e.t = luaK_concat(fs, e.t, e.u.info);  /* put this jump in 't' list */\n    if (hasjumps(e)) {\n        let final;  /* position after whole expression */\n        let p_f = NO_JUMP;  /* position of an eventual LOAD false */\n        let p_t = NO_JUMP;  /* position of an eventual LOAD true */\n        if (need_value(fs, e.t) || need_value(fs, e.f)) {\n            let fj = (e.k === ek.VJMP) ? NO_JUMP : luaK_jump(fs);\n            p_f = code_loadbool(fs, reg, 0, 1);\n            p_t = code_loadbool(fs, reg, 1, 0);\n            luaK_patchtohere(fs, fj);\n        }\n        final = luaK_getlabel(fs);\n        patchlistaux(fs, e.f, final, reg, p_f);\n        patchlistaux(fs, e.t, final, reg, p_t);\n    }\n    e.f = e.t = NO_JUMP;\n    e.u.info = reg;\n    e.k = ek.VNONRELOC;\n};\n\n/*\n** Ensures final expression result (including results from its jump\n** lists) is in next available register.\n*/\nconst luaK_exp2nextreg = function(fs, e) {\n    luaK_dischargevars(fs, e);\n    freeexp(fs, e);\n    luaK_reserveregs(fs, 1);\n    exp2reg(fs, e, fs.freereg - 1);\n};\n\n\n/*\n** Ensures final expression result (including results from its jump\n** lists) is in some (any) register and return that register.\n*/\nconst luaK_exp2anyreg = function(fs, e) {\n    luaK_dischargevars(fs, e);\n    if (e.k === lparser.expkind.VNONRELOC) {  /* expression already has a register? */\n        if (!hasjumps(e))  /* no jumps? */\n            return e.u.info;  /* result is already in a register */\n        if (e.u.info >= fs.nactvar) {  /* reg. is not a local? */\n            exp2reg(fs, e, e.u.info);  /* put final result in it */\n            return e.u.info;\n        }\n    }\n    luaK_exp2nextreg(fs, e);  /* otherwise, use next available register */\n    return e.u.info;\n};\n\n/*\n** Ensures final expression result is either in a register or in an\n** upvalue.\n*/\nconst luaK_exp2anyregup = function(fs, e) {\n    if (e.k !== lparser.expkind.VUPVAL || hasjumps(e))\n        luaK_exp2anyreg(fs, e);\n};\n\n/*\n** Ensures final expression result is either in a register or it is\n** a constant.\n*/\nconst luaK_exp2val = function(fs, e) {\n    if (hasjumps(e))\n        luaK_exp2anyreg(fs, e);\n    else\n        luaK_dischargevars(fs, e);\n};\n\n/*\n** Ensures final expression result is in a valid R/K index\n** (that is, it is either in a register or in 'k' with an index\n** in the range of R/K indices).\n** Returns R/K index.\n*/\nconst luaK_exp2RK = function(fs, e) {\n    let ek = lparser.expkind;\n    let vk = false;\n    luaK_exp2val(fs, e);\n    switch (e.k) {  /* move constants to 'k' */\n        case ek.VTRUE: e.u.info = boolK(fs, true); vk = true; break;\n        case ek.VFALSE: e.u.info = boolK(fs, false); vk = true; break;\n        case ek.VNIL: e.u.info = nilK(fs); vk = true; break;\n        case ek.VKINT: e.u.info = luaK_intK(fs, e.u.ival); vk = true; break;\n        case ek.VKFLT: e.u.info = luaK_numberK(fs, e.u.nval); vk = true; break;\n        case ek.VK: vk = true; break;\n        default: break;\n    }\n\n    if (vk) {\n        e.k = ek.VK;\n        if (e.u.info <= lopcodes.MAXINDEXRK)  /* constant fits in 'argC'? */\n            return lopcodes.RKASK(e.u.info);\n    }\n\n    /* not a constant in the right range: put it in a register */\n    return luaK_exp2anyreg(fs, e);\n};\n\n/*\n** Generate code to store result of expression 'ex' into variable 'var'.\n*/\nconst luaK_storevar = function(fs, vr, ex) {\n    let ek = lparser.expkind;\n    switch (vr.k) {\n        case ek.VLOCAL: {\n            freeexp(fs, ex);\n            exp2reg(fs, ex, vr.u.info);  /* compute 'ex' into proper place */\n            return;\n        }\n        case ek.VUPVAL: {\n            let e = luaK_exp2anyreg(fs, ex);\n            luaK_codeABC(fs, OpCodesI.OP_SETUPVAL, e, vr.u.info, 0);\n            break;\n        }\n        case ek.VINDEXED: {\n            let op = (vr.u.ind.vt === ek.VLOCAL) ? OpCodesI.OP_SETTABLE : OpCodesI.OP_SETTABUP;\n            let e = luaK_exp2RK(fs, ex);\n            luaK_codeABC(fs, op, vr.u.ind.t, vr.u.ind.idx, e);\n            break;\n        }\n    }\n    freeexp(fs, ex);\n};\n\n\n/*\n** Emit SELF instruction (convert expression 'e' into 'e:key(e,').\n*/\nconst luaK_self = function(fs, e, key) {\n    luaK_exp2anyreg(fs, e);\n    let ereg = e.u.info;  /* register where 'e' was placed */\n    freeexp(fs, e);\n    e.u.info = fs.freereg;  /* base register for op_self */\n    e.k = lparser.expkind.VNONRELOC;  /* self expression has a fixed register */\n    luaK_reserveregs(fs, 2);  /* function and 'self' produced by op_self */\n    luaK_codeABC(fs, OpCodesI.OP_SELF, e.u.info, ereg, luaK_exp2RK(fs, key));\n    freeexp(fs, key);\n};\n\n/*\n** Negate condition 'e' (where 'e' is a comparison).\n*/\nconst negatecondition = function(fs, e) {\n    let pc = getjumpcontrol(fs, e.u.info);\n    lua_assert(lopcodes.testTMode(pc.opcode) && pc.opcode !== OpCodesI.OP_TESTSET && pc.opcode !== OpCodesI.OP_TEST);\n    lopcodes.SETARG_A(pc, !(pc.A));\n};\n\n/*\n** Emit instruction to jump if 'e' is 'cond' (that is, if 'cond'\n** is true, code will jump if 'e' is true.) Return jump position.\n** Optimize when 'e' is 'not' something, inverting the condition\n** and removing the 'not'.\n*/\nconst jumponcond = function(fs, e, cond) {\n    if (e.k === lparser.expkind.VRELOCABLE) {\n        let ie = getinstruction(fs, e);\n        if (ie.opcode === OpCodesI.OP_NOT) {\n            fs.pc--;  /* remove previous OP_NOT */\n            return condjump(fs, OpCodesI.OP_TEST, ie.B, 0, !cond);\n        }\n        /* else go through */\n    }\n    discharge2anyreg(fs, e);\n    freeexp(fs, e);\n    return condjump(fs, OpCodesI.OP_TESTSET, lopcodes.NO_REG, e.u.info, cond);\n};\n\n/*\n** Emit code to go through if 'e' is true, jump otherwise.\n*/\nconst luaK_goiftrue = function(fs, e) {\n    let ek = lparser.expkind;\n    let pc;  /* pc of new jump */\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VJMP: {  /* condition? */\n            negatecondition(fs, e);  /* jump when it is false */\n            pc = e.u.info;  /* save jump position */\n            break;\n        }\n        case ek.VK: case ek.VKFLT: case ek.VKINT: case ek.VTRUE: {\n            pc = NO_JUMP;  /* always true; do nothing */\n            break;\n        }\n        default: {\n            pc = jumponcond(fs, e, 0);  /* jump when false */\n            break;\n        }\n    }\n    e.f = luaK_concat(fs, e.f, pc);  /* insert new jump in false list */\n    luaK_patchtohere(fs, e.t);  /* true list jumps to here (to go through) */\n    e.t = NO_JUMP;\n};\n\n/*\n** Emit code to go through if 'e' is false, jump otherwise.\n*/\nconst luaK_goiffalse = function(fs, e) {\n    let ek = lparser.expkind;\n    let pc;  /* pc of new jump */\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VJMP: {\n            pc = e.u.info;  /* already jump if true */\n            break;\n        }\n        case ek.VNIL: case ek.VFALSE: {\n            pc = NO_JUMP;  /* always false; do nothing */\n            break;\n        }\n        default: {\n            pc = jumponcond(fs, e, 1);  /* jump if true */\n            break;\n        }\n    }\n    e.t = luaK_concat(fs, e.t, pc);  /* insert new jump in 't' list */\n    luaK_patchtohere(fs, e.f);  /* false list jumps to here (to go through) */\n    e.f = NO_JUMP;\n};\n\n/*\n** Code 'not e', doing constant folding.\n*/\nconst codenot = function(fs, e) {\n    let ek = lparser.expkind;\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VNIL: case ek.VFALSE: {\n            e.k = ek.VTRUE;  /* true === not nil === not false */\n            break;\n        }\n        case ek.VK: case ek.VKFLT: case ek.VKINT: case ek.VTRUE: {\n            e.k = ek.VFALSE;  /* false === not \"x\" === not 0.5 === not 1 === not true */\n            break;\n        }\n        case ek.VJMP: {\n            negatecondition(fs, e);\n            break;\n        }\n        case ek.VRELOCABLE:\n        case ek.VNONRELOC: {\n            discharge2anyreg(fs, e);\n            freeexp(fs, e);\n            e.u.info = luaK_codeABC(fs, OpCodesI.OP_NOT, 0, e.u.info, 0);\n            e.k = ek.VRELOCABLE;\n            break;\n        }\n    }\n    /* interchange true and false lists */\n    { let temp = e.f; e.f = e.t; e.t = temp; }\n    removevalues(fs, e.f);  /* values are useless when negated */\n    removevalues(fs, e.t);\n};\n\n/*\n** Create expression 't[k]'. 't' must have its final result already in a\n** register or upvalue.\n*/\nconst luaK_indexed = function(fs, t, k) {\n    let ek = lparser.expkind;\n    lua_assert(!hasjumps(t) && (lparser.vkisinreg(t.k) || t.k === ek.VUPVAL));\n    t.u.ind.t = t.u.info;  /* register or upvalue index */\n    t.u.ind.idx = luaK_exp2RK(fs, k);  /* R/K index for key */\n    t.u.ind.vt = (t.k === ek.VUPVAL) ? ek.VUPVAL : ek.VLOCAL;\n    t.k = ek.VINDEXED;\n};\n\n/*\n** Return false if folding can raise an error.\n** Bitwise operations need operands convertible to integers; division\n** operations cannot have 0 as divisor.\n*/\nconst validop = function(op, v1, v2) {\n    switch (op) {\n        case LUA_OPBAND: case LUA_OPBOR: case LUA_OPBXOR:\n        case LUA_OPSHL: case LUA_OPSHR: case LUA_OPBNOT: {  /* conversion errors */\n            return (lvm.tointeger(v1) !== false && lvm.tointeger(v2) !== false);\n        }\n        case LUA_OPDIV: case LUA_OPIDIV: case LUA_OPMOD:  /* division by 0 */\n            return (v2.value !== 0);\n        default: return 1;  /* everything else is valid */\n    }\n};\n\n/*\n** Try to \"constant-fold\" an operation; return 1 iff successful.\n** (In this case, 'e1' has the final result.)\n*/\nconst constfolding = function(op, e1, e2) {\n    let ek = lparser.expkind;\n    let v1, v2;\n    if (!(v1 = tonumeral(e1, true)) || !(v2 = tonumeral(e2, true)) || !validop(op, v1, v2))\n        return 0;  /* non-numeric operands or not safe to fold */\n    let res = new TValue(); /* FIXME */\n    lobject.luaO_arith(null, op, v1, v2, res);  /* does operation */\n    if (res.ttisinteger()) {\n        e1.k = ek.VKINT;\n        e1.u.ival = res.value;\n    }\n    else {  /* folds neither NaN nor 0.0 (to avoid problems with -0.0) */\n        let n = res.value;\n        if (isNaN(n) || n === 0)\n            return false;\n        e1.k = ek.VKFLT;\n        e1.u.nval = n;\n    }\n    return true;\n};\n\n/*\n** Emit code for unary expressions that \"produce values\"\n** (everything but 'not').\n** Expression to produce final result will be encoded in 'e'.\n*/\nconst codeunexpval = function(fs, op, e, line) {\n    let r = luaK_exp2anyreg(fs, e);  /* opcodes operate only on registers */\n    freeexp(fs, e);\n    e.u.info = luaK_codeABC(fs, op, 0, r, 0);  /* generate opcode */\n    e.k = lparser.expkind.VRELOCABLE;  /* all those operations are relocatable */\n    luaK_fixline(fs, line);\n};\n\n/*\n** Emit code for binary expressions that \"produce values\"\n** (everything but logical operators 'and'/'or' and comparison\n** operators).\n** Expression to produce final result will be encoded in 'e1'.\n** Because 'luaK_exp2RK' can free registers, its calls must be\n** in \"stack order\" (that is, first on 'e2', which may have more\n** recent registers to be released).\n*/\nconst codebinexpval = function(fs, op, e1, e2, line) {\n    let rk2 = luaK_exp2RK(fs, e2);  /* both operands are \"RK\" */\n    let rk1 = luaK_exp2RK(fs, e1);\n    freeexps(fs, e1, e2);\n    e1.u.info = luaK_codeABC(fs, op, 0, rk1, rk2);  /* generate opcode */\n    e1.k = lparser.expkind.VRELOCABLE;  /* all those operations are relocatable */\n    luaK_fixline(fs, line);\n};\n\n\n/*\n** Emit code for comparisons.\n** 'e1' was already put in R/K form by 'luaK_infix'.\n*/\nconst codecomp = function(fs, opr, e1, e2) {\n    let ek = lparser.expkind;\n\n    let rk1;\n    if (e1.k === ek.VK)\n        rk1 = lopcodes.RKASK(e1.u.info);\n    else {\n        lua_assert(e1.k === ek.VNONRELOC);\n        rk1 = e1.u.info;\n    }\n\n    let rk2 = luaK_exp2RK(fs, e2);\n    freeexps(fs, e1, e2);\n    switch (opr) {\n        case BinOpr.OPR_NE: {  /* '(a ~= b)' ==> 'not (a === b)' */\n            e1.u.info = condjump(fs, OpCodesI.OP_EQ, 0, rk1, rk2);\n            break;\n        }\n        case BinOpr.OPR_GT: case BinOpr.OPR_GE: {\n            /* '(a > b)' ==> '(b < a)';  '(a >= b)' ==> '(b <= a)' */\n            let op = (opr - BinOpr.OPR_NE) + OpCodesI.OP_EQ;\n            e1.u.info = condjump(fs, op, 1, rk2, rk1);  /* invert operands */\n            break;\n        }\n        default: {  /* '==', '<', '<=' use their own opcodes */\n            let op = (opr - BinOpr.OPR_EQ) + OpCodesI.OP_EQ;\n            e1.u.info = condjump(fs, op, 1, rk1, rk2);\n            break;\n        }\n    }\n    e1.k = ek.VJMP;\n};\n\n/*\n** Apply prefix operation 'op' to expression 'e'.\n*/\nconst luaK_prefix = function(fs, op, e, line) {\n    let ef = new lparser.expdesc();\n    ef.k = lparser.expkind.VKINT;\n    ef.u.ival = ef.u.nval = ef.u.info = 0;\n    ef.t = NO_JUMP;\n    ef.f = NO_JUMP;\n    switch (op) {\n        case UnOpr.OPR_MINUS: case UnOpr.OPR_BNOT:  /* use 'ef' as fake 2nd operand */\n            if (constfolding(op + LUA_OPUNM, e, ef))\n                break;\n            /* FALLTHROUGH */\n        case UnOpr.OPR_LEN:\n            codeunexpval(fs, op + OpCodesI.OP_UNM, e, line);\n            break;\n        case UnOpr.OPR_NOT: codenot(fs, e); break;\n    }\n};\n\n/*\n** Process 1st operand 'v' of binary operation 'op' before reading\n** 2nd operand.\n*/\nconst luaK_infix = function(fs, op, v) {\n    switch (op) {\n        case BinOpr.OPR_AND: {\n            luaK_goiftrue(fs, v);  /* go ahead only if 'v' is true */\n            break;\n        }\n        case BinOpr.OPR_OR: {\n            luaK_goiffalse(fs, v);  /* go ahead only if 'v' is false */\n            break;\n        }\n        case BinOpr.OPR_CONCAT: {\n            luaK_exp2nextreg(fs, v);  /* operand must be on the 'stack' */\n            break;\n        }\n        case BinOpr.OPR_ADD: case BinOpr.OPR_SUB:\n        case BinOpr.OPR_MUL: case BinOpr.OPR_DIV: case BinOpr.OPR_IDIV:\n        case BinOpr.OPR_MOD: case BinOpr.OPR_POW:\n        case BinOpr.OPR_BAND: case BinOpr.OPR_BOR: case BinOpr.OPR_BXOR:\n        case BinOpr.OPR_SHL: case BinOpr.OPR_SHR: {\n            if (!tonumeral(v, false))\n                luaK_exp2RK(fs, v);\n            /* else keep numeral, which may be folded with 2nd operand */\n            break;\n        }\n        default: {\n            luaK_exp2RK(fs, v);\n            break;\n        }\n    }\n};\n\n/*\n** Finalize code for binary operation, after reading 2nd operand.\n** For '(a .. b .. c)' (which is '(a .. (b .. c))', because\n** concatenation is right associative), merge second CONCAT into first\n** one.\n*/\nconst luaK_posfix = function(fs, op, e1, e2, line) {\n    let ek = lparser.expkind;\n    switch (op) {\n        case BinOpr.OPR_AND: {\n            lua_assert(e1.t === NO_JUMP);  /* list closed by 'luK_infix' */\n            luaK_dischargevars(fs, e2);\n            e2.f = luaK_concat(fs, e2.f, e1.f);\n            e1.to(e2);\n            break;\n        }\n        case BinOpr.OPR_OR: {\n            lua_assert(e1.f === NO_JUMP);  /* list closed by 'luK_infix' */\n            luaK_dischargevars(fs, e2);\n            e2.t = luaK_concat(fs, e2.t, e1.t);\n            e1.to(e2);\n            break;\n        }\n        case BinOpr.OPR_CONCAT: {\n            luaK_exp2val(fs, e2);\n            let ins = getinstruction(fs, e2);\n            if (e2.k === ek.VRELOCABLE && ins.opcode === OpCodesI.OP_CONCAT) {\n                lua_assert(e1.u.info === ins.B - 1);\n                freeexp(fs, e1);\n                lopcodes.SETARG_B(ins, e1.u.info);\n                e1.k = ek.VRELOCABLE; e1.u.info = e2.u.info;\n            }\n            else {\n                luaK_exp2nextreg(fs, e2);  /* operand must be on the 'stack' */\n                codebinexpval(fs, OpCodesI.OP_CONCAT, e1, e2, line);\n            }\n            break;\n        }\n        case BinOpr.OPR_ADD: case BinOpr.OPR_SUB: case BinOpr.OPR_MUL: case BinOpr.OPR_DIV:\n        case BinOpr.OPR_IDIV: case BinOpr.OPR_MOD: case BinOpr.OPR_POW:\n        case BinOpr.OPR_BAND: case BinOpr.OPR_BOR: case BinOpr.OPR_BXOR:\n        case BinOpr.OPR_SHL: case BinOpr.OPR_SHR: {\n            if (!constfolding(op + LUA_OPADD, e1, e2))\n                codebinexpval(fs, op + OpCodesI.OP_ADD, e1, e2, line);\n            break;\n        }\n        case BinOpr.OPR_EQ: case BinOpr.OPR_LT: case BinOpr.OPR_LE:\n        case BinOpr.OPR_NE: case BinOpr.OPR_GT: case BinOpr.OPR_GE: {\n            codecomp(fs, op, e1, e2);\n            break;\n        }\n    }\n\n    return e1;\n};\n\n/*\n** Change line information associated with current position.\n*/\nconst luaK_fixline = function(fs, line) {\n    fs.f.lineinfo[fs.pc - 1] = line;\n};\n\n/*\n** Emit a SETLIST instruction.\n** 'base' is register that keeps table;\n** 'nelems' is #table plus those to be stored now;\n** 'tostore' is number of values (in registers 'base + 1',...) to add to\n** table (or LUA_MULTRET to add up to stack top).\n*/\nconst luaK_setlist = function(fs, base, nelems, tostore) {\n    let c =  (nelems - 1)/lopcodes.LFIELDS_PER_FLUSH + 1;\n    let b = (tostore === LUA_MULTRET) ? 0 : tostore;\n    lua_assert(tostore !== 0 && tostore <= lopcodes.LFIELDS_PER_FLUSH);\n    if (c <= lopcodes.MAXARG_C)\n        luaK_codeABC(fs, OpCodesI.OP_SETLIST, base, b, c);\n    else if (c <= lopcodes.MAXARG_Ax) {\n        luaK_codeABC(fs, OpCodesI.OP_SETLIST, base, b, 0);\n        codeextraarg(fs, c);\n    }\n    else\n        llex.luaX_syntaxerror(fs.ls, to_luastring(\"constructor too long\", true));\n    fs.freereg = base + 1;  /* free registers with list values */\n};\n\n\nmodule.exports.BinOpr             = BinOpr;\nmodule.exports.NO_JUMP            = NO_JUMP;\nmodule.exports.UnOpr              = UnOpr;\nmodule.exports.getinstruction     = getinstruction;\nmodule.exports.luaK_checkstack    = luaK_checkstack;\nmodule.exports.luaK_code          = luaK_code;\nmodule.exports.luaK_codeABC       = luaK_codeABC;\nmodule.exports.luaK_codeABx       = luaK_codeABx;\nmodule.exports.luaK_codeAsBx      = luaK_codeAsBx;\nmodule.exports.luaK_codek         = luaK_codek;\nmodule.exports.luaK_concat        = luaK_concat;\nmodule.exports.luaK_dischargevars = luaK_dischargevars;\nmodule.exports.luaK_exp2RK        = luaK_exp2RK;\nmodule.exports.luaK_exp2anyreg    = luaK_exp2anyreg;\nmodule.exports.luaK_exp2anyregup  = luaK_exp2anyregup;\nmodule.exports.luaK_exp2nextreg   = luaK_exp2nextreg;\nmodule.exports.luaK_exp2val       = luaK_exp2val;\nmodule.exports.luaK_fixline       = luaK_fixline;\nmodule.exports.luaK_getlabel      = luaK_getlabel;\nmodule.exports.luaK_goiffalse     = luaK_goiffalse;\nmodule.exports.luaK_goiftrue      = luaK_goiftrue;\nmodule.exports.luaK_indexed       = luaK_indexed;\nmodule.exports.luaK_infix         = luaK_infix;\nmodule.exports.luaK_intK          = luaK_intK;\nmodule.exports.luaK_jump          = luaK_jump;\nmodule.exports.luaK_jumpto        = luaK_jumpto;\nmodule.exports.luaK_nil           = luaK_nil;\nmodule.exports.luaK_numberK       = luaK_numberK;\nmodule.exports.luaK_patchclose    = luaK_patchclose;\nmodule.exports.luaK_patchlist     = luaK_patchlist;\nmodule.exports.luaK_patchtohere   = luaK_patchtohere;\nmodule.exports.luaK_posfix        = luaK_posfix;\nmodule.exports.luaK_prefix        = luaK_prefix;\nmodule.exports.luaK_reserveregs   = luaK_reserveregs;\nmodule.exports.luaK_ret           = luaK_ret;\nmodule.exports.luaK_self          = luaK_self;\nmodule.exports.luaK_setlist       = luaK_setlist;\nmodule.exports.luaK_setmultret    = luaK_setmultret;\nmodule.exports.luaK_setoneret     = luaK_setoneret;\nmodule.exports.luaK_setreturns    = luaK_setreturns;\nmodule.exports.luaK_storevar      = luaK_storevar;\nmodule.exports.luaK_stringK       = luaK_stringK;\n","\"use strict\";\n\nconst {\n    LUA_OK,\n    LUA_TFUNCTION,\n    LUA_TSTRING,\n    LUA_YIELD,\n    lua_Debug,\n    lua_checkstack,\n    lua_concat,\n    lua_error,\n    lua_getstack,\n    lua_gettop,\n    lua_insert,\n    lua_isyieldable,\n    lua_newthread,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcclosure,\n    lua_pushliteral,\n    lua_pushthread,\n    lua_pushvalue,\n    lua_resume,\n    lua_status,\n    lua_tothread,\n    lua_type,\n    lua_upvalueindex,\n    lua_xmove,\n    lua_yield\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_checktype,\n    luaL_newlib,\n    luaL_where\n} = require('./lauxlib.js');\n\nconst getco = function(L) {\n    let co = lua_tothread(L, 1);\n    luaL_argcheck(L, co, 1, \"thread expected\");\n    return co;\n};\n\nconst auxresume = function(L, co, narg) {\n    if (!lua_checkstack(co, narg)) {\n        lua_pushliteral(L, \"too many arguments to resume\");\n        return -1;  /* error flag */\n    }\n\n    if (lua_status(co) === LUA_OK && lua_gettop(co) === 0) {\n        lua_pushliteral(L, \"cannot resume dead coroutine\");\n        return -1;  /* error flag */\n    }\n\n    lua_xmove(L, co, narg);\n    let status = lua_resume(co, L, narg);\n    if (status === LUA_OK || status === LUA_YIELD) {\n        let nres = lua_gettop(co);\n        if (!lua_checkstack(L, nres + 1)) {\n            lua_pop(co, nres);  /* remove results anyway */\n            lua_pushliteral(L, \"too many results to resume\");\n            return -1;  /* error flag */\n        }\n\n        lua_xmove(co,  L, nres);  /* move yielded values */\n        return nres;\n    } else {\n        lua_xmove(co, L, 1);  /* move error message */\n        return -1;  /* error flag */\n    }\n};\n\nconst luaB_coresume = function(L) {\n    let co = getco(L);\n    let r = auxresume(L, co, lua_gettop(L) - 1);\n    if (r < 0) {\n        lua_pushboolean(L, 0);\n        lua_insert(L, -2);\n        return 2;  /* return false + error message */\n    } else {\n        lua_pushboolean(L, 1);\n        lua_insert(L, -(r + 1));\n        return r + 1;  /* return true + 'resume' returns */\n    }\n};\n\nconst luaB_auxwrap = function(L) {\n    let co = lua_tothread(L, lua_upvalueindex(1));\n    let r = auxresume(L, co, lua_gettop(L));\n    if (r < 0) {\n        if (lua_type(L, -1) === LUA_TSTRING) {  /* error object is a string? */\n            luaL_where(L, 1);  /* add extra info */\n            lua_insert(L, -2);\n            lua_concat(L, 2);\n        }\n\n        return lua_error(L);  /* propagate error */\n    }\n\n    return r;\n};\n\nconst luaB_cocreate = function(L) {\n    luaL_checktype(L, 1, LUA_TFUNCTION);\n    let NL = lua_newthread(L);\n    lua_pushvalue(L, 1);  /* move function to top */\n    lua_xmove(L, NL, 1);  /* move function from L to NL */\n    return 1;\n};\n\nconst luaB_cowrap = function(L) {\n    luaB_cocreate(L);\n    lua_pushcclosure(L, luaB_auxwrap, 1);\n    return 1;\n};\n\nconst luaB_yield = function(L) {\n    return lua_yield(L, lua_gettop(L));\n};\n\nconst luaB_costatus = function(L) {\n    let co = getco(L);\n    if (L === co) lua_pushliteral(L, \"running\");\n    else {\n        switch (lua_status(co)) {\n            case LUA_YIELD:\n                lua_pushliteral(L, \"suspended\");\n                break;\n            case LUA_OK: {\n                let ar = new lua_Debug();\n                if (lua_getstack(co, 0, ar) > 0)  /* does it have frames? */\n                    lua_pushliteral(L, \"normal\");  /* it is running */\n                else if (lua_gettop(co) === 0)\n                    lua_pushliteral(L, \"dead\");\n                else\n                    lua_pushliteral(L, \"suspended\");  /* initial state */\n                break;\n            }\n            default:  /* some error occurred */\n                lua_pushliteral(L, \"dead\");\n                break;\n        }\n    }\n\n    return 1;\n};\n\nconst luaB_yieldable = function(L) {\n    lua_pushboolean(L, lua_isyieldable(L));\n    return 1;\n};\n\nconst luaB_corunning = function(L) {\n    lua_pushboolean(L, lua_pushthread(L));\n    return 2;\n};\n\nconst co_funcs = {\n    \"create\":      luaB_cocreate,\n    \"isyieldable\": luaB_yieldable,\n    \"resume\":      luaB_coresume,\n    \"running\":     luaB_corunning,\n    \"status\":      luaB_costatus,\n    \"wrap\":        luaB_cowrap,\n    \"yield\":       luaB_yield\n};\n\nconst luaopen_coroutine = function(L) {\n    luaL_newlib(L, co_funcs);\n    return 1;\n};\n\nmodule.exports.luaopen_coroutine = luaopen_coroutine;\n","\"use strict\";\n\nconst {\n    LUA_MASKCALL,\n    LUA_MASKCOUNT,\n    LUA_MASKLINE,\n    LUA_MASKRET,\n    LUA_REGISTRYINDEX,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TTABLE,\n    LUA_TUSERDATA,\n    lua_Debug,\n    lua_call,\n    lua_checkstack,\n    lua_gethook,\n    lua_gethookcount,\n    lua_gethookmask,\n    lua_getinfo,\n    lua_getlocal,\n    lua_getmetatable,\n    lua_getstack,\n    lua_getupvalue,\n    lua_getuservalue,\n    lua_insert,\n    lua_iscfunction,\n    lua_isfunction,\n    lua_isnoneornil,\n    lua_isthread,\n    lua_newtable,\n    lua_pcall,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushlightuserdata,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawgetp,\n    lua_rawsetp,\n    lua_rotate,\n    lua_setfield,\n    lua_sethook,\n    lua_setlocal,\n    lua_setmetatable,\n    lua_settop,\n    lua_setupvalue,\n    lua_setuservalue,\n    lua_tojsstring,\n    lua_toproxy,\n    lua_tostring,\n    lua_tothread,\n    lua_touserdata,\n    lua_type,\n    lua_upvalueid,\n    lua_upvaluejoin,\n    lua_xmove\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_argerror,\n    luaL_checkany,\n    luaL_checkinteger,\n    luaL_checkstring,\n    luaL_checktype,\n    luaL_error,\n    luaL_loadbuffer,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_optstring,\n    luaL_traceback,\n    lua_writestringerror\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst {\n    luastring_indexOf,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\n/*\n** If L1 != L, L1 can be in any state, and therefore there are no\n** guarantees about its stack space; any push in L1 must be\n** checked.\n*/\nconst checkstack = function(L, L1, n) {\n    if (L !== L1 && !lua_checkstack(L1, n))\n        luaL_error(L, to_luastring(\"stack overflow\", true));\n};\n\nconst db_getregistry = function(L) {\n    lua_pushvalue(L, LUA_REGISTRYINDEX);\n    return 1;\n};\n\nconst db_getmetatable = function(L) {\n    luaL_checkany(L, 1);\n    if (!lua_getmetatable(L, 1)) {\n        lua_pushnil(L);  /* no metatable */\n    }\n    return 1;\n};\n\nconst db_setmetatable = function(L) {\n    const t = lua_type(L, 2);\n    luaL_argcheck(L, t == LUA_TNIL || t == LUA_TTABLE, 2, \"nil or table expected\");\n    lua_settop(L, 2);\n    lua_setmetatable(L, 1);\n    return 1;  /* return 1st argument */\n};\n\nconst db_getuservalue = function(L) {\n    if (lua_type(L, 1) !== LUA_TUSERDATA)\n        lua_pushnil(L);\n    else\n        lua_getuservalue(L, 1);\n    return 1;\n};\n\n\nconst db_setuservalue = function(L) {\n    luaL_checktype(L, 1, LUA_TUSERDATA);\n    luaL_checkany(L, 2);\n    lua_settop(L, 2);\n    lua_setuservalue(L, 1);\n    return 1;\n};\n\n/*\n** Auxiliary function used by several library functions: check for\n** an optional thread as function's first argument and set 'arg' with\n** 1 if this argument is present (so that functions can skip it to\n** access their other arguments)\n*/\nconst getthread = function(L) {\n    if (lua_isthread(L, 1)) {\n        return {\n            arg: 1,\n            thread: lua_tothread(L, 1)\n        };\n    } else {\n        return {\n            arg: 0,\n            thread: L\n        };  /* function will operate over current thread */\n    }\n};\n\n/*\n** Variations of 'lua_settable', used by 'db_getinfo' to put results\n** from 'lua_getinfo' into result table. Key is always a string;\n** value can be a string, an int, or a boolean.\n*/\nconst settabss = function(L, k, v) {\n    lua_pushstring(L, v);\n    lua_setfield(L, -2, k);\n};\n\nconst settabsi = function(L, k, v) {\n    lua_pushinteger(L, v);\n    lua_setfield(L, -2, k);\n};\n\nconst settabsb = function(L, k, v) {\n    lua_pushboolean(L, v);\n    lua_setfield(L, -2, k);\n};\n\n\n/*\n** In function 'db_getinfo', the call to 'lua_getinfo' may push\n** results on the stack; later it creates the result table to put\n** these objects. Function 'treatstackoption' puts the result from\n** 'lua_getinfo' on top of the result table so that it can call\n** 'lua_setfield'.\n*/\nconst treatstackoption = function(L, L1, fname) {\n    if (L == L1)\n        lua_rotate(L, -2, 1);  /* exchange object and table */\n    else\n        lua_xmove(L1, L, 1);  /* move object to the \"main\" stack */\n    lua_setfield(L, -2, fname);  /* put object into table */\n};\n\n/*\n** Calls 'lua_getinfo' and collects all results in a new table.\n** L1 needs stack space for an optional input (function) plus\n** two optional outputs (function and line table) from function\n** 'lua_getinfo'.\n*/\nconst db_getinfo = function(L) {\n    let ar = new lua_Debug();\n    let thread = getthread(L);\n    let arg = thread.arg;\n    let L1 = thread.thread;\n    let options = luaL_optstring(L, arg + 2, \"flnStu\");\n    checkstack(L, L1, 3);\n    if (lua_isfunction(L, arg + 1)) {  /* info about a function? */\n        options = lua_pushfstring(L, to_luastring(\">%s\"), options);  /* add '>' to 'options' */\n        lua_pushvalue(L, arg + 1);  /* move function to 'L1' stack */\n        lua_xmove(L, L1, 1);\n    } else {  /* stack level */\n        if (!lua_getstack(L1, luaL_checkinteger(L, arg + 1), ar)) {\n            lua_pushnil(L);  /* level out of range */\n            return 1;\n        }\n    }\n\n    if (!lua_getinfo(L1, options, ar))\n        luaL_argerror(L, arg + 2, \"invalid option\");\n    lua_newtable(L);  /* table to collect results */\n    if (luastring_indexOf(options, 83 /* 'S'.charCodeAt(0) */) > -1) {\n        settabss(L, to_luastring(\"source\", true), ar.source);\n        settabss(L, to_luastring(\"short_src\", true), ar.short_src);\n        settabsi(L, to_luastring(\"linedefined\", true), ar.linedefined);\n        settabsi(L, to_luastring(\"lastlinedefined\", true), ar.lastlinedefined);\n        settabss(L, to_luastring(\"what\", true), ar.what);\n    }\n    if (luastring_indexOf(options, 108 /* 'l'.charCodeAt(0) */) > -1)\n        settabsi(L, to_luastring(\"currentline\", true), ar.currentline);\n    if (luastring_indexOf(options, 117 /* 'u'.charCodeAt(0) */) > -1) {\n        settabsi(L, to_luastring(\"nups\", true), ar.nups);\n        settabsi(L, to_luastring(\"nparams\", true), ar.nparams);\n        settabsb(L, to_luastring(\"isvararg\", true), ar.isvararg);\n    }\n    if (luastring_indexOf(options, 110 /* 'n'.charCodeAt(0) */) > -1) {\n        settabss(L, to_luastring(\"name\", true), ar.name);\n        settabss(L, to_luastring(\"namewhat\", true), ar.namewhat);\n    }\n    if (luastring_indexOf(options, 116 /* 't'.charCodeAt(0) */) > -1)\n        settabsb(L, to_luastring(\"istailcall\", true), ar.istailcall);\n    if (luastring_indexOf(options, 76 /* 'L'.charCodeAt(0) */) > -1)\n        treatstackoption(L, L1, to_luastring(\"activelines\", true));\n    if (luastring_indexOf(options, 102 /* 'f'.charCodeAt(0) */) > -1)\n        treatstackoption(L, L1, to_luastring(\"func\", true));\n    return 1;  /* return table */\n};\n\nconst db_getlocal = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    let ar = new lua_Debug();\n    let nvar = luaL_checkinteger(L, arg + 2);  /* local-variable index */\n    if (lua_isfunction(L, arg + 1)) {\n        lua_pushvalue(L, arg + 1);  /* push function */\n        lua_pushstring(L, lua_getlocal(L, null, nvar));  /* push local name */\n        return 1;  /* return only name (there is no value) */\n    } else {  /* stack-level argument */\n        let level = luaL_checkinteger(L, arg + 1);\n        if (!lua_getstack(L1, level, ar))  /* out of range? */\n            return luaL_argerror(L, arg+1, \"level out of range\");\n        checkstack(L, L1, 1);\n        let name = lua_getlocal(L1, ar, nvar);\n        if (name) {\n            lua_xmove(L1, L, 1);  /* move local value */\n            lua_pushstring(L, name);  /* push name */\n            lua_rotate(L, -2, 1);  /* re-order */\n            return 2;\n        }\n        else {\n            lua_pushnil(L);  /* no name (nor value) */\n            return 1;\n        }\n    }\n};\n\nconst db_setlocal = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    let ar = new lua_Debug();\n    let level = luaL_checkinteger(L, arg + 1);\n    let nvar = luaL_checkinteger(L, arg + 2);\n    if (!lua_getstack(L1, level, ar))  /* out of range? */\n        return luaL_argerror(L, arg + 1, \"level out of range\");\n    luaL_checkany(L, arg + 3);\n    lua_settop(L, arg + 3);\n    checkstack(L, L1, 1);\n    lua_xmove(L, L1, 1);\n    let name = lua_setlocal(L1, ar, nvar);\n    if (name === null)\n        lua_pop(L1, 1);  /* pop value (if not popped by 'lua_setlocal') */\n    lua_pushstring(L, name);\n    return 1;\n};\n\n/*\n** get (if 'get' is true) or set an upvalue from a closure\n*/\nconst auxupvalue = function(L, get) {\n    let n = luaL_checkinteger(L, 2);  /* upvalue index */\n    luaL_checktype(L, 1, LUA_TFUNCTION);  /* closure */\n    let name = get ? lua_getupvalue(L, 1, n) : lua_setupvalue(L, 1, n);\n    if (name === null) return 0;\n    lua_pushstring(L, name);\n    lua_insert(L, -(get+1));  /* no-op if get is false */\n    return get + 1;\n};\n\n\nconst db_getupvalue = function(L) {\n    return auxupvalue(L, 1);\n};\n\nconst db_setupvalue = function(L) {\n    luaL_checkany(L, 3);\n    return auxupvalue(L, 0);\n};\n\n/*\n** Check whether a given upvalue from a given closure exists and\n** returns its index\n*/\nconst checkupval = function(L, argf, argnup) {\n    let nup = luaL_checkinteger(L, argnup);  /* upvalue index */\n    luaL_checktype(L, argf, LUA_TFUNCTION);  /* closure */\n    luaL_argcheck(L, (lua_getupvalue(L, argf, nup) !== null), argnup, \"invalid upvalue index\");\n    return nup;\n};\n\nconst db_upvalueid = function(L) {\n    let n = checkupval(L, 1, 2);\n    lua_pushlightuserdata(L, lua_upvalueid(L, 1, n));\n    return 1;\n};\n\nconst db_upvaluejoin = function(L) {\n    let n1 = checkupval(L, 1, 2);\n    let n2 = checkupval(L, 3, 4);\n    luaL_argcheck(L, !lua_iscfunction(L, 1), 1, \"Lua function expected\");\n    luaL_argcheck(L, !lua_iscfunction(L, 3), 3, \"Lua function expected\");\n    lua_upvaluejoin(L, 1, n1, 3, n2);\n    return 0;\n};\n\n/*\n** The hook table at registry[HOOKKEY] maps threads to their current\n** hook function. (We only need the unique address of 'HOOKKEY'.)\n*/\nconst HOOKKEY = to_luastring(\"__hooks__\", true);\n\nconst hooknames = [\"call\", \"return\", \"line\", \"count\", \"tail call\"].map(e => to_luastring(e));\n\n/*\n** Call hook function registered at hook table for the current\n** thread (if there is one)\n*/\nconst hookf = function(L, ar) {\n    lua_rawgetp(L, LUA_REGISTRYINDEX, HOOKKEY);\n    let hooktable = lua_touserdata(L, -1);\n    let proxy = hooktable.get(L);\n    if (proxy) {  /* is there a hook function? */\n        proxy(L);\n        lua_pushstring(L, hooknames[ar.event]);  /* push event name */\n        if (ar.currentline >= 0)\n            lua_pushinteger(L, ar.currentline);  /* push current line */\n        else lua_pushnil(L);\n        lualib.lua_assert(lua_getinfo(L, to_luastring(\"lS\"), ar));\n        lua_call(L, 2, 0);  /* call hook function */\n    }\n};\n\n/*\n** Convert a string mask (for 'sethook') into a bit mask\n*/\nconst makemask = function(smask, count) {\n    let mask = 0;\n    if (luastring_indexOf(smask, 99 /* 'c'.charCodeAt(0) */) > -1) mask |= LUA_MASKCALL;\n    if (luastring_indexOf(smask, 114 /* 'r'.charCodeAt(0) */) > -1) mask |= LUA_MASKRET;\n    if (luastring_indexOf(smask, 108 /* 'l'.charCodeAt(0) */) > -1) mask |= LUA_MASKLINE;\n    if (count > 0) mask |= LUA_MASKCOUNT;\n    return mask;\n};\n\n/*\n** Convert a bit mask (for 'gethook') into a string mask\n*/\nconst unmakemask = function(mask, smask) {\n    let i = 0;\n    if (mask & LUA_MASKCALL) smask[i++] = 99 /* 'c'.charCodeAt(0) */;\n    if (mask & LUA_MASKRET) smask[i++] = 114 /* 'r'.charCodeAt(0) */;\n    if (mask & LUA_MASKLINE) smask[i++] = 108 /* 'l'.charCodeAt(0) */;\n    return smask.subarray(0, i);\n};\n\nconst db_sethook = function(L) {\n    let mask, count, func;\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    if (lua_isnoneornil(L, arg+1)) {  /* no hook? */\n        lua_settop(L, arg+1);\n        func = null; mask = 0; count = 0;  /* turn off hooks */\n    }\n    else {\n        const smask = luaL_checkstring(L, arg + 2);\n        luaL_checktype(L, arg+1, LUA_TFUNCTION);\n        count = luaL_optinteger(L, arg + 3, 0);\n        func = hookf; mask = makemask(smask, count);\n    }\n    /* as weak tables are not supported; use a JS weak-map */\n    let hooktable;\n    if (lua_rawgetp(L, LUA_REGISTRYINDEX, HOOKKEY) === LUA_TNIL) {\n        hooktable = new WeakMap();\n        lua_pushlightuserdata(L, hooktable);\n        lua_rawsetp(L, LUA_REGISTRYINDEX, HOOKKEY);  /* set it in position */\n    } else {\n        hooktable = lua_touserdata(L, -1);\n    }\n    let proxy = lua_toproxy(L, arg + 1);  /* value (hook function) */\n    hooktable.set(L1, proxy);\n    lua_sethook(L1, func, mask, count);\n    return 0;\n};\n\nconst db_gethook = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let buff = new Uint8Array(5);\n    let mask = lua_gethookmask(L1);\n    let hook = lua_gethook(L1);\n    if (hook === null)  /* no hook? */\n        lua_pushnil(L);\n    else if (hook !== hookf)  /* external hook? */\n        lua_pushliteral(L, \"external hook\");\n    else {  /* hook table must exist */\n        lua_rawgetp(L, LUA_REGISTRYINDEX, HOOKKEY);\n        let hooktable = lua_touserdata(L, -1);\n        let proxy = hooktable.get(L1);\n        proxy(L);\n    }\n    lua_pushstring(L, unmakemask(mask, buff));  /* 2nd result = mask */\n    lua_pushinteger(L, lua_gethookcount(L1));  /* 3rd result = count */\n    return 3;\n};\n\nconst db_traceback = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    let msg = lua_tostring(L, arg + 1);\n    if (msg === null && !lua_isnoneornil(L, arg + 1))  /* non-string 'msg'? */\n        lua_pushvalue(L, arg + 1);  /* return it untouched */\n    else {\n        let level = luaL_optinteger(L, arg + 2, L === L1 ? 1 : 0);\n        luaL_traceback(L, L1, msg, level);\n    }\n    return 1;\n};\n\nconst dblib = {\n    \"gethook\":      db_gethook,\n    \"getinfo\":      db_getinfo,\n    \"getlocal\":     db_getlocal,\n    \"getmetatable\": db_getmetatable,\n    \"getregistry\":  db_getregistry,\n    \"getupvalue\":   db_getupvalue,\n    \"getuservalue\": db_getuservalue,\n    \"sethook\":      db_sethook,\n    \"setlocal\":     db_setlocal,\n    \"setmetatable\": db_setmetatable,\n    \"setupvalue\":   db_setupvalue,\n    \"setuservalue\": db_setuservalue,\n    \"traceback\":    db_traceback,\n    \"upvalueid\":    db_upvalueid,\n    \"upvaluejoin\":  db_upvaluejoin\n};\n\nlet getinput;\nif (typeof process !== \"undefined\") { // Only with Node\n    const readlineSync = require('readline-sync');\n    readlineSync.setDefaultOptions({\n        prompt: 'lua_debug> '\n    });\n    getinput = function() {\n        return readlineSync.prompt();\n    };\n} else if (typeof window !== \"undefined\") {\n    /* if in browser use window.prompt. Doesn't work from web workers.\n       See https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt\n    */\n    getinput = function() {\n        let input = prompt(\"lua_debug>\", \"\");\n        return (input !== null) ? input : \"\";\n    };\n}\nif (getinput) {\n    dblib.debug = function(L) {\n        for (;;) {\n            let input = getinput();\n\n            if (input === \"cont\")\n                return 0;\n\n            if (input.length === 0)\n                continue;\n\n            let buffer = to_luastring(input);\n            if (luaL_loadbuffer(L, buffer, buffer.length, to_luastring(\"=(debug command)\", true))\n                || lua_pcall(L, 0, 0, 0)) {\n                lua_writestringerror(lua_tojsstring(L, -1), \"\\n\");\n            }\n            lua_settop(L, 0);  /* remove eventual returns */\n        }\n    };\n}\n\nconst luaopen_debug = function(L) {\n    luaL_newlib(L, dblib);\n    return 1;\n};\n\nmodule.exports.luaopen_debug = luaopen_debug;\n","\"use strict\";\n\nconst {\n    LUA_HOOKCOUNT,\n    LUA_HOOKLINE,\n    LUA_MASKCOUNT,\n    LUA_MASKLINE,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TNIL,\n        LUA_TTABLE\n    },\n    thread_status: {\n        LUA_ERRRUN,\n        LUA_YIELD\n    },\n    from_userstring,\n    luastring_eq,\n    luastring_indexOf,\n    to_luastring\n} = require('./defs.js');\nconst {\n    api_check,\n    lua_assert\n} = require('./llimits.js');\nconst { LUA_IDSIZE } = require('./luaconf.js');\nconst lapi     = require('./lapi.js');\nconst ldo      = require('./ldo.js');\nconst lfunc    = require('./lfunc.js');\nconst llex     = require('./llex.js');\nconst lobject  = require('./lobject.js');\nconst lopcodes = require('./lopcodes.js');\nconst lstate   = require('./lstate.js');\nconst ltable   = require('./ltable.js');\nconst ltm      = require('./ltm.js');\nconst lvm      = require('./lvm.js');\n\nconst currentpc = function(ci) {\n    lua_assert(ci.callstatus & lstate.CIST_LUA);\n    return ci.l_savedpc - 1;\n};\n\nconst currentline = function(ci) {\n    return ci.func.value.p.lineinfo.length !== 0 ? ci.func.value.p.lineinfo[currentpc(ci)] : -1;\n};\n\n/*\n** If function yielded, its 'func' can be in the 'extra' field. The\n** next function restores 'func' to its correct value for debugging\n** purposes. (It exchanges 'func' and 'extra'; so, when called again,\n** after debugging, it also \"re-restores\" ** 'func' to its altered value.\n*/\nconst swapextra = function(L) {\n    if (L.status === LUA_YIELD) {\n        let ci = L.ci;  /* get function that yielded */\n        let temp = ci.funcOff;  /* exchange its 'func' and 'extra' values */\n        ci.func = L.stack[ci.extra];\n        ci.funcOff = ci.extra;\n        ci.extra = temp;\n    }\n};\n\nconst lua_sethook = function(L, func, mask, count) {\n    if (func === null || mask === 0) {  /* turn off hooks? */\n        mask = 0;\n        func = null;\n    }\n    if (L.ci.callstatus & lstate.CIST_LUA)\n        L.oldpc = L.ci.l_savedpc;\n    L.hook = func;\n    L.basehookcount = count;\n    L.hookcount = L.basehookcount;\n    L.hookmask = mask;\n};\n\nconst lua_gethook = function(L) {\n    return L.hook;\n};\n\n\nconst lua_gethookmask = function(L) {\n    return L.hookmask;\n};\n\n\nconst lua_gethookcount = function(L) {\n    return L.basehookcount;\n};\n\nconst lua_getstack = function(L, level, ar) {\n    let ci;\n    let status;\n    if (level < 0) return 0;  /* invalid (negative) level */\n    for (ci = L.ci; level > 0 && ci !== L.base_ci; ci = ci.previous)\n        level--;\n    if (level === 0 && ci !== L.base_ci) {  /* level found? */\n        status = 1;\n        ar.i_ci = ci;\n    } else\n        status = 0;  /* no such level */\n    return status;\n};\n\nconst upvalname = function(p, uv) {\n    lua_assert(uv < p.upvalues.length);\n    let s = p.upvalues[uv].name;\n    if (s === null) return to_luastring(\"?\", true);\n    return s.getstr();\n};\n\nconst findvararg = function(ci, n) {\n    let nparams = ci.func.value.p.numparams;\n    if (n >= ci.l_base - ci.funcOff - nparams)\n        return null;  /* no such vararg */\n    else {\n        return {\n            pos: ci.funcOff + nparams + n,\n            name: to_luastring(\"(*vararg)\", true)  /* generic name for any vararg */\n        };\n    }\n};\n\nconst findlocal = function(L, ci, n) {\n    let base, name = null;\n\n    if (ci.callstatus & lstate.CIST_LUA) {\n        if (n < 0)  /* access to vararg values? */\n            return findvararg(ci, -n);\n        else {\n            base = ci.l_base;\n            name = lfunc.luaF_getlocalname(ci.func.value.p, n, currentpc(ci));\n        }\n    } else\n        base = ci.funcOff + 1;\n\n    if (name === null) {  /* no 'standard' name? */\n        let limit = ci === L.ci ? L.top : ci.next.funcOff;\n        if (limit - base >= n && n > 0)  /* is 'n' inside 'ci' stack? */\n            name = to_luastring(\"(*temporary)\", true);  /* generic name for any valid slot */\n        else\n            return null;  /* no name */\n    }\n    return {\n        pos: base + (n - 1),\n        name: name\n    };\n};\n\nconst lua_getlocal = function(L, ar, n) {\n    let name;\n    swapextra(L);\n    if (ar === null) {  /* information about non-active function? */\n        if (!L.stack[L.top - 1].ttisLclosure())  /* not a Lua function? */\n            name = null;\n        else  /* consider live variables at function start (parameters) */\n            name = lfunc.luaF_getlocalname(L.stack[L.top - 1].value.p, n, 0);\n    } else {  /* active function; get information through 'ar' */\n        let local = findlocal(L, ar.i_ci, n);\n        if (local) {\n            name = local.name;\n            lobject.pushobj2s(L, L.stack[local.pos]);\n            api_check(L, L.top <= L.ci.top, \"stack overflow\");\n        } else {\n            name = null;\n        }\n    }\n    swapextra(L);\n    return name;\n};\n\nconst lua_setlocal = function(L, ar, n) {\n    let name;\n    swapextra(L);\n    let local = findlocal(L, ar.i_ci, n);\n    if (local) {\n        name = local.name;\n        lobject.setobjs2s(L, local.pos, L.top - 1);\n        delete L.stack[--L.top];  /* pop value */\n    } else {\n        name = null;\n    }\n    swapextra(L);\n    return name;\n};\n\nconst funcinfo = function(ar, cl) {\n    if (cl === null || cl instanceof lobject.CClosure) {\n        ar.source = to_luastring(\"=[JS]\", true);\n        ar.linedefined = -1;\n        ar.lastlinedefined = -1;\n        ar.what = to_luastring(\"J\", true);\n    } else {\n        let p = cl.p;\n        ar.source = p.source ? p.source.getstr() : to_luastring(\"=?\", true);\n        ar.linedefined = p.linedefined;\n        ar.lastlinedefined = p.lastlinedefined;\n        ar.what = ar.linedefined === 0 ? to_luastring(\"main\", true) : to_luastring(\"Lua\", true);\n    }\n\n    ar.short_src = lobject.luaO_chunkid(ar.source, LUA_IDSIZE);\n};\n\nconst collectvalidlines = function(L, f) {\n    if (f === null || f instanceof lobject.CClosure) {\n        L.stack[L.top] = new lobject.TValue(LUA_TNIL, null);\n        lapi.api_incr_top(L);\n    } else {\n        let lineinfo = f.p.lineinfo;\n        let t = ltable.luaH_new(L);\n        L.stack[L.top] = new lobject.TValue(LUA_TTABLE, t);\n        lapi.api_incr_top(L);\n        let v = new lobject.TValue(LUA_TBOOLEAN, true);\n        for (let i = 0; i < lineinfo.length; i++)\n            ltable.luaH_setint(t, lineinfo[i], v);\n    }\n};\n\nconst getfuncname = function(L, ci) {\n    let r = {\n        name: null,\n        funcname: null\n    };\n    if (ci === null)\n        return null;\n    else if (ci.callstatus & lstate.CIST_FIN) {  /* is this a finalizer? */\n        r.name = to_luastring(\"__gc\", true);\n        r.funcname = to_luastring(\"metamethod\", true);  /* report it as such */\n        return r;\n    }\n    /* calling function is a known Lua function? */\n    else if (!(ci.callstatus & lstate.CIST_TAIL) && ci.previous.callstatus & lstate.CIST_LUA)\n        return funcnamefromcode(L, ci.previous);\n    else return null;  /* no way to find a name */\n};\n\nconst auxgetinfo = function(L, what, ar, f, ci) {\n    let status = 1;\n    for (; what.length > 0; what = what.subarray(1)) {\n        switch (what[0]) {\n            case 83 /* ('S').charCodeAt(0) */: {\n                funcinfo(ar, f);\n                break;\n            }\n            case 108 /* ('l').charCodeAt(0) */: {\n                ar.currentline = ci && ci.callstatus & lstate.CIST_LUA ? currentline(ci) : -1;\n                break;\n            }\n            case 117 /* ('u').charCodeAt(0) */: {\n                ar.nups = f === null ? 0 : f.nupvalues;\n                if (f === null || f instanceof lobject.CClosure) {\n                    ar.isvararg = true;\n                    ar.nparams = 0;\n                } else {\n                    ar.isvararg = f.p.is_vararg;\n                    ar.nparams = f.p.numparams;\n                }\n                break;\n            }\n            case 116 /* ('t').charCodeAt(0) */: {\n                ar.istailcall = ci ? ci.callstatus & lstate.CIST_TAIL : 0;\n                break;\n            }\n            case 110 /* ('n').charCodeAt(0) */: {\n                let r = getfuncname(L, ci);\n                if (r === null) {\n                    ar.namewhat = to_luastring(\"\", true);\n                    ar.name = null;\n                } else {\n                    ar.namewhat = r.funcname;\n                    ar.name = r.name;\n                }\n                break;\n            }\n            case 76 /* ('L').charCodeAt(0) */:\n            case 102 /* ('f').charCodeAt(0) */:  /* handled by lua_getinfo */\n                break;\n            default: status = 0;  /* invalid option */\n        }\n    }\n\n    return status;\n};\n\nconst lua_getinfo = function(L, what, ar) {\n    what = from_userstring(what);\n    let status, cl, ci, func;\n    swapextra(L);\n    if (what[0] === 62 /* ('>').charCodeAt(0) */) {\n        ci = null;\n        func = L.stack[L.top - 1];\n        api_check(L, func.ttisfunction(), \"function expected\");\n        what = what.subarray(1);  /* skip the '>' */\n        L.top--;  /* pop function */\n    } else {\n        ci = ar.i_ci;\n        func = ci.func;\n        lua_assert(ci.func.ttisfunction());\n    }\n\n    cl = func.ttisclosure() ? func.value : null;\n    status = auxgetinfo(L, what, ar, cl, ci);\n    if (luastring_indexOf(what, 102 /* ('f').charCodeAt(0) */) >= 0) {\n        lobject.pushobj2s(L, func);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    }\n\n    swapextra(L);\n    if (luastring_indexOf(what, 76 /* ('L').charCodeAt(0) */) >= 0)\n        collectvalidlines(L, cl);\n\n    return status;\n};\n\nconst kname = function(p, pc, c) {\n    let r = {\n        name: null,\n        funcname: null\n    };\n\n    if (lopcodes.ISK(c)) {  /* is 'c' a constant? */\n        let kvalue = p.k[lopcodes.INDEXK(c)];\n        if (kvalue.ttisstring()) {  /* literal constant? */\n            r.name = kvalue.svalue();  /* it is its own name */\n            return r;\n        }\n        /* else no reasonable name found */\n    } else {  /* 'c' is a register */\n        let what = getobjname(p, pc, c); /* search for 'c' */\n        if (what && what.funcname[0] === 99 /* ('c').charCodeAt(0) */) {  /* found a constant name? */\n            return what;  /* 'name' already filled */\n        }\n        /* else no reasonable name found */\n    }\n    r.name = to_luastring(\"?\", true);\n    return r;  /* no reasonable name found */\n};\n\nconst filterpc = function(pc, jmptarget) {\n    if (pc < jmptarget)  /* is code conditional (inside a jump)? */\n        return -1;  /* cannot know who sets that register */\n    else return pc;  /* current position sets that register */\n};\n\n/*\n** try to find last instruction before 'lastpc' that modified register 'reg'\n*/\nconst findsetreg = function(p, lastpc, reg) {\n    let setreg = -1;  /* keep last instruction that changed 'reg' */\n    let jmptarget = 0;  /* any code before this address is conditional */\n    let OCi = lopcodes.OpCodesI;\n    for (let pc = 0; pc < lastpc; pc++) {\n        let i = p.code[pc];\n        let a = i.A;\n        switch (i.opcode) {\n            case OCi.OP_LOADNIL: {\n                let b = i.B;\n                if (a <= reg && reg <= a + b)  /* set registers from 'a' to 'a+b' */\n                    setreg = filterpc(pc, jmptarget);\n                break;\n            }\n            case OCi.OP_TFORCALL: {\n                if (reg >= a + 2)  /* affect all regs above its base */\n                    setreg = filterpc(pc, jmptarget);\n                break;\n            }\n            case OCi.OP_CALL:\n            case OCi.OP_TAILCALL: {\n                if (reg >= a)  /* affect all registers above base */\n                    setreg = filterpc(pc, jmptarget);\n                break;\n            }\n            case OCi.OP_JMP: {\n                let b = i.sBx;\n                let dest = pc + 1 + b;\n                /* jump is forward and do not skip 'lastpc'? */\n                if (pc < dest && dest <= lastpc) {\n                    if (dest > jmptarget)\n                        jmptarget = dest;  /* update 'jmptarget' */\n                }\n                break;\n            }\n            default:\n                if (lopcodes.testAMode(i.opcode) && reg === a)\n                    setreg = filterpc(pc, jmptarget);\n                break;\n        }\n    }\n\n    return setreg;\n};\n\n\nconst getobjname = function(p, lastpc, reg) {\n    let r = {\n        name: lfunc.luaF_getlocalname(p, reg + 1, lastpc),\n        funcname: null\n    };\n\n    if (r.name) {  /* is a local? */\n        r.funcname = to_luastring(\"local\", true);\n        return r;\n    }\n\n    /* else try symbolic execution */\n    let pc = findsetreg(p, lastpc, reg);\n    let OCi = lopcodes.OpCodesI;\n    if (pc !== -1) {  /* could find instruction? */\n        let i = p.code[pc];\n        switch (i.opcode) {\n            case OCi.OP_MOVE: {\n                let b = i.B;  /* move from 'b' to 'a' */\n                if (b < i.A)\n                    return getobjname(p, pc, b);  /* get name for 'b' */\n                break;\n            }\n            case OCi.OP_GETTABUP:\n            case OCi.OP_GETTABLE: {\n                let k = i.C;  /* key index */\n                let t = i.B;  /* table index */\n                let vn = i.opcode === OCi.OP_GETTABLE ? lfunc.luaF_getlocalname(p, t + 1, pc) : upvalname(p, t);\n                r.name = kname(p, pc, k).name;\n                r.funcname = (vn && luastring_eq(vn, llex.LUA_ENV)) ? to_luastring(\"global\", true) : to_luastring(\"field\", true);\n                return r;\n            }\n            case OCi.OP_GETUPVAL: {\n                r.name = upvalname(p, i.B);\n                r.funcname = to_luastring(\"upvalue\", true);\n                return r;\n            }\n            case OCi.OP_LOADK:\n            case OCi.OP_LOADKX: {\n                let b = i.opcode === OCi.OP_LOADK ? i.Bx : p.code[pc + 1].Ax;\n                if (p.k[b].ttisstring()) {\n                    r.name = p.k[b].svalue();\n                    r.funcname = to_luastring(\"constant\", true);\n                    return r;\n                }\n                break;\n            }\n            case OCi.OP_SELF: {\n                let k = i.C;\n                r.name = kname(p, pc, k).name;\n                r.funcname = to_luastring(\"method\", true);\n                return r;\n            }\n            default: break;\n        }\n    }\n\n    return null;\n};\n\n/*\n** Try to find a name for a function based on the code that called it.\n** (Only works when function was called by a Lua function.)\n** Returns what the name is (e.g., \"for iterator\", \"method\",\n** \"metamethod\") and sets '*name' to point to the name.\n*/\nconst funcnamefromcode = function(L, ci) {\n    let r = {\n        name: null,\n        funcname: null\n    };\n\n    let tm = 0;  /* (initial value avoids warnings) */\n    let p = ci.func.value.p;  /* calling function */\n    let pc = currentpc(ci);  /* calling instruction index */\n    let i = p.code[pc];  /* calling instruction */\n    let OCi = lopcodes.OpCodesI;\n\n    if (ci.callstatus & lstate.CIST_HOOKED) {\n        r.name = to_luastring(\"?\", true);\n        r.funcname = to_luastring(\"hook\", true);\n        return r;\n    }\n\n    switch (i.opcode) {\n        case OCi.OP_CALL:\n        case OCi.OP_TAILCALL:\n            return getobjname(p, pc, i.A);  /* get function name */\n        case OCi.OP_TFORCALL:\n            r.name = to_luastring(\"for iterator\", true);\n            r.funcname = to_luastring(\"for iterator\", true);\n            return r;\n        /* other instructions can do calls through metamethods */\n        case OCi.OP_SELF:\n        case OCi.OP_GETTABUP:\n        case OCi.OP_GETTABLE:\n            tm = ltm.TMS.TM_INDEX;\n            break;\n        case OCi.OP_SETTABUP:\n        case OCi.OP_SETTABLE:\n            tm = ltm.TMS.TM_NEWINDEX;\n            break;\n        case OCi.OP_ADD:    tm = ltm.TMS.TM_ADD;    break;\n        case OCi.OP_SUB:    tm = ltm.TMS.TM_SUB;    break;\n        case OCi.OP_MUL:    tm = ltm.TMS.TM_MUL;    break;\n        case OCi.OP_MOD:    tm = ltm.TMS.TM_MOD;    break;\n        case OCi.OP_POW:    tm = ltm.TMS.TM_POW;    break;\n        case OCi.OP_DIV:    tm = ltm.TMS.TM_DIV;    break;\n        case OCi.OP_IDIV:   tm = ltm.TMS.TM_IDIV;   break;\n        case OCi.OP_BAND:   tm = ltm.TMS.TM_BAND;   break;\n        case OCi.OP_BOR:    tm = ltm.TMS.TM_BOR;    break;\n        case OCi.OP_BXOR:   tm = ltm.TMS.TM_BXOR;   break;\n        case OCi.OP_SHL:    tm = ltm.TMS.TM_SHL;    break;\n        case OCi.OP_SHR:    tm = ltm.TMS.TM_SHR;    break;\n        case OCi.OP_UNM:    tm = ltm.TMS.TM_UNM;    break;\n        case OCi.OP_BNOT:   tm = ltm.TMS.TM_BNOT;   break;\n        case OCi.OP_LEN:    tm = ltm.TMS.TM_LEN;    break;\n        case OCi.OP_CONCAT: tm = ltm.TMS.TM_CONCAT; break;\n        case OCi.OP_EQ:     tm = ltm.TMS.TM_EQ;     break;\n        case OCi.OP_LT:     tm = ltm.TMS.TM_LT;     break;\n        case OCi.OP_LE:     tm = ltm.TMS.TM_LE;     break;\n        default:\n            return null;  /* cannot find a reasonable name */\n    }\n\n    r.name = L.l_G.tmname[tm].getstr();\n    r.funcname = to_luastring(\"metamethod\", true);\n    return r;\n};\n\nconst isinstack = function(L, ci, o) {\n    for (let i = ci.l_base; i < ci.top; i++) {\n        if (L.stack[i] === o)\n            return i;\n    }\n\n    return false;\n};\n\n/*\n** Checks whether value 'o' came from an upvalue. (That can only happen\n** with instructions OP_GETTABUP/OP_SETTABUP, which operate directly on\n** upvalues.)\n*/\nconst getupvalname = function(L, ci, o) {\n    let c = ci.func.value;\n    for (let i = 0; i < c.nupvalues; i++) {\n        if (c.upvals[i] === o) {\n            return {\n                name: upvalname(c.p, i),\n                funcname: to_luastring('upvalue', true)\n            };\n        }\n    }\n\n    return null;\n};\n\nconst varinfo = function(L, o) {\n    let ci = L.ci;\n    let kind = null;\n    if (ci.callstatus & lstate.CIST_LUA) {\n        kind = getupvalname(L, ci, o);  /* check whether 'o' is an upvalue */\n        let stkid = isinstack(L, ci, o);\n        if (!kind && stkid)  /* no? try a register */\n            kind = getobjname(ci.func.value.p, currentpc(ci), stkid - ci.l_base);\n    }\n\n    return kind ? lobject.luaO_pushfstring(L, to_luastring(\" (%s '%s')\", true), kind.funcname, kind.name) : to_luastring(\"\", true);\n};\n\nconst luaG_typeerror = function(L, o, op) {\n    let t = ltm.luaT_objtypename(L, o);\n    luaG_runerror(L, to_luastring(\"attempt to %s a %s value%s\", true), op, t, varinfo(L, o));\n};\n\nconst luaG_concaterror = function(L, p1, p2) {\n    if (p1.ttisstring() || lvm.cvt2str(p1)) p1 = p2;\n    luaG_typeerror(L, p1, to_luastring('concatenate', true));\n};\n\n/*\n** Error when both values are convertible to numbers, but not to integers\n*/\nconst luaG_opinterror = function(L, p1, p2, msg) {\n    if (lvm.tonumber(p1) === false)\n        p2 = p1;\n    luaG_typeerror(L, p2, msg);\n};\n\nconst luaG_ordererror = function(L, p1, p2) {\n    let t1 = ltm.luaT_objtypename(L, p1);\n    let t2 = ltm.luaT_objtypename(L, p2);\n    if (luastring_eq(t1, t2))\n        luaG_runerror(L, to_luastring(\"attempt to compare two %s values\", true), t1);\n    else\n        luaG_runerror(L, to_luastring(\"attempt to compare %s with %s\", true), t1, t2);\n};\n\n/* add src:line information to 'msg' */\nconst luaG_addinfo = function(L, msg, src, line) {\n    let buff;\n    if (src)\n        buff = lobject.luaO_chunkid(src.getstr(), LUA_IDSIZE);\n    else\n        buff = to_luastring(\"?\", true);\n\n    return lobject.luaO_pushfstring(L, to_luastring(\"%s:%d: %s\", true), buff, line, msg);\n};\n\nconst luaG_runerror = function(L, fmt, ...argp) {\n    let ci = L.ci;\n    let msg = lobject.luaO_pushvfstring(L, fmt, argp);\n    if (ci.callstatus & lstate.CIST_LUA)  /* if Lua function, add source:line information */\n        luaG_addinfo(L, msg, ci.func.value.p.source, currentline(ci));\n    luaG_errormsg(L);\n};\n\nconst luaG_errormsg = function(L) {\n    if (L.errfunc !== 0) {  /* is there an error handling function? */\n        let errfunc = L.errfunc;\n        lobject.pushobj2s(L, L.stack[L.top - 1]); /* move argument */\n        lobject.setobjs2s(L, L.top - 2, errfunc); /* push function */\n        ldo.luaD_callnoyield(L, L.top - 2, 1);\n    }\n\n    ldo.luaD_throw(L, LUA_ERRRUN);\n};\n\n/*\n** Error when both values are convertible to numbers, but not to integers\n*/\nconst luaG_tointerror = function(L, p1, p2) {\n    let temp = lvm.tointeger(p1);\n    if (temp === false)\n        p2 = p1;\n    luaG_runerror(L, to_luastring(\"number%s has no integer representation\", true), varinfo(L, p2));\n};\n\nconst luaG_traceexec = function(L) {\n    let ci = L.ci;\n    let mask = L.hookmask;\n    let counthook = (--L.hookcount === 0 && (mask & LUA_MASKCOUNT));\n    if (counthook)\n        L.hookcount = L.basehookcount;  /* reset count */\n    else if (!(mask & LUA_MASKLINE))\n        return;  /* no line hook and count != 0; nothing to be done */\n    if (ci.callstatus & lstate.CIST_HOOKYIELD) {  /* called hook last time? */\n        ci.callstatus &= ~lstate.CIST_HOOKYIELD;  /* erase mark */\n        return;  /* do not call hook again (VM yielded, so it did not move) */\n    }\n    if (counthook)\n        ldo.luaD_hook(L, LUA_HOOKCOUNT, -1);  /* call count hook */\n    if (mask & LUA_MASKLINE) {\n        let p = ci.func.value.p;\n        let npc = ci.l_savedpc - 1; // pcRel(ci.u.l.savedpc, p);\n        let newline = p.lineinfo.length !== 0 ? p.lineinfo[npc] : -1;\n        if (npc === 0 ||  /* call linehook when enter a new function, */\n            ci.l_savedpc <= L.oldpc ||  /* when jump back (loop), or when */\n            newline !== (p.lineinfo.length !== 0 ? p.lineinfo[L.oldpc - 1] : -1))  /* enter a new line */\n            ldo.luaD_hook(L, LUA_HOOKLINE, newline);  /* call line hook */\n    }\n    L.oldpc = ci.l_savedpc;\n    if (L.status === LUA_YIELD) {  /* did hook yield? */\n        if (counthook)\n            L.hookcount = 1;  /* undo decrement to zero */\n        ci.l_savedpc--;  /* undo increment (resume will increment it again) */\n        ci.callstatus |= lstate.CIST_HOOKYIELD;  /* mark that it yielded */\n        ci.funcOff = L.top - 1;  /* protect stack below results */\n        ci.func = L.stack[ci.funcOff];\n        ldo.luaD_throw(L, LUA_YIELD);\n    }\n};\n\nmodule.exports.luaG_addinfo     = luaG_addinfo;\nmodule.exports.luaG_concaterror = luaG_concaterror;\nmodule.exports.luaG_errormsg    = luaG_errormsg;\nmodule.exports.luaG_opinterror  = luaG_opinterror;\nmodule.exports.luaG_ordererror  = luaG_ordererror;\nmodule.exports.luaG_runerror    = luaG_runerror;\nmodule.exports.luaG_tointerror  = luaG_tointerror;\nmodule.exports.luaG_traceexec   = luaG_traceexec;\nmodule.exports.luaG_typeerror   = luaG_typeerror;\nmodule.exports.lua_gethook      = lua_gethook;\nmodule.exports.lua_gethookcount = lua_gethookcount;\nmodule.exports.lua_gethookmask  = lua_gethookmask;\nmodule.exports.lua_getinfo      = lua_getinfo;\nmodule.exports.lua_getlocal     = lua_getlocal;\nmodule.exports.lua_getstack     = lua_getstack;\nmodule.exports.lua_sethook      = lua_sethook;\nmodule.exports.lua_setlocal     = lua_setlocal;\n","\"use strict\";\n\nconst {\n    LUA_HOOKCALL,\n    LUA_HOOKRET,\n    LUA_HOOKTAILCALL,\n    LUA_MASKCALL,\n    LUA_MASKLINE,\n    LUA_MASKRET,\n    LUA_MINSTACK,\n    LUA_MULTRET,\n    LUA_SIGNATURE,\n    constant_types: {\n        LUA_TCCL,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TNIL\n    },\n    thread_status: {\n        LUA_ERRMEM,\n        LUA_ERRERR,\n        LUA_ERRRUN,\n        LUA_ERRSYNTAX,\n        LUA_OK,\n        LUA_YIELD\n    },\n    lua_Debug,\n    luastring_indexOf,\n    to_luastring\n} = require('./defs.js');\nconst lapi     = require('./lapi.js');\nconst ldebug   = require('./ldebug.js');\nconst lfunc    = require('./lfunc.js');\nconst {\n    api_check,\n    lua_assert,\n    LUAI_MAXCCALLS\n} = require('./llimits.js');\nconst lobject  = require('./lobject.js');\nconst lopcodes = require('./lopcodes.js');\nconst lparser  = require('./lparser.js');\nconst lstate   = require('./lstate.js');\nconst { luaS_newliteral } = require('./lstring.js');\nconst ltm      = require('./ltm.js');\nconst { LUAI_MAXSTACK } = require('./luaconf.js');\nconst lundump  = require('./lundump.js');\nconst lvm      = require('./lvm.js');\nconst { MBuffer } = require('./lzio.js');\n\nconst adjust_top = function(L, newtop) {\n    if (L.top < newtop) {\n        while (L.top < newtop)\n            L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n    } else {\n        while (L.top > newtop)\n            delete L.stack[--L.top];\n    }\n};\n\nconst seterrorobj = function(L, errcode, oldtop) {\n    let current_top = L.top;\n\n    /* extend stack so that L.stack[oldtop] is sure to exist */\n    while (L.top < oldtop + 1)\n        L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n\n    switch (errcode) {\n        case LUA_ERRMEM: {\n            lobject.setsvalue2s(L, oldtop, luaS_newliteral(L, \"not enough memory\"));\n            break;\n        }\n        case LUA_ERRERR: {\n            lobject.setsvalue2s(L, oldtop, luaS_newliteral(L, \"error in error handling\"));\n            break;\n        }\n        default: {\n            lobject.setobjs2s(L, oldtop, current_top - 1);\n        }\n    }\n\n    while (L.top > oldtop + 1)\n        delete L.stack[--L.top];\n};\n\nconst ERRORSTACKSIZE = LUAI_MAXSTACK + 200;\n\nconst luaD_reallocstack = function(L, newsize) {\n    lua_assert(newsize <= LUAI_MAXSTACK || newsize == ERRORSTACKSIZE);\n    lua_assert(L.stack_last == L.stack.length - lstate.EXTRA_STACK);\n    L.stack.length = newsize;\n    L.stack_last = newsize - lstate.EXTRA_STACK;\n};\n\nconst luaD_growstack = function(L, n) {\n    let size = L.stack.length;\n    if (size > LUAI_MAXSTACK)\n        luaD_throw(L, LUA_ERRERR);\n    else {\n        let needed = L.top + n + lstate.EXTRA_STACK;\n        let newsize = 2 * size;\n        if (newsize > LUAI_MAXSTACK) newsize = LUAI_MAXSTACK;\n        if (newsize < needed) newsize = needed;\n        if (newsize > LUAI_MAXSTACK) {  /* stack overflow? */\n            luaD_reallocstack(L, ERRORSTACKSIZE);\n            ldebug.luaG_runerror(L, to_luastring(\"stack overflow\", true));\n        }\n        else\n            luaD_reallocstack(L, newsize);\n    }\n};\n\nconst luaD_checkstack = function(L, n) {\n    if (L.stack_last - L.top <= n)\n        luaD_growstack(L, n);\n};\n\nconst stackinuse = function(L) {\n    let lim = L.top;\n    for (let ci = L.ci; ci !== null; ci = ci.previous) {\n        if (lim < ci.top) lim = ci.top;\n    }\n    lua_assert(lim <= L.stack_last);\n    return lim + 1; /* part of stack in use */\n};\n\nconst luaD_shrinkstack = function(L) {\n    let inuse = stackinuse(L);\n    let goodsize = inuse + Math.floor(inuse / 8) + 2*lstate.EXTRA_STACK;\n    if (goodsize > LUAI_MAXSTACK)\n        goodsize = LUAI_MAXSTACK;  /* respect stack limit */\n    if (L.stack.length > LUAI_MAXSTACK)  /* had been handling stack overflow? */\n        lstate.luaE_freeCI(L);  /* free all CIs (list grew because of an error) */\n    /* if thread is currently not handling a stack overflow and its\n     good size is smaller than current size, shrink its stack */\n    if (inuse <= (LUAI_MAXSTACK - lstate.EXTRA_STACK) && goodsize < L.stack.length)\n        luaD_reallocstack(L, goodsize);\n};\n\nconst luaD_inctop = function(L) {\n    luaD_checkstack(L, 1);\n    L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n};\n\n/*\n** Prepares a function call: checks the stack, creates a new CallInfo\n** entry, fills in the relevant information, calls hook if needed.\n** If function is a JS function, does the call, too. (Otherwise, leave\n** the execution ('luaV_execute') to the caller, to allow stackless\n** calls.) Returns true iff function has been executed (JS function).\n*/\nconst luaD_precall = function(L, off, nresults) {\n    let func = L.stack[off];\n\n    switch(func.type) {\n        case LUA_TCCL:\n        case LUA_TLCF: {\n            let f = func.type === LUA_TCCL ? func.value.f : func.value;\n\n            luaD_checkstack(L, LUA_MINSTACK);\n            let ci = lstate.luaE_extendCI(L);\n            ci.funcOff = off;\n            ci.nresults = nresults;\n            ci.func = func;\n            ci.top = L.top + LUA_MINSTACK;\n            lua_assert(ci.top <= L.stack_last);\n            ci.callstatus = 0;\n            if (L.hookmask & LUA_MASKCALL)\n                luaD_hook(L, LUA_HOOKCALL, -1);\n            let n = f(L); /* do the actual call */\n            if (typeof n !== \"number\" || n < 0 || (n|0) !== n)\n                throw Error(\"invalid return value from JS function (expected integer)\");\n            lapi.api_checknelems(L, n);\n\n            luaD_poscall(L, ci, L.top - n, n);\n\n            return true;\n        }\n        case LUA_TLCL: {\n            let base;\n            let p = func.value.p;\n            let n = L.top - off - 1;\n            let fsize = p.maxstacksize;\n            luaD_checkstack(L, fsize);\n            if (p.is_vararg) {\n                base = adjust_varargs(L, p, n);\n            } else {\n                for (; n < p.numparams; n++)\n                    L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null); // complete missing arguments\n                base = off + 1;\n            }\n\n            let ci = lstate.luaE_extendCI(L);\n            ci.funcOff = off;\n            ci.nresults = nresults;\n            ci.func = func;\n            ci.l_base = base;\n            ci.top = base + fsize;\n            adjust_top(L, ci.top);\n            ci.l_code = p.code;\n            ci.l_savedpc = 0;\n            ci.callstatus = lstate.CIST_LUA;\n            if (L.hookmask & LUA_MASKCALL)\n                callhook(L, ci);\n            return false;\n        }\n        default:\n            luaD_checkstack(L, 1);\n            tryfuncTM(L, off, func);\n            return luaD_precall(L, off, nresults);\n    }\n};\n\nconst luaD_poscall = function(L, ci, firstResult, nres) {\n    let wanted = ci.nresults;\n\n    if (L.hookmask & (LUA_MASKRET | LUA_MASKLINE)) {\n        if (L.hookmask & LUA_MASKRET)\n            luaD_hook(L, LUA_HOOKRET, -1);\n        L.oldpc = ci.previous.l_savedpc;  /* 'oldpc' for caller function */\n    }\n\n    let res = ci.funcOff;\n    L.ci = ci.previous;\n    L.ci.next = null;\n    return moveresults(L, firstResult, res, nres, wanted);\n};\n\nconst moveresults = function(L, firstResult, res, nres, wanted) {\n    switch (wanted) {\n        case 0:\n            break;\n        case 1: {\n            if (nres === 0)\n                L.stack[res].setnilvalue();\n            else {\n                lobject.setobjs2s(L, res, firstResult); /* move it to proper place */\n            }\n            break;\n        }\n        case LUA_MULTRET: {\n            for (let i = 0; i < nres; i++)\n                lobject.setobjs2s(L, res + i, firstResult + i);\n            for (let i=L.top; i>=(res + nres); i--)\n                delete L.stack[i];\n            L.top = res + nres;\n            return false;\n        }\n        default: {\n            let i;\n            if (wanted <= nres) {\n                for (i = 0; i < wanted; i++)\n                    lobject.setobjs2s(L, res + i, firstResult + i);\n            } else {\n                for (i = 0; i < nres; i++)\n                    lobject.setobjs2s(L, res + i, firstResult + i);\n                for (; i < wanted; i++) {\n                    if (res+i >= L.top)\n                        L.stack[res + i] = new lobject.TValue(LUA_TNIL, null);\n                    else\n                        L.stack[res + i].setnilvalue();\n                }\n            }\n            break;\n        }\n    }\n    let newtop = res + wanted; /* top points after the last result */\n    for (let i=L.top; i>=newtop; i--)\n        delete L.stack[i];\n    L.top = newtop;\n    return true;\n};\n\n/*\n** Call a hook for the given event. Make sure there is a hook to be\n** called. (Both 'L->hook' and 'L->hookmask', which triggers this\n** function, can be changed asynchronously by signals.)\n*/\nconst luaD_hook = function(L, event, line) {\n    let hook = L.hook;\n    if (hook && L.allowhook) {  /* make sure there is a hook */\n        let ci = L.ci;\n        let top = L.top;\n        let ci_top = ci.top;\n        let ar = new lua_Debug();\n        ar.event = event;\n        ar.currentline = line;\n        ar.i_ci = ci;\n        luaD_checkstack(L, LUA_MINSTACK);  /* ensure minimum stack size */\n        ci.top = L.top + LUA_MINSTACK;\n        lua_assert(ci.top <= L.stack_last);\n        L.allowhook = 0;  /* cannot call hooks inside a hook */\n        ci.callstatus |= lstate.CIST_HOOKED;\n        hook(L, ar);\n        lua_assert(!L.allowhook);\n        L.allowhook = 1;\n        ci.top = ci_top;\n        adjust_top(L, top);\n        ci.callstatus &= ~lstate.CIST_HOOKED;\n    }\n};\n\nconst callhook = function(L, ci) {\n    let hook = LUA_HOOKCALL;\n    ci.l_savedpc++;  /* hooks assume 'pc' is already incremented */\n    if ((ci.previous.callstatus & lstate.CIST_LUA) &&\n      ci.previous.l_code[ci.previous.l_savedpc - 1].opcode == lopcodes.OpCodesI.OP_TAILCALL) {\n        ci.callstatus |= lstate.CIST_TAIL;\n        hook = LUA_HOOKTAILCALL;\n    }\n    luaD_hook(L, hook, -1);\n    ci.l_savedpc--;  /* correct 'pc' */\n};\n\nconst adjust_varargs = function(L, p, actual) {\n    let nfixargs = p.numparams;\n    /* move fixed parameters to final position */\n    let fixed = L.top - actual; /* first fixed argument */\n    let base = L.top; /* final position of first argument */\n\n    let i;\n    for (i = 0; i < nfixargs && i < actual; i++) {\n        lobject.pushobj2s(L, L.stack[fixed + i]);\n        L.stack[fixed + i].setnilvalue();\n    }\n\n    for (; i < nfixargs; i++)\n        L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n\n    return base;\n};\n\nconst tryfuncTM = function(L, off, func) {\n    let tm = ltm.luaT_gettmbyobj(L, func, ltm.TMS.TM_CALL);\n    if (!tm.ttisfunction(tm))\n        ldebug.luaG_typeerror(L, func, to_luastring(\"call\", true));\n    /* Open a hole inside the stack at 'func' */\n    lobject.pushobj2s(L, L.stack[L.top-1]); /* push top of stack again */\n    for (let p = L.top-2; p > off; p--)\n        lobject.setobjs2s(L, p, p-1); /* move other items up one */\n    lobject.setobj2s(L, off, tm); /* tag method is the new function to be called */\n};\n\n/*\n** Check appropriate error for stack overflow (\"regular\" overflow or\n** overflow while handling stack overflow). If 'nCalls' is larger than\n** LUAI_MAXCCALLS (which means it is handling a \"regular\" overflow) but\n** smaller than 9/8 of LUAI_MAXCCALLS, does not report an error (to\n** allow overflow handling to work)\n*/\nconst stackerror = function(L) {\n    if (L.nCcalls === LUAI_MAXCCALLS)\n        ldebug.luaG_runerror(L, to_luastring(\"JS stack overflow\", true));\n    else if (L.nCcalls >= LUAI_MAXCCALLS + (LUAI_MAXCCALLS >> 3))\n        luaD_throw(L, LUA_ERRERR);  /* error while handing stack error */\n};\n\n/*\n** Call a function (JS or Lua). The function to be called is at func.\n** The arguments are on the stack, right after the function.\n** When returns, all the results are on the stack, starting at the original\n** function position.\n*/\nconst luaD_call = function(L, off, nResults) {\n    if (++L.nCcalls >= LUAI_MAXCCALLS)\n        stackerror(L);\n    if (!luaD_precall(L, off, nResults))\n        lvm.luaV_execute(L);\n    L.nCcalls--;\n};\n\nconst luaD_throw = function(L, errcode) {\n    if (L.errorJmp) {  /* thread has an error handler? */\n        L.errorJmp.status = errcode;  /* set status */\n        throw L.errorJmp;\n    } else {  /* thread has no error handler */\n        let g = L.l_G;\n        L.status = errcode;  /* mark it as dead */\n        if (g.mainthread.errorJmp) {  /* main thread has a handler? */\n            g.mainthread.stack[g.mainthread.top++] = L.stack[L.top - 1];  /* copy error obj. */\n            luaD_throw(g.mainthread, errcode);  /* re-throw in main thread */\n        } else {  /* no handler at all; abort */\n            let panic = g.panic;\n            if (panic) {  /* panic function? */\n                seterrorobj(L, errcode, L.top);  /* assume EXTRA_STACK */\n                if (L.ci.top < L.top)\n                    L.ci.top = L.top;  /* pushing msg. can break this invariant */\n                panic(L);  /* call panic function (last chance to jump out) */\n            }\n            throw new Error(`Aborted ${errcode}`);\n        }\n    }\n};\n\nconst luaD_rawrunprotected = function(L, f, ud) {\n    let oldnCcalls = L.nCcalls;\n    let lj = {\n        status: LUA_OK,\n        previous: L.errorJmp /* chain new error handler */\n    };\n    L.errorJmp = lj;\n\n    try {\n        f(L, ud);\n    } catch (e) {\n        if (lj.status === LUA_OK) {\n            /* error was not thrown via luaD_throw, i.e. it is a JS error */\n            /* run user error handler (if it exists) */\n            let atnativeerror = L.l_G.atnativeerror;\n            if (atnativeerror) {\n                try {\n                    lj.status = LUA_OK;\n\n                    lapi.lua_pushcfunction(L, atnativeerror);\n                    lapi.lua_pushlightuserdata(L, e);\n                    luaD_callnoyield(L, L.top - 2, 1);\n\n                    /* Now run the message handler (if it exists) */\n                    /* copy of luaG_errormsg without the throw */\n                    if (L.errfunc !== 0) {  /* is there an error handling function? */\n                        let errfunc = L.errfunc;\n                        lobject.pushobj2s(L, L.stack[L.top - 1]); /* move argument */\n                        lobject.setobjs2s(L, L.top - 2, errfunc); /* push function */\n                        luaD_callnoyield(L, L.top - 2, 1);\n                    }\n\n                    lj.status = LUA_ERRRUN;\n                } catch(e2) {\n                    if (lj.status === LUA_OK) {\n                        /* also failed */\n                        lj.status = -1;\n                    }\n                }\n            } else {\n                lj.status = -1;\n            }\n        }\n    }\n\n    L.errorJmp = lj.previous;\n    L.nCcalls = oldnCcalls;\n\n    return lj.status;\n\n};\n\n/*\n** Completes the execution of an interrupted C function, calling its\n** continuation function.\n*/\nconst finishCcall = function(L, status) {\n    let ci = L.ci;\n\n    /* must have a continuation and must be able to call it */\n    lua_assert(ci.c_k !== null && L.nny === 0);\n    /* error status can only happen in a protected call */\n    lua_assert(ci.callstatus & lstate.CIST_YPCALL || status === LUA_YIELD);\n\n    if (ci.callstatus & lstate.CIST_YPCALL) {  /* was inside a pcall? */\n        ci.callstatus &= ~lstate.CIST_YPCALL;  /* continuation is also inside it */\n        L.errfunc = ci.c_old_errfunc;  /* with the same error function */\n    }\n\n    /* finish 'lua_callk'/'lua_pcall'; CIST_YPCALL and 'errfunc' already\n       handled */\n    if (ci.nresults === LUA_MULTRET && L.ci.top < L.top) L.ci.top = L.top;\n    let c_k = ci.c_k; /* don't want to call as method */\n    let n = c_k(L, status, ci.c_ctx);  /* call continuation function */\n    lapi.api_checknelems(L, n);\n    luaD_poscall(L, ci, L.top - n, n);  /* finish 'luaD_precall' */\n};\n\n/*\n** Executes \"full continuation\" (everything in the stack) of a\n** previously interrupted coroutine until the stack is empty (or another\n** interruption long-jumps out of the loop). If the coroutine is\n** recovering from an error, 'ud' points to the error status, which must\n** be passed to the first continuation function (otherwise the default\n** status is LUA_YIELD).\n*/\nconst unroll = function(L, ud) {\n    if (ud !== null)  /* error status? */\n        finishCcall(L, ud);  /* finish 'lua_pcallk' callee */\n\n    while (L.ci !== L.base_ci) {  /* something in the stack */\n        if (!(L.ci.callstatus & lstate.CIST_LUA))  /* C function? */\n            finishCcall(L, LUA_YIELD);  /* complete its execution */\n        else {  /* Lua function */\n            lvm.luaV_finishOp(L);  /* finish interrupted instruction */\n            lvm.luaV_execute(L);  /* execute down to higher C 'boundary' */\n        }\n    }\n};\n\n/*\n** Try to find a suspended protected call (a \"recover point\") for the\n** given thread.\n*/\nconst findpcall = function(L) {\n    for (let ci = L.ci; ci !== null; ci = ci.previous) {  /* search for a pcall */\n        if (ci.callstatus & lstate.CIST_YPCALL)\n            return ci;\n    }\n\n    return null;  /* no pending pcall */\n};\n\n/*\n** Recovers from an error in a coroutine. Finds a recover point (if\n** there is one) and completes the execution of the interrupted\n** 'luaD_pcall'. If there is no recover point, returns zero.\n*/\nconst recover = function(L, status) {\n    let ci = findpcall(L);\n    if (ci === null) return 0;  /* no recovery point */\n    /* \"finish\" luaD_pcall */\n    let oldtop = ci.extra;\n    lfunc.luaF_close(L, oldtop);\n    seterrorobj(L, status, oldtop);\n    L.ci = ci;\n    L.allowhook = ci.callstatus & lstate.CIST_OAH;  /* restore original 'allowhook' */\n    L.nny = 0;  /* should be zero to be yieldable */\n    luaD_shrinkstack(L);\n    L.errfunc = ci.c_old_errfunc;\n    return 1;  /* continue running the coroutine */\n};\n\n/*\n** Signal an error in the call to 'lua_resume', not in the execution\n** of the coroutine itself. (Such errors should not be handled by any\n** coroutine error handler and should not kill the coroutine.)\n*/\nconst resume_error = function(L, msg, narg) {\n    let ts = luaS_newliteral(L, msg);\n    if (narg === 0) {\n        lobject.pushsvalue2s(L, ts);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    } else {\n        /* remove args from the stack */\n        for (let i=1; i<narg; i++)\n            delete L.stack[--L.top];\n        lobject.setsvalue2s(L, L.top-1, ts);  /* push error message */\n    }\n    return LUA_ERRRUN;\n};\n\n/*\n** Do the work for 'lua_resume' in protected mode. Most of the work\n** depends on the status of the coroutine: initial state, suspended\n** inside a hook, or regularly suspended (optionally with a continuation\n** function), plus erroneous cases: non-suspended coroutine or dead\n** coroutine.\n*/\nconst resume = function(L, n) {\n    let firstArg = L.top - n;  /* first argument */\n    let ci = L.ci;\n    if (L.status === LUA_OK) {  /* starting a coroutine? */\n        if (!luaD_precall(L, firstArg - 1, LUA_MULTRET))  /* Lua function? */\n            lvm.luaV_execute(L);  /* call it */\n    } else {  /* resuming from previous yield */\n        lua_assert(L.status === LUA_YIELD);\n        L.status = LUA_OK;  /* mark that it is running (again) */\n        ci.funcOff = ci.extra;\n        ci.func = L.stack[ci.funcOff];\n\n        if (ci.callstatus & lstate.CIST_LUA)  /* yielded inside a hook? */\n            lvm.luaV_execute(L);  /* just continue running Lua code */\n        else {  /* 'common' yield */\n            if (ci.c_k !== null) {  /* does it have a continuation function? */\n                n = ci.c_k(L, LUA_YIELD, ci.c_ctx); /* call continuation */\n                lapi.api_checknelems(L, n);\n                firstArg = L.top - n;  /* yield results come from continuation */\n            }\n\n            luaD_poscall(L, ci, firstArg, n);  /* finish 'luaD_precall' */\n        }\n\n        unroll(L, null);  /* run continuation */\n    }\n};\n\nconst lua_resume = function(L, from, nargs) {\n    let oldnny = L.nny;  /* save \"number of non-yieldable\" calls */\n\n    if (L.status === LUA_OK) {  /* may be starting a coroutine */\n        if (L.ci !== L.base_ci)  /* not in base level? */\n            return resume_error(L, \"cannot resume non-suspended coroutine\", nargs);\n    } else if (L.status !== LUA_YIELD)\n        return resume_error(L, \"cannot resume dead coroutine\", nargs);\n\n    L.nCcalls = from ? from.nCcalls + 1 : 1;\n    if (L.nCcalls >= LUAI_MAXCCALLS)\n        return resume_error(L, \"JS stack overflow\", nargs);\n\n    L.nny = 0;  /* allow yields */\n\n    lapi.api_checknelems(L, L.status === LUA_OK ? nargs + 1: nargs);\n\n    let status = luaD_rawrunprotected(L, resume, nargs);\n    if (status === -1)  /* error calling 'lua_resume'? */\n        status = LUA_ERRRUN;\n    else {  /* continue running after recoverable errors */\n        while (status > LUA_YIELD && recover(L, status)) {\n            /* unroll continuation */\n            status = luaD_rawrunprotected(L, unroll, status);\n        }\n\n        if (status > LUA_YIELD) {  /* unrecoverable error? */\n            L.status = status;  /* mark thread as 'dead' */\n            seterrorobj(L, status, L.top);  /* push error message */\n            L.ci.top = L.top;\n        } else\n            lua_assert(status === L.status);  /* normal end or yield */\n    }\n\n    L.nny = oldnny;  /* restore 'nny' */\n    L.nCcalls--;\n    lua_assert(L.nCcalls === (from ? from.nCcalls : 0));\n    return status;\n};\n\nconst lua_isyieldable = function(L) {\n    return L.nny === 0;\n};\n\nconst lua_yieldk = function(L, nresults, ctx, k) {\n    let ci = L.ci;\n    lapi.api_checknelems(L, nresults);\n\n    if (L.nny > 0) {\n        if (L !== L.l_G.mainthread)\n            ldebug.luaG_runerror(L, to_luastring(\"attempt to yield across a JS-call boundary\", true));\n        else\n            ldebug.luaG_runerror(L, to_luastring(\"attempt to yield from outside a coroutine\", true));\n    }\n\n    L.status = LUA_YIELD;\n    ci.extra = ci.funcOff;  /* save current 'func' */\n    if (ci.callstatus & lstate.CIST_LUA)  /* inside a hook? */\n        api_check(L, k === null, \"hooks cannot continue after yielding\");\n    else {\n        ci.c_k = k;\n        if (k !== null)  /* is there a continuation? */\n            ci.c_ctx = ctx;  /* save context */\n        ci.funcOff = L.top - nresults - 1;  /* protect stack below results */\n        ci.func = L.stack[ci.funcOff];\n        luaD_throw(L, LUA_YIELD);\n    }\n\n    lua_assert(ci.callstatus & lstate.CIST_HOOKED);  /* must be inside a hook */\n    return 0;  /* return to 'luaD_hook' */\n};\n\nconst lua_yield = function(L, n) {\n    lua_yieldk(L, n, 0, null);\n};\n\nconst luaD_pcall = function(L, func, u, old_top, ef) {\n    let old_ci = L.ci;\n    let old_allowhooks = L.allowhook;\n    let old_nny = L.nny;\n    let old_errfunc = L.errfunc;\n    L.errfunc = ef;\n\n    let status = luaD_rawrunprotected(L, func, u);\n\n    if (status !== LUA_OK) {\n        lfunc.luaF_close(L, old_top);\n        seterrorobj(L, status, old_top);\n        L.ci = old_ci;\n        L.allowhook = old_allowhooks;\n        L.nny = old_nny;\n        luaD_shrinkstack(L);\n    }\n\n    L.errfunc = old_errfunc;\n\n    return status;\n};\n\n/*\n** Similar to 'luaD_call', but does not allow yields during the call\n*/\nconst luaD_callnoyield = function(L, off, nResults) {\n    L.nny++;\n    luaD_call(L, off, nResults);\n    L.nny--;\n};\n\n/*\n** Execute a protected parser.\n*/\nclass SParser {\n    constructor(z, name, mode) {  /* data to 'f_parser' */\n        this.z = z;\n        this.buff = new MBuffer();  /* dynamic structure used by the scanner */\n        this.dyd = new lparser.Dyndata();  /* dynamic structures used by the parser */\n        this.mode = mode;\n        this.name = name;\n    }\n}\n\nconst checkmode = function(L, mode, x) {\n    if (mode && luastring_indexOf(mode, x[0]) === -1) {\n        lobject.luaO_pushfstring(L,\n            to_luastring(\"attempt to load a %s chunk (mode is '%s')\"), x, mode);\n        luaD_throw(L, LUA_ERRSYNTAX);\n    }\n};\n\nconst f_parser = function(L, p) {\n    let cl;\n    let c = p.z.zgetc();  /* read first character */\n    if (c === LUA_SIGNATURE[0]) {\n        checkmode(L, p.mode, to_luastring(\"binary\", true));\n        cl = lundump.luaU_undump(L, p.z, p.name);\n    } else {\n        checkmode(L, p.mode, to_luastring(\"text\", true));\n        cl = lparser.luaY_parser(L, p.z, p.buff, p.dyd, p.name, c);\n    }\n\n    lua_assert(cl.nupvalues === cl.p.upvalues.length);\n    lfunc.luaF_initupvals(L, cl);\n};\n\nconst luaD_protectedparser = function(L, z, name, mode) {\n    let p = new SParser(z, name, mode);\n    L.nny++;  /* cannot yield during parsing */\n    let status = luaD_pcall(L, f_parser, p, L.top, L.errfunc);\n    L.nny--;\n    return status;\n};\n\nmodule.exports.adjust_top           = adjust_top;\nmodule.exports.luaD_call            = luaD_call;\nmodule.exports.luaD_callnoyield     = luaD_callnoyield;\nmodule.exports.luaD_checkstack      = luaD_checkstack;\nmodule.exports.luaD_growstack       = luaD_growstack;\nmodule.exports.luaD_hook            = luaD_hook;\nmodule.exports.luaD_inctop          = luaD_inctop;\nmodule.exports.luaD_pcall           = luaD_pcall;\nmodule.exports.luaD_poscall         = luaD_poscall;\nmodule.exports.luaD_precall         = luaD_precall;\nmodule.exports.luaD_protectedparser = luaD_protectedparser;\nmodule.exports.luaD_rawrunprotected = luaD_rawrunprotected;\nmodule.exports.luaD_reallocstack    = luaD_reallocstack;\nmodule.exports.luaD_throw           = luaD_throw;\nmodule.exports.lua_isyieldable      = lua_isyieldable;\nmodule.exports.lua_resume           = lua_resume;\nmodule.exports.lua_yield            = lua_yield;\nmodule.exports.lua_yieldk           = lua_yieldk;\n","\"use strict\";\n\nconst {\n    LUA_SIGNATURE,\n    LUA_VERSION_MAJOR,\n    LUA_VERSION_MINOR,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR\n    },\n    luastring_of\n} = require('./defs.js');\n\nconst LUAC_DATA    = luastring_of(25, 147, 13, 10, 26, 10);\nconst LUAC_INT     = 0x5678;\nconst LUAC_NUM     = 370.5;\nconst LUAC_VERSION = Number(LUA_VERSION_MAJOR) * 16 + Number(LUA_VERSION_MINOR);\nconst LUAC_FORMAT  = 0;   /* this is the official format */\n\nclass DumpState {\n    constructor() {\n        this.L = null;\n        this.write = null;\n        this.data = null;\n        this.strip = NaN;\n        this.status = NaN;\n    }\n}\n\nconst DumpBlock = function(b, size, D) {\n    if (D.status === 0 && size > 0)\n        D.status = D.writer(D.L, b, size, D.data);\n};\n\nconst DumpByte = function(y, D) {\n    DumpBlock(luastring_of(y), 1, D);\n};\n\nconst DumpInt = function(x, D) {\n    let ab = new ArrayBuffer(4);\n    let dv = new DataView(ab);\n    dv.setInt32(0, x, true);\n    let t = new Uint8Array(ab);\n    DumpBlock(t, 4, D);\n};\n\nconst DumpInteger = function(x, D) {\n    let ab = new ArrayBuffer(4);\n    let dv = new DataView(ab);\n    dv.setInt32(0, x, true);\n    let t = new Uint8Array(ab);\n    DumpBlock(t, 4, D);\n};\n\nconst DumpNumber = function(x, D) {\n    let ab = new ArrayBuffer(8);\n    let dv = new DataView(ab);\n    dv.setFloat64(0, x, true);\n    let t = new Uint8Array(ab);\n    DumpBlock(t, 8, D);\n};\n\nconst DumpString = function(s, D) {\n    if (s === null)\n        DumpByte(0, D);\n    else {\n        let size = s.tsslen() + 1;\n        let str = s.getstr();\n        if (size < 0xFF)\n            DumpByte(size, D);\n        else {\n            DumpByte(0xFF, D);\n            DumpInteger(size, D);\n        }\n        DumpBlock(str, size - 1, D);  /* no need to save '\\0' */\n    }\n};\n\nconst DumpCode = function(f, D) {\n    let s = f.code.map(e => e.code);\n    DumpInt(s.length, D);\n\n    for (let i = 0; i < s.length; i++)\n        DumpInt(s[i], D);\n};\n\nconst DumpConstants = function(f, D) {\n    let n = f.k.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++) {\n        let o = f.k[i];\n        DumpByte(o.ttype(), D);\n        switch (o.ttype()) {\n            case LUA_TNIL:\n                break;\n            case LUA_TBOOLEAN:\n                DumpByte(o.value ? 1 : 0, D);\n                break;\n            case LUA_TNUMFLT:\n                DumpNumber(o.value, D);\n                break;\n            case LUA_TNUMINT:\n                DumpInteger(o.value, D);\n                break;\n            case LUA_TSHRSTR:\n            case LUA_TLNGSTR:\n                DumpString(o.tsvalue(), D);\n                break;\n        }\n    }\n};\n\nconst DumpProtos = function(f, D) {\n    let n = f.p.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++)\n        DumpFunction(f.p[i], f.source, D);\n};\n\nconst DumpUpvalues = function(f, D) {\n    let n = f.upvalues.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++) {\n        DumpByte(f.upvalues[i].instack ? 1 : 0, D);\n        DumpByte(f.upvalues[i].idx, D);\n    }\n};\n\nconst DumpDebug = function(f, D) {\n    let n = D.strip ? 0 : f.lineinfo.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++)\n        DumpInt(f.lineinfo[i], D);\n    n = D.strip ? 0 : f.locvars.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++) {\n        DumpString(f.locvars[i].varname, D);\n        DumpInt(f.locvars[i].startpc, D);\n        DumpInt(f.locvars[i].endpc, D);\n    }\n    n = D.strip ? 0 : f.upvalues.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++)\n        DumpString(f.upvalues[i].name, D);\n};\n\nconst DumpFunction = function(f, psource, D) {\n    if (D.strip || f.source === psource)\n        DumpString(null, D);  /* no debug info or same source as its parent */\n    else\n        DumpString(f.source, D);\n    DumpInt(f.linedefined, D);\n    DumpInt(f.lastlinedefined, D);\n    DumpByte(f.numparams, D);\n    DumpByte(f.is_vararg?1:0, D);\n    DumpByte(f.maxstacksize, D);\n    DumpCode(f, D);\n    DumpConstants(f, D);\n    DumpUpvalues(f, D);\n    DumpProtos(f, D);\n    DumpDebug(f, D);\n};\n\nconst DumpHeader = function(D) {\n    DumpBlock(LUA_SIGNATURE, LUA_SIGNATURE.length, D);\n    DumpByte(LUAC_VERSION, D);\n    DumpByte(LUAC_FORMAT, D);\n    DumpBlock(LUAC_DATA, LUAC_DATA.length, D);\n    DumpByte(4, D); // intSize\n    DumpByte(4, D); // size_tSize\n    DumpByte(4, D); // instructionSize\n    DumpByte(4, D); // integerSize\n    DumpByte(8, D); // numberSize\n    DumpInteger(LUAC_INT, D);\n    DumpNumber(LUAC_NUM, D);\n};\n\n/*\n** dump Lua function as precompiled chunk\n*/\nconst luaU_dump = function(L, f, w, data, strip) {\n    let D = new DumpState();\n    D.L = L;\n    D.writer = w;\n    D.data = data;\n    D.strip = strip;\n    D.status = 0;\n    DumpHeader(D);\n    DumpByte(f.upvalues.length, D);\n    DumpFunction(f, null, D);\n    return D.status;\n};\n\nmodule.exports.luaU_dump = luaU_dump;\n","\"use strict\";\n\nconst { constant_types: { LUA_TNIL } } = require('./defs.js');\nconst lobject = require('./lobject.js');\n\nclass Proto {\n    constructor(L) {\n        this.id = L.l_G.id_counter++;\n        this.k = [];              // constants used by the function\n        this.p = [];              // functions defined inside the function\n        this.code = [];           // opcodes\n        this.cache = null;        // last-created closure with this prototype\n        this.lineinfo = [];       // map from opcodes to source lines (debug information)\n        this.upvalues = [];       // upvalue information\n        this.numparams = 0;       // number of fixed parameters\n        this.is_vararg = false;\n        this.maxstacksize = 0;    // number of registers needed by this function\n        this.locvars = [];        // information about local variables (debug information)\n        this.linedefined = 0;     // debug information\n        this.lastlinedefined = 0; // debug information\n        this.source = null;       // used for debug information\n    }\n}\n\nconst luaF_newLclosure = function(L, n) {\n    return new lobject.LClosure(L, n);\n};\n\n\nconst luaF_findupval = function(L, level) {\n    return L.stack[level];\n};\n\nconst luaF_close = function(L, level) {\n    /* Create new TValues on stack;\n     * any closures will keep referencing old TValues */\n    for (let i=level; i<L.top; i++) {\n        let old = L.stack[i];\n        L.stack[i] = new lobject.TValue(old.type, old.value);\n    }\n};\n\n/*\n** fill a closure with new upvalues\n*/\nconst luaF_initupvals = function(L, cl) {\n    for (let i = 0; i < cl.nupvalues; i++)\n        cl.upvals[i] = new lobject.TValue(LUA_TNIL, null);\n};\n\n/*\n** Look for n-th local variable at line 'line' in function 'func'.\n** Returns null if not found.\n*/\nconst luaF_getlocalname = function(f, local_number, pc) {\n    for (let i = 0; i < f.locvars.length && f.locvars[i].startpc <= pc; i++) {\n        if (pc < f.locvars[i].endpc) {  /* is variable active? */\n            local_number--;\n            if (local_number === 0)\n                return f.locvars[i].varname.getstr();\n        }\n    }\n    return null;  /* not found */\n};\n\nmodule.exports.MAXUPVAL          = 255;\nmodule.exports.Proto             = Proto;\nmodule.exports.luaF_findupval    = luaF_findupval;\nmodule.exports.luaF_close        = luaF_close;\nmodule.exports.luaF_getlocalname = luaF_getlocalname;\nmodule.exports.luaF_initupvals   = luaF_initupvals;\nmodule.exports.luaF_newLclosure  = luaF_newLclosure;\n","\"use strict\";\n\nconst { lua_pop } = require('./lua.js');\nconst { luaL_requiref } = require('./lauxlib.js');\nconst { to_luastring } = require(\"./fengaricore.js\");\n\nconst loadedlibs = {};\n\n/* export before requiring lualib.js */\nconst luaL_openlibs = function(L) {\n    /* \"require\" functions from 'loadedlibs' and set results to global table */\n    for (let lib in loadedlibs) {\n        luaL_requiref(L, to_luastring(lib), loadedlibs[lib], 1);\n        lua_pop(L, 1); /* remove lib */\n    }\n};\nmodule.exports.luaL_openlibs = luaL_openlibs;\n\nconst lualib = require('./lualib.js');\nconst { luaopen_base }      = require('./lbaselib.js');\nconst { luaopen_coroutine } = require('./lcorolib.js');\nconst { luaopen_debug }     = require('./ldblib.js');\nconst { luaopen_math }      = require('./lmathlib.js');\nconst { luaopen_package }   = require('./loadlib.js');\nconst { luaopen_os }        = require('./loslib.js');\nconst { luaopen_string }    = require('./lstrlib.js');\nconst { luaopen_table }     = require('./ltablib.js');\nconst { luaopen_utf8 }      = require('./lutf8lib.js');\n\nloadedlibs[\"_G\"] = luaopen_base,\nloadedlibs[lualib.LUA_LOADLIBNAME] = luaopen_package;\nloadedlibs[lualib.LUA_COLIBNAME] = luaopen_coroutine;\nloadedlibs[lualib.LUA_TABLIBNAME] = luaopen_table;\nloadedlibs[lualib.LUA_OSLIBNAME] = luaopen_os;\nloadedlibs[lualib.LUA_STRLIBNAME] = luaopen_string;\nloadedlibs[lualib.LUA_MATHLIBNAME] = luaopen_math;\nloadedlibs[lualib.LUA_UTF8LIBNAME] = luaopen_utf8;\nloadedlibs[lualib.LUA_DBLIBNAME] = luaopen_debug;\nif (typeof process !== \"undefined\")\n    loadedlibs[lualib.LUA_IOLIBNAME] = require('./liolib.js').luaopen_io;\n\n/* Extension: fengari library */\nconst { luaopen_fengari } = require('./fengarilib.js');\nloadedlibs[lualib.LUA_FENGARILIBNAME] = luaopen_fengari;\n","\"use strict\";\n\nconst { luastring_of } = require('./defs.js');\n\nconst luai_ctype_ = luastring_of(\n    0x00,  /* EOZ */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 0. */\n    0x00,  0x08,  0x08,  0x08,  0x08,  0x08,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 1. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x0c,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,        /* 2. */\n    0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,\n    0x16,  0x16,  0x16,  0x16,  0x16,  0x16,  0x16,  0x16,        /* 3. */\n    0x16,  0x16,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,\n    0x04,  0x15,  0x15,  0x15,  0x15,  0x15,  0x15,  0x05,        /* 4. */\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,        /* 5. */\n    0x05,  0x05,  0x05,  0x04,  0x04,  0x04,  0x04,  0x05,\n    0x04,  0x15,  0x15,  0x15,  0x15,  0x15,  0x15,  0x05,        /* 6. */\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,        /* 7. */\n    0x05,  0x05,  0x05,  0x04,  0x04,  0x04,  0x04,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 8. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 9. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* a. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* b. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* c. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* d. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* e. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* f. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00\n);\n\nconst ALPHABIT = 0;\nconst DIGITBIT = 1;\nconst PRINTBIT = 2;\nconst SPACEBIT = 3;\nconst XDIGITBIT = 4;\n\nconst lisdigit = function(c) {\n    return (luai_ctype_[c+1] & (1<<DIGITBIT)) !== 0;\n};\n\nconst lisxdigit = function(c) {\n    return (luai_ctype_[c+1] & (1<<XDIGITBIT)) !== 0;\n};\n\nconst lisprint = function(c) {\n    return (luai_ctype_[c+1] & (1<<PRINTBIT)) !== 0;\n};\n\nconst lisspace = function(c) {\n    return (luai_ctype_[c+1] & (1<<SPACEBIT)) !== 0;\n};\n\nconst lislalpha = function(c) {\n    return (luai_ctype_[c+1] & (1<<ALPHABIT)) !== 0;\n};\n\nconst lislalnum = function(c) {\n    return (luai_ctype_[c+1] & ((1<<ALPHABIT)|(1<<DIGITBIT))) !== 0;\n};\n\nmodule.exports.lisdigit   = lisdigit;\nmodule.exports.lislalnum  = lislalnum;\nmodule.exports.lislalpha  = lislalpha;\nmodule.exports.lisprint   = lisprint;\nmodule.exports.lisspace   = lisspace;\nmodule.exports.lisxdigit  = lisxdigit;\n","\"use strict\";\n\nconst {\n    constant_types: { LUA_TBOOLEAN, LUA_TLNGSTR },\n    thread_status: { LUA_ERRSYNTAX },\n    to_luastring\n} = require('./defs.js');\nconst {\n    LUA_MINBUFFER,\n    MAX_INT,\n    lua_assert\n} = require('./llimits.js');\nconst ldebug   = require('./ldebug.js');\nconst ldo      = require('./ldo.js');\nconst {\n    lisdigit,\n    lislalnum,\n    lislalpha,\n    lisspace,\n    lisxdigit\n} = require('./ljstype.js');\nconst lobject  = require('./lobject.js');\nconst {\n    luaS_bless,\n    luaS_hash,\n    luaS_hashlongstr,\n    luaS_new\n} = require('./lstring.js');\nconst ltable   = require('./ltable.js');\nconst {\n    EOZ,\n    luaZ_buffer,\n    luaZ_buffremove,\n    luaZ_resetbuffer,\n    luaZ_resizebuffer\n} = require('./lzio.js');\n\nconst FIRST_RESERVED = 257;\n\nconst LUA_ENV = to_luastring(\"_ENV\", true);\n\n/* terminal symbols denoted by reserved words */\nconst TK_AND      = FIRST_RESERVED;\nconst TK_BREAK    = FIRST_RESERVED + 1;\nconst TK_DO       = FIRST_RESERVED + 2;\nconst TK_ELSE     = FIRST_RESERVED + 3;\nconst TK_ELSEIF   = FIRST_RESERVED + 4;\nconst TK_END      = FIRST_RESERVED + 5;\nconst TK_FALSE    = FIRST_RESERVED + 6;\nconst TK_FOR      = FIRST_RESERVED + 7;\nconst TK_FUNCTION = FIRST_RESERVED + 8;\nconst TK_GOTO     = FIRST_RESERVED + 9;\nconst TK_IF       = FIRST_RESERVED + 10;\nconst TK_IN       = FIRST_RESERVED + 11;\nconst TK_LOCAL    = FIRST_RESERVED + 12;\nconst TK_NIL      = FIRST_RESERVED + 13;\nconst TK_NOT      = FIRST_RESERVED + 14;\nconst TK_OR       = FIRST_RESERVED + 15;\nconst TK_REPEAT   = FIRST_RESERVED + 16;\nconst TK_RETURN   = FIRST_RESERVED + 17;\nconst TK_THEN     = FIRST_RESERVED + 18;\nconst TK_TRUE     = FIRST_RESERVED + 19;\nconst TK_UNTIL    = FIRST_RESERVED + 20;\nconst TK_WHILE    = FIRST_RESERVED + 21;\n/* other terminal symbols */\nconst TK_IDIV     = FIRST_RESERVED + 22;\nconst TK_CONCAT   = FIRST_RESERVED + 23;\nconst TK_DOTS     = FIRST_RESERVED + 24;\nconst TK_EQ       = FIRST_RESERVED + 25;\nconst TK_GE       = FIRST_RESERVED + 26;\nconst TK_LE       = FIRST_RESERVED + 27;\nconst TK_NE       = FIRST_RESERVED + 28;\nconst TK_SHL      = FIRST_RESERVED + 29;\nconst TK_SHR      = FIRST_RESERVED + 30;\nconst TK_DBCOLON  = FIRST_RESERVED + 31;\nconst TK_EOS      = FIRST_RESERVED + 32;\nconst TK_FLT      = FIRST_RESERVED + 33;\nconst TK_INT      = FIRST_RESERVED + 34;\nconst TK_NAME     = FIRST_RESERVED + 35;\nconst TK_STRING   = FIRST_RESERVED + 36;\n\nconst RESERVED = {\n    \"TK_AND\":      TK_AND,\n    \"TK_BREAK\":    TK_BREAK,\n    \"TK_DO\":       TK_DO,\n    \"TK_ELSE\":     TK_ELSE,\n    \"TK_ELSEIF\":   TK_ELSEIF,\n    \"TK_END\":      TK_END,\n    \"TK_FALSE\":    TK_FALSE,\n    \"TK_FOR\":      TK_FOR,\n    \"TK_FUNCTION\": TK_FUNCTION,\n    \"TK_GOTO\":     TK_GOTO,\n    \"TK_IF\":       TK_IF,\n    \"TK_IN\":       TK_IN,\n    \"TK_LOCAL\":    TK_LOCAL,\n    \"TK_NIL\":      TK_NIL,\n    \"TK_NOT\":      TK_NOT,\n    \"TK_OR\":       TK_OR,\n    \"TK_REPEAT\":   TK_REPEAT,\n    \"TK_RETURN\":   TK_RETURN,\n    \"TK_THEN\":     TK_THEN,\n    \"TK_TRUE\":     TK_TRUE,\n    \"TK_UNTIL\":    TK_UNTIL,\n    \"TK_WHILE\":    TK_WHILE,\n    \"TK_IDIV\":     TK_IDIV,\n    \"TK_CONCAT\":   TK_CONCAT,\n    \"TK_DOTS\":     TK_DOTS,\n    \"TK_EQ\":       TK_EQ,\n    \"TK_GE\":       TK_GE,\n    \"TK_LE\":       TK_LE,\n    \"TK_NE\":       TK_NE,\n    \"TK_SHL\":      TK_SHL,\n    \"TK_SHR\":      TK_SHR,\n    \"TK_DBCOLON\":  TK_DBCOLON,\n    \"TK_EOS\":      TK_EOS,\n    \"TK_FLT\":      TK_FLT,\n    \"TK_INT\":      TK_INT,\n    \"TK_NAME\":     TK_NAME,\n    \"TK_STRING\":   TK_STRING\n};\n\nconst luaX_tokens = [\n    \"and\", \"break\", \"do\", \"else\", \"elseif\",\n    \"end\", \"false\", \"for\", \"function\", \"goto\", \"if\",\n    \"in\", \"local\", \"nil\", \"not\", \"or\", \"repeat\",\n    \"return\", \"then\", \"true\", \"until\", \"while\",\n    \"//\", \"..\", \"...\", \"==\", \">=\", \"<=\", \"~=\",\n    \"<<\", \">>\", \"::\", \"<eof>\",\n    \"<number>\", \"<integer>\", \"<name>\", \"<string>\"\n].map((e, i)=>to_luastring(e));\n\nclass SemInfo {\n    constructor() {\n        this.r = NaN;\n        this.i = NaN;\n        this.ts = null;\n    }\n}\n\nclass Token {\n    constructor() {\n        this.token = NaN;\n        this.seminfo = new SemInfo();\n    }\n}\n\n/* state of the lexer plus state of the parser when shared by all\n   functions */\nclass LexState {\n    constructor() {\n        this.current = NaN;  /* current character (charint) */\n        this.linenumber = NaN;  /* input line counter */\n        this.lastline = NaN;  /* line of last token 'consumed' */\n        this.t = new Token();  /* current token */\n        this.lookahead = new Token();  /* look ahead token */\n        this.fs = null;  /* current function (parser) */\n        this.L = null;\n        this.z = null; /* input stream */\n        this.buff = null;  /* buffer for tokens */\n        this.h = null;  /* to reuse strings */\n        this.dyd = null;  /* dynamic structures used by the parser */\n        this.source = null;  /* current source name */\n        this.envn = null;  /* environment variable name */\n    }\n}\n\nconst save = function(ls, c) {\n    let b = ls.buff;\n    if (b.n + 1 > b.buffer.length) {\n        if (b.buffer.length >= MAX_INT/2)\n            lexerror(ls, to_luastring(\"lexical element too long\", true), 0);\n        let newsize = b.buffer.length*2;\n        luaZ_resizebuffer(ls.L, b, newsize);\n    }\n    b.buffer[b.n++] = c < 0 ? 255 + c + 1 : c;\n};\n\nconst luaX_token2str = function(ls, token) {\n    if (token < FIRST_RESERVED) {  /* single-byte symbols? */\n        return lobject.luaO_pushfstring(ls.L, to_luastring(\"'%c'\", true), token);\n    } else {\n        let s = luaX_tokens[token - FIRST_RESERVED];\n        if (token < TK_EOS)  /* fixed format (symbols and reserved words)? */\n            return lobject.luaO_pushfstring(ls.L, to_luastring(\"'%s'\", true), s);\n        else  /* names, strings, and numerals */\n            return s;\n    }\n};\n\nconst currIsNewline = function(ls) {\n    return ls.current === 10 /* ('\\n').charCodeAt(0) */ || ls.current === 13 /* ('\\r').charCodeAt(0) */;\n};\n\nconst next = function(ls) {\n    ls.current = ls.z.zgetc();\n};\n\nconst save_and_next = function(ls) {\n    save(ls, ls.current);\n    next(ls);\n};\n\n/*\n** creates a new string and anchors it in scanner's table so that\n** it will not be collected until the end of the compilation\n** (by that time it should be anchored somewhere)\n*/\nconst TVtrue = new lobject.TValue(LUA_TBOOLEAN, true);\nconst luaX_newstring = function(ls, str) {\n    let L = ls.L;\n    let ts = luaS_new(L, str);\n    /* HACK: Workaround lack of ltable 'keyfromval' */\n    let tpair = ls.h.strong.get(luaS_hashlongstr(ts));\n    if (!tpair) { /* not in use yet? */\n        let key = new lobject.TValue(LUA_TLNGSTR, ts);\n        ltable.luaH_setfrom(L, ls.h, key, TVtrue);\n    } else { /* string already present */\n        ts = tpair.key.tsvalue(); /* re-use value previously stored */\n    }\n    return ts;\n};\n\n/*\n** increment line number and skips newline sequence (any of\n** \\n, \\r, \\n\\r, or \\r\\n)\n*/\nconst inclinenumber = function(ls) {\n    let old = ls.current;\n    lua_assert(currIsNewline(ls));\n    next(ls);  /* skip '\\n' or '\\r' */\n    if (currIsNewline(ls) && ls.current !== old)\n        next(ls);  /* skip '\\n\\r' or '\\r\\n' */\n    if (++ls.linenumber >= MAX_INT)\n        lexerror(ls, to_luastring(\"chunk has too many lines\", true), 0);\n};\n\nconst luaX_setinput = function(L, ls, z, source, firstchar) {\n    ls.t = {\n        token: 0,\n        seminfo: new SemInfo()\n    };\n    ls.L = L;\n    ls.current = firstchar;\n    ls.lookahead = {\n        token: TK_EOS,\n        seminfo: new SemInfo()\n    };\n    ls.z = z;\n    ls.fs = null;\n    ls.linenumber = 1;\n    ls.lastline = 1;\n    ls.source = source;\n    ls.envn = luaS_bless(L, LUA_ENV);\n    luaZ_resizebuffer(L, ls.buff, LUA_MINBUFFER);  /* initialize buffer */\n};\n\nconst check_next1 = function(ls, c) {\n    if (ls.current === c) {\n        next(ls);\n        return true;\n    }\n\n    return false;\n};\n\n/*\n** Check whether current char is in set 'set' (with two chars) and\n** saves it\n*/\nconst check_next2 = function(ls, set) {\n    if (ls.current === set[0].charCodeAt(0) || ls.current === set[1].charCodeAt(0)) {\n        save_and_next(ls);\n        return true;\n    }\n\n    return false;\n};\n\nconst read_numeral = function(ls, seminfo) {\n    let expo = \"Ee\";\n    let first = ls.current;\n    lua_assert(lisdigit(ls.current));\n    save_and_next(ls);\n    if (first === 48 /* ('0').charCodeAt(0) */ && check_next2(ls, \"xX\"))  /* hexadecimal? */\n        expo = \"Pp\";\n\n    for (;;) {\n        if (check_next2(ls, expo))  /* exponent part? */\n            check_next2(ls, \"-+\");  /* optional exponent sign */\n        if (lisxdigit(ls.current))\n            save_and_next(ls);\n        else if (ls.current === 46 /* ('.').charCodeAt(0) */)\n            save_and_next(ls);\n        else break;\n    }\n\n    // save(ls, 0);\n\n    let obj = new lobject.TValue();\n    if (lobject.luaO_str2num(luaZ_buffer(ls.buff), obj) === 0)  /* format error? */\n        lexerror(ls, to_luastring(\"malformed number\", true), TK_FLT);\n    if (obj.ttisinteger()) {\n        seminfo.i = obj.value;\n        return TK_INT;\n    } else {\n        lua_assert(obj.ttisfloat());\n        seminfo.r = obj.value;\n        return TK_FLT;\n    }\n};\n\nconst txtToken = function(ls, token) {\n    switch (token) {\n        case TK_NAME: case TK_STRING:\n        case TK_FLT: case TK_INT:\n            // save(ls, 0);\n            return lobject.luaO_pushfstring(ls.L, to_luastring(\"'%s'\", true), luaZ_buffer(ls.buff));\n        default:\n            return luaX_token2str(ls, token);\n    }\n};\n\nconst lexerror = function(ls, msg, token) {\n    msg = ldebug.luaG_addinfo(ls.L, msg, ls.source, ls.linenumber);\n    if (token)\n        lobject.luaO_pushfstring(ls.L, to_luastring(\"%s near %s\"), msg, txtToken(ls, token));\n    ldo.luaD_throw(ls.L, LUA_ERRSYNTAX);\n};\n\nconst luaX_syntaxerror = function(ls, msg) {\n    lexerror(ls, msg, ls.t.token);\n};\n\n/*\n** skip a sequence '[=*[' or ']=*]'; if sequence is well formed, return\n** its number of '='s; otherwise, return a negative number (-1 iff there\n** are no '='s after initial bracket)\n*/\nconst skip_sep = function(ls) {\n    let count = 0;\n    let s = ls.current;\n    lua_assert(s === 91 /* ('[').charCodeAt(0) */ || s === 93 /* (']').charCodeAt(0) */);\n    save_and_next(ls);\n    while (ls.current === 61 /* ('=').charCodeAt(0) */) {\n        save_and_next(ls);\n        count++;\n    }\n    return ls.current === s ? count : (-count) - 1;\n};\n\nconst read_long_string = function(ls, seminfo, sep) {\n    let line = ls.linenumber;  /* initial line (for error message) */\n    save_and_next(ls);  /* skip 2nd '[' */\n\n    if (currIsNewline(ls))  /* string starts with a newline? */\n        inclinenumber(ls);  /* skip it */\n\n    let skip = false;\n    for (; !skip ;) {\n        switch (ls.current) {\n            case EOZ: {  /* error */\n                let what = seminfo ? \"string\" : \"comment\";\n                let msg = `unfinished long ${what} (starting at line ${line})`;\n                lexerror(ls, to_luastring(msg), TK_EOS);\n                break;\n            }\n            case 93 /* (']').charCodeAt(0) */: {\n                if (skip_sep(ls) === sep) {\n                    save_and_next(ls);  /* skip 2nd ']' */\n                    skip = true;\n                }\n                break;\n            }\n            case 10 /* ('\\n').charCodeAt(0) */:\n            case 13 /* ('\\r').charCodeAt(0) */: {\n                save(ls, 10 /* ('\\n').charCodeAt(0) */);\n                inclinenumber(ls);\n                if (!seminfo) luaZ_resetbuffer(ls.buff);\n                break;\n            }\n            default: {\n                if (seminfo) save_and_next(ls);\n                else next(ls);\n            }\n        }\n    }\n\n    if (seminfo)\n        seminfo.ts = luaX_newstring(ls, ls.buff.buffer.subarray(2 + sep, ls.buff.n - (2 + sep)));\n};\n\nconst esccheck = function(ls, c, msg) {\n    if (!c) {\n        if (ls.current !== EOZ)\n            save_and_next(ls);  /* add current to buffer for error message */\n        lexerror(ls, msg, TK_STRING);\n    }\n};\n\nconst gethexa = function(ls) {\n    save_and_next(ls);\n    esccheck(ls, lisxdigit(ls.current), to_luastring(\"hexadecimal digit expected\", true));\n    return lobject.luaO_hexavalue(ls.current);\n};\n\nconst readhexaesc = function(ls) {\n    let r = gethexa(ls);\n    r = (r << 4) + gethexa(ls);\n    luaZ_buffremove(ls.buff, 2);  /* remove saved chars from buffer */\n    return r;\n};\n\nconst readutf8desc = function(ls) {\n    let i = 4;  /* chars to be removed: '\\', 'u', '{', and first digit */\n    save_and_next(ls);  /* skip 'u' */\n    esccheck(ls, ls.current === 123 /* ('{').charCodeAt(0) */, to_luastring(\"missing '{'\", true));\n    let r = gethexa(ls);  /* must have at least one digit */\n\n    save_and_next(ls);\n    while (lisxdigit(ls.current)) {\n        i++;\n        r = (r << 4) + lobject.luaO_hexavalue(ls.current);\n        esccheck(ls, r <= 0x10FFFF, to_luastring(\"UTF-8 value too large\", true));\n        save_and_next(ls);\n    }\n    esccheck(ls, ls.current === 125 /* ('}').charCodeAt(0) */, to_luastring(\"missing '}'\", true));\n    next(ls);  /* skip '}' */\n    luaZ_buffremove(ls.buff, i);  /* remove saved chars from buffer */\n    return r;\n};\n\nconst utf8esc = function(ls) {\n    let buff = new Uint8Array(lobject.UTF8BUFFSZ);\n    let n = lobject.luaO_utf8esc(buff, readutf8desc(ls));\n    for (; n > 0; n--)  /* add 'buff' to string */\n        save(ls, buff[lobject.UTF8BUFFSZ - n]);\n};\n\nconst readdecesc = function(ls) {\n    let r = 0;  /* result accumulator */\n    let i;\n    for (i = 0; i < 3 && lisdigit(ls.current); i++) {  /* read up to 3 digits */\n        r = 10 * r + ls.current - 48 /* ('0').charCodeAt(0) */;\n        save_and_next(ls);\n    }\n    esccheck(ls, r <= 255, to_luastring(\"decimal escape too large\", true));\n    luaZ_buffremove(ls.buff, i);  /* remove read digits from buffer */\n    return r;\n};\n\nconst read_string = function(ls, del, seminfo) {\n    save_and_next(ls);  /* keep delimiter (for error messages) */\n\n    while (ls.current !== del) {\n        switch (ls.current) {\n            case EOZ:\n                lexerror(ls, to_luastring(\"unfinished string\", true), TK_EOS);\n                break;\n            case 10 /* ('\\n').charCodeAt(0) */:\n            case 13 /* ('\\r').charCodeAt(0) */:\n                lexerror(ls, to_luastring(\"unfinished string\", true), TK_STRING);\n                break;\n            case 92 /* ('\\\\').charCodeAt(0) */: {  /* escape sequences */\n                save_and_next(ls);  /* keep '\\\\' for error messages */\n                let will;\n                let c;\n                switch(ls.current) {\n                    case 97 /* ('a').charCodeAt(0) */: c = 7 /* \\a isn't valid JS */; will = 'read_save'; break;\n                    case 98 /* ('b').charCodeAt(0) */: c = 8 /* ('\\b').charCodeAt(0) */; will = 'read_save'; break;\n                    case 102 /* ('f').charCodeAt(0) */: c = 12 /* ('\\f').charCodeAt(0) */; will = 'read_save'; break;\n                    case 110 /* ('n').charCodeAt(0) */: c = 10 /* ('\\n').charCodeAt(0) */; will = 'read_save'; break;\n                    case 114 /* ('r').charCodeAt(0) */: c = 13 /* ('\\r').charCodeAt(0) */; will = 'read_save'; break;\n                    case 116 /* ('t').charCodeAt(0) */: c = 9 /* ('\\t').charCodeAt(0) */; will = 'read_save'; break;\n                    case 118 /* ('v').charCodeAt(0) */: c = 11 /* ('\\v').charCodeAt(0) */; will = 'read_save'; break;\n                    case 120 /* ('x').charCodeAt(0) */: c = readhexaesc(ls); will = 'read_save'; break;\n                    case 117 /* ('u').charCodeAt(0) */: utf8esc(ls); will = 'no_save'; break;\n                    case 10 /* ('\\n').charCodeAt(0) */:\n                    case 13 /* ('\\r').charCodeAt(0) */:\n                        inclinenumber(ls); c = 10 /* ('\\n').charCodeAt(0) */; will = 'only_save'; break;\n                    case 92 /* ('\\\\').charCodeAt(0) */:\n                    case 34 /* ('\"').charCodeAt(0) */:\n                    case 39 /* ('\\'').charCodeAt(0) */:\n                        c = ls.current; will = 'read_save'; break;\n                    case EOZ: will = 'no_save'; break;  /* will raise an error next loop */\n                    case 122 /* ('z').charCodeAt(0) */: {  /* zap following span of spaces */\n                        luaZ_buffremove(ls.buff, 1);  /* remove '\\\\' */\n                        next(ls);  /* skip the 'z' */\n                        while (lisspace(ls.current)) {\n                            if (currIsNewline(ls)) inclinenumber(ls);\n                            else next(ls);\n                        }\n                        will = 'no_save'; break;\n                    }\n                    default: {\n                        esccheck(ls, lisdigit(ls.current), to_luastring(\"invalid escape sequence\", true));\n                        c = readdecesc(ls);  /* digital escape '\\ddd' */\n                        will = 'only_save'; break;\n                    }\n                }\n\n                if (will === 'read_save')\n                    next(ls);\n\n                if (will === 'read_save' || will === 'only_save') {\n                    luaZ_buffremove(ls.buff, 1);  /* remove '\\\\' */\n                    save(ls, c);\n                }\n\n                break;\n            }\n            default:\n                save_and_next(ls);\n        }\n    }\n    save_and_next(ls);  /* skip delimiter */\n\n    seminfo.ts = luaX_newstring(ls, ls.buff.buffer.subarray(1, ls.buff.n-1));\n};\n\nconst token_to_index = Object.create(null); /* don't want to return true for e.g. 'hasOwnProperty' */\nluaX_tokens.forEach((e, i)=>token_to_index[luaS_hash(e)] = i);\n\nconst isreserved = function(w) {\n    let kidx = token_to_index[luaS_hashlongstr(w)];\n    return kidx !== void 0 && kidx <= 22;\n};\n\nconst llex = function(ls, seminfo) {\n    luaZ_resetbuffer(ls.buff);\n    for (;;) {\n        lua_assert(typeof ls.current == \"number\"); /* fengari addition */\n        switch (ls.current) {\n            case 10 /* ('\\n').charCodeAt(0) */:\n            case 13 /* ('\\r').charCodeAt(0) */: {  /* line breaks */\n                inclinenumber(ls);\n                break;\n            }\n            case 32 /* (' ').charCodeAt(0) */:\n            case 12 /* ('\\f').charCodeAt(0) */:\n            case 9 /* ('\\t').charCodeAt(0) */:\n            case 11 /* ('\\v').charCodeAt(0) */: {  /* spaces */\n                next(ls);\n                break;\n            }\n            case 45 /* ('-').charCodeAt(0) */: {  /* '-' or '--' (comment) */\n                next(ls);\n                if (ls.current !== 45 /* ('-').charCodeAt(0) */) return 45 /* ('-').charCodeAt(0) */;\n                /* else is a comment */\n                next(ls);\n                if (ls.current === 91 /* ('[').charCodeAt(0) */) {  /* long comment? */\n                    let sep = skip_sep(ls);\n                    luaZ_resetbuffer(ls.buff);  /* 'skip_sep' may dirty the buffer */\n                    if (sep >= 0) {\n                        read_long_string(ls, null, sep);  /* skip long comment */\n                        luaZ_resetbuffer(ls.buff);  /* previous call may dirty the buff. */\n                        break;\n                    }\n                }\n\n                /* else short comment */\n                while (!currIsNewline(ls) && ls.current !== EOZ)\n                    next(ls);  /* skip until end of line (or end of file) */\n                break;\n            }\n            case 91 /* ('[').charCodeAt(0) */: {  /* long string or simply '[' */\n                let sep = skip_sep(ls);\n                if (sep >= 0) {\n                    read_long_string(ls, seminfo, sep);\n                    return TK_STRING;\n                } else if (sep !== -1)  /* '[=...' missing second bracket */\n                    lexerror(ls, to_luastring(\"invalid long string delimiter\", true), TK_STRING);\n                return 91 /* ('[').charCodeAt(0) */;\n            }\n            case 61 /* ('=').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_EQ;\n                else return 61 /* ('=').charCodeAt(0) */;\n            }\n            case 60 /* ('<').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_LE;\n                else if (check_next1(ls, 60 /* ('<').charCodeAt(0) */)) return TK_SHL;\n                else return 60 /* ('<').charCodeAt(0) */;\n            }\n            case 62 /* ('>').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_GE;\n                else if (check_next1(ls, 62 /* ('>').charCodeAt(0) */)) return TK_SHR;\n                else return 62 /* ('>').charCodeAt(0) */;\n            }\n            case 47 /* ('/').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 47 /* ('/').charCodeAt(0) */)) return TK_IDIV;\n                else return 47 /* ('/').charCodeAt(0) */;\n            }\n            case 126 /* ('~').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_NE;\n                else return 126 /* ('~').charCodeAt(0) */;\n            }\n            case 58 /* (':').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 58 /* (':').charCodeAt(0) */)) return TK_DBCOLON;\n                else return 58 /* (':').charCodeAt(0) */;\n            }\n            case 34 /* ('\"').charCodeAt(0) */:\n            case 39 /* ('\\'').charCodeAt(0) */: {  /* short literal strings */\n                read_string(ls, ls.current, seminfo);\n                return TK_STRING;\n            }\n            case 46 /* ('.').charCodeAt(0) */: {  /* '.', '..', '...', or number */\n                save_and_next(ls);\n                if (check_next1(ls, 46 /* ('.').charCodeAt(0) */)) {\n                    if (check_next1(ls, 46 /* ('.').charCodeAt(0) */))\n                        return TK_DOTS;   /* '...' */\n                    else return TK_CONCAT;   /* '..' */\n                }\n                else if (!lisdigit(ls.current)) return 46 /* ('.').charCodeAt(0) */;\n                else return read_numeral(ls, seminfo);\n            }\n            case 48 /* ('0').charCodeAt(0) */: case 49 /* ('1').charCodeAt(0) */: case 50 /* ('2').charCodeAt(0) */: case 51 /* ('3').charCodeAt(0) */: case 52 /* ('4').charCodeAt(0) */:\n            case 53 /* ('5').charCodeAt(0) */: case 54 /* ('6').charCodeAt(0) */: case 55 /* ('7').charCodeAt(0) */: case 56 /* ('8').charCodeAt(0) */: case 57 /* ('9').charCodeAt(0) */: {\n                return read_numeral(ls, seminfo);\n            }\n            case EOZ: {\n                return TK_EOS;\n            }\n            default: {\n                if (lislalpha(ls.current)) {  /* identifier or reserved word? */\n                    do {\n                        save_and_next(ls);\n                    } while (lislalnum(ls.current));\n                    let ts = luaX_newstring(ls, luaZ_buffer(ls.buff));\n                    seminfo.ts = ts;\n                    let kidx = token_to_index[luaS_hashlongstr(ts)];\n                    if (kidx !== void 0 && kidx <= 22)  /* reserved word? */\n                        return kidx + FIRST_RESERVED;\n                    else\n                        return TK_NAME;\n                } else {  /* single-char tokens (+ - / ...) */\n                    let c = ls.current;\n                    next(ls);\n                    return c;\n                }\n            }\n        }\n    }\n};\n\nconst luaX_next = function(ls) {\n    ls.lastline = ls.linenumber;\n    if (ls.lookahead.token !== TK_EOS) {  /* is there a look-ahead token? */\n        ls.t.token = ls.lookahead.token;  /* use this one */\n        ls.t.seminfo.i = ls.lookahead.seminfo.i;\n        ls.t.seminfo.r = ls.lookahead.seminfo.r;\n        ls.t.seminfo.ts = ls.lookahead.seminfo.ts;\n        ls.lookahead.token = TK_EOS;  /* and discharge it */\n    } else\n        ls.t.token = llex(ls, ls.t.seminfo);  /* read next token */\n};\n\nconst luaX_lookahead = function(ls) {\n    lua_assert(ls.lookahead.token === TK_EOS);\n    ls.lookahead.token = llex(ls, ls.lookahead.seminfo);\n    return ls.lookahead.token;\n};\n\nmodule.exports.FIRST_RESERVED   = FIRST_RESERVED;\nmodule.exports.LUA_ENV          = LUA_ENV;\nmodule.exports.LexState         = LexState;\nmodule.exports.RESERVED         = RESERVED;\nmodule.exports.isreserved       = isreserved;\nmodule.exports.luaX_lookahead   = luaX_lookahead;\nmodule.exports.luaX_newstring   = luaX_newstring;\nmodule.exports.luaX_next        = luaX_next;\nmodule.exports.luaX_setinput    = luaX_setinput;\nmodule.exports.luaX_syntaxerror = luaX_syntaxerror;\nmodule.exports.luaX_token2str   = luaX_token2str;\nmodule.exports.luaX_tokens      = luaX_tokens;\n","\"use strict\";\n\nconst { luai_apicheck } = require(\"./luaconf.js\");\n\nconst lua_assert = function(c) {\n    if (!c) throw Error(\"assertion failed\");\n};\nmodule.exports.lua_assert = lua_assert;\n\nmodule.exports.luai_apicheck = luai_apicheck || function(l, e) { return lua_assert(e); };\n\nconst api_check = function(l, e, msg) {\n    return luai_apicheck(l, e && msg);\n};\nmodule.exports.api_check = api_check;\n\nconst LUAI_MAXCCALLS = 200;\nmodule.exports.LUAI_MAXCCALLS = LUAI_MAXCCALLS;\n\n/* minimum size for string buffer */\nconst LUA_MINBUFFER = 32;\nmodule.exports.LUA_MINBUFFER = LUA_MINBUFFER;\n\nconst luai_nummod = function(L, a, b) {\n    let m = a % b;\n    if ((m*b) < 0)\n        m += b;\n    return m;\n};\nmodule.exports.luai_nummod = luai_nummod;\n\n// If later integers are more than 32bit, LUA_MAXINTEGER will then be != MAX_INT\nconst MAX_INT = 2147483647;\nmodule.exports.MAX_INT = MAX_INT;\nconst MIN_INT = -2147483648;\nmodule.exports.MIN_INT = MIN_INT;\n","\"use strict\";\n\nconst {\n    LUA_OPLT,\n    LUA_TNUMBER,\n    lua_compare,\n    lua_gettop,\n    lua_isinteger,\n    lua_isnoneornil,\n    lua_pushboolean,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushnumber,\n    lua_pushvalue,\n    lua_setfield,\n    lua_settop,\n    lua_tointeger,\n    lua_tointegerx,\n    lua_type\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_argerror,\n    luaL_checkany,\n    luaL_checkinteger,\n    luaL_checknumber,\n    luaL_error,\n    luaL_newlib,\n    luaL_optnumber\n} = require('./lauxlib.js');\nconst {\n    LUA_MAXINTEGER,\n    LUA_MININTEGER,\n    lua_numbertointeger\n} = require('./luaconf.js');\nconst { to_luastring } = require(\"./fengaricore.js\");\n\nlet rand_state;\n/* use same parameters as glibc LCG */\nconst l_rand = function() {\n    rand_state = (1103515245 * rand_state + 12345) & 0x7fffffff;\n    return rand_state;\n};\nconst l_srand = function(x) {\n    rand_state = x|0;\n    if (rand_state === 0)\n        rand_state = 1;\n};\n\nconst math_random = function(L) {\n    let low, up;\n    /* use Math.random until randomseed is called */\n    let r = (rand_state === void 0)?Math.random():(l_rand() / 0x80000000);\n    switch (lua_gettop(L)) {  /* check number of arguments */\n        case 0:\n            lua_pushnumber(L, r);  /* Number between 0 and 1 */\n            return 1;\n        case 1: {\n            low = 1;\n            up = luaL_checkinteger(L, 1);\n            break;\n        }\n        case 2: {\n            low = luaL_checkinteger(L, 1);\n            up = luaL_checkinteger(L, 2);\n            break;\n        }\n        default: return luaL_error(L, \"wrong number of arguments\");\n    }\n\n    /* random integer in the interval [low, up] */\n    luaL_argcheck(L, low <= up, 1, \"interval is empty\");\n    luaL_argcheck(L, low >= 0 || up <= LUA_MAXINTEGER + low, 1,\n        \"interval too large\");\n\n    r *= (up - low) + 1;\n    lua_pushinteger(L, Math.floor(r) + low);\n    return 1;\n};\n\nconst math_randomseed = function(L) {\n    l_srand(luaL_checknumber(L, 1));\n    l_rand(); /* discard first value to avoid undesirable correlations */\n    return 0;\n};\n\nconst math_abs = function(L) {\n    if (lua_isinteger(L, 1)) {\n        let n = lua_tointeger(L, 1);\n        if (n < 0) n = (-n)|0;\n        lua_pushinteger(L, n);\n    }\n    else\n        lua_pushnumber(L, Math.abs(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_sin = function(L) {\n    lua_pushnumber(L, Math.sin(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_cos = function(L) {\n    lua_pushnumber(L, Math.cos(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_tan = function(L) {\n    lua_pushnumber(L, Math.tan(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_asin = function(L) {\n    lua_pushnumber(L, Math.asin(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_acos = function(L) {\n    lua_pushnumber(L, Math.acos(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_atan = function(L) {\n    let y = luaL_checknumber(L, 1);\n    let x = luaL_optnumber(L, 2, 1);\n    lua_pushnumber(L, Math.atan2(y, x));\n    return 1;\n};\n\nconst math_toint = function(L) {\n    let n = lua_tointegerx(L, 1);\n    if (n !== false)\n        lua_pushinteger(L, n);\n    else {\n        luaL_checkany(L, 1);\n        lua_pushnil(L);  /* value is not convertible to integer */\n    }\n    return 1;\n};\n\nconst pushnumint = function(L, d) {\n    let n = lua_numbertointeger(d);\n    if (n !== false)  /* does 'd' fit in an integer? */\n        lua_pushinteger(L, n);  /* result is integer */\n    else\n        lua_pushnumber(L, d);  /* result is float */\n};\n\nconst math_floor = function(L) {\n    if (lua_isinteger(L, 1))\n        lua_settop(L, 1);\n    else\n        pushnumint(L, Math.floor(luaL_checknumber(L, 1)));\n\n    return 1;\n};\n\nconst math_ceil = function(L) {\n    if (lua_isinteger(L, 1))\n        lua_settop(L, 1);\n    else\n        pushnumint(L, Math.ceil(luaL_checknumber(L, 1)));\n\n    return 1;\n};\n\nconst math_sqrt = function(L) {\n    lua_pushnumber(L, Math.sqrt(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_ult = function(L) {\n    let a = luaL_checkinteger(L, 1);\n    let b = luaL_checkinteger(L, 2);\n    lua_pushboolean(L, (a >= 0)?(b<0 || a<b):(b<0 && a<b));\n    return 1;\n};\n\nconst math_log = function(L) {\n    let x = luaL_checknumber(L, 1);\n    let res;\n    if (lua_isnoneornil(L, 2))\n        res = Math.log(x);\n    else {\n        let base = luaL_checknumber(L, 2);\n        if (base === 2)\n            res = Math.log2(x);\n        else if (base === 10)\n            res = Math.log10(x);\n        else\n            res = Math.log(x)/Math.log(base);\n    }\n    lua_pushnumber(L, res);\n    return 1;\n};\n\nconst math_exp = function(L) {\n    lua_pushnumber(L, Math.exp(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_deg = function(L) {\n    lua_pushnumber(L, luaL_checknumber(L, 1) * (180 / Math.PI));\n    return 1;\n};\n\nconst math_rad = function(L) {\n    lua_pushnumber(L, luaL_checknumber(L, 1) * (Math.PI / 180));\n    return 1;\n};\n\nconst math_min = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    let imin = 1;  /* index of current minimum value */\n    luaL_argcheck(L, n >= 1, 1, \"value expected\");\n    for (let i = 2; i <= n; i++){\n        if (lua_compare(L, i, imin, LUA_OPLT))\n            imin = i;\n    }\n    lua_pushvalue(L, imin);\n    return 1;\n};\n\nconst math_max = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    let imax = 1;  /* index of current minimum value */\n    luaL_argcheck(L, n >= 1, 1, \"value expected\");\n    for (let i = 2; i <= n; i++){\n        if (lua_compare(L, imax, i, LUA_OPLT))\n            imax = i;\n    }\n    lua_pushvalue(L, imax);\n    return 1;\n};\n\nconst math_type = function(L) {\n    if (lua_type(L, 1) === LUA_TNUMBER) {\n        if (lua_isinteger(L, 1))\n            lua_pushliteral(L, \"integer\");\n        else\n            lua_pushliteral(L, \"float\");\n    } else {\n        luaL_checkany(L, 1);\n        lua_pushnil(L);\n    }\n    return 1;\n};\n\nconst math_fmod = function(L) {\n    if (lua_isinteger(L, 1) && lua_isinteger(L, 2)) {\n        let d = lua_tointeger(L, 2);\n        /* no special case needed for -1 in javascript */\n        if (d === 0) {\n            luaL_argerror(L, 2, \"zero\");\n        } else\n            lua_pushinteger(L, (lua_tointeger(L, 1) % d)|0);\n    } else {\n        let a = luaL_checknumber(L, 1);\n        let b = luaL_checknumber(L, 2);\n        lua_pushnumber(L, a%b);\n    }\n    return 1;\n};\n\nconst math_modf = function(L) {\n    if (lua_isinteger(L, 1)) {\n        lua_settop(L, 1);  /* number is its own integer part */\n        lua_pushnumber(L, 0);  /* no fractional part */\n    } else {\n        let n = luaL_checknumber(L, 1);\n        let ip = n < 0 ? Math.ceil(n) : Math.floor(n);\n        pushnumint(L, ip);\n        lua_pushnumber(L, n === ip ? 0 : n - ip);\n    }\n    return 2;\n};\n\nconst mathlib = {\n    \"abs\":        math_abs,\n    \"acos\":       math_acos,\n    \"asin\":       math_asin,\n    \"atan\":       math_atan,\n    \"ceil\":       math_ceil,\n    \"cos\":        math_cos,\n    \"deg\":        math_deg,\n    \"exp\":        math_exp,\n    \"floor\":      math_floor,\n    \"fmod\":       math_fmod,\n    \"log\":        math_log,\n    \"max\":        math_max,\n    \"min\":        math_min,\n    \"modf\":       math_modf,\n    \"rad\":        math_rad,\n    \"random\":     math_random,\n    \"randomseed\": math_randomseed,\n    \"sin\":        math_sin,\n    \"sqrt\":       math_sqrt,\n    \"tan\":        math_tan,\n    \"tointeger\":  math_toint,\n    \"type\":       math_type,\n    \"ult\":        math_ult\n};\n\nconst luaopen_math = function(L) {\n    luaL_newlib(L, mathlib);\n    lua_pushnumber(L, Math.PI);\n    lua_setfield(L, -2, to_luastring(\"pi\", true));\n    lua_pushnumber(L, Infinity);\n    lua_setfield(L, -2, to_luastring(\"huge\", true));\n    lua_pushinteger(L, LUA_MAXINTEGER);\n    lua_setfield(L, -2, to_luastring(\"maxinteger\", true));\n    lua_pushinteger(L, LUA_MININTEGER);\n    lua_setfield(L, -2, to_luastring(\"mininteger\", true));\n    return 1;\n};\n\nmodule.exports.luaopen_math = luaopen_math;\n","\"use strict\";\n\nconst {\n    LUA_DIRSEP,\n    LUA_EXEC_DIR,\n    LUA_JSPATH_DEFAULT,\n    LUA_PATH_DEFAULT,\n    LUA_PATH_MARK,\n    LUA_PATH_SEP\n} = require('./luaconf.js');\nconst {\n    LUA_OK,\n    LUA_REGISTRYINDEX,\n    LUA_TNIL,\n    LUA_TTABLE,\n    lua_callk,\n    lua_createtable,\n    lua_getfield,\n    lua_insert,\n    lua_isfunction,\n    lua_isnil,\n    lua_isstring,\n    lua_newtable,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcclosure,\n    lua_pushcfunction,\n    lua_pushfstring,\n    lua_pushglobaltable,\n    lua_pushlightuserdata,\n    lua_pushliteral,\n    lua_pushlstring,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawgeti,\n    lua_rawgetp,\n    lua_rawseti,\n    lua_rawsetp,\n    lua_remove,\n    lua_setfield,\n    lua_setmetatable,\n    lua_settop,\n    lua_toboolean,\n    lua_tostring,\n    lua_touserdata,\n    lua_upvalueindex\n} = require('./lua.js');\nconst {\n    LUA_LOADED_TABLE,\n    LUA_PRELOAD_TABLE,\n    luaL_Buffer,\n    luaL_addvalue,\n    luaL_buffinit,\n    luaL_checkstring,\n    luaL_error,\n    luaL_getsubtable,\n    luaL_gsub,\n    luaL_len,\n    luaL_loadfile,\n    luaL_newlib,\n    luaL_optstring,\n    luaL_pushresult,\n    luaL_setfuncs\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst {\n    luastring_indexOf,\n    to_jsstring,\n    to_luastring,\n    to_uristring\n} = require(\"./fengaricore.js\");\nconst fengari  = require('./fengari.js');\n\nconst global_env = (function() {\n    if (typeof process !== \"undefined\") {\n        /* node */\n        return global;\n    } else if (typeof window !== \"undefined\") {\n        /* browser window */\n        return window;\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n        /* web worker */\n        return self;\n    } else {\n        /* unknown global env */\n        return (0, eval)('this'); /* use non-strict mode to get global env */\n    }\n})();\n\nconst JSLIBS = to_luastring(\"__JSLIBS__\");\nconst LUA_PATH_VAR = \"LUA_PATH\";\nconst LUA_JSPATH_VAR = \"LUA_JSPATH\";\n\nconst LUA_IGMARK = \"-\";\n\n/*\n** LUA_CSUBSEP is the character that replaces dots in submodule names\n** when searching for a JS loader.\n** LUA_LSUBSEP is the character that replaces dots in submodule names\n** when searching for a Lua loader.\n*/\nconst LUA_CSUBSEP = LUA_DIRSEP;\nconst LUA_LSUBSEP = LUA_DIRSEP;\n\n/* prefix for open functions in JS libraries */\nconst LUA_POF = to_luastring(\"luaopen_\");\n\n/* separator for open functions in JS libraries */\nconst LUA_OFSEP = to_luastring(\"_\");\nconst LIB_FAIL = \"open\";\n\nconst AUXMARK = to_luastring(\"\\x01\");\n\n\n/*\n** load JS library in file 'path'. If 'seeglb', load with all names in\n** the library global.\n** Returns the library; in case of error, returns NULL plus an\n** error string in the stack.\n*/\nlet lsys_load;\nif (typeof process === \"undefined\") {\n    lsys_load = function(L, path, seeglb) {\n        path = to_uristring(path);\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", path, false);\n        xhr.send();\n\n        if (xhr.status < 200 || xhr.status >= 300) {\n            lua_pushstring(L, to_luastring(`${xhr.status}: ${xhr.statusText}`));\n            return null;\n        }\n\n        let code = xhr.response;\n        /* Add sourceURL comment to get path in debugger+tracebacks */\n        if (!/\\/\\/[#@] sourceURL=/.test(code))\n            code += \" //# sourceURL=\" + path;\n        let func;\n        try {\n            func = Function(\"fengari\", code);\n        } catch (e) {\n            lua_pushstring(L, to_luastring(`${e.name}: ${e.message}`));\n            return null;\n        }\n        let res = func(fengari);\n        if (typeof res === \"function\" || (typeof res === \"object\" && res !== null)) {\n            return res;\n        } else if (res === void 0) { /* assume library added symbols to global environment */\n            return global_env;\n        } else {\n            lua_pushstring(L, to_luastring(`library returned unexpected type (${typeof res})`));\n            return null;\n        }\n    };\n} else {\n    const pathlib = require('path');\n    lsys_load = function(L, path, seeglb) {\n        path = to_jsstring(path);\n        /* relative paths should be relative to cwd, not this js file */\n        path = pathlib.resolve(process.cwd(), path);\n        try {\n            return require(path);\n        } catch (e) {\n            lua_pushstring(L, to_luastring(e.message));\n            return null;\n        }\n    };\n}\n\n/*\n** Try to find a function named 'sym' in library 'lib'.\n** Returns the function; in case of error, returns NULL plus an\n** error string in the stack.\n*/\nconst lsys_sym = function(L, lib, sym) {\n    let f = lib[to_jsstring(sym)];\n\n    if (f && typeof f === 'function')\n        return f;\n    else {\n        lua_pushfstring(L, to_luastring(\"undefined symbol: %s\"), sym);\n        return null;\n    }\n};\n\n/*\n** return registry.LUA_NOENV as a boolean\n*/\nconst noenv = function(L) {\n    lua_getfield(L, LUA_REGISTRYINDEX, to_luastring(\"LUA_NOENV\"));\n    let b = lua_toboolean(L, -1);\n    lua_pop(L, 1);  /* remove value */\n    return b;\n};\n\nlet readable;\nif (typeof process !== \"undefined\") { // Only with Node\n    const fs = require('fs');\n\n    readable = function(filename) {\n        try {\n            let fd = fs.openSync(filename, 'r');\n            fs.closeSync(fd);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    };\n} else {\n    readable = function(path) {\n        path = to_uristring(path);\n        let xhr = new XMLHttpRequest();\n        /* Following GET request done by searcher_Web will be cached */\n        xhr.open(\"GET\", path, false);\n        xhr.send();\n\n        return xhr.status >= 200 && xhr.status <= 299;\n    };\n}\n\n\n/* error codes for 'lookforfunc' */\nconst ERRLIB  = 1;\nconst ERRFUNC = 2;\n\n/*\n** Look for a C function named 'sym' in a dynamically loaded library\n** 'path'.\n** First, check whether the library is already loaded; if not, try\n** to load it.\n** Then, if 'sym' is '*', return true (as library has been loaded).\n** Otherwise, look for symbol 'sym' in the library and push a\n** C function with that symbol.\n** Return 0 and 'true' or a function in the stack; in case of\n** errors, return an error code and an error message in the stack.\n*/\nconst lookforfunc = function(L, path, sym) {\n    let reg = checkjslib(L, path);  /* check loaded JS libraries */\n    if (reg === null) {  /* must load library? */\n        reg = lsys_load(L, path, sym[0] === '*'.charCodeAt(0));  /* a global symbols if 'sym'=='*' */\n        if (reg === null) return ERRLIB;  /* unable to load library */\n        addtojslib(L, path, reg);\n    }\n    if (sym[0] === '*'.charCodeAt(0)) {  /* loading only library (no function)? */\n        lua_pushboolean(L, 1);  /* return 'true' */\n        return 0;  /* no errors */\n    }\n    else {\n        let f = lsys_sym(L, reg, sym);\n        if (f === null)\n            return ERRFUNC;  /* unable to find function */\n        lua_pushcfunction(L, f);  /* else create new function */\n        return 0;  /* no errors */\n    }\n};\n\nconst ll_loadlib = function(L) {\n    let path = luaL_checkstring(L, 1);\n    let init = luaL_checkstring(L, 2);\n    let stat = lookforfunc(L, path, init);\n    if (stat === 0)  /* no errors? */\n        return 1;  /* return the loaded function */\n    else {  /* error; error message is on stack top */\n        lua_pushnil(L);\n        lua_insert(L, -2);\n        lua_pushliteral(L, (stat === ERRLIB) ? LIB_FAIL : \"init\");\n        return 3;  /* return nil, error message, and where */\n    }\n};\n\nconst env = (function() {\n    if (typeof process !== \"undefined\") {\n        /* node */\n        return process.env;\n    } else {\n        return global_env;\n    }\n})();\n\n/*\n** Set a path\n*/\nconst setpath = function(L, fieldname, envname, dft) {\n    let nver = `${envname}${lualib.LUA_VERSUFFIX}`;\n    lua_pushstring(L, to_luastring(nver));\n    let path = env[nver];  /* use versioned name */\n    if (path === undefined)  /* no environment variable? */\n        path = env[envname];  /* try unversioned name */\n    if (path === undefined || noenv(L))  /* no environment variable? */\n        lua_pushstring(L, dft);  /* use default */\n    else {\n        /* replace \";;\" by \";AUXMARK;\" and then AUXMARK by default path */\n        path = luaL_gsub(\n            L,\n            to_luastring(path),\n            to_luastring(LUA_PATH_SEP + LUA_PATH_SEP, true),\n            to_luastring(LUA_PATH_SEP + to_jsstring(AUXMARK) + LUA_PATH_SEP, true)\n        );\n        luaL_gsub(L, path, AUXMARK, dft);\n        lua_remove(L, -2); /* remove result from 1st 'gsub' */\n    }\n    lua_setfield(L, -3, fieldname);  /* package[fieldname] = path value */\n    lua_pop(L, 1);  /* pop versioned variable name */\n};\n\n/*\n** return registry.JSLIBS[path]\n*/\nconst checkjslib = function(L, path) {\n    lua_rawgetp(L, LUA_REGISTRYINDEX, JSLIBS);\n    lua_getfield(L, -1, path);\n    let plib = lua_touserdata(L, -1);  /* plib = JSLIBS[path] */\n    lua_pop(L, 2);  /* pop JSLIBS table and 'plib' */\n    return plib;\n};\n\n/*\n** registry.JSLIBS[path] = plib        -- for queries\n** registry.JSLIBS[#JSLIBS + 1] = plib  -- also keep a list of all libraries\n*/\nconst addtojslib = function(L, path, plib) {\n    lua_rawgetp(L, LUA_REGISTRYINDEX, JSLIBS);\n    lua_pushlightuserdata(L, plib);\n    lua_pushvalue(L, -1);\n    lua_setfield(L, -3, path);  /* JSLIBS[path] = plib */\n    lua_rawseti(L, -2, luaL_len(L, -2) + 1);  /* JSLIBS[#JSLIBS + 1] = plib */\n    lua_pop(L, 1);  /* pop JSLIBS table */\n};\n\nconst pushnexttemplate = function(L, path) {\n    while (path[0] === LUA_PATH_SEP.charCodeAt(0)) path = path.subarray(1);  /* skip separators */\n    if (path.length === 0) return null;  /* no more templates */\n    let l = luastring_indexOf(path, LUA_PATH_SEP.charCodeAt(0));  /* find next separator */\n    if (l < 0) l = path.length;\n    lua_pushlstring(L, path, l);  /* template */\n    return path.subarray(l);\n};\n\nconst searchpath = function(L, name, path, sep, dirsep) {\n    let msg = new luaL_Buffer();  /* to build error message */\n    luaL_buffinit(L, msg);\n    if (sep[0] !== 0)  /* non-empty separator? */\n        name = luaL_gsub(L, name, sep, dirsep);  /* replace it by 'dirsep' */\n    while ((path = pushnexttemplate(L, path)) !== null) {\n        let filename = luaL_gsub(L, lua_tostring(L, -1), to_luastring(LUA_PATH_MARK, true), name);\n        lua_remove(L, -2);  /* remove path template */\n        if (readable(filename))  /* does file exist and is readable? */\n            return filename;  /* return that file name */\n        lua_pushfstring(L, to_luastring(\"\\n\\tno file '%s'\"), filename);\n        lua_remove(L, -2);  /* remove file name */\n        luaL_addvalue(msg);\n    }\n    luaL_pushresult(msg);  /* create error message */\n    return null;  /* not found */\n};\n\nconst ll_searchpath = function(L) {\n    let f = searchpath(\n        L,\n        luaL_checkstring(L, 1),\n        luaL_checkstring(L, 2),\n        luaL_optstring(L, 3, \".\"),\n        luaL_optstring(L, 4, LUA_DIRSEP)\n    );\n    if (f !== null) return 1;\n    else {  /* error message is on top of the stack */\n        lua_pushnil(L);\n        lua_insert(L, -2);\n        return 2;  /* return nil + error message */\n    }\n};\n\nconst findfile = function(L, name, pname, dirsep) {\n    lua_getfield(L, lua_upvalueindex(1), pname);\n    let path = lua_tostring(L, -1);\n    if (path === null)\n        luaL_error(L, to_luastring(\"'package.%s' must be a string\"), pname);\n    return searchpath(L, name, path, to_luastring(\".\"), dirsep);\n};\n\nconst checkload = function(L, stat, filename) {\n    if (stat) {  /* module loaded successfully? */\n        lua_pushstring(L, filename);  /* will be 2nd argument to module */\n        return 2;  /* return open function and file name */\n    } else\n        return luaL_error(L, to_luastring(\"error loading module '%s' from file '%s':\\n\\t%s\"),\n            lua_tostring(L, 1), filename, lua_tostring(L, -1));\n};\n\nconst searcher_Lua = function(L) {\n    let name = luaL_checkstring(L, 1);\n    let filename = findfile(L, name, to_luastring(\"path\", true), to_luastring(LUA_LSUBSEP, true));\n    if (filename === null) return 1;  /* module not found in this path */\n    return checkload(L, luaL_loadfile(L, filename) === LUA_OK, filename);\n};\n\n/*\n** Try to find a load function for module 'modname' at file 'filename'.\n** First, change '.' to '_' in 'modname'; then, if 'modname' has\n** the form X-Y (that is, it has an \"ignore mark\"), build a function\n** name \"luaopen_X\" and look for it. (For compatibility, if that\n** fails, it also tries \"luaopen_Y\".) If there is no ignore mark,\n** look for a function named \"luaopen_modname\".\n*/\nconst loadfunc = function(L, filename, modname) {\n    let openfunc;\n    modname = luaL_gsub(L, modname, to_luastring(\".\"), LUA_OFSEP);\n    let mark = luastring_indexOf(modname, LUA_IGMARK.charCodeAt(0));\n    if (mark >= 0) {\n        openfunc = lua_pushlstring(L, modname, mark);\n        openfunc = lua_pushfstring(L, to_luastring(\"%s%s\"), LUA_POF, openfunc);\n        let stat = lookforfunc(L, filename, openfunc);\n        if (stat !== ERRFUNC) return stat;\n        modname = mark + 1;  /* else go ahead and try old-style name */\n    }\n    openfunc = lua_pushfstring(L, to_luastring(\"%s%s\"), LUA_POF, modname);\n    return lookforfunc(L, filename, openfunc);\n};\n\nconst searcher_C = function(L) {\n    let name = luaL_checkstring(L, 1);\n    let filename = findfile(L, name, to_luastring(\"jspath\", true), to_luastring(LUA_CSUBSEP, true));\n    if (filename === null) return 1;  /* module not found in this path */\n    return checkload(L, (loadfunc(L, filename, name) === 0), filename);\n};\n\nconst searcher_Croot = function(L) {\n    let name = luaL_checkstring(L, 1);\n    let p = luastring_indexOf(name, '.'.charCodeAt(0));\n    let stat;\n    if (p < 0) return 0;  /* is root */\n    lua_pushlstring(L, name, p);\n    let filename = findfile(L, lua_tostring(L, -1), to_luastring(\"jspath\", true), to_luastring(LUA_CSUBSEP, true));\n    if (filename === null) return 1;  /* root not found */\n    if ((stat = loadfunc(L, filename, name)) !== 0) {\n        if (stat != ERRFUNC)\n            return checkload(L, 0, filename);  /* real error */\n        else {  /* open function not found */\n            lua_pushstring(L, to_luastring(\"\\n\\tno module '%s' in file '%s'\"), name, filename);\n            return 1;\n        }\n    }\n    lua_pushstring(L, filename);  /* will be 2nd argument to module */\n    return 2;\n};\n\nconst searcher_preload = function(L) {\n    let name = luaL_checkstring(L, 1);\n    lua_getfield(L, LUA_REGISTRYINDEX, LUA_PRELOAD_TABLE);\n    if (lua_getfield(L, -1, name) === LUA_TNIL)  /* not found? */\n        lua_pushfstring(L, to_luastring(\"\\n\\tno field package.preload['%s']\"), name);\n    return 1;\n};\n\nconst findloader = function(L, name, ctx, k) {\n    let msg = new luaL_Buffer();  /* to build error message */\n    luaL_buffinit(L, msg);\n    /* push 'package.searchers' to index 3 in the stack */\n    if (lua_getfield(L, lua_upvalueindex(1), to_luastring(\"searchers\", true)) !== LUA_TTABLE)\n        luaL_error(L, to_luastring(\"'package.searchers' must be a table\"));\n    let ctx2 = {name: name, i: 1, msg: msg, ctx: ctx, k: k};\n    return findloader_cont(L, LUA_OK, ctx2);\n};\n\nconst findloader_cont = function(L, status, ctx) {\n    /*  iterate over available searchers to find a loader */\n    for (; ; ctx.i++) {\n        if (status === LUA_OK) {\n            if (lua_rawgeti(L, 3, ctx.i) === LUA_TNIL) {  /* no more searchers? */\n                lua_pop(L, 1);  /* remove nil */\n                luaL_pushresult(ctx.msg);  /* create error message */\n                luaL_error(L, to_luastring(\"module '%s' not found:%s\"), ctx.name, lua_tostring(L, -1));\n            }\n            lua_pushstring(L, ctx.name);\n            lua_callk(L, 1, 2, ctx, findloader_cont);  /* call it */\n        } else {\n            status = LUA_OK;\n        }\n        if (lua_isfunction(L, -2))  /* did it find a loader? */\n            break;  /* module loader found */\n        else if (lua_isstring(L, -2)) {  /* searcher returned error message? */\n            lua_pop(L, 1);  /* remove extra return */\n            luaL_addvalue(ctx.msg);  /* concatenate error message */\n        }\n        else\n            lua_pop(L, 2);  /* remove both returns */\n    }\n    return ctx.k(L, LUA_OK, ctx.ctx);\n};\n\nconst ll_require = function(L) {\n    let name = luaL_checkstring(L, 1);\n    lua_settop(L, 1);  /* LOADED table will be at index 2 */\n    lua_getfield(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    lua_getfield(L, 2, name);  /* LOADED[name] */\n    if (lua_toboolean(L, -1))  /* is it there? */\n        return 1;  /* package is already loaded */\n    /* else must load package */\n    lua_pop(L, 1);  /* remove 'getfield' result */\n    let ctx = name;\n    return findloader(L, name, ctx, ll_require_cont);\n};\n\nconst ll_require_cont = function(L, status, ctx) {\n    let name = ctx;\n    lua_pushstring(L, name);  /* pass name as argument to module loader */\n    lua_insert(L, -2);  /* name is 1st argument (before search data) */\n    lua_callk(L, 2, 1, ctx, ll_require_cont2);\n    return ll_require_cont2(L, LUA_OK, ctx);  /* run loader to load module */\n};\n\nconst ll_require_cont2 = function(L, status, ctx) {\n    let name = ctx;\n    if (!lua_isnil(L, -1))  /* non-nil return? */\n        lua_setfield(L, 2, name);  /* LOADED[name] = returned value */\n    if (lua_getfield(L, 2, name) == LUA_TNIL) {   /* module set no value? */\n        lua_pushboolean(L, 1);  /* use true as result */\n        lua_pushvalue(L, -1);  /* extra copy to be returned */\n        lua_setfield(L, 2, name);  /* LOADED[name] = true */\n    }\n    return 1;\n};\n\nconst pk_funcs = {\n    \"loadlib\": ll_loadlib,\n    \"searchpath\": ll_searchpath\n};\n\nconst ll_funcs = {\n    \"require\": ll_require\n};\n\nconst createsearcherstable = function(L) {\n    let searchers = [searcher_preload, searcher_Lua, searcher_C, searcher_Croot, null];\n    /* create 'searchers' table */\n    lua_createtable(L);\n    /* fill it with predefined searchers */\n    for (let i = 0; searchers[i]; i++) {\n        lua_pushvalue(L, -2);  /* set 'package' as upvalue for all searchers */\n        lua_pushcclosure(L, searchers[i], 1);\n        lua_rawseti(L, -2, i+1);\n    }\n    lua_setfield(L, -2, to_luastring(\"searchers\", true));  /* put it in field 'searchers' */\n};\n\n/*\n** create table JSLIBS to keep track of loaded JS libraries,\n** setting a finalizer to close all libraries when closing state.\n*/\nconst createjslibstable = function(L) {\n    lua_newtable(L);  /* create JSLIBS table */\n    lua_createtable(L, 0, 1);  /* create metatable for JSLIBS */\n    lua_setmetatable(L, -2);\n    lua_rawsetp(L, LUA_REGISTRYINDEX, JSLIBS);  /* set JSLIBS table in registry */\n};\n\nconst luaopen_package = function(L) {\n    createjslibstable(L);\n    luaL_newlib(L, pk_funcs);  /* create 'package' table */\n    createsearcherstable(L);\n    /* set paths */\n    setpath(L, to_luastring(\"path\", true), LUA_PATH_VAR, LUA_PATH_DEFAULT);\n    setpath(L, to_luastring(\"jspath\", true), LUA_JSPATH_VAR, LUA_JSPATH_DEFAULT);\n    /* store config information */\n    lua_pushliteral(L, LUA_DIRSEP + \"\\n\" + LUA_PATH_SEP + \"\\n\" + LUA_PATH_MARK + \"\\n\" +\n                        LUA_EXEC_DIR + \"\\n\" + LUA_IGMARK + \"\\n\");\n    lua_setfield(L, -2, to_luastring(\"config\", true));\n    /* set field 'loaded' */\n    luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    lua_setfield(L, -2, to_luastring(\"loaded\", true));\n    /* set field 'preload' */\n    luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_PRELOAD_TABLE);\n    lua_setfield(L, -2, to_luastring(\"preload\", true));\n    lua_pushglobaltable(L);\n    lua_pushvalue(L, -2);  /* set 'package' as upvalue for next lib */\n    luaL_setfuncs(L, ll_funcs, 1);  /* open lib into global table */\n    lua_pop(L, 1);  /* pop global table */\n    return 1;  /* return 'package' table */\n};\n\nmodule.exports.luaopen_package = luaopen_package;\n","\"use strict\";\n\nconst {\n    LUA_OPADD,\n    LUA_OPBAND,\n    LUA_OPBNOT,\n    LUA_OPBOR,\n    LUA_OPBXOR,\n    LUA_OPDIV,\n    LUA_OPIDIV,\n    LUA_OPMOD,\n    LUA_OPMUL,\n    LUA_OPPOW,\n    LUA_OPSHL,\n    LUA_OPSHR,\n    LUA_OPSUB,\n    LUA_OPUNM,\n    constant_types: {\n        LUA_NUMTAGS,\n        LUA_TBOOLEAN,\n        LUA_TCCL,\n        LUA_TFUNCTION,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMBER,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TSTRING,\n        LUA_TTABLE,\n        LUA_TTHREAD,\n        LUA_TUSERDATA\n    },\n    from_userstring,\n    luastring_indexOf,\n    luastring_of,\n    to_jsstring,\n    to_luastring\n} = require('./defs.js');\nconst {\n    lisdigit,\n    lisprint,\n    lisspace,\n    lisxdigit\n} = require('./ljstype.js');\nconst ldebug  = require('./ldebug.js');\nconst ldo     = require('./ldo.js');\nconst lstate  = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_new\n} = require('./lstring.js');\nconst ltable  = require('./ltable.js');\nconst {\n    LUA_COMPAT_FLOATSTRING,\n    ldexp,\n    lua_integer2str,\n    lua_number2str\n} = require('./luaconf.js');\nconst lvm     = require('./lvm.js');\nconst {\n    MAX_INT,\n    luai_nummod,\n    lua_assert\n} = require(\"./llimits.js\");\nconst ltm     = require('./ltm.js');\n\nconst LUA_TPROTO = LUA_NUMTAGS;\nconst LUA_TDEADKEY = LUA_NUMTAGS+1;\n\nclass TValue {\n\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n\n    /* type tag of a TValue (bits 0-3 for tags + variant bits 4-5) */\n    ttype() {\n        return this.type & 0x3F;\n    }\n\n    /* type tag of a TValue with no variants (bits 0-3) */\n    ttnov() {\n        return this.type & 0x0F;\n    }\n\n    checktag(t) {\n        return this.type === t;\n    }\n\n    checktype(t) {\n        return this.ttnov() === t;\n    }\n\n    ttisnumber() {\n        return this.checktype(LUA_TNUMBER);\n    }\n\n    ttisfloat() {\n        return this.checktag(LUA_TNUMFLT);\n    }\n\n    ttisinteger() {\n        return this.checktag(LUA_TNUMINT);\n    }\n\n    ttisnil() {\n        return this.checktag(LUA_TNIL);\n    }\n\n    ttisboolean() {\n        return this.checktag(LUA_TBOOLEAN);\n    }\n\n    ttislightuserdata() {\n        return this.checktag(LUA_TLIGHTUSERDATA);\n    }\n\n    ttisstring() {\n        return this.checktype(LUA_TSTRING);\n    }\n\n    ttisshrstring() {\n        return this.checktag(LUA_TSHRSTR);\n    }\n\n    ttislngstring() {\n        return this.checktag(LUA_TLNGSTR);\n    }\n\n    ttistable() {\n        return this.checktag(LUA_TTABLE);\n    }\n\n    ttisfunction() {\n        return this.checktype(LUA_TFUNCTION);\n    }\n\n    ttisclosure() {\n        return (this.type & 0x1F) === LUA_TFUNCTION;\n    }\n\n    ttisCclosure() {\n        return this.checktag(LUA_TCCL);\n    }\n\n    ttisLclosure() {\n        return this.checktag(LUA_TLCL);\n    }\n\n    ttislcf() {\n        return this.checktag(LUA_TLCF);\n    }\n\n    ttisfulluserdata() {\n        return this.checktag(LUA_TUSERDATA);\n    }\n\n    ttisthread() {\n        return this.checktag(LUA_TTHREAD);\n    }\n\n    ttisdeadkey() {\n        return this.checktag(LUA_TDEADKEY);\n    }\n\n    l_isfalse() {\n        return this.ttisnil() || (this.ttisboolean() && this.value === false);\n    }\n\n    setfltvalue(x) {\n        this.type = LUA_TNUMFLT;\n        this.value = x;\n    }\n\n    chgfltvalue(x) {\n        lua_assert(this.type == LUA_TNUMFLT);\n        this.value = x;\n    }\n\n    setivalue(x) {\n        this.type = LUA_TNUMINT;\n        this.value = x;\n    }\n\n    chgivalue(x) {\n        lua_assert(this.type == LUA_TNUMINT);\n        this.value = x;\n    }\n\n    setnilvalue() {\n        this.type = LUA_TNIL;\n        this.value = null;\n    }\n\n    setfvalue(x) {\n        this.type = LUA_TLCF;\n        this.value = x;\n    }\n\n    setpvalue(x) {\n        this.type = LUA_TLIGHTUSERDATA;\n        this.value = x;\n    }\n\n    setbvalue(x) {\n        this.type = LUA_TBOOLEAN;\n        this.value = x;\n    }\n\n    setsvalue(x) {\n        this.type = LUA_TLNGSTR; /* LUA_TSHRSTR? */\n        this.value = x;\n    }\n\n    setuvalue(x) {\n        this.type = LUA_TUSERDATA;\n        this.value = x;\n    }\n\n    setthvalue(x) {\n        this.type = LUA_TTHREAD;\n        this.value = x;\n    }\n\n    setclLvalue(x) {\n        this.type = LUA_TLCL;\n        this.value = x;\n    }\n\n    setclCvalue(x) {\n        this.type = LUA_TCCL;\n        this.value = x;\n    }\n\n    sethvalue(x) {\n        this.type = LUA_TTABLE;\n        this.value = x;\n    }\n\n    setdeadvalue() {\n        this.type = LUA_TDEADKEY;\n        this.value = null;\n    }\n\n    setfrom(tv) { /* in lua C source setobj2t is often used for this */\n        this.type = tv.type;\n        this.value = tv.value;\n    }\n\n    tsvalue() {\n        lua_assert(this.ttisstring());\n        return this.value;\n    }\n\n    svalue() {\n        return this.tsvalue().getstr();\n    }\n\n    vslen() {\n        return this.tsvalue().tsslen();\n    }\n\n    jsstring(from, to) {\n        return to_jsstring(this.svalue(), from, to, true);\n    }\n}\n\nconst pushobj2s = function(L, tv) {\n    L.stack[L.top++] = new TValue(tv.type, tv.value);\n};\nconst pushsvalue2s = function(L, ts) {\n    L.stack[L.top++] = new TValue(LUA_TLNGSTR, ts);\n};\n/* from stack to (same) stack */\nconst setobjs2s = function(L, newidx, oldidx) {\n    L.stack[newidx].setfrom(L.stack[oldidx]);\n};\n/* to stack (not from same stack) */\nconst setobj2s = function(L, newidx, oldtv) {\n    L.stack[newidx].setfrom(oldtv);\n};\nconst setsvalue2s = function(L, newidx, ts) {\n    L.stack[newidx].setsvalue(ts);\n};\n\nconst luaO_nilobject = new TValue(LUA_TNIL, null);\nObject.freeze(luaO_nilobject);\nmodule.exports.luaO_nilobject = luaO_nilobject;\n\nclass LClosure {\n\n    constructor(L, n) {\n        this.id = L.l_G.id_counter++;\n\n        this.p = null;\n        this.nupvalues = n;\n        this.upvals = new Array(n); /* list of upvalues. initialised in luaF_initupvals */\n    }\n\n}\n\nclass CClosure {\n\n    constructor(L, f, n) {\n        this.id = L.l_G.id_counter++;\n\n        this.f = f;\n        this.nupvalues = n;\n        this.upvalue = new Array(n); /* list of upvalues as TValues */\n        while (n--) {\n            this.upvalue[n] = new TValue(LUA_TNIL, null);\n        }\n    }\n\n}\n\nclass Udata {\n\n    constructor(L, size) {\n        this.id = L.l_G.id_counter++;\n\n        this.metatable = null;\n        this.uservalue = new TValue(LUA_TNIL, null);\n        this.len = size;\n        this.data = Object.create(null); // ignores size argument\n    }\n\n}\n\n/*\n** Description of a local variable for function prototypes\n** (used for debug information)\n*/\nclass LocVar {\n    constructor() {\n        this.varname = null;\n        this.startpc = NaN;  /* first point where variable is active */\n        this.endpc = NaN;    /* first point where variable is dead */\n    }\n}\n\nconst RETS = to_luastring(\"...\");\nconst PRE  = to_luastring(\"[string \\\"\");\nconst POS  = to_luastring(\"\\\"]\");\n\nconst luaO_chunkid = function(source, bufflen) {\n    let l = source.length;\n    let out;\n    if (source[0] === 61 /* ('=').charCodeAt(0) */) {  /* 'literal' source */\n        if (l < bufflen) {  /* small enough? */\n            out = new Uint8Array(l-1);\n            out.set(source.subarray(1));\n        } else {  /* truncate it */\n            out = new Uint8Array(bufflen);\n            out.set(source.subarray(1, bufflen+1));\n        }\n    } else if (source[0] === 64 /* ('@').charCodeAt(0) */) {  /* file name */\n        if (l <= bufflen) {  /* small enough? */\n            out = new Uint8Array(l-1);\n            out.set(source.subarray(1));\n        } else {  /* add '...' before rest of name */\n            out = new Uint8Array(bufflen);\n            out.set(RETS);\n            bufflen -= RETS.length;\n            out.set(source.subarray(l - bufflen), RETS.length);\n        }\n    } else {  /* string; format as [string \"source\"] */\n        out = new Uint8Array(bufflen);\n        let nli = luastring_indexOf(source, 10 /* ('\\n').charCodeAt(0) */);  /* find first new line (if any) */\n        out.set(PRE);  /* add prefix */\n        let out_i = PRE.length;\n        bufflen -= PRE.length + RETS.length + POS.length;  /* save space for prefix+suffix */\n        if (l < bufflen && nli === -1) {  /* small one-line source? */\n            out.set(source, out_i);  /* keep it */\n            out_i += source.length;\n        } else {\n            if (nli !== -1) l = nli;  /* stop at first newline */\n            if (l > bufflen) l = bufflen;\n            out.set(source.subarray(0, l), out_i);\n            out_i += l;\n            out.set(RETS, out_i);\n            out_i += RETS.length;\n        }\n        out.set(POS, out_i);\n        out_i += POS.length;\n        out = out.subarray(0, out_i);\n    }\n    return out;\n};\n\nconst luaO_hexavalue = function(c) {\n    if (lisdigit(c)) return c - 48;\n    else return (c & 0xdf) - 55;\n};\n\nconst UTF8BUFFSZ = 8;\n\nconst luaO_utf8esc = function(buff, x) {\n    let n = 1;  /* number of bytes put in buffer (backwards) */\n    lua_assert(x <= 0x10FFFF);\n    if (x < 0x80)  /* ascii? */\n        buff[UTF8BUFFSZ - 1] = x;\n    else {  /* need continuation bytes */\n        let mfb = 0x3f;  /* maximum that fits in first byte */\n        do {\n            buff[UTF8BUFFSZ - (n++)] = 0x80 | (x & 0x3f);\n            x >>= 6;  /* remove added bits */\n            mfb >>= 1;  /* now there is one less bit available in first byte */\n        } while (x > mfb);  /* still needs continuation byte? */\n        buff[UTF8BUFFSZ - n] = (~mfb << 1) | x;  /* add first byte */\n    }\n    return n;\n};\n\n/* maximum number of significant digits to read (to avoid overflows\n   even with single floats) */\nconst MAXSIGDIG = 30;\n\n/*\n** convert an hexadecimal numeric string to a number, following\n** C99 specification for 'strtod'\n*/\nconst lua_strx2number = function(s) {\n    let i = 0;\n    let r = 0.0;  /* result (accumulator) */\n    let sigdig = 0;  /* number of significant digits */\n    let nosigdig = 0;  /* number of non-significant digits */\n    let e = 0;  /* exponent correction */\n    let neg;  /* 1 if number is negative */\n    let hasdot = false;  /* true after seen a dot */\n    while (lisspace(s[i])) i++;  /* skip initial spaces */\n    if ((neg = (s[i] === 45 /* ('-').charCodeAt(0) */))) i++;  /* check signal */\n    else if (s[i] === 43 /* ('+').charCodeAt(0) */) i++;\n    if (!(s[i] === 48 /* ('0').charCodeAt(0) */ && (s[i+1] === 120 /* ('x').charCodeAt(0) */ || s[i+1] === 88 /* ('X').charCodeAt(0) */)))  /* check '0x' */\n        return null;  /* invalid format (no '0x') */\n    for (i += 2; ; i++) {  /* skip '0x' and read numeral */\n        if (s[i] === 46 /* ('.').charCodeAt(0) i.e. dot/lua_getlocaledecpoint(); */) {\n            if (hasdot) break;  /* second dot? stop loop */\n            else hasdot = true;\n        } else if (lisxdigit(s[i])) {\n            if (sigdig === 0 && s[i] === 48 /* ('0').charCodeAt(0) */)  /* non-significant digit (zero)? */\n                nosigdig++;\n            else if (++sigdig <= MAXSIGDIG)  /* can read it without overflow? */\n                r = (r * 16) + luaO_hexavalue(s[i]);\n            else e++; /* too many digits; ignore, but still count for exponent */\n            if (hasdot) e--;  /* decimal digit? correct exponent */\n        } else break;  /* neither a dot nor a digit */\n    }\n\n    if (nosigdig + sigdig === 0)  /* no digits? */\n        return null;  /* invalid format */\n    e *= 4;  /* each digit multiplies/divides value by 2^4 */\n    if (s[i] === 112 /* ('p').charCodeAt(0) */ || s[i] === 80 /* ('P').charCodeAt(0) */) {  /* exponent part? */\n        let exp1 = 0;  /* exponent value */\n        let neg1;  /* exponent signal */\n        i++;  /* skip 'p' */\n        if ((neg1 = (s[i] === 45 /* ('-').charCodeAt(0) */))) i++;  /* signal */\n        else if (s[i] === 43 /* ('+').charCodeAt(0) */) i++;\n        if (!lisdigit(s[i]))\n            return null;  /* invalid; must have at least one digit */\n        while (lisdigit(s[i]))  /* read exponent */\n            exp1 = exp1 * 10 + s[i++] - 48 /* ('0').charCodeAt(0) */;\n        if (neg1) exp1 = -exp1;\n        e += exp1;\n    }\n    if (neg) r = -r;\n    return {\n        n: ldexp(r, e),\n        i: i\n    };\n};\n\nconst lua_str2number = function(s) {\n    try {\n        s = to_jsstring(s);\n    } catch (e) {\n        return null;\n    }\n    /* use a regex to validate number and also to get length\n       parseFloat ignores trailing junk */\n    let r = /^[\\t\\v\\f \\n\\r]*[+-]?(?:[0-9]+\\.?[0-9]*|\\.[0-9]*)(?:[eE][+-]?[0-9]+)?/.exec(s);\n    if (!r)\n        return null;\n    let flt = parseFloat(r[0]);\n    return !isNaN(flt) ? { n: flt, i: r[0].length } : null;\n};\n\nconst l_str2dloc = function(s, mode) {\n    let result = mode === 'x' ? lua_strx2number(s) : lua_str2number(s); /* try to convert */\n    if (result === null) return null;\n    while (lisspace(s[result.i])) result.i++;  /* skip trailing spaces */\n    return (result.i === s.length || s[result.i] === 0) ? result : null;  /* OK if no trailing characters */\n};\n\nconst SIGILS = [\n    46  /* (\".\").charCodeAt(0) */,\n    120 /* (\"x\").charCodeAt(0) */,\n    88  /* (\"X\").charCodeAt(0) */,\n    110 /* (\"n\").charCodeAt(0) */,\n    78  /* (\"N\").charCodeAt(0) */\n];\nconst modes = {\n    [ 46]: \".\",\n    [120]: \"x\",\n    [ 88]: \"x\",\n    [110]: \"n\",\n    [ 78]: \"n\"\n};\nconst l_str2d = function(s) {\n    let l = s.length;\n    let pmode = 0;\n    for (let i=0; i<l; i++) {\n        let v = s[i];\n        if (SIGILS.indexOf(v) !== -1) {\n            pmode = v;\n            break;\n        }\n    }\n    let mode = modes[pmode];\n    if (mode === 'n')  /* reject 'inf' and 'nan' */\n        return null;\n    let end = l_str2dloc(s, mode);  /* try to convert */\n    // if (end === null) {   /* failed? may be a different locale */\n    //     throw new Error(\"Locale not available to handle number\"); // TODO\n    // }\n    return end;\n};\n\nconst MAXBY10  = Math.floor(MAX_INT / 10);\nconst MAXLASTD = MAX_INT % 10;\n\nconst l_str2int = function(s) {\n    let i = 0;\n    let a = 0;\n    let empty = true;\n    let neg;\n\n    while (lisspace(s[i])) i++;  /* skip initial spaces */\n    if ((neg = (s[i] === 45 /* ('-').charCodeAt(0) */))) i++;\n    else if (s[i] === 43 /* ('+').charCodeAt(0) */) i++;\n    if (s[i] === 48 /* ('0').charCodeAt(0) */ && (s[i+1] === 120 /* ('x').charCodeAt(0) */ || s[i+1] === 88 /* ('X').charCodeAt(0) */)) {  /* hex? */\n        i += 2;  /* skip '0x' */\n        for (; i < s.length && lisxdigit(s[i]); i++) {\n            a = (a * 16 + luaO_hexavalue(s[i]))|0;\n            empty = false;\n        }\n    } else {  /* decimal */\n        for (; i < s.length && lisdigit(s[i]); i++) {\n            let d = s[i] - 48 /* ('0').charCodeAt(0) */;\n            if (a >= MAXBY10 && (a > MAXBY10 || d > MAXLASTD + neg))  /* overflow? */\n                return null;  /* do not accept it (as integer) */\n            a = (a * 10 + d)|0;\n            empty = false;\n        }\n    }\n    while (i < s.length && lisspace(s[i])) i++;  /* skip trailing spaces */\n    if (empty || (i !== s.length && s[i] !== 0)) return null;  /* something wrong in the numeral */\n    else {\n        return {\n            n: (neg ? -a : a)|0,\n            i: i\n        };\n    }\n};\n\nconst luaO_str2num = function(s, o) {\n    let s2i = l_str2int(s);\n    if (s2i !== null) {   /* try as an integer */\n        o.setivalue(s2i.n);\n        return s2i.i+1;\n    } else {   /* else try as a float */\n        s2i = l_str2d(s);\n        if (s2i !== null) {\n            o.setfltvalue(s2i.n);\n            return s2i.i+1;\n        } else\n            return 0;  /* conversion failed */\n    }\n};\n\nconst luaO_tostring = function(L, obj) {\n    let buff;\n    if (obj.ttisinteger())\n        buff = to_luastring(lua_integer2str(obj.value));\n    else {\n        let str = lua_number2str(obj.value);\n        if (!LUA_COMPAT_FLOATSTRING && /^[-0123456789]+$/.test(str)) {  /* looks like an int? */\n            str += '.0'; /* adds '.0' to result: lua_getlocaledecpoint removed as optimisation */\n        }\n        buff = to_luastring(str);\n    }\n    obj.setsvalue(luaS_bless(L, buff));\n};\n\nconst pushstr = function(L, str) {\n    ldo.luaD_inctop(L);\n    setsvalue2s(L, L.top-1, luaS_new(L, str));\n};\n\nconst luaO_pushvfstring = function(L, fmt, argp) {\n    let n = 0;\n    let i = 0;\n    let a = 0;\n    let e;\n    for (;;) {\n        e = luastring_indexOf(fmt, 37 /* ('%').charCodeAt(0) */, i);\n        if (e == -1) break;\n        pushstr(L, fmt.subarray(i, e));\n        switch(fmt[e+1]) {\n            case 115 /* ('s').charCodeAt(0) */: {\n                let s = argp[a++];\n                if (s === null) s = to_luastring(\"(null)\", true);\n                else {\n                    s = from_userstring(s);\n                    /* respect null terminator */\n                    let i = luastring_indexOf(s, 0);\n                    if (i !== -1)\n                        s = s.subarray(0, i);\n                }\n                pushstr(L, s);\n                break;\n            }\n            case 99 /* ('c').charCodeAt(0) */: {\n                let buff = argp[a++];\n                if (lisprint(buff))\n                    pushstr(L, luastring_of(buff));\n                else\n                    luaO_pushfstring(L, to_luastring(\"<\\\\%d>\", true), buff);\n                break;\n            }\n            case 100 /* ('d').charCodeAt(0) */:\n            case 73 /* ('I').charCodeAt(0) */:\n                ldo.luaD_inctop(L);\n                L.stack[L.top-1].setivalue(argp[a++]);\n                luaO_tostring(L, L.stack[L.top-1]);\n                break;\n            case 102 /* ('f').charCodeAt(0) */:\n                ldo.luaD_inctop(L);\n                L.stack[L.top-1].setfltvalue(argp[a++]);\n                luaO_tostring(L, L.stack[L.top-1]);\n                break;\n            case 112 /* ('p').charCodeAt(0) */: {\n                let v = argp[a++];\n                if (v instanceof lstate.lua_State ||\n                    v instanceof ltable.Table ||\n                    v instanceof Udata ||\n                    v instanceof LClosure ||\n                    v instanceof CClosure) {\n                    pushstr(L, to_luastring(\"0x\"+v.id.toString(16)));\n                } else {\n                    switch(typeof v) {\n                        case \"undefined\":\n                            pushstr(L, to_luastring(\"undefined\"));\n                            break;\n                        case \"number\":  /* before check object as null is an object */\n                            pushstr(L, to_luastring(\"Number(\"+v+\")\"));\n                            break;\n                        case \"string\":  /* before check object as null is an object */\n                            pushstr(L, to_luastring(\"String(\"+JSON.stringify(v)+\")\"));\n                            break;\n                        case \"boolean\":  /* before check object as null is an object */\n                            pushstr(L, to_luastring(v?\"Boolean(true)\":\"Boolean(false)\"));\n                            break;\n                        case \"object\":\n                            if (v === null) { /* null is special */\n                                pushstr(L, to_luastring(\"null\"));\n                                break;\n                            }\n                            /* fall through */\n                        case \"function\": {\n                            let id = L.l_G.ids.get(v);\n                            if (!id) {\n                                id = L.l_G.id_counter++;\n                                L.l_G.ids.set(v, id);\n                            }\n                            pushstr(L, to_luastring(\"0x\"+id.toString(16)));\n                            break;\n                        }\n                        default:\n                            /* user provided object. no id available */\n                            pushstr(L, to_luastring(\"<id NYI>\"));\n                    }\n                }\n                break;\n            }\n            case 85 /* ('U').charCodeAt(0) */: {\n                let buff = new Uint8Array(UTF8BUFFSZ);\n                let l = luaO_utf8esc(buff, argp[a++]);\n                pushstr(L, buff.subarray(UTF8BUFFSZ - l));\n                break;\n            }\n            case 37 /* ('%').charCodeAt(0) */:\n                pushstr(L, to_luastring(\"%\", true));\n                break;\n            default:\n                ldebug.luaG_runerror(L, to_luastring(\"invalid option '%%%c' to 'lua_pushfstring'\"), fmt[e + 1]);\n        }\n        n += 2;\n        i = e + 2;\n    }\n    ldo.luaD_checkstack(L, 1);\n    pushstr(L, fmt.subarray(i));\n    if (n > 0) lvm.luaV_concat(L, n+1);\n    return L.stack[L.top-1].svalue();\n};\n\nconst luaO_pushfstring = function(L, fmt, ...argp) {\n    return luaO_pushvfstring(L, fmt, argp);\n};\n\n\n/*\n** converts an integer to a \"floating point byte\", represented as\n** (eeeeexxx), where the real value is (1xxx) * 2^(eeeee - 1) if\n** eeeee !== 0 and (xxx) otherwise.\n*/\nconst luaO_int2fb = function(x) {\n    let e = 0;  /* exponent */\n    if (x < 8) return x;\n    while (x >= (8 << 4)) {  /* coarse steps */\n        x = (x + 0xf) >> 4;  /* x = ceil(x / 16) */\n        e += 4;\n    }\n    while (x >= (8 << 1)) {  /* fine steps */\n        x = (x + 1) >> 1;  /* x = ceil(x / 2) */\n        e++;\n    }\n    return ((e+1) << 3) | (x - 8);\n};\n\nconst intarith = function(L, op, v1, v2) {\n    switch (op) {\n        case LUA_OPADD:  return (v1 + v2)|0;\n        case LUA_OPSUB:  return (v1 - v2)|0;\n        case LUA_OPMUL:  return lvm.luaV_imul(v1, v2);\n        case LUA_OPMOD:  return lvm.luaV_mod(L, v1, v2);\n        case LUA_OPIDIV: return lvm.luaV_div(L, v1, v2);\n        case LUA_OPBAND: return (v1 & v2);\n        case LUA_OPBOR:  return (v1 | v2);\n        case LUA_OPBXOR: return (v1 ^ v2);\n        case LUA_OPSHL:  return lvm.luaV_shiftl(v1, v2);\n        case LUA_OPSHR:  return lvm.luaV_shiftl(v1, -v2);\n        case LUA_OPUNM:  return (0 - v1)|0;\n        case LUA_OPBNOT: return (~0 ^ v1);\n        default: lua_assert(0);\n    }\n};\n\n\nconst numarith = function(L, op, v1, v2) {\n    switch (op) {\n        case LUA_OPADD:  return v1 + v2;\n        case LUA_OPSUB:  return v1 - v2;\n        case LUA_OPMUL:  return v1 * v2;\n        case LUA_OPDIV:  return v1 / v2;\n        case LUA_OPPOW:  return Math.pow(v1, v2);\n        case LUA_OPIDIV: return Math.floor(v1 / v2);\n        case LUA_OPUNM:  return -v1;\n        case LUA_OPMOD:  return luai_nummod(L, v1, v2);\n        default: lua_assert(0);\n    }\n};\n\nconst luaO_arith = function(L, op, p1, p2, p3) {\n    let res = (typeof p3 === \"number\") ? L.stack[p3] : p3;  /* FIXME */\n\n    switch (op) {\n        case LUA_OPBAND: case LUA_OPBOR: case LUA_OPBXOR:\n        case LUA_OPSHL: case LUA_OPSHR:\n        case LUA_OPBNOT: {  /* operate only on integers */\n            let i1, i2;\n            if ((i1 = lvm.tointeger(p1)) !== false && (i2 = lvm.tointeger(p2)) !== false) {\n                res.setivalue(intarith(L, op, i1, i2));\n                return;\n            }\n            else break;  /* go to the end */\n        }\n        case LUA_OPDIV: case LUA_OPPOW: {  /* operate only on floats */\n            let n1, n2;\n            if ((n1 = lvm.tonumber(p1)) !== false && (n2 = lvm.tonumber(p2)) !== false) {\n                res.setfltvalue(numarith(L, op, n1, n2));\n                return;\n            }\n            else break;  /* go to the end */\n        }\n        default: {  /* other operations */\n            let n1, n2;\n            if (p1.ttisinteger() && p2.ttisinteger()) {\n                res.setivalue(intarith(L, op, p1.value, p2.value));\n                return;\n            }\n            else if ((n1 = lvm.tonumber(p1)) !== false && (n2 = lvm.tonumber(p2)) !== false) {\n                res.setfltvalue(numarith(L, op, n1, n2));\n                return;\n            }\n            else break;  /* go to the end */\n        }\n    }\n    /* could not perform raw operation; try metamethod */\n    lua_assert(L !== null);  /* should not fail when folding (compile time) */\n    ltm.luaT_trybinTM(L, p1, p2, p3, (op - LUA_OPADD) + ltm.TMS.TM_ADD);\n};\n\n\nmodule.exports.CClosure          = CClosure;\nmodule.exports.LClosure          = LClosure;\nmodule.exports.LUA_TDEADKEY      = LUA_TDEADKEY;\nmodule.exports.LUA_TPROTO        = LUA_TPROTO;\nmodule.exports.LocVar            = LocVar;\nmodule.exports.TValue            = TValue;\nmodule.exports.Udata             = Udata;\nmodule.exports.UTF8BUFFSZ        = UTF8BUFFSZ;\nmodule.exports.luaO_arith        = luaO_arith;\nmodule.exports.luaO_chunkid      = luaO_chunkid;\nmodule.exports.luaO_hexavalue    = luaO_hexavalue;\nmodule.exports.luaO_int2fb       = luaO_int2fb;\nmodule.exports.luaO_pushfstring  = luaO_pushfstring;\nmodule.exports.luaO_pushvfstring = luaO_pushvfstring;\nmodule.exports.luaO_str2num      = luaO_str2num;\nmodule.exports.luaO_tostring     = luaO_tostring;\nmodule.exports.luaO_utf8esc      = luaO_utf8esc;\nmodule.exports.numarith          = numarith;\nmodule.exports.pushobj2s         = pushobj2s;\nmodule.exports.pushsvalue2s      = pushsvalue2s;\nmodule.exports.setobjs2s         = setobjs2s;\nmodule.exports.setobj2s          = setobj2s;\nmodule.exports.setsvalue2s       = setsvalue2s;\n","\"use strict\";\n\nconst OpCodes = [\n    \"MOVE\",\n    \"LOADK\",\n    \"LOADKX\",\n    \"LOADBOOL\",\n    \"LOADNIL\",\n    \"GETUPVAL\",\n    \"GETTABUP\",\n    \"GETTABLE\",\n    \"SETTABUP\",\n    \"SETUPVAL\",\n    \"SETTABLE\",\n    \"NEWTABLE\",\n    \"SELF\",\n    \"ADD\",\n    \"SUB\",\n    \"MUL\",\n    \"MOD\",\n    \"POW\",\n    \"DIV\",\n    \"IDIV\",\n    \"BAND\",\n    \"BOR\",\n    \"BXOR\",\n    \"SHL\",\n    \"SHR\",\n    \"UNM\",\n    \"BNOT\",\n    \"NOT\",\n    \"LEN\",\n    \"CONCAT\",\n    \"JMP\",\n    \"EQ\",\n    \"LT\",\n    \"LE\",\n    \"TEST\",\n    \"TESTSET\",\n    \"CALL\",\n    \"TAILCALL\",\n    \"RETURN\",\n    \"FORLOOP\",\n    \"FORPREP\",\n    \"TFORCALL\",\n    \"TFORLOOP\",\n    \"SETLIST\",\n    \"CLOSURE\",\n    \"VARARG\",\n    \"EXTRAARG\"\n];\n\nconst OpCodesI = {\n    OP_MOVE:     0,\n    OP_LOADK:    1,\n    OP_LOADKX:   2,\n    OP_LOADBOOL: 3,\n    OP_LOADNIL:  4,\n    OP_GETUPVAL: 5,\n    OP_GETTABUP: 6,\n    OP_GETTABLE: 7,\n    OP_SETTABUP: 8,\n    OP_SETUPVAL: 9,\n    OP_SETTABLE: 10,\n    OP_NEWTABLE: 11,\n    OP_SELF:     12,\n    OP_ADD:      13,\n    OP_SUB:      14,\n    OP_MUL:      15,\n    OP_MOD:      16,\n    OP_POW:      17,\n    OP_DIV:      18,\n    OP_IDIV:     19,\n    OP_BAND:     20,\n    OP_BOR:      21,\n    OP_BXOR:     22,\n    OP_SHL:      23,\n    OP_SHR:      24,\n    OP_UNM:      25,\n    OP_BNOT:     26,\n    OP_NOT:      27,\n    OP_LEN:      28,\n    OP_CONCAT:   29,\n    OP_JMP:      30,\n    OP_EQ:       31,\n    OP_LT:       32,\n    OP_LE:       33,\n    OP_TEST:     34,\n    OP_TESTSET:  35,\n    OP_CALL:     36,\n    OP_TAILCALL: 37,\n    OP_RETURN:   38,\n    OP_FORLOOP:  39,\n    OP_FORPREP:  40,\n    OP_TFORCALL: 41,\n    OP_TFORLOOP: 42,\n    OP_SETLIST:  43,\n    OP_CLOSURE:  44,\n    OP_VARARG:   45,\n    OP_EXTRAARG: 46\n};\n\n/*\n** masks for instruction properties. The format is:\n** bits 0-1: op mode\n** bits 2-3: C arg mode\n** bits 4-5: B arg mode\n** bit 6: instruction set register A\n** bit 7: operator is a test (next instruction must be a jump)\n*/\nconst OpArgN = 0;  /* argument is not used */\nconst OpArgU = 1;  /* argument is used */\nconst OpArgR = 2;  /* argument is a register or a jump offset */\nconst OpArgK = 3;  /* argument is a constant or register/constant */\n\n/* basic instruction format */\nconst iABC  = 0;\nconst iABx  = 1;\nconst iAsBx = 2;\nconst iAx   = 3;\n\nconst luaP_opmodes = [\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_MOVE */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgN << 2 | iABx,   /* OP_LOADK */\n    0 << 7 | 1 << 6 | OpArgN << 4 | OpArgN << 2 | iABx,   /* OP_LOADKX */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_LOADBOOL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_LOADNIL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_GETUPVAL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgK << 2 | iABC,   /* OP_GETTABUP */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgK << 2 | iABC,   /* OP_GETTABLE */\n    0 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SETTABUP */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_SETUPVAL */\n    0 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SETTABLE */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_NEWTABLE */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgK << 2 | iABC,   /* OP_SELF */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_ADD */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SUB */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_MUL */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_MOD */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_POW */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_DIV */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_IDIV */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_BAND */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_BOR */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_BXOR */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SHL */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SHR */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_UNM */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_BNOT */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_NOT */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_LEN */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgR << 2 | iABC,   /* OP_CONCAT */\n    0 << 7 | 0 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_JMP */\n    1 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_EQ */\n    1 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_LT */\n    1 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_LE */\n    1 << 7 | 0 << 6 | OpArgN << 4 | OpArgU << 2 | iABC,   /* OP_TEST */\n    1 << 7 | 1 << 6 | OpArgR << 4 | OpArgU << 2 | iABC,   /* OP_TESTSET */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_CALL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_TAILCALL */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_RETURN */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_FORLOOP */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_FORPREP */\n    0 << 7 | 0 << 6 | OpArgN << 4 | OpArgU << 2 | iABC,   /* OP_TFORCALL */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_TFORLOOP */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_SETLIST */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABx,   /* OP_CLOSURE */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_VARARG */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgU << 2 | iAx     /* OP_EXTRAARG */\n];\n\nconst getOpMode = function(m) {\n    return luaP_opmodes[m] & 3;\n};\n\nconst getBMode = function(m) {\n    return (luaP_opmodes[m] >> 4) & 3;\n};\n\nconst getCMode = function(m) {\n    return (luaP_opmodes[m] >> 2) & 3;\n};\n\nconst testAMode = function(m) {\n    return luaP_opmodes[m] & (1 << 6);\n};\n\nconst testTMode = function(m) {\n    return luaP_opmodes[m] & (1 << 7);\n};\n\nconst SIZE_C     = 9;\nconst SIZE_B     = 9;\nconst SIZE_Bx    = (SIZE_C + SIZE_B);\nconst SIZE_A     = 8;\nconst SIZE_Ax    = (SIZE_C + SIZE_B + SIZE_A);\nconst SIZE_OP    = 6;\nconst POS_OP     = 0;\nconst POS_A      = (POS_OP + SIZE_OP);\nconst POS_C      = (POS_A + SIZE_A);\nconst POS_B      = (POS_C + SIZE_C);\nconst POS_Bx     = POS_C;\nconst POS_Ax     = POS_A;\nconst MAXARG_Bx  = ((1 << SIZE_Bx) - 1);\nconst MAXARG_sBx = (MAXARG_Bx >> 1); /* 'sBx' is signed */\nconst MAXARG_Ax  = ((1<<SIZE_Ax)-1);\nconst MAXARG_A   = ((1 << SIZE_A) - 1);\nconst MAXARG_B   = ((1 << SIZE_B) - 1);\nconst MAXARG_C   = ((1 << SIZE_C) - 1);\n\n/* this bit 1 means constant (0 means register) */\nconst BITRK      = (1 << (SIZE_B - 1));\n\nconst MAXINDEXRK = (BITRK - 1);\n\n/*\n** invalid register that fits in 8 bits\n*/\nconst NO_REG     = MAXARG_A;\n\n/* test whether value is a constant */\nconst ISK = function (x) {\n    return x & BITRK;\n};\n\n/* gets the index of the constant */\nconst INDEXK = function (r) {\n    return r & ~BITRK;\n};\n\n/* code a constant index as a RK value */\nconst RKASK = function(x) {\n    return x | BITRK;\n};\n\n\n/* creates a mask with 'n' 1 bits at position 'p' */\nconst MASK1 = function(n, p) {\n    return ((~((~0)<<(n)))<<(p));\n};\n\n/* creates a mask with 'n' 0 bits at position 'p' */\nconst MASK0 = function(n, p) {\n    return (~MASK1(n, p));\n};\n\nconst GET_OPCODE = function(i) {\n    return i.opcode;\n};\n\nconst SET_OPCODE = function(i, o) {\n    i.code = (i.code & MASK0(SIZE_OP, POS_OP)) | ((o << POS_OP) & MASK1(SIZE_OP, POS_OP));\n    return fullins(i);\n};\n\nconst setarg = function(i, v, pos, size) {\n    i.code = (i.code & MASK0(size, pos)) | ((v << pos) & MASK1(size, pos));\n    return fullins(i);\n};\n\nconst GETARG_A = function(i) {\n    return i.A;\n};\n\nconst SETARG_A = function(i,v) {\n    return setarg(i, v, POS_A, SIZE_A);\n};\n\nconst GETARG_B = function(i) {\n    return i.B;\n};\n\nconst SETARG_B = function(i,v) {\n    return setarg(i, v, POS_B, SIZE_B);\n};\n\nconst GETARG_C = function(i) {\n    return i.C;\n};\n\nconst SETARG_C = function(i,v) {\n    return setarg(i, v, POS_C, SIZE_C);\n};\n\nconst GETARG_Bx = function(i) {\n    return i.Bx;\n};\n\nconst SETARG_Bx = function(i,v) {\n    return setarg(i, v, POS_Bx, SIZE_Bx);\n};\n\nconst GETARG_Ax = function(i) {\n    return i.Ax;\n};\n\nconst SETARG_Ax = function(i,v) {\n    return setarg(i, v, POS_Ax, SIZE_Ax);\n};\n\nconst GETARG_sBx = function(i) {\n    return i.sBx;\n};\n\nconst SETARG_sBx = function(i, b) {\n    return SETARG_Bx(i, b + MAXARG_sBx);\n};\n\n/*\n** Pre-calculate all possible part of the instruction\n*/\nconst fullins = function(ins) {\n    if (typeof ins === \"number\") {\n        return {\n            code:   ins,\n            opcode: (ins >> POS_OP) & MASK1(SIZE_OP, 0),\n            A:      (ins >> POS_A)  & MASK1(SIZE_A,  0),\n            B:      (ins >> POS_B)  & MASK1(SIZE_B,  0),\n            C:      (ins >> POS_C)  & MASK1(SIZE_C,  0),\n            Bx:     (ins >> POS_Bx) & MASK1(SIZE_Bx, 0),\n            Ax:     (ins >> POS_Ax) & MASK1(SIZE_Ax, 0),\n            sBx:    ((ins >> POS_Bx) & MASK1(SIZE_Bx, 0)) - MAXARG_sBx\n        };\n    } else {\n        let i = ins.code;\n        ins.opcode = (i >> POS_OP) & MASK1(SIZE_OP, 0);\n        ins.A      = (i >> POS_A)  & MASK1(SIZE_A,  0);\n        ins.B      = (i >> POS_B)  & MASK1(SIZE_B,  0);\n        ins.C      = (i >> POS_C)  & MASK1(SIZE_C,  0);\n        ins.Bx     = (i >> POS_Bx) & MASK1(SIZE_Bx, 0);\n        ins.Ax     = (i >> POS_Ax) & MASK1(SIZE_Ax, 0);\n        ins.sBx    = ((i >> POS_Bx) & MASK1(SIZE_Bx, 0)) - MAXARG_sBx;\n        return ins;\n    }\n};\n\nconst CREATE_ABC = function(o, a, b, c) {\n    return fullins(o << POS_OP | a << POS_A | b << POS_B | c << POS_C);\n};\n\nconst CREATE_ABx = function(o, a, bc) {\n    return fullins(o << POS_OP | a << POS_A | bc << POS_Bx);\n};\n\nconst CREATE_Ax = function(o, a) {\n    return fullins(o << POS_OP | a << POS_Ax);\n};\n\n/* number of list items to accumulate before a SETLIST instruction */\nconst LFIELDS_PER_FLUSH = 50;\n\nmodule.exports.BITRK               = BITRK;\nmodule.exports.CREATE_ABC          = CREATE_ABC;\nmodule.exports.CREATE_ABx          = CREATE_ABx;\nmodule.exports.CREATE_Ax           = CREATE_Ax;\nmodule.exports.GET_OPCODE          = GET_OPCODE;\nmodule.exports.GETARG_A            = GETARG_A;\nmodule.exports.GETARG_B            = GETARG_B;\nmodule.exports.GETARG_C            = GETARG_C;\nmodule.exports.GETARG_Bx           = GETARG_Bx;\nmodule.exports.GETARG_Ax           = GETARG_Ax;\nmodule.exports.GETARG_sBx          = GETARG_sBx;\nmodule.exports.INDEXK              = INDEXK;\nmodule.exports.ISK                 = ISK;\nmodule.exports.LFIELDS_PER_FLUSH   = LFIELDS_PER_FLUSH;\nmodule.exports.MAXARG_A            = MAXARG_A;\nmodule.exports.MAXARG_Ax           = MAXARG_Ax;\nmodule.exports.MAXARG_B            = MAXARG_B;\nmodule.exports.MAXARG_Bx           = MAXARG_Bx;\nmodule.exports.MAXARG_C            = MAXARG_C;\nmodule.exports.MAXARG_sBx          = MAXARG_sBx;\nmodule.exports.MAXINDEXRK          = MAXINDEXRK;\nmodule.exports.NO_REG              = NO_REG;\nmodule.exports.OpArgK              = OpArgK;\nmodule.exports.OpArgN              = OpArgN;\nmodule.exports.OpArgR              = OpArgR;\nmodule.exports.OpArgU              = OpArgU;\nmodule.exports.OpCodes             = OpCodes;\nmodule.exports.OpCodesI            = OpCodesI;\nmodule.exports.POS_A               = POS_A;\nmodule.exports.POS_Ax              = POS_Ax;\nmodule.exports.POS_B               = POS_B;\nmodule.exports.POS_Bx              = POS_Bx;\nmodule.exports.POS_C               = POS_C;\nmodule.exports.POS_OP              = POS_OP;\nmodule.exports.RKASK               = RKASK;\nmodule.exports.SETARG_A            = SETARG_A;\nmodule.exports.SETARG_Ax           = SETARG_Ax;\nmodule.exports.SETARG_B            = SETARG_B;\nmodule.exports.SETARG_Bx           = SETARG_Bx;\nmodule.exports.SETARG_C            = SETARG_C;\nmodule.exports.SETARG_sBx          = SETARG_sBx;\nmodule.exports.SET_OPCODE          = SET_OPCODE;\nmodule.exports.SIZE_A              = SIZE_A;\nmodule.exports.SIZE_Ax             = SIZE_Ax;\nmodule.exports.SIZE_B              = SIZE_B;\nmodule.exports.SIZE_Bx             = SIZE_Bx;\nmodule.exports.SIZE_C              = SIZE_C;\nmodule.exports.SIZE_OP             = SIZE_OP;\nmodule.exports.fullins             = fullins;\nmodule.exports.getBMode            = getBMode;\nmodule.exports.getCMode            = getCMode;\nmodule.exports.getOpMode           = getOpMode;\nmodule.exports.iABC                = iABC;\nmodule.exports.iABx                = iABx;\nmodule.exports.iAsBx               = iAsBx;\nmodule.exports.iAx                 = iAx;\nmodule.exports.testAMode           = testAMode;\nmodule.exports.testTMode           = testTMode;\n","\"use strict\";\n\nconst {\n    LUA_TNIL,\n    LUA_TTABLE,\n    lua_close,\n    lua_createtable,\n    lua_getfield,\n    lua_isboolean,\n    lua_isnoneornil,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushnumber,\n    lua_pushstring,\n    lua_setfield,\n    lua_settop,\n    lua_toboolean,\n    lua_tointegerx\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addchar,\n    luaL_addstring,\n    // luaL_argcheck,\n    luaL_argerror,\n    luaL_buffinit,\n    luaL_checkinteger,\n    luaL_checkstring,\n    luaL_checktype,\n    luaL_error,\n    luaL_execresult,\n    luaL_fileresult,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_optlstring,\n    luaL_optstring,\n    luaL_pushresult\n} = require('./lauxlib.js');\nconst {\n    luastring_eq,\n    to_jsstring,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\n/* options for ANSI C 89 (only 1-char options) */\n// const L_STRFTIMEC89 = to_luastring(\"aAbBcdHIjmMpSUwWxXyYZ%\");\n// const LUA_STRFTIMEOPTIONS = L_STRFTIMEC89;\n\n/* options for ISO C 99 and POSIX */\n// const L_STRFTIMEC99 = to_luastring(\"aAbBcCdDeFgGhHIjmMnprRStTuUVwWxXyYzZ%||EcECExEXEyEYOdOeOHOIOmOMOSOuOUOVOwOWOy\");  /* two-char options */\n// const LUA_STRFTIMEOPTIONS = L_STRFTIMEC99;\n\n/* options for Windows */\n// const L_STRFTIMEWIN = to_luastring(\"aAbBcdHIjmMpSUwWxXyYzZ%||#c#x#d#H#I#j#m#M#S#U#w#W#y#Y\");  /* two-char options */\n// const LUA_STRFTIMEOPTIONS = L_STRFTIMEWIN;\n\n/* options for our own strftime implementation\n  - should be superset of C89 options for compat\n  - missing from C99:\n      - ISO 8601 week specifiers: gGV\n      - > single char specifiers\n  - beyond C99:\n      - %k: TZ extension: space-padded 24-hour\n      - %l: TZ extension: space-padded 12-hour\n      - %P: GNU extension: lower-case am/pm\n*/\nconst LUA_STRFTIMEOPTIONS = to_luastring(\"aAbBcCdDeFhHIjklmMnpPrRStTuUwWxXyYzZ%\");\n\n\nconst setfield = function(L, key, value) {\n    lua_pushinteger(L, value);\n    lua_setfield(L, -2, to_luastring(key, true));\n};\n\nconst setallfields = function(L, time, utc) {\n    setfield(L, \"sec\",   utc ? time.getUTCSeconds()  : time.getSeconds());\n    setfield(L, \"min\",   utc ? time.getUTCMinutes()  : time.getMinutes());\n    setfield(L, \"hour\",  utc ? time.getUTCHours()    : time.getHours());\n    setfield(L, \"day\",   utc ? time.getUTCDate()     : time.getDate());\n    setfield(L, \"month\", (utc ? time.getUTCMonth()   : time.getMonth()) + 1);\n    setfield(L, \"year\",  utc ? time.getUTCFullYear() : time.getFullYear());\n    setfield(L, \"wday\",  (utc ? time.getUTCDay()     : time.getDay()) + 1);\n    setfield(L, \"yday\", Math.floor((time - (new Date(time.getFullYear(), 0, 0 /* shortcut to correct day by one */))) / 86400000));\n    // setboolfield(L, \"isdst\", time.get);\n};\n\nconst L_MAXDATEFIELD = (Number.MAX_SAFE_INTEGER / 2);\n\nconst getfield = function(L, key, d, delta) {\n    let t = lua_getfield(L, -1, to_luastring(key, true));  /* get field and its type */\n    let res = lua_tointegerx(L, -1);\n    if (res === false) {  /* field is not an integer? */\n        if (t !== LUA_TNIL)  /* some other value? */\n            return luaL_error(L, to_luastring(\"field '%s' is not an integer\"), key);\n        else if (d < 0)  /* absent field; no default? */\n            return luaL_error(L, to_luastring(\"field '%s' missing in date table\"), key);\n        res = d;\n    }\n    else {\n        if (!(-L_MAXDATEFIELD <= res && res <= L_MAXDATEFIELD))\n            return luaL_error(L, to_luastring(\"field '%s' is out-of-bound\"), key);\n        res -= delta;\n    }\n    lua_pop(L, 1);\n    return res;\n};\n\n\nconst locale = {\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ].map((s) => to_luastring(s)),\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"].map((s) => to_luastring(s)),\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].map((s) => to_luastring(s)),\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"].map((s) => to_luastring(s)),\n    AM: to_luastring(\"AM\"),\n    PM: to_luastring(\"PM\"),\n    am: to_luastring(\"am\"),\n    pm: to_luastring(\"pm\"),\n    formats: {\n        c: to_luastring(\"%a %b %e %H:%M:%S %Y\"),\n        D: to_luastring(\"%m/%d/%y\"),\n        F: to_luastring(\"%Y-%m-%d\"),\n        R: to_luastring(\"%H:%M\"),\n        r: to_luastring(\"%I:%M:%S %p\"),\n        T: to_luastring(\"%H:%M:%S\"),\n        X: to_luastring(\"%T\"),\n        x: to_luastring(\"%D\")\n    }\n};\n\nconst week_number = function(date, start_of_week) {\n    // This works by shifting the weekday back by one day if we\n    // are treating Monday as the first day of the week.\n    let weekday = date.getDay();\n    if (start_of_week === 'monday') {\n        if (weekday === 0) // Sunday\n            weekday = 6;\n        else\n            weekday--;\n    }\n    let yday = (date - new Date(date.getFullYear(), 0, 1)) / 86400000;\n    return Math.floor((yday + 7 - weekday) / 7);\n};\n\nconst push_pad_2 = function(b, n, pad) {\n    if (n < 10)\n        luaL_addchar(b, pad);\n    luaL_addstring(b, to_luastring(String(n)));\n};\n\nconst strftime = function(L, b, s, date) {\n    let i = 0;\n    while (i < s.length) {\n        if (s[i] !== 37 /* % */) {  /* not a conversion specifier? */\n            luaL_addchar(b, s[i++]);\n        } else {\n            i++;  /* skip '%' */\n            let len = checkoption(L, s, i);\n            /* each `case` has an example output above it for the UTC epoch */\n            switch(s[i]) {\n                // '%'\n                case 37 /* % */:\n                    luaL_addchar(b, 37);\n                    break;\n\n                // 'Thursday'\n                case 65 /* A */:\n                    luaL_addstring(b, locale.days[date.getDay()]);\n                    break;\n\n                // 'January'\n                case 66 /* B */:\n                    luaL_addstring(b, locale.months[date.getMonth()]);\n                    break;\n\n                // '19'\n                case 67 /* C */:\n                    push_pad_2(b, Math.floor(date.getFullYear() / 100), 48 /* 0 */);\n                    break;\n\n                // '01/01/70'\n                case 68 /* D */:\n                    strftime(L, b, locale.formats.D, date);\n                    break;\n\n                // '1970-01-01'\n                case 70 /* F */:\n                    strftime(L, b, locale.formats.F, date);\n                    break;\n\n                // '00'\n                case 72 /* H */:\n                    push_pad_2(b, date.getHours(), 48 /* 0 */);\n                    break;\n\n                // '12'\n                case 73 /* I */:\n                    push_pad_2(b, (date.getHours() + 11) % 12 + 1, 48 /* 0 */);\n                    break;\n\n                // '00'\n                case 77 /* M */:\n                    push_pad_2(b, date.getMinutes(), 48 /* 0 */);\n                    break;\n\n                // 'am'\n                case 80 /* P */:\n                    luaL_addstring(b, date.getHours() < 12 ? locale.am : locale.pm);\n                    break;\n\n                // '00:00'\n                case 82 /* R */:\n                    strftime(L, b, locale.formats.R, date);\n                    break;\n\n                // '00'\n                case 83 /* S */:\n                    push_pad_2(b, date.getSeconds(), 48 /* 0 */);\n                    break;\n\n                // '00:00:00'\n                case 84 /* T */:\n                    strftime(L, b, locale.formats.T, date);\n                    break;\n\n                // '00'\n                case 85 /* U */:\n                    push_pad_2(b, week_number(date, \"sunday\"), 48 /* 0 */);\n                    break;\n\n                // '00'\n                case 87 /* W */:\n                    push_pad_2(b, week_number(date, \"monday\"), 48 /* 0 */);\n                    break;\n\n                // '16:00:00'\n                case 88 /* X */:\n                    strftime(L, b, locale.formats.X, date);\n                    break;\n\n                // '1970'\n                case 89 /* Y */:\n                    luaL_addstring(b, to_luastring(String(date.getFullYear())));\n                    break;\n\n                // 'GMT'\n                case 90 /* Z */: {\n                    let tzString = date.toString().match(/\\(([\\w\\s]+)\\)/);\n                    if (tzString)\n                        luaL_addstring(b, to_luastring(tzString[1]));\n                    break;\n                }\n\n                // 'Thu'\n                case 97 /* a */:\n                    luaL_addstring(b, locale.shortDays[date.getDay()]);\n                    break;\n\n                // 'Jan'\n                case 98 /* b */:\n                case 104 /* h */:\n                    luaL_addstring(b, locale.shortMonths[date.getMonth()]);\n                    break;\n\n                // ''\n                case 99 /* c */:\n                    strftime(L, b, locale.formats.c, date);\n                    break;\n\n                // '01'\n                case 100 /* d */:\n                    push_pad_2(b, date.getDate(), 48 /* 0 */);\n                    break;\n\n                // ' 1'\n                case 101 /* e */:\n                    push_pad_2(b, date.getDate(), 32 /* space */);\n                    break;\n\n                // '000'\n                case 106 /* j */: {\n                    let yday = Math.floor((date - new Date(date.getFullYear(), 0, 1)) / 86400000);\n                    if (yday < 100) {\n                        if (yday < 10)\n                            luaL_addchar(b, 48 /* 0 */);\n                        luaL_addchar(b, 48 /* 0 */);\n                    }\n                    luaL_addstring(b, to_luastring(String(yday)));\n                    break;\n                }\n\n                // ' 0'\n                case 107 /* k */:\n                    push_pad_2(b, date.getHours(), 32 /* space */);\n                    break;\n\n                // '12'\n                case 108 /* l */:\n                    push_pad_2(b, (date.getHours() + 11) % 12 + 1, 32 /* space */);\n                    break;\n\n                // '01'\n                case 109 /* m */:\n                    push_pad_2(b, date.getMonth() + 1, 48 /* 0 */);\n                    break;\n\n                // '\\n'\n                case 110 /* n */:\n                    luaL_addchar(b, 10);\n                    break;\n\n                // 'AM'\n                case 112 /* p */:\n                    luaL_addstring(b, date.getHours() < 12 ? locale.AM : locale.PM);\n                    break;\n\n                // '12:00:00 AM'\n                case 114 /* r */:\n                    strftime(L, b, locale.formats.r, date);\n                    break;\n\n                // '0'\n                case 115 /* s */:\n                    luaL_addstring(b, to_luastring(String(Math.floor(date / 1000))));\n                    break;\n\n                // '\\t'\n                case 116 /* t */:\n                    luaL_addchar(b, 8);\n                    break;\n\n                // '4'\n                case 117 /* u */: {\n                    let day = date.getDay();\n                    luaL_addstring(b, to_luastring(String(day === 0 ? 7 : day)));\n                    break;\n                }\n\n                // '4'\n                case 119 /* w */:\n                    luaL_addstring(b, to_luastring(String(date.getDay())));\n                    break;\n\n                // '12/31/69'\n                case 120 /* x */:\n                    strftime(L, b, locale.formats.x, date);\n                    break;\n\n                // '70'\n                case 121 /* y */:\n                    push_pad_2(b, date.getFullYear() % 100, 48 /* 0 */);\n                    break;\n\n                // '+0000'\n                case 122 /* z */: {\n                    let off = date.getTimezoneOffset();\n                    if (off > 0) {\n                        luaL_addchar(b, 45 /* - */);\n                    } else {\n                        off = -off;\n                        luaL_addchar(b, 43 /* + */);\n                    }\n                    push_pad_2(b, Math.floor(off/60), 48 /* 0 */);\n                    push_pad_2(b, off % 60, 48 /* 0 */);\n                    break;\n                }\n            }\n            i += len;\n        }\n    }\n};\n\n\nconst checkoption = function(L, conv, i) {\n    let option = LUA_STRFTIMEOPTIONS;\n    let o = 0;\n    let oplen = 1;  /* length of options being checked */\n    for (; o < option.length && oplen <= (conv.length - i); o += oplen) {\n        if (option[o] === '|'.charCodeAt(0))  /* next block? */\n            oplen++;  /* will check options with next length (+1) */\n        else if (luastring_eq(conv.subarray(i, i+oplen), option.subarray(o, o+oplen))) {  /* match? */\n            return oplen;  /* return length */\n        }\n    }\n    luaL_argerror(L, 1,\n        lua_pushfstring(L, to_luastring(\"invalid conversion specifier '%%%s'\"), conv));\n};\n\n/* maximum size for an individual 'strftime' item */\n// const SIZETIMEFMT = 250;\n\n\nconst os_date = function(L) {\n    let s = luaL_optlstring(L, 1, \"%c\");\n    let stm = lua_isnoneornil(L, 2) ? new Date() : new Date(l_checktime(L, 2) * 1000);\n    let utc = false;\n    let i = 0;\n    if (s[i] === '!'.charCodeAt(0)) {  /* UTC? */\n        utc = true;\n        i++;  /* skip '!' */\n    }\n    if (s[i] === \"*\".charCodeAt(0) && s[i+1] === \"t\".charCodeAt(0)) {\n        lua_createtable(L, 0, 9);  /* 9 = number of fields */\n        setallfields(L, stm, utc);\n    } else {\n        let cc = new Uint8Array(4);\n        cc[0] = \"%\".charCodeAt(0);\n        let b = new luaL_Buffer();\n        luaL_buffinit(L, b);\n        strftime(L, b, s, stm);\n        luaL_pushresult(b);\n    }\n    return 1;\n};\n\nconst os_time = function(L) {\n    let t;\n    if (lua_isnoneornil(L, 1))  /* called without args? */\n        t = new Date();  /* get current time */\n    else {\n        luaL_checktype(L, 1, LUA_TTABLE);\n        lua_settop(L, 1);  /* make sure table is at the top */\n        t = new Date(\n            getfield(L, \"year\", -1, 0),\n            getfield(L, \"month\", -1, 1),\n            getfield(L, \"day\", -1, 0),\n            getfield(L, \"hour\", 12, 0),\n            getfield(L, \"min\", 0, 0),\n            getfield(L, \"sec\", 0, 0)\n        );\n        setallfields(L, t);\n    }\n\n    lua_pushinteger(L, Math.floor(t / 1000));\n    return 1;\n};\n\nconst l_checktime = function(L, arg) {\n    let t = luaL_checkinteger(L, arg);\n    // luaL_argcheck(L, t, arg, \"time out-of-bounds\");\n    return t;\n};\n\nconst os_difftime = function(L) {\n    let t1 = l_checktime(L, 1);\n    let t2 = l_checktime(L, 2);\n    lua_pushnumber(L, t1 - t2);\n    return 1;\n};\n\nconst syslib = {\n    \"date\": os_date,\n    \"difftime\": os_difftime,\n    \"time\": os_time\n};\n\nif (typeof process === \"undefined\") {\n    syslib.clock = function(L) {\n        lua_pushnumber(L, performance.now()/1000);\n        return 1;\n    };\n} else {\n    /* Only with Node */\n    const fs = require('fs');\n    const tmp = require('tmp');\n    const child_process = require('child_process');\n\n    syslib.exit = function(L) {\n        let status;\n        if (lua_isboolean(L, 1))\n            status = (lua_toboolean(L, 1) ? 0 : 1);\n        else\n            status = luaL_optinteger(L, 1, 0);\n        if (lua_toboolean(L, 2))\n            lua_close(L);\n        if (L) process.exit(status);  /* 'if' to avoid warnings for unreachable 'return' */\n        return 0;\n    };\n\n    syslib.getenv = function(L) {\n        let key = luaL_checkstring(L, 1);\n        key = to_jsstring(key); /* https://github.com/nodejs/node/issues/16961 */\n        if (Object.prototype.hasOwnProperty.call(process.env, key)) {\n            lua_pushliteral(L, process.env[key]);\n        } else {\n            lua_pushnil(L);\n        }\n        return 1;\n    };\n\n    syslib.clock = function(L) {\n        lua_pushnumber(L, process.uptime());\n        return 1;\n    };\n\n    const lua_tmpname = function() {\n        return tmp.tmpNameSync();\n    };\n\n    syslib.remove = function(L) {\n        let filename = luaL_checkstring(L, 1);\n        try {\n            fs.unlinkSync(filename);\n        } catch (e) {\n            if (e.code === 'EISDIR') {\n                try {\n                    fs.rmdirSync(filename);\n                } catch (e) {\n                    return luaL_fileresult(L, false, filename, e);\n                }\n            } else {\n                return luaL_fileresult(L, false, filename, e);\n            }\n        }\n        return luaL_fileresult(L, true);\n    };\n\n    syslib.rename = function(L) {\n        let fromname = luaL_checkstring(L, 1);\n        let toname = luaL_checkstring(L, 2);\n        try {\n            fs.renameSync(fromname, toname);\n        } catch (e) {\n            return luaL_fileresult(L, false, false, e);\n        }\n        return luaL_fileresult(L, true);\n    };\n\n    syslib.tmpname = function(L) {\n        let name = lua_tmpname();\n        if (!name)\n            return luaL_error(L, to_luastring(\"unable to generate a unique filename\"));\n        lua_pushstring(L, to_luastring(name));\n        return 1;\n    };\n\n    syslib.execute = function(L) {\n        let cmd = luaL_optstring(L, 1, null);\n        if (cmd !== null) {\n            try {\n                child_process.execSync(\n                    cmd,\n                    {\n                        stdio: [process.stdin, process.stdout, process.stderr]\n                    }\n                );\n            } catch (e) {\n                return luaL_execresult(L, e);\n            }\n\n            return luaL_execresult(L, null);\n        } else {\n            /* Assume a shell is available.\n               If it's good enough for musl it's good enough for us.\n               http://git.musl-libc.org/cgit/musl/tree/src/process/system.c?id=ac45692a53a1b8d2ede329d91652d43c1fb5dc8d#n22\n            */\n            lua_pushboolean(L, 1);\n            return 1;\n        }\n    };\n}\n\nconst luaopen_os = function(L) {\n    luaL_newlib(L, syslib);\n    return 1;\n};\n\nmodule.exports.luaopen_os = luaopen_os;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    to_luastring\n} = require('./defs.js');\nconst {\n    BinOpr: {\n        OPR_ADD,\n        OPR_AND,\n        OPR_BAND,\n        OPR_BOR,\n        OPR_BXOR,\n        OPR_CONCAT,\n        OPR_DIV,\n        OPR_EQ,\n        OPR_GE,\n        OPR_GT,\n        OPR_IDIV,\n        OPR_LE,\n        OPR_LT,\n        OPR_MOD,\n        OPR_MUL,\n        OPR_NE,\n        OPR_NOBINOPR,\n        OPR_OR,\n        OPR_POW,\n        OPR_SHL,\n        OPR_SHR,\n        OPR_SUB\n    },\n    UnOpr: {\n        OPR_BNOT,\n        OPR_LEN,\n        OPR_MINUS,\n        OPR_NOT,\n        OPR_NOUNOPR\n    },\n    NO_JUMP,\n    getinstruction,\n    luaK_checkstack,\n    luaK_codeABC,\n    luaK_codeABx,\n    luaK_codeAsBx,\n    luaK_codek,\n    luaK_concat,\n    luaK_dischargevars,\n    luaK_exp2RK,\n    luaK_exp2anyreg,\n    luaK_exp2anyregup,\n    luaK_exp2nextreg,\n    luaK_exp2val,\n    luaK_fixline,\n    luaK_getlabel,\n    luaK_goiffalse,\n    luaK_goiftrue,\n    luaK_indexed,\n    luaK_infix,\n    luaK_intK,\n    luaK_jump,\n    luaK_jumpto,\n    luaK_nil,\n    luaK_patchclose,\n    luaK_patchlist,\n    luaK_patchtohere,\n    luaK_posfix,\n    luaK_prefix,\n    luaK_reserveregs,\n    luaK_ret,\n    luaK_self,\n    luaK_setlist,\n    luaK_setmultret,\n    luaK_setoneret,\n    luaK_setreturns,\n    luaK_storevar,\n    luaK_stringK\n} = require('./lcode.js');\nconst ldo      = require('./ldo.js');\nconst lfunc    = require('./lfunc.js');\nconst llex     = require('./llex.js');\nconst {\n    LUAI_MAXCCALLS,\n    MAX_INT,\n    lua_assert\n}  = require('./llimits.js');\nconst lobject  = require('./lobject.js');\nconst {\n    OpCodesI: {\n        OP_CALL,\n        OP_CLOSURE,\n        OP_FORLOOP,\n        OP_FORPREP,\n        OP_GETUPVAL,\n        OP_MOVE,\n        OP_NEWTABLE,\n        OP_SETTABLE,\n        OP_TAILCALL,\n        OP_TFORCALL,\n        OP_TFORLOOP,\n        OP_VARARG\n    },\n    LFIELDS_PER_FLUSH,\n    SETARG_B,\n    SETARG_C,\n    SET_OPCODE\n} = require('./lopcodes.js');\nconst {\n    luaS_eqlngstr,\n    luaS_new,\n    luaS_newliteral\n} = require('./lstring.js');\nconst ltable   = require('./ltable.js');\nconst Proto    = lfunc.Proto;\nconst R        = llex.RESERVED;\n\nconst MAXVARS = 200;\n\nconst hasmultret = function(k) {\n    return k === expkind.VCALL || k === expkind.VVARARG;\n};\n\nconst eqstr = function(a, b) {\n    /* TODO: use plain equality as strings are cached */\n    return luaS_eqlngstr(a, b);\n};\n\nclass BlockCnt {\n    constructor() {\n        this.previous = null;  /* chain */\n        this.firstlabel = NaN; /* index of first label in this block */\n        this.firstgoto = NaN;  /* index of first pending goto in this block */\n        this.nactvar = NaN;    /* # active locals outside the block */\n        this.upval = NaN;      /* true if some variable in the block is an upvalue */\n        this.isloop = NaN;     /* true if 'block' is a loop */\n    }\n}\n\nconst expkind = {\n    VVOID: 0,        /* when 'expdesc' describes the last expression a list,\n                        this kind means an empty list (so, no expression) */\n    VNIL: 1,         /* constant nil */\n    VTRUE: 2,        /* constant true */\n    VFALSE: 3,       /* constant false */\n    VK: 4,           /* constant in 'k'; info = index of constant in 'k' */\n    VKFLT: 5,        /* floating constant; nval = numerical float value */\n    VKINT: 6,        /* integer constant; nval = numerical integer value */\n    VNONRELOC: 7,    /* expression has its value in a fixed register;\n                        info = result register */\n    VLOCAL: 8,       /* local variable; info = local register */\n    VUPVAL: 9,       /* upvalue variable; info = index of upvalue in 'upvalues' */\n    VINDEXED: 10,    /* indexed variable;\n                        ind.vt = whether 't' is register or upvalue;\n                        ind.t = table register or upvalue;\n                        ind.idx = key's R/K index */\n    VJMP: 11,        /* expression is a test/comparison;\n                        info = pc of corresponding jump instruction */\n    VRELOCABLE: 12,  /* expression can put result in any register;\n                        info = instruction pc */\n    VCALL: 13,       /* expression is a function call; info = instruction pc */\n    VVARARG: 14      /* vararg expression; info = instruction pc */\n};\n\nconst vkisvar = function(k) {\n    return expkind.VLOCAL <= k && k <= expkind.VINDEXED;\n};\n\nconst vkisinreg = function(k) {\n    return k === expkind.VNONRELOC || k === expkind.VLOCAL;\n};\n\nclass expdesc {\n    constructor() {\n        this.k = NaN;\n        this.u = {\n            ival: NaN,    /* for VKINT */\n            nval: NaN,    /* for VKFLT */\n            info: NaN,    /* for generic use */\n            ind: {        /* for indexed variables (VINDEXED) */\n                idx: NaN, /* index (R/K) */\n                t: NaN,   /* table (register or upvalue) */\n                vt: NaN   /* whether 't' is register (VLOCAL) or upvalue (VUPVAL) */\n            }\n        };\n        this.t = NaN;     /* patch list of 'exit when true' */\n        this.f = NaN;     /* patch list of 'exit when false' */\n    }\n\n    to(e) { // Copy e content to this, cf. luaK_posfix\n        this.k = e.k;\n        this.u = e.u;\n        this.t = e.t;\n        this.f = e.f;\n    }\n}\n\nclass FuncState {\n    constructor() {\n        this.f = null;         /* current function header */\n        this.prev = null;      /* enclosing function */\n        this.ls = null;        /* lexical state */\n        this.bl = null;        /* chain of current blocks */\n        this.pc = NaN;         /* next position to code (equivalent to 'ncode') */\n        this.lasttarget = NaN; /* 'label' of last 'jump label' */\n        this.jpc = NaN;        /* list of pending jumps to 'pc' */\n        this.nk = NaN;         /* number of elements in 'k' */\n        this.np = NaN;         /* number of elements in 'p' */\n        this.firstlocal = NaN; /* index of first local var (in Dyndata array) */\n        this.nlocvars = NaN;   /* number of elements in 'f->locvars' */\n        this.nactvar = NaN;    /* number of active local variables */\n        this.nups = NaN;       /* number of upvalues */\n        this.freereg = NaN;    /* first free register */\n    }\n}\n\n/* description of active local variable */\nclass Vardesc {\n    constructor() {\n        this.idx = NaN;  /* variable index in stack */\n    }\n}\n\n\n/* description of pending goto statements and label statements */\nclass Labeldesc {\n    constructor() {\n        this.name = null;  /* label identifier */\n        this.pc = NaN;  /* position in code */\n        this.line = NaN;  /* line where it appeared */\n        this.nactvar = NaN;  /* local level where it appears in current block */\n    }\n}\n\n\n/* list of labels or gotos */\nclass Labellist {\n    constructor() {\n        this.arr = []; /* array */\n        this.n = NaN;  /* number of entries in use */\n        this.size = NaN;  /* array size */\n    }\n}\n\n/* dynamic structures used by the parser */\nclass Dyndata {\n    constructor() {\n        this.actvar = {  /* list of active local variables */\n            arr: [],\n            n: NaN,\n            size: NaN\n        };\n        this.gt = new Labellist();\n        this.label = new Labellist();\n    }\n}\n\nconst semerror = function(ls, msg) {\n    ls.t.token = 0;  /* remove \"near <token>\" from final message */\n    llex.luaX_syntaxerror(ls, msg);\n};\n\nconst error_expected = function(ls, token) {\n    llex.luaX_syntaxerror(ls, lobject.luaO_pushfstring(ls.L, to_luastring(\"%s expected\", true), llex.luaX_token2str(ls, token)));\n};\n\nconst errorlimit = function(fs, limit, what) {\n    let L = fs.ls.L;\n    let line = fs.f.linedefined;\n    let where = (line === 0)\n        ? to_luastring(\"main function\", true)\n        : lobject.luaO_pushfstring(L, to_luastring(\"function at line %d\", true), line);\n    let msg = lobject.luaO_pushfstring(L, to_luastring(\"too many %s (limit is %d) in %s\", true),\n        what, limit, where);\n    llex.luaX_syntaxerror(fs.ls, msg);\n};\n\nconst checklimit = function(fs, v, l, what) {\n    if (v > l) errorlimit(fs, l, what);\n};\n\nconst testnext = function(ls, c) {\n    if (ls.t.token === c) {\n        llex.luaX_next(ls);\n        return true;\n    }\n\n    return false;\n};\n\nconst check = function(ls, c) {\n    if (ls.t.token !== c)\n        error_expected(ls, c);\n};\n\nconst checknext = function(ls, c) {\n    check(ls, c);\n    llex.luaX_next(ls);\n};\n\nconst check_condition = function(ls, c, msg) {\n    if (!c)\n        llex.luaX_syntaxerror(ls, msg);\n};\n\nconst check_match = function(ls, what, who, where) {\n    if (!testnext(ls, what)) {\n        if (where === ls.linenumber)\n            error_expected(ls, what);\n        else\n            llex.luaX_syntaxerror(ls, lobject.luaO_pushfstring(ls.L,\n                to_luastring(\"%s expected (to close %s at line %d)\"),\n                llex.luaX_token2str(ls, what), llex.luaX_token2str(ls, who), where));\n    }\n};\n\nconst str_checkname = function(ls) {\n    check(ls, R.TK_NAME);\n    let ts = ls.t.seminfo.ts;\n    llex.luaX_next(ls);\n    return ts;\n};\n\nconst init_exp = function(e, k, i) {\n    e.f = e.t = NO_JUMP;\n    e.k = k;\n    e.u.info = i;\n};\n\nconst codestring = function(ls, e, s) {\n    init_exp(e, expkind.VK, luaK_stringK(ls.fs, s));\n};\n\nconst checkname = function(ls, e) {\n    codestring(ls, e, str_checkname(ls));\n};\n\nconst registerlocalvar = function(ls, varname) {\n    let fs = ls.fs;\n    let f = fs.f;\n    f.locvars[fs.nlocvars] = new lobject.LocVar();\n    f.locvars[fs.nlocvars].varname = varname;\n    return fs.nlocvars++;\n};\n\nconst new_localvar = function(ls, name) {\n    let fs = ls.fs;\n    let dyd = ls.dyd;\n    let reg = registerlocalvar(ls, name);\n    checklimit(fs, dyd.actvar.n + 1 - fs.firstlocal, MAXVARS, to_luastring(\"local variables\", true));\n    dyd.actvar.arr[dyd.actvar.n] = new Vardesc();\n    dyd.actvar.arr[dyd.actvar.n].idx = reg;\n    dyd.actvar.n++;\n};\n\nconst new_localvarliteral = function(ls, name) {\n    new_localvar(ls, llex.luaX_newstring(ls, to_luastring(name, true)));\n};\n\nconst getlocvar = function(fs, i) {\n    let idx = fs.ls.dyd.actvar.arr[fs.firstlocal + i].idx;\n    lua_assert(idx < fs.nlocvars);\n    return fs.f.locvars[idx];\n};\n\nconst adjustlocalvars = function(ls, nvars) {\n    let fs = ls.fs;\n    fs.nactvar = fs.nactvar + nvars;\n    for (; nvars; nvars--)\n        getlocvar(fs, fs.nactvar - nvars).startpc = fs.pc;\n};\n\nconst removevars = function(fs, tolevel) {\n    fs.ls.dyd.actvar.n -= fs.nactvar - tolevel;\n    while (fs.nactvar > tolevel)\n        getlocvar(fs, --fs.nactvar).endpc = fs.pc;\n};\n\nconst searchupvalue = function(fs, name) {\n    let up = fs.f.upvalues;\n    for (let i = 0; i < fs.nups; i++) {\n        if (eqstr(up[i].name, name))\n            return i;\n    }\n    return -1;  /* not found */\n};\n\nconst newupvalue = function(fs, name, v) {\n    let f = fs.f;\n    checklimit(fs, fs.nups + 1, lfunc.MAXUPVAL, to_luastring(\"upvalues\", true));\n    f.upvalues[fs.nups] = {\n        instack: v.k === expkind.VLOCAL,\n        idx: v.u.info,\n        name: name\n    };\n    return fs.nups++;\n};\n\nconst searchvar = function(fs, n) {\n    for (let i = fs.nactvar - 1; i >= 0; i--) {\n        if (eqstr(n, getlocvar(fs, i).varname))\n            return i;\n    }\n\n    return -1;\n};\n\n/*\n** Mark block where variable at given level was defined\n** (to emit close instructions later).\n*/\nconst markupval = function(fs, level) {\n    let bl = fs.bl;\n    while (bl.nactvar > level)\n        bl = bl.previous;\n    bl.upval = 1;\n};\n\n/*\n** Find variable with given name 'n'. If it is an upvalue, add this\n** upvalue into all intermediate functions.\n*/\nconst singlevaraux = function(fs, n, vr, base) {\n    if (fs === null)  /* no more levels? */\n        init_exp(vr, expkind.VVOID, 0);  /* default is global */\n    else {\n        let v = searchvar(fs, n);  /* look up locals at current level */\n        if (v >= 0) {  /* found? */\n            init_exp(vr, expkind.VLOCAL, v);  /* variable is local */\n            if (!base)\n                markupval(fs, v);  /* local will be used as an upval */\n        } else {  /* not found as local at current level; try upvalues */\n            let idx = searchupvalue(fs, n);  /* try existing upvalues */\n            if (idx < 0) {  /* not found? */\n                singlevaraux(fs.prev, n, vr, 0);  /* try upper levels */\n                if (vr.k === expkind.VVOID)  /* not found? */\n                    return;  /* it is a global */\n                /* else was LOCAL or UPVAL */\n                idx = newupvalue(fs, n, vr);  /* will be a new upvalue */\n            }\n            init_exp(vr, expkind.VUPVAL, idx);  /* new or old upvalue */\n        }\n    }\n};\n\nconst singlevar = function(ls, vr) {\n    let varname = str_checkname(ls);\n    let fs = ls.fs;\n    singlevaraux(fs, varname, vr, 1);\n    if (vr.k === expkind.VVOID) {  /* is global name? */\n        let key = new expdesc();\n        singlevaraux(fs, ls.envn, vr, 1);  /* get environment variable */\n        lua_assert(vr.k !== expkind.VVOID);  /* this one must exist */\n        codestring(ls, key, varname);  /* key is variable name */\n        luaK_indexed(fs, vr, key);  /* env[varname] */\n    }\n};\n\nconst adjust_assign = function(ls, nvars, nexps, e) {\n    let fs = ls.fs;\n    let extra = nvars - nexps;\n    if (hasmultret(e.k)) {\n        extra++;  /* includes call itself */\n        if (extra < 0) extra = 0;\n        luaK_setreturns(fs, e, extra);  /* last exp. provides the difference */\n        if (extra > 1) luaK_reserveregs(fs, extra - 1);\n    } else {\n        if (e.k !== expkind.VVOID) luaK_exp2nextreg(fs, e);  /* close last expression */\n        if (extra > 0) {\n            let reg = fs.freereg;\n            luaK_reserveregs(fs, extra);\n            luaK_nil(fs, reg, extra);\n        }\n    }\n    if (nexps > nvars)\n        ls.fs.freereg -= nexps - nvars;  /* remove extra values */\n};\n\nconst enterlevel = function(ls) {\n    let L = ls.L;\n    ++L.nCcalls;\n    checklimit(ls.fs, L.nCcalls, LUAI_MAXCCALLS, to_luastring(\"JS levels\", true));\n};\n\nconst leavelevel = function(ls) {\n    return ls.L.nCcalls--;\n};\n\nconst closegoto = function(ls, g, label) {\n    let fs = ls.fs;\n    let gl = ls.dyd.gt;\n    let gt = gl.arr[g];\n    lua_assert(eqstr(gt.name, label.name));\n    if (gt.nactvar < label.nactvar) {\n        let vname = getlocvar(fs, gt.nactvar).varname;\n        let msg = lobject.luaO_pushfstring(ls.L,\n            to_luastring(\"<goto %s> at line %d jumps into the scope of local '%s'\"),\n            gt.name.getstr(), gt.line, vname.getstr());\n        semerror(ls, msg);\n    }\n    luaK_patchlist(fs, gt.pc, label.pc);\n    /* remove goto from pending list */\n    for (let i = g; i < gl.n - 1; i++)\n        gl.arr[i] = gl.arr[i + 1];\n    gl.n--;\n};\n\n/*\n** try to close a goto with existing labels; this solves backward jumps\n*/\nconst findlabel = function(ls, g) {\n    let bl = ls.fs.bl;\n    let dyd = ls.dyd;\n    let gt = dyd.gt.arr[g];\n    /* check labels in current block for a match */\n    for (let i = bl.firstlabel; i < dyd.label.n; i++) {\n        let lb = dyd.label.arr[i];\n        if (eqstr(lb.name, gt.name)) {  /* correct label? */\n            if (gt.nactvar > lb.nactvar && (bl.upval || dyd.label.n > bl.firstlabel))\n                luaK_patchclose(ls.fs, gt.pc, lb.nactvar);\n            closegoto(ls, g, lb);  /* close it */\n            return true;\n        }\n    }\n    return false;  /* label not found; cannot close goto */\n};\n\nconst newlabelentry = function(ls, l, name, line, pc) {\n    let n = l.n;\n    l.arr[n] = new Labeldesc();\n    l.arr[n].name = name;\n    l.arr[n].line = line;\n    l.arr[n].nactvar = ls.fs.nactvar;\n    l.arr[n].pc = pc;\n    l.n = n + 1;\n    return n;\n};\n\n/*\n** check whether new label 'lb' matches any pending gotos in current\n** block; solves forward jumps\n*/\nconst findgotos = function(ls, lb) {\n    let gl = ls.dyd.gt;\n    let i = ls.fs.bl.firstgoto;\n    while (i < gl.n) {\n        if (eqstr(gl.arr[i].name, lb.name))\n            closegoto(ls, i, lb);\n        else\n            i++;\n    }\n};\n\n/*\n** export pending gotos to outer level, to check them against\n** outer labels; if the block being exited has upvalues, and\n** the goto exits the scope of any variable (which can be the\n** upvalue), close those variables being exited.\n*/\nconst movegotosout = function(fs, bl) {\n    let i = bl.firstgoto;\n    let gl = fs.ls.dyd.gt;\n    /* correct pending gotos to current block and try to close it\n       with visible labels */\n    while (i < gl.n) {\n        let gt = gl.arr[i];\n        if (gt.nactvar > bl.nactvar) {\n            if (bl.upval)\n                luaK_patchclose(fs, gt.pc, bl.nactvar);\n            gt.nactvar = bl.nactvar;\n        }\n        if (!findlabel(fs.ls, i))\n            i++;  /* move to next one */\n    }\n};\n\nconst enterblock = function(fs, bl, isloop) {\n    bl.isloop = isloop;\n    bl.nactvar = fs.nactvar;\n    bl.firstlabel = fs.ls.dyd.label.n;\n    bl.firstgoto = fs.ls.dyd.gt.n;\n    bl.upval = 0;\n    bl.previous = fs.bl;\n    fs.bl = bl;\n    lua_assert(fs.freereg === fs.nactvar);\n};\n\n/*\n** create a label named 'break' to resolve break statements\n*/\nconst breaklabel = function(ls) {\n    let n = luaS_newliteral(ls.L, \"break\");\n    let l = newlabelentry(ls, ls.dyd.label, n, 0, ls.fs.pc);\n    findgotos(ls, ls.dyd.label.arr[l]);\n};\n\n/*\n** generates an error for an undefined 'goto'; choose appropriate\n** message when label name is a reserved word (which can only be 'break')\n*/\nconst undefgoto = function(ls, gt) {\n    let msg = llex.isreserved(gt.name)\n        ? \"<%s> at line %d not inside a loop\"\n        : \"no visible label '%s' for <goto> at line %d\";\n    msg = lobject.luaO_pushfstring(ls.L, to_luastring(msg), gt.name.getstr(), gt.line);\n    semerror(ls, msg);\n};\n\n/*\n** adds a new prototype into list of prototypes\n*/\nconst addprototype = function(ls) {\n    let L = ls.L;\n    let clp = new Proto(L);\n    let fs = ls.fs;\n    let f = fs.f;  /* prototype of current function */\n    f.p[fs.np++] = clp;\n    return clp;\n};\n\n/*\n** codes instruction to create new closure in parent function.\n*/\nconst codeclosure = function(ls, v) {\n    let fs = ls.fs.prev;\n    init_exp(v, expkind.VRELOCABLE, luaK_codeABx(fs, OP_CLOSURE, 0, fs.np -1));\n    luaK_exp2nextreg(fs, v);  /* fix it at the last register */\n};\n\nconst open_func = function(ls, fs, bl) {\n    fs.prev = ls.fs;  /* linked list of funcstates */\n    fs.ls = ls;\n    ls.fs = fs;\n    fs.pc = 0;\n    fs.lasttarget = 0;\n    fs.jpc = NO_JUMP;\n    fs.freereg = 0;\n    fs.nk = 0;\n    fs.np = 0;\n    fs.nups = 0;\n    fs.nlocvars = 0;\n    fs.nactvar = 0;\n    fs.firstlocal = ls.dyd.actvar.n;\n    fs.bl = null;\n    let f = fs.f;\n    f.source = ls.source;\n    f.maxstacksize = 2;  /* registers 0/1 are always valid */\n    enterblock(fs, bl, false);\n};\n\nconst leaveblock = function(fs) {\n    let bl = fs.bl;\n    let ls = fs.ls;\n    if (bl.previous && bl.upval) {\n        /* create a 'jump to here' to close upvalues */\n        let j = luaK_jump(fs);\n        luaK_patchclose(fs, j , bl.nactvar);\n        luaK_patchtohere(fs, j);\n    }\n\n    if (bl.isloop)\n        breaklabel(ls);  /* close pending breaks */\n\n    fs.bl = bl.previous;\n    removevars(fs, bl.nactvar);\n    lua_assert(bl.nactvar === fs.nactvar);\n    fs.freereg = fs.nactvar;  /* free registers */\n    ls.dyd.label.n = bl.firstlabel;  /* remove local labels */\n    if (bl.previous)  /* inner block? */\n        movegotosout(fs, bl);  /* update pending gotos to outer block */\n    else if (bl.firstgoto < ls.dyd.gt.n)  /* pending gotos in outer block? */\n        undefgoto(ls, ls.dyd.gt.arr[bl.firstgoto]);  /* error */\n};\n\nconst close_func = function(ls) {\n    let fs = ls.fs;\n    luaK_ret(fs, 0, 0);  /* final return */\n    leaveblock(fs);\n    lua_assert(fs.bl === null);\n    ls.fs = fs.prev;\n};\n\n/*============================================================*/\n/* GRAMMAR RULES */\n/*============================================================*/\n\nconst block_follow = function(ls, withuntil) {\n    switch (ls.t.token) {\n        case R.TK_ELSE: case R.TK_ELSEIF:\n        case R.TK_END: case R.TK_EOS:\n            return true;\n        case R.TK_UNTIL: return withuntil;\n        default: return false;\n    }\n};\n\nconst statlist = function(ls) {\n    /* statlist -> { stat [';'] } */\n    while (!block_follow(ls, 1)) {\n        if (ls.t.token === R.TK_RETURN) {\n            statement(ls);\n            return;  /* 'return' must be last statement */\n        }\n        statement(ls);\n    }\n};\n\nconst fieldsel = function(ls, v) {\n    /* fieldsel -> ['.' | ':'] NAME */\n    let fs = ls.fs;\n    let key = new expdesc();\n    luaK_exp2anyregup(fs, v);\n    llex.luaX_next(ls);  /* skip the dot or colon */\n    checkname(ls, key);\n    luaK_indexed(fs, v, key);\n};\n\nconst yindex = function(ls, v) {\n    /* index -> '[' expr ']' */\n    llex.luaX_next(ls);  /* skip the '[' */\n    expr(ls, v);\n    luaK_exp2val(ls.fs, v);\n    checknext(ls, 93 /* (']').charCodeAt(0) */);\n};\n\n/*\n** {======================================================================\n** Rules for Constructors\n** =======================================================================\n*/\n\nclass ConsControl {\n    constructor() {\n        this.v = new expdesc(); /* last list item read */\n        this.t = new expdesc(); /* table descriptor */\n        this.nh = NaN;          /* total number of 'record' elements */\n        this.na = NaN;          /* total number of array elements */\n        this.tostore = NaN;     /* number of array elements pending to be stored */\n    }\n}\n\nconst recfield = function(ls, cc) {\n    /* recfield -> (NAME | '['exp1']') = exp1 */\n    let fs = ls.fs;\n    let reg = ls.fs.freereg;\n    let key = new expdesc();\n    let val = new expdesc();\n\n    if (ls.t.token === R.TK_NAME) {\n        checklimit(fs, cc.nh, MAX_INT, to_luastring(\"items in a constructor\", true));\n        checkname(ls, key);\n    } else  /* ls->t.token === '[' */\n        yindex(ls, key);\n    cc.nh++;\n    checknext(ls, 61 /* ('=').charCodeAt(0) */);\n    let rkkey = luaK_exp2RK(fs, key);\n    expr(ls, val);\n    luaK_codeABC(fs, OP_SETTABLE, cc.t.u.info, rkkey, luaK_exp2RK(fs, val));\n    fs.freereg = reg;  /* free registers */\n};\n\nconst closelistfield = function(fs, cc) {\n    if (cc.v.k === expkind.VVOID) return;  /* there is no list item */\n    luaK_exp2nextreg(fs, cc.v);\n    cc.v.k = expkind.VVOID;\n    if (cc.tostore === LFIELDS_PER_FLUSH) {\n        luaK_setlist(fs, cc.t.u.info, cc.na, cc.tostore);  /* flush */\n        cc.tostore = 0;  /* no more items pending */\n    }\n};\n\nconst lastlistfield = function(fs, cc) {\n    if (cc.tostore === 0) return;\n    if (hasmultret(cc.v.k)) {\n        luaK_setmultret(fs, cc.v);\n        luaK_setlist(fs, cc.t.u.info, cc.na, LUA_MULTRET);\n        cc.na--;  /* do not count last expression (unknown number of elements) */\n    } else {\n        if (cc.v.k !== expkind.VVOID)\n            luaK_exp2nextreg(fs, cc.v);\n        luaK_setlist(fs, cc.t.u.info, cc.na, cc.tostore);\n    }\n};\n\nconst listfield = function(ls, cc) {\n    /* listfield -> exp */\n    expr(ls, cc.v);\n    checklimit(ls.fs, cc.na, MAX_INT, to_luastring(\"items in a constructor\", true));\n    cc.na++;\n    cc.tostore++;\n};\n\nconst field = function(ls, cc) {\n    /* field -> listfield | recfield */\n    switch (ls.t.token) {\n        case R.TK_NAME: {  /* may be 'listfield' or 'recfield' */\n            if (llex.luaX_lookahead(ls) !== 61 /* ('=').charCodeAt(0) */)  /* expression? */\n                listfield(ls, cc);\n            else\n                recfield(ls, cc);\n            break;\n        }\n        case 91 /* ('[').charCodeAt(0) */: {\n            recfield(ls, cc);\n            break;\n        }\n        default: {\n            listfield(ls, cc);\n            break;\n        }\n    }\n};\n\nconst constructor = function(ls, t) {\n    /* constructor -> '{' [ field { sep field } [sep] ] '}'\n       sep -> ',' | ';' */\n    let fs = ls.fs;\n    let line = ls.linenumber;\n    let pc = luaK_codeABC(fs, OP_NEWTABLE, 0, 0, 0);\n    let cc = new ConsControl();\n    cc.na = cc.nh = cc.tostore = 0;\n    cc.t = t;\n    init_exp(t, expkind.VRELOCABLE, pc);\n    init_exp(cc.v, expkind.VVOID, 0);  /* no value (yet) */\n    luaK_exp2nextreg(ls.fs, t);  /* fix it at stack top */\n    checknext(ls, 123 /* ('{').charCodeAt(0) */);\n    do {\n        lua_assert(cc.v.k === expkind.VVOID || cc.tostore > 0);\n        if (ls.t.token === 125 /* ('}').charCodeAt(0) */) break;\n        closelistfield(fs, cc);\n        field(ls, cc);\n    } while (testnext(ls, 44 /* (',').charCodeAt(0) */) || testnext(ls, 59 /* (';').charCodeAt(0) */));\n    check_match(ls, 125 /* ('}').charCodeAt(0) */, 123 /* ('{').charCodeAt(0) */, line);\n    lastlistfield(fs, cc);\n    SETARG_B(fs.f.code[pc], lobject.luaO_int2fb(cc.na));  /* set initial array size */\n    SETARG_C(fs.f.code[pc], lobject.luaO_int2fb(cc.nh));  /* set initial table size */\n};\n\n/* }====================================================================== */\n\nconst parlist = function(ls) {\n    /* parlist -> [ param { ',' param } ] */\n    let fs = ls.fs;\n    let f = fs.f;\n    let nparams = 0;\n    f.is_vararg = false;\n    if (ls.t.token !== 41 /* (')').charCodeAt(0) */) {  /* is 'parlist' not empty? */\n        do {\n            switch (ls.t.token) {\n                case R.TK_NAME: {  /* param -> NAME */\n                    new_localvar(ls, str_checkname(ls));\n                    nparams++;\n                    break;\n                }\n                case R.TK_DOTS: {  /* param -> '...' */\n                    llex.luaX_next(ls);\n                    f.is_vararg = true;  /* declared vararg */\n                    break;\n                }\n                default: llex.luaX_syntaxerror(ls, to_luastring(\"<name> or '...' expected\", true));\n            }\n        } while(!f.is_vararg && testnext(ls, 44 /* (',').charCodeAt(0) */));\n    }\n    adjustlocalvars(ls, nparams);\n    f.numparams = fs.nactvar;\n    luaK_reserveregs(fs, fs.nactvar);  /* reserve register for parameters */\n};\n\nconst body = function(ls, e, ismethod, line) {\n    /* body ->  '(' parlist ')' block END */\n    let new_fs = new FuncState();\n    let bl = new BlockCnt();\n    new_fs.f = addprototype(ls);\n    new_fs.f.linedefined = line;\n    open_func(ls, new_fs, bl);\n    checknext(ls, 40 /* ('(').charCodeAt(0) */);\n    if (ismethod) {\n        new_localvarliteral(ls, \"self\");  /* create 'self' parameter */\n        adjustlocalvars(ls, 1);\n    }\n    parlist(ls);\n    checknext(ls, 41 /* (')').charCodeAt(0) */);\n    statlist(ls);\n    new_fs.f.lastlinedefined = ls.linenumber;\n    check_match(ls, R.TK_END, R.TK_FUNCTION, line);\n    codeclosure(ls, e);\n    close_func(ls);\n};\n\nconst explist = function(ls, v) {\n    /* explist -> expr { ',' expr } */\n    let n = 1;  /* at least one expression */\n    expr(ls, v);\n    while (testnext(ls, 44 /* (',').charCodeAt(0) */)) {\n        luaK_exp2nextreg(ls.fs, v);\n        expr(ls, v);\n        n++;\n    }\n    return n;\n};\n\nconst funcargs = function(ls, f, line) {\n    let fs = ls.fs;\n    let args = new expdesc();\n    switch (ls.t.token) {\n        case 40 /* ('(').charCodeAt(0) */: {  /* funcargs -> '(' [ explist ] ')' */\n            llex.luaX_next(ls);\n            if (ls.t.token === 41 /* (')').charCodeAt(0) */)  /* arg list is empty? */\n                args.k = expkind.VVOID;\n            else {\n                explist(ls, args);\n                luaK_setmultret(fs, args);\n            }\n            check_match(ls, 41 /* (')').charCodeAt(0) */, 40 /* ('(').charCodeAt(0) */, line);\n            break;\n        }\n        case 123 /* ('{').charCodeAt(0) */: {  /* funcargs -> constructor */\n            constructor(ls, args);\n            break;\n        }\n        case R.TK_STRING: {  /* funcargs -> STRING */\n            codestring(ls, args, ls.t.seminfo.ts);\n            llex.luaX_next(ls);  /* must use 'seminfo' before 'next' */\n            break;\n        }\n        default: {\n            llex.luaX_syntaxerror(ls, to_luastring(\"function arguments expected\", true));\n        }\n    }\n    lua_assert(f.k === expkind.VNONRELOC);\n    let nparams;\n    let base = f.u.info;  /* base register for call */\n    if (hasmultret(args.k))\n        nparams = LUA_MULTRET;  /* open call */\n    else {\n        if (args.k !== expkind.VVOID)\n            luaK_exp2nextreg(fs, args);  /* close last argument */\n        nparams = fs.freereg - (base+1);\n    }\n    init_exp(f, expkind.VCALL, luaK_codeABC(fs, OP_CALL, base, nparams+1, 2));\n    luaK_fixline(fs, line);\n    fs.freereg = base + 1; /* call remove function and arguments and leaves (unless changed) one result */\n};\n\n/*\n** {======================================================================\n** Expression parsing\n** =======================================================================\n*/\n\nconst primaryexp = function(ls, v) {\n    /* primaryexp -> NAME | '(' expr ')' */\n    switch (ls.t.token) {\n        case 40 /* ('(').charCodeAt(0) */: {\n            let line = ls.linenumber;\n            llex.luaX_next(ls);\n            expr(ls, v);\n            check_match(ls, 41 /* (')').charCodeAt(0) */, 40 /* ('(').charCodeAt(0) */, line);\n            luaK_dischargevars(ls.fs, v);\n            return;\n        }\n        case R.TK_NAME: {\n            singlevar(ls, v);\n            return;\n        }\n        default: {\n            llex.luaX_syntaxerror(ls, to_luastring(\"unexpected symbol\", true));\n        }\n    }\n};\n\nconst suffixedexp = function(ls, v) {\n    /* suffixedexp ->\n       primaryexp { '.' NAME | '[' exp ']' | ':' NAME funcargs | funcargs } */\n    let fs = ls.fs;\n    let line = ls.linenumber;\n    primaryexp(ls, v);\n    for (;;) {\n        switch (ls.t.token) {\n            case 46 /* ('.').charCodeAt(0) */: {  /* fieldsel */\n                fieldsel(ls, v);\n                break;\n            }\n            case 91 /* ('[').charCodeAt(0) */: {  /* '[' exp1 ']' */\n                let key = new expdesc();\n                luaK_exp2anyregup(fs, v);\n                yindex(ls, key);\n                luaK_indexed(fs, v, key);\n                break;\n            }\n            case 58 /* (':').charCodeAt(0) */: {  /* ':' NAME funcargs */\n                let key = new expdesc();\n                llex.luaX_next(ls);\n                checkname(ls, key);\n                luaK_self(fs, v, key);\n                funcargs(ls, v, line);\n                break;\n            }\n            case 40 /* ('(').charCodeAt(0) */: case R.TK_STRING: case 123 /* ('{').charCodeAt(0) */: {  /* funcargs */\n                luaK_exp2nextreg(fs, v);\n                funcargs(ls, v, line);\n                break;\n            }\n            default: return;\n        }\n    }\n};\n\nconst simpleexp = function(ls, v) {\n    /* simpleexp -> FLT | INT | STRING | NIL | TRUE | FALSE | ... |\n       constructor | FUNCTION body | suffixedexp */\n    switch (ls.t.token) {\n        case R.TK_FLT: {\n            init_exp(v, expkind.VKFLT, 0);\n            v.u.nval = ls.t.seminfo.r;\n            break;\n        }\n        case R.TK_INT: {\n            init_exp(v, expkind.VKINT, 0);\n            v.u.ival = ls.t.seminfo.i;\n            break;\n        }\n        case R.TK_STRING: {\n            codestring(ls, v, ls.t.seminfo.ts);\n            break;\n        }\n        case R.TK_NIL: {\n            init_exp(v, expkind.VNIL, 0);\n            break;\n        }\n        case R.TK_TRUE: {\n            init_exp(v, expkind.VTRUE, 0);\n            break;\n        }\n        case R.TK_FALSE: {\n            init_exp(v, expkind.VFALSE, 0);\n            break;\n        }\n        case R.TK_DOTS: {  /* vararg */\n            let fs = ls.fs;\n            check_condition(ls, fs.f.is_vararg, to_luastring(\"cannot use '...' outside a vararg function\", true));\n            init_exp(v, expkind.VVARARG, luaK_codeABC(fs, OP_VARARG, 0, 1, 0));\n            break;\n        }\n        case 123 /* ('{').charCodeAt(0) */: {  /* constructor */\n            constructor(ls, v);\n            return;\n        }\n        case R.TK_FUNCTION: {\n            llex.luaX_next(ls);\n            body(ls, v, 0, ls.linenumber);\n            return;\n        }\n        default: {\n            suffixedexp(ls, v);\n            return;\n        }\n    }\n    llex.luaX_next(ls);\n};\n\nconst getunopr = function(op) {\n    switch (op) {\n        case R.TK_NOT: return OPR_NOT;\n        case 45 /* ('-').charCodeAt(0) */: return OPR_MINUS;\n        case 126 /* ('~').charCodeAt(0) */: return OPR_BNOT;\n        case 35 /* ('#').charCodeAt(0) */: return OPR_LEN;\n        default: return OPR_NOUNOPR;\n    }\n};\n\nconst getbinopr = function(op) {\n    switch (op) {\n        case 43 /* ('+').charCodeAt(0) */: return OPR_ADD;\n        case 45 /* ('-').charCodeAt(0) */: return OPR_SUB;\n        case 42 /* ('*').charCodeAt(0) */: return OPR_MUL;\n        case 37 /* ('%').charCodeAt(0) */: return OPR_MOD;\n        case 94 /* ('^').charCodeAt(0) */: return OPR_POW;\n        case 47 /* ('/').charCodeAt(0) */: return OPR_DIV;\n        case R.TK_IDIV:   return OPR_IDIV;\n        case 38 /* ('&').charCodeAt(0) */: return OPR_BAND;\n        case 124 /* ('|').charCodeAt(0) */: return OPR_BOR;\n        case 126 /* ('~').charCodeAt(0) */: return OPR_BXOR;\n        case R.TK_SHL:    return OPR_SHL;\n        case R.TK_SHR:    return OPR_SHR;\n        case R.TK_CONCAT: return OPR_CONCAT;\n        case R.TK_NE:     return OPR_NE;\n        case R.TK_EQ:     return OPR_EQ;\n        case 60 /* ('<').charCodeAt(0) */: return OPR_LT;\n        case R.TK_LE:     return OPR_LE;\n        case 62 /* ('>').charCodeAt(0) */: return OPR_GT;\n        case R.TK_GE:     return OPR_GE;\n        case R.TK_AND:    return OPR_AND;\n        case R.TK_OR:     return OPR_OR;\n        default:          return OPR_NOBINOPR;\n    }\n};\n\nconst priority = [  /* ORDER OPR */\n    {left: 10, right: 10}, {left: 10, right: 10},     /* '+' '-' */\n    {left: 11, right: 11}, {left: 11, right: 11},     /* '*' '%' */\n    {left: 14, right: 13},               /* '^' (right associative) */\n    {left: 11, right: 11}, {left: 11, right: 11},     /* '/' '//' */\n    {left: 6, right: 6}, {left: 4, right: 4}, {left: 5, right: 5}, /* '&' '|' '~' */\n    {left: 7, right: 7}, {left: 7, right: 7},         /* '<<' '>>' */\n    {left: 9, right: 8},                 /* '..' (right associative) */\n    {left: 3, right: 3}, {left: 3, right: 3}, {left: 3, right: 3}, /* ==, <, <= */\n    {left: 3, right: 3}, {left: 3, right: 3}, {left: 3, right: 3}, /* ~=, >, >= */\n    {left: 2, right: 2}, {left: 1, right: 1}          /* and, or */\n];\n\nconst UNARY_PRIORITY = 12;\n\n/*\n** subexpr -> (simpleexp | unop subexpr) { binop subexpr }\n** where 'binop' is any binary operator with a priority higher than 'limit'\n*/\nconst subexpr = function(ls, v, limit) {\n    enterlevel(ls);\n    let uop = getunopr(ls.t.token);\n    if (uop !== OPR_NOUNOPR) {\n        let line = ls.linenumber;\n        llex.luaX_next(ls);\n        subexpr(ls, v, UNARY_PRIORITY);\n        luaK_prefix(ls.fs, uop, v, line);\n    } else\n        simpleexp(ls, v);\n    /* expand while operators have priorities higher than 'limit' */\n    let op = getbinopr(ls.t.token);\n    while (op !== OPR_NOBINOPR && priority[op].left > limit) {\n        let v2 = new expdesc();\n        let line = ls.linenumber;\n        llex.luaX_next(ls);\n        luaK_infix(ls.fs, op, v);\n        /* read sub-expression with higher priority */\n        let nextop = subexpr(ls, v2, priority[op].right);\n        luaK_posfix(ls.fs, op, v, v2, line);\n        op = nextop;\n    }\n    leavelevel(ls);\n    return op;  /* return first untreated operator */\n};\n\nconst expr = function(ls, v) {\n    subexpr(ls, v, 0);\n};\n\n/* }==================================================================== */\n\n\n\n/*\n** {======================================================================\n** Rules for Statements\n** =======================================================================\n*/\n\nconst block = function(ls) {\n    /* block -> statlist */\n    let fs = ls.fs;\n    let bl = new BlockCnt();\n    enterblock(fs, bl, 0);\n    statlist(ls);\n    leaveblock(fs);\n};\n\n/*\n** structure to chain all variables in the left-hand side of an\n** assignment\n*/\nclass LHS_assign {\n    constructor() {\n        this.prev = null;\n        this.v = new expdesc();  /* variable (global, local, upvalue, or indexed) */\n    }\n}\n\n/*\n** check whether, in an assignment to an upvalue/local variable, the\n** upvalue/local variable is begin used in a previous assignment to a\n** table. If so, save original upvalue/local value in a safe place and\n** use this safe copy in the previous assignment.\n*/\nconst check_conflict = function(ls, lh, v) {\n    let fs = ls.fs;\n    let extra = fs.freereg;  /* eventual position to save local variable */\n    let conflict = false;\n    for (; lh; lh = lh.prev) {  /* check all previous assignments */\n        if (lh.v.k === expkind.VINDEXED) {  /* assigning to a table? */\n            /* table is the upvalue/local being assigned now? */\n            if (lh.v.u.ind.vt === v.k && lh.v.u.ind.t === v.u.info) {\n                conflict = true;\n                lh.v.u.ind.vt = expkind.VLOCAL;\n                lh.v.u.ind.t = extra;  /* previous assignment will use safe copy */\n            }\n            /* index is the local being assigned? (index cannot be upvalue) */\n            if (v.k === expkind.VLOCAL && lh.v.u.ind.idx === v.u.info) {\n                conflict = true;\n                lh.v.u.ind.idx = extra;  /* previous assignment will use safe copy */\n            }\n        }\n    }\n    if (conflict) {\n        /* copy upvalue/local value to a temporary (in position 'extra') */\n        let op = v.k === expkind.VLOCAL ? OP_MOVE : OP_GETUPVAL;\n        luaK_codeABC(fs, op, extra, v.u.info, 0);\n        luaK_reserveregs(fs, 1);\n    }\n};\n\nconst assignment = function(ls, lh, nvars) {\n    let e = new expdesc();\n    check_condition(ls, vkisvar(lh.v.k), to_luastring(\"syntax error\", true));\n    if (testnext(ls, 44 /* (',').charCodeAt(0) */)) {  /* assignment -> ',' suffixedexp assignment */\n        let nv = new LHS_assign();\n        nv.prev = lh;\n        suffixedexp(ls, nv.v);\n        if (nv.v.k !== expkind.VINDEXED)\n            check_conflict(ls, lh, nv.v);\n        checklimit(ls.fs, nvars + ls.L.nCcalls, LUAI_MAXCCALLS, to_luastring(\"JS levels\", true));\n        assignment(ls, nv, nvars + 1);\n    } else {  /* assignment -> '=' explist */\n        checknext(ls, 61 /* ('=').charCodeAt(0) */);\n        let nexps = explist(ls, e);\n        if (nexps !== nvars)\n            adjust_assign(ls, nvars, nexps, e);\n        else {\n            luaK_setoneret(ls.fs, e);  /* close last expression */\n            luaK_storevar(ls.fs, lh.v, e);\n            return;  /* avoid default */\n        }\n    }\n    init_exp(e, expkind.VNONRELOC, ls.fs.freereg-1);  /* default assignment */\n    luaK_storevar(ls.fs, lh.v, e);\n};\n\nconst cond = function(ls) {\n    /* cond -> exp */\n    let v = new expdesc();\n    expr(ls, v);  /* read condition */\n    if (v.k === expkind.VNIL) v.k = expkind.VFALSE;  /* 'falses' are all equal here */\n    luaK_goiftrue(ls.fs, v);\n    return v.f;\n};\n\nconst gotostat = function(ls, pc) {\n    let line = ls.linenumber;\n    let label;\n    if (testnext(ls, R.TK_GOTO))\n        label = str_checkname(ls);\n    else {\n        llex.luaX_next(ls);  /* skip break */\n        label = luaS_newliteral(ls.L, \"break\");\n    }\n    let g = newlabelentry(ls, ls.dyd.gt, label, line, pc);\n    findlabel(ls, g);  /* close it if label already defined */\n};\n\n/* check for repeated labels on the same block */\nconst checkrepeated = function(fs, ll, label) {\n    for (let i = fs.bl.firstlabel; i < ll.n; i++) {\n        if (eqstr(label, ll.arr[i].name)) {\n            let msg = lobject.luaO_pushfstring(fs.ls.L,\n                to_luastring(\"label '%s' already defined on line %d\", true),\n                label.getstr(), ll.arr[i].line);\n            semerror(fs.ls, msg);\n        }\n    }\n};\n\n/* skip no-op statements */\nconst skipnoopstat = function(ls) {\n    while (ls.t.token === 59 /* (';').charCodeAt(0) */ || ls.t.token === R.TK_DBCOLON)\n        statement(ls);\n};\n\nconst labelstat = function(ls, label, line) {\n    /* label -> '::' NAME '::' */\n    let fs = ls.fs;\n    let ll = ls.dyd.label;\n    let l;  /* index of new label being created */\n    checkrepeated(fs, ll, label);  /* check for repeated labels */\n    checknext(ls, R.TK_DBCOLON);  /* skip double colon */\n    /* create new entry for this label */\n    l = newlabelentry(ls, ll, label, line, luaK_getlabel(fs));\n    skipnoopstat(ls);  /* skip other no-op statements */\n    if (block_follow(ls, 0)) {  /* label is last no-op statement in the block? */\n        /* assume that locals are already out of scope */\n        ll.arr[l].nactvar = fs.bl.nactvar;\n    }\n    findgotos(ls, ll.arr[l]);\n};\n\nconst whilestat = function(ls, line) {\n    /* whilestat -> WHILE cond DO block END */\n    let fs = ls.fs;\n    let bl = new BlockCnt();\n    llex.luaX_next(ls);  /* skip WHILE */\n    let whileinit = luaK_getlabel(fs);\n    let condexit = cond(ls);\n    enterblock(fs, bl, 1);\n    checknext(ls, R.TK_DO);\n    block(ls);\n    luaK_jumpto(fs, whileinit);\n    check_match(ls, R.TK_END, R.TK_WHILE, line);\n    leaveblock(fs);\n    luaK_patchtohere(fs, condexit);  /* false conditions finish the loop */\n};\n\nconst repeatstat = function(ls, line) {\n    /* repeatstat -> REPEAT block UNTIL cond */\n    let fs = ls.fs;\n    let repeat_init = luaK_getlabel(fs);\n    let bl1 = new BlockCnt();\n    let bl2 = new BlockCnt();\n    enterblock(fs, bl1, 1);  /* loop block */\n    enterblock(fs, bl2, 0);  /* scope block */\n    llex.luaX_next(ls);  /* skip REPEAT */\n    statlist(ls);\n    check_match(ls, R.TK_UNTIL, R.TK_REPEAT, line);\n    let condexit = cond(ls);  /* read condition (inside scope block) */\n    if (bl2.upval)  /* upvalues? */\n        luaK_patchclose(fs, condexit, bl2.nactvar);\n    leaveblock(fs);  /* finish scope */\n    luaK_patchlist(fs, condexit, repeat_init);  /* close the loop */\n    leaveblock(fs);  /* finish loop */\n};\n\nconst exp1 = function(ls) {\n    let e = new expdesc();\n    expr(ls, e);\n    luaK_exp2nextreg(ls.fs, e);\n    lua_assert(e.k === expkind.VNONRELOC);\n    let reg = e.u.info;\n    return reg;\n};\n\nconst forbody = function(ls, base, line, nvars, isnum) {\n    /* forbody -> DO block */\n    let bl = new BlockCnt();\n    let fs = ls.fs;\n    let endfor;\n    adjustlocalvars(ls, 3);  /* control variables */\n    checknext(ls, R.TK_DO);\n    let prep = isnum ? luaK_codeAsBx(fs, OP_FORPREP, base, NO_JUMP) : luaK_jump(fs);\n    enterblock(fs, bl, 0);  /* scope for declared variables */\n    adjustlocalvars(ls, nvars);\n    luaK_reserveregs(fs, nvars);\n    block(ls);\n    leaveblock(fs);  /* end of scope for declared variables */\n    luaK_patchtohere(fs, prep);\n    if (isnum)  /* end of scope for declared variables */\n        endfor = luaK_codeAsBx(fs, OP_FORLOOP, base, NO_JUMP);\n    else {  /* generic for */\n        luaK_codeABC(fs, OP_TFORCALL, base, 0, nvars);\n        luaK_fixline(fs, line);\n        endfor = luaK_codeAsBx(fs, OP_TFORLOOP, base + 2, NO_JUMP);\n    }\n    luaK_patchlist(fs, endfor, prep + 1);\n    luaK_fixline(fs, line);\n};\n\nconst fornum = function(ls, varname, line) {\n    /* fornum -> NAME = exp1,exp1[,exp1] forbody */\n    let fs = ls.fs;\n    let base = fs.freereg;\n    new_localvarliteral(ls, \"(for index)\");\n    new_localvarliteral(ls, \"(for limit)\");\n    new_localvarliteral(ls, \"(for step)\");\n    new_localvar(ls, varname);\n    checknext(ls, 61 /* ('=').charCodeAt(0) */);\n    exp1(ls);  /* initial value */\n    checknext(ls, 44 /* (',').charCodeAt(0) */);\n    exp1(ls);  /* limit */\n    if (testnext(ls, 44 /* (',').charCodeAt(0) */))\n        exp1(ls);  /* optional step */\n    else {  /* default step = 1 */\n        luaK_codek(fs, fs.freereg, luaK_intK(fs, 1));\n        luaK_reserveregs(fs, 1);\n    }\n    forbody(ls, base, line, 1, 1);\n};\n\nconst forlist = function(ls, indexname) {\n    /* forlist -> NAME {,NAME} IN explist forbody */\n    let fs = ls.fs;\n    let e = new expdesc();\n    let nvars = 4;  /* gen, state, control, plus at least one declared var */\n    let base = fs.freereg;\n    /* create control variables */\n    new_localvarliteral(ls, \"(for generator)\");\n    new_localvarliteral(ls, \"(for state)\");\n    new_localvarliteral(ls, \"(for control)\");\n    /* create declared variables */\n    new_localvar(ls, indexname);\n    while (testnext(ls, 44 /* (',').charCodeAt(0) */)) {\n        new_localvar(ls, str_checkname(ls));\n        nvars++;\n    }\n    checknext(ls, R.TK_IN);\n    let line = ls.linenumber;\n    adjust_assign(ls, 3, explist(ls, e), e);\n    luaK_checkstack(fs, 3);  /* extra space to call generator */\n    forbody(ls, base, line, nvars - 3, 0);\n};\n\nconst forstat = function(ls, line) {\n    /* forstat -> FOR (fornum | forlist) END */\n    let fs = ls.fs;\n    let bl = new BlockCnt();\n    enterblock(fs, bl, 1);  /* scope for loop and control variables */\n    llex.luaX_next(ls);  /* skip 'for' */\n    let varname = str_checkname(ls);  /* first variable name */\n    switch (ls.t.token) {\n        case 61 /* ('=').charCodeAt(0) */: fornum(ls, varname, line); break;\n        case 44 /* (',').charCodeAt(0) */: case R.TK_IN: forlist(ls, varname); break;\n        default: llex.luaX_syntaxerror(ls, to_luastring(\"'=' or 'in' expected\", true));\n    }\n    check_match(ls, R.TK_END, R.TK_FOR, line);\n    leaveblock(fs);  /* loop scope ('break' jumps to this point) */\n};\n\nconst test_then_block = function(ls, escapelist) {\n    /* test_then_block -> [IF | ELSEIF] cond THEN block */\n    let bl = new BlockCnt();\n    let fs = ls.fs;\n    let v = new expdesc();\n    let jf;  /* instruction to skip 'then' code (if condition is false) */\n\n    llex.luaX_next(ls);  /* skip IF or ELSEIF */\n    expr(ls, v);  /* read condition */\n    checknext(ls, R.TK_THEN);\n\n    if (ls.t.token === R.TK_GOTO || ls.t.token === R.TK_BREAK) {\n        luaK_goiffalse(ls.fs, v);  /* will jump to label if condition is true */\n        enterblock(fs, bl, false);  /* must enter block before 'goto' */\n        gotostat(ls, v.t);   /* handle goto/break */\n        while (testnext(ls, 59 /* (';').charCodeAt(0) */));  /* skip colons */\n        if (block_follow(ls, 0)) {  /* 'goto' is the entire block? */\n            leaveblock(fs);\n            return escapelist;  /* and that is it */\n        } else  /* must skip over 'then' part if condition is false */\n            jf = luaK_jump(fs);\n    } else {  /* regular case (not goto/break) */\n        luaK_goiftrue(ls.fs, v);  /* skip over block if condition is false */\n        enterblock(fs, bl, false);\n        jf = v.f;\n    }\n\n    statlist(ls);  /* 'then' part */\n    leaveblock(fs);\n    if (ls.t.token === R.TK_ELSE || ls.t.token === R.TK_ELSEIF)  /* followed by 'else'/'elseif'? */\n        escapelist = luaK_concat(fs, escapelist, luaK_jump(fs));  /* must jump over it */\n    luaK_patchtohere(fs, jf);\n\n    return escapelist;\n};\n\nconst ifstat = function(ls, line) {\n    /* ifstat -> IF cond THEN block {ELSEIF cond THEN block} [ELSE block] END */\n    let fs = ls.fs;\n    let escapelist = NO_JUMP;  /* exit list for finished parts */\n    escapelist = test_then_block(ls, escapelist);  /* IF cond THEN block */\n    while (ls.t.token === R.TK_ELSEIF)\n        escapelist = test_then_block(ls, escapelist);  /* ELSEIF cond THEN block */\n    if (testnext(ls, R.TK_ELSE))\n        block(ls);  /* 'else' part */\n    check_match(ls, R.TK_END, R.TK_IF, line);\n    luaK_patchtohere(fs, escapelist);  /* patch escape list to 'if' end */\n};\n\nconst localfunc = function(ls) {\n    let b = new expdesc();\n    let fs = ls.fs;\n    new_localvar(ls, str_checkname(ls));  /* new local variable */\n    adjustlocalvars(ls, 1);  /* enter its scope */\n    body(ls, b, 0, ls.linenumber);  /* function created in next register */\n    /* debug information will only see the variable after this point! */\n    getlocvar(fs, b.u.info).startpc = fs.pc;\n};\n\nconst localstat = function(ls) {\n    /* stat -> LOCAL NAME {',' NAME} ['=' explist] */\n    let nvars = 0;\n    let nexps;\n    let e = new expdesc();\n    do {\n        new_localvar(ls, str_checkname(ls));\n        nvars++;\n    } while (testnext(ls, 44 /* (',').charCodeAt(0) */));\n    if (testnext(ls, 61 /* ('=').charCodeAt(0) */))\n        nexps = explist(ls, e);\n    else {\n        e.k = expkind.VVOID;\n        nexps = 0;\n    }\n    adjust_assign(ls, nvars, nexps, e);\n    adjustlocalvars(ls, nvars);\n};\n\nconst funcname = function(ls, v) {\n    /* funcname -> NAME {fieldsel} [':' NAME] */\n    let ismethod = 0;\n    singlevar(ls, v);\n    while (ls.t.token === 46 /* ('.').charCodeAt(0) */)\n        fieldsel(ls, v);\n    if (ls.t.token === 58 /* (':').charCodeAt(0) */) {\n        ismethod = 1;\n        fieldsel(ls, v);\n    }\n    return ismethod;\n};\n\nconst funcstat = function(ls, line) {\n    /* funcstat -> FUNCTION funcname body */\n    let v = new expdesc();\n    let b = new expdesc();\n    llex.luaX_next(ls);  /* skip FUNCTION */\n    let ismethod = funcname(ls, v);\n    body(ls, b, ismethod, line);\n    luaK_storevar(ls.fs, v, b);\n    luaK_fixline(ls.fs, line);  /* definition \"happens\" in the first line */\n};\n\nconst exprstat= function(ls) {\n    /* stat -> func | assignment */\n    let fs = ls.fs;\n    let v = new LHS_assign();\n    suffixedexp(ls, v.v);\n    if (ls.t.token === 61 /* ('=').charCodeAt(0) */ || ls.t.token === 44 /* (',').charCodeAt(0) */) { /* stat . assignment ? */\n        v.prev = null;\n        assignment(ls, v, 1);\n    }\n    else {  /* stat -> func */\n        check_condition(ls, v.v.k === expkind.VCALL, to_luastring(\"syntax error\", true));\n        SETARG_C(getinstruction(fs, v.v), 1);  /* call statement uses no results */\n    }\n};\n\nconst retstat = function(ls) {\n    /* stat -> RETURN [explist] [';'] */\n    let fs = ls.fs;\n    let e = new expdesc();\n    let first, nret;  /* registers with returned values */\n    if (block_follow(ls, 1) || ls.t.token === 59 /* (';').charCodeAt(0) */)\n        first = nret = 0;  /* return no values */\n    else {\n        nret = explist(ls, e);  /* optional return values */\n        if (hasmultret(e.k)) {\n            luaK_setmultret(fs, e);\n            if (e.k === expkind.VCALL && nret === 1) {  /* tail call? */\n                SET_OPCODE(getinstruction(fs, e), OP_TAILCALL);\n                lua_assert(getinstruction(fs, e).A === fs.nactvar);\n            }\n            first = fs.nactvar;\n            nret = LUA_MULTRET;  /* return all values */\n        } else {\n            if (nret === 1)  /* only one single value? */\n                first = luaK_exp2anyreg(fs, e);\n            else {\n                luaK_exp2nextreg(fs, e);  /* values must go to the stack */\n                first = fs.nactvar;  /* return all active values */\n                lua_assert(nret === fs.freereg - first);\n            }\n        }\n    }\n    luaK_ret(fs, first, nret);\n    testnext(ls, 59 /* (';').charCodeAt(0) */);  /* skip optional semicolon */\n};\n\nconst statement = function(ls) {\n    let line = ls.linenumber;  /* may be needed for error messages */\n    enterlevel(ls);\n    switch(ls.t.token) {\n        case 59 /* (';').charCodeAt(0) */: {  /* stat -> ';' (empty statement) */\n            llex.luaX_next(ls);  /* skip ';' */\n            break;\n        }\n        case R.TK_IF: {  /* stat -> ifstat */\n            ifstat(ls, line);\n            break;\n        }\n        case R.TK_WHILE: {  /* stat -> whilestat */\n            whilestat(ls, line);\n            break;\n        }\n        case R.TK_DO: {  /* stat -> DO block END */\n            llex.luaX_next(ls);  /* skip DO */\n            block(ls);\n            check_match(ls, R.TK_END, R.TK_DO, line);\n            break;\n        }\n        case R.TK_FOR: {  /* stat -> forstat */\n            forstat(ls, line);\n            break;\n        }\n        case R.TK_REPEAT: {  /* stat -> repeatstat */\n            repeatstat(ls, line);\n            break;\n        }\n        case R.TK_FUNCTION: {  /* stat -> funcstat */\n            funcstat(ls, line);\n            break;\n        }\n        case R.TK_LOCAL: {  /* stat -> localstat */\n            llex.luaX_next(ls);  /* skip LOCAL */\n            if (testnext(ls, R.TK_FUNCTION))  /* local function? */\n                localfunc(ls);\n            else\n                localstat(ls);\n            break;\n        }\n        case R.TK_DBCOLON: {  /* stat -> label */\n            llex.luaX_next(ls);  /* skip double colon */\n            labelstat(ls, str_checkname(ls), line);\n            break;\n        }\n        case R.TK_RETURN: {  /* skip double colon */\n            llex.luaX_next(ls);  /* skip RETURN */\n            retstat(ls);\n            break;\n        }\n        case R.TK_BREAK:   /* stat -> breakstat */\n        case R.TK_GOTO: {  /* stat -> 'goto' NAME */\n            gotostat(ls, luaK_jump(ls.fs));\n            break;\n        }\n        default: {  /* stat -> func | assignment */\n            exprstat(ls);\n            break;\n        }\n    }\n    lua_assert(ls.fs.f.maxstacksize >= ls.fs.freereg && ls.fs.freereg >= ls.fs.nactvar);\n    ls.fs.freereg = ls.fs.nactvar;  /* free registers */\n    leavelevel(ls);\n};\n\n/*\n** compiles the main function, which is a regular vararg function with an\n** upvalue named LUA_ENV\n*/\nconst mainfunc = function(ls, fs) {\n    let bl = new BlockCnt();\n    let v = new expdesc();\n    open_func(ls, fs, bl);\n    fs.f.is_vararg = true;  /* main function is always declared vararg */\n    init_exp(v, expkind.VLOCAL, 0);  /* create and... */\n    newupvalue(fs, ls.envn, v);  /* ...set environment upvalue */\n    llex.luaX_next(ls);  /* read first token */\n    statlist(ls);  /* parse main body */\n    check(ls, R.TK_EOS);\n    close_func(ls);\n};\n\nconst luaY_parser = function(L, z, buff, dyd, name, firstchar) {\n    let lexstate = new llex.LexState();\n    let funcstate = new FuncState();\n    let cl = lfunc.luaF_newLclosure(L, 1);  /* create main closure */\n    ldo.luaD_inctop(L);\n    L.stack[L.top-1].setclLvalue(cl);\n    lexstate.h = ltable.luaH_new(L);  /* create table for scanner */\n    ldo.luaD_inctop(L);\n    L.stack[L.top-1].sethvalue(lexstate.h);\n    funcstate.f = cl.p = new Proto(L);\n    funcstate.f.source = luaS_new(L, name);\n    lexstate.buff = buff;\n    lexstate.dyd = dyd;\n    dyd.actvar.n = dyd.gt.n = dyd.label.n = 0;\n    llex.luaX_setinput(L, lexstate, z, funcstate.f.source, firstchar);\n    mainfunc(lexstate, funcstate);\n    lua_assert(!funcstate.prev && funcstate.nups === 1 && !lexstate.fs);\n    /* all scopes should be correctly finished */\n    lua_assert(dyd.actvar.n === 0 && dyd.gt.n === 0 && dyd.label.n === 0);\n    delete L.stack[--L.top];  /* remove scanner's table */\n    return cl;  /* closure is on the stack, too */\n};\n\n\nmodule.exports.Dyndata     = Dyndata;\nmodule.exports.expkind     = expkind;\nmodule.exports.expdesc     = expdesc;\nmodule.exports.luaY_parser = luaY_parser;\nmodule.exports.vkisinreg   = vkisinreg;\n","\"use strict\";\n\nconst {\n    LUA_MINSTACK,\n    LUA_RIDX_GLOBALS,\n    LUA_RIDX_MAINTHREAD,\n    constant_types: {\n        LUA_NUMTAGS,\n        LUA_TNIL,\n        LUA_TTABLE,\n        LUA_TTHREAD\n    },\n    thread_status: {\n        LUA_OK\n    }\n} = require('./defs.js');\nconst lobject              = require('./lobject.js');\nconst ldo                  = require('./ldo.js');\nconst lapi                 = require('./lapi.js');\nconst ltable               = require('./ltable.js');\nconst ltm                  = require('./ltm.js');\n\nconst EXTRA_STACK = 5;\n\nconst BASIC_STACK_SIZE = 2 * LUA_MINSTACK;\n\nclass CallInfo {\n\n    constructor() {\n        this.func = null;\n        this.funcOff = NaN;\n        this.top = NaN;\n        this.previous = null;\n        this.next = null;\n\n        /* only for Lua functions */\n        this.l_base = NaN; /* base for this function */\n        this.l_code = null; /* reference to this.func.p.code */\n        this.l_savedpc = NaN; /* offset into l_code */\n        /* only for JS functions */\n        this.c_k = null;  /* continuation in case of yields */\n        this.c_old_errfunc = null;\n        this.c_ctx = null;  /* context info. in case of yields */\n\n        this.nresults = NaN;\n        this.callstatus = NaN;\n    }\n\n}\n\nclass lua_State {\n\n    constructor(g) {\n        this.id = g.id_counter++;\n\n        this.base_ci = new CallInfo(); /* CallInfo for first level (C calling Lua) */\n        this.top = NaN; /* first free slot in the stack */\n        this.stack_last = NaN; /* last free slot in the stack */\n        this.oldpc = NaN; /* last pc traced */\n\n        /* preinit_thread */\n        this.l_G = g;\n        this.stack = null;\n        this.ci = null;\n        this.errorJmp = null;\n        this.nCcalls = 0;\n        this.hook = null;\n        this.hookmask = 0;\n        this.basehookcount = 0;\n        this.allowhook = 1;\n        this.hookcount = this.basehookcount;\n        this.nny = 1;\n        this.status = LUA_OK;\n        this.errfunc = 0;\n    }\n\n}\n\nclass global_State {\n\n    constructor() {\n        this.id_counter = 1; /* used to give objects unique ids */\n        this.ids = new WeakMap();\n\n        this.mainthread = null;\n        this.l_registry = new lobject.TValue(LUA_TNIL, null);\n        this.panic = null;\n        this.atnativeerror = null;\n        this.version = null;\n        this.tmname = new Array(ltm.TMS.TM_N);\n        this.mt = new Array(LUA_NUMTAGS);\n    }\n\n}\n\nconst luaE_extendCI = function(L) {\n    let ci = new CallInfo();\n    L.ci.next = ci;\n    ci.previous = L.ci;\n    ci.next = null;\n    L.ci = ci;\n    return ci;\n};\n\nconst luaE_freeCI = function(L) {\n    let ci = L.ci;\n    ci.next = null;\n};\n\nconst stack_init = function(L1, L) {\n    L1.stack = new Array(BASIC_STACK_SIZE);\n    L1.top = 0;\n    L1.stack_last = BASIC_STACK_SIZE - EXTRA_STACK;\n    /* initialize first ci */\n    let ci = L1.base_ci;\n    ci.next = ci.previous = null;\n    ci.callstatus = 0;\n    ci.funcOff = L1.top;\n    ci.func = L1.stack[L1.top];\n    L1.stack[L1.top++] = new lobject.TValue(LUA_TNIL, null);\n    ci.top = L1.top + LUA_MINSTACK;\n    L1.ci = ci;\n};\n\nconst freestack = function(L) {\n    L.ci = L.base_ci;\n    luaE_freeCI(L);\n    L.stack = null;\n};\n\n/*\n** Create registry table and its predefined values\n*/\nconst init_registry = function(L, g) {\n    let registry = ltable.luaH_new(L);\n    g.l_registry.sethvalue(registry);\n    ltable.luaH_setint(registry, LUA_RIDX_MAINTHREAD, new lobject.TValue(LUA_TTHREAD, L));\n    ltable.luaH_setint(registry, LUA_RIDX_GLOBALS, new lobject.TValue(LUA_TTABLE, ltable.luaH_new(L)));\n};\n\n/*\n** open parts of the state that may cause memory-allocation errors.\n** ('g->version' !== NULL flags that the state was completely build)\n*/\nconst f_luaopen = function(L) {\n    let g = L.l_G;\n    stack_init(L, L);\n    init_registry(L, g);\n    ltm.luaT_init(L);\n    g.version = lapi.lua_version(null);\n};\n\nconst lua_newthread = function(L) {\n    let g = L.l_G;\n    let L1 = new lua_State(g);\n    L.stack[L.top] = new lobject.TValue(LUA_TTHREAD, L1);\n    lapi.api_incr_top(L);\n    L1.hookmask = L.hookmask;\n    L1.basehookcount = L.basehookcount;\n    L1.hook = L.hook;\n    L1.hookcount = L1.basehookcount;\n    stack_init(L1, L);\n    return L1;\n};\n\nconst luaE_freethread = function(L, L1) {\n    freestack(L1);\n};\n\nconst lua_newstate = function() {\n    let g = new global_State();\n    let L = new lua_State(g);\n    g.mainthread = L;\n\n    if (ldo.luaD_rawrunprotected(L, f_luaopen, null) !== LUA_OK) {\n        L = null;\n    }\n\n    return L;\n};\n\nconst close_state = function(L) {\n    freestack(L);\n};\n\nconst lua_close = function(L) {\n    L = L.l_G.mainthread;  /* only the main thread can be closed */\n    close_state(L);\n};\n\nmodule.exports.lua_State       = lua_State;\nmodule.exports.CallInfo        = CallInfo;\nmodule.exports.CIST_OAH        = (1<<0);  /* original value of 'allowhook' */\nmodule.exports.CIST_LUA        = (1<<1);  /* call is running a Lua function */\nmodule.exports.CIST_HOOKED     = (1<<2);  /* call is running a debug hook */\nmodule.exports.CIST_FRESH      = (1<<3);  /* call is running on a fresh invocation of luaV_execute */\nmodule.exports.CIST_YPCALL     = (1<<4);  /* call is a yieldable protected call */\nmodule.exports.CIST_TAIL       = (1<<5);  /* call was tail called */\nmodule.exports.CIST_HOOKYIELD  = (1<<6);  /* last hook called yielded */\nmodule.exports.CIST_LEQ        = (1<<7);  /* using __lt for __le */\nmodule.exports.CIST_FIN        = (1<<8);   /* call is running a finalizer */\nmodule.exports.EXTRA_STACK     = EXTRA_STACK;\nmodule.exports.lua_close       = lua_close;\nmodule.exports.lua_newstate    = lua_newstate;\nmodule.exports.lua_newthread   = lua_newthread;\nmodule.exports.luaE_extendCI   = luaE_extendCI;\nmodule.exports.luaE_freeCI     = luaE_freeCI;\nmodule.exports.luaE_freethread = luaE_freethread;\n","\"use strict\";\n\nconst {\n    is_luastring,\n    luastring_eq,\n    luastring_from,\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require(\"./llimits.js\");\n\nclass TString {\n\n    constructor(L, str) {\n        this.hash = null;\n        this.realstring = str;\n    }\n\n    getstr() {\n        return this.realstring;\n    }\n\n    tsslen() {\n        return this.realstring.length;\n    }\n\n}\n\nconst luaS_eqlngstr = function(a, b) {\n    lua_assert(a instanceof TString);\n    lua_assert(b instanceof TString);\n    return a == b || luastring_eq(a.realstring, b.realstring);\n};\n\n/* converts strings (arrays) to a consistent map key\n   make sure this doesn't conflict with any of the anti-collision strategies in ltable */\nconst luaS_hash = function(str) {\n    lua_assert(is_luastring(str));\n    let len = str.length;\n    let s = \"|\";\n    for (let i=0; i<len; i++)\n        s += str[i].toString(16);\n    return s;\n};\n\nconst luaS_hashlongstr = function(ts) {\n    lua_assert(ts instanceof TString);\n    if(ts.hash === null) {\n        ts.hash = luaS_hash(ts.getstr());\n    }\n    return ts.hash;\n};\n\n/* variant that takes ownership of array */\nconst luaS_bless = function(L, str) {\n    lua_assert(str instanceof Uint8Array);\n    return new TString(L, str);\n};\n\n/* makes a copy */\nconst luaS_new = function(L, str) {\n    return luaS_bless(L, luastring_from(str));\n};\n\n/* takes a js string */\nconst luaS_newliteral = function(L, str) {\n    return luaS_bless(L, to_luastring(str));\n};\n\nmodule.exports.luaS_eqlngstr    = luaS_eqlngstr;\nmodule.exports.luaS_hash        = luaS_hash;\nmodule.exports.luaS_hashlongstr = luaS_hashlongstr;\nmodule.exports.luaS_bless       = luaS_bless;\nmodule.exports.luaS_new         = luaS_new;\nmodule.exports.luaS_newliteral  = luaS_newliteral;\nmodule.exports.TString          = TString;\n","\"use strict\";\n\nconst { sprintf } = require('sprintf-js');\n\nconst {\n    LUA_INTEGER_FMT,\n    LUA_INTEGER_FRMLEN,\n    LUA_MININTEGER,\n    LUA_NUMBER_FMT,\n    LUA_NUMBER_FRMLEN,\n    frexp,\n    lua_getlocaledecpoint\n} = require('./luaconf.js');\nconst {\n    LUA_TBOOLEAN,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TNUMBER,\n    LUA_TSTRING,\n    LUA_TTABLE,\n    lua_call,\n    lua_createtable,\n    lua_dump,\n    lua_gettable,\n    lua_gettop,\n    lua_isinteger,\n    lua_isstring,\n    lua_pop,\n    lua_pushcclosure,\n    lua_pushinteger,\n    lua_pushlightuserdata,\n    lua_pushliteral,\n    lua_pushlstring,\n    lua_pushnil,\n    lua_pushnumber,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_remove,\n    lua_setfield,\n    lua_setmetatable,\n    lua_settop,\n    lua_toboolean,\n    lua_tointeger,\n    lua_tonumber,\n    lua_tostring,\n    lua_touserdata,\n    lua_type,\n    lua_upvalueindex\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addchar,\n    luaL_addlstring,\n    luaL_addsize,\n    luaL_addstring,\n    luaL_addvalue,\n    luaL_argcheck,\n    luaL_argerror,\n    luaL_buffinit,\n    luaL_buffinitsize,\n    luaL_checkinteger,\n    luaL_checknumber,\n    luaL_checkstack,\n    luaL_checkstring,\n    luaL_checktype,\n    luaL_error,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_optstring,\n    luaL_prepbuffsize,\n    luaL_pushresult,\n    luaL_pushresultsize,\n    luaL_tolstring,\n    luaL_typename\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst {\n    luastring_eq,\n    luastring_indexOf,\n    to_jsstring,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nconst sL_ESC  = '%';\nconst L_ESC   = sL_ESC.charCodeAt(0);\n\n/*\n** maximum number of captures that a pattern can do during\n** pattern-matching. This limit is arbitrary, but must fit in\n** an unsigned char.\n*/\nconst LUA_MAXCAPTURES = 32;\n\n// (sizeof(size_t) < sizeof(int) ? MAX_SIZET : (size_t)(INT_MAX))\nconst MAXSIZE = 2147483647;\n\n/* Give natural (i.e. strings end at the first \\0) length of a string represented by an array of bytes */\nconst strlen = function(s) {\n    let len = luastring_indexOf(s, 0);\n    return len > -1 ? len : s.length;\n};\n\n/* translate a relative string position: negative means back from end */\nconst posrelat = function(pos, len) {\n    if (pos >= 0) return pos;\n    else if (0 - pos > len) return 0;\n    else return len + pos + 1;\n};\n\nconst str_sub = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let start = posrelat(luaL_checkinteger(L, 2), l);\n    let end = posrelat(luaL_optinteger(L, 3, -1), l);\n    if (start < 1) start = 1;\n    if (end > l) end = l;\n    if (start <= end)\n        lua_pushstring(L, s.subarray(start - 1, (start - 1) + (end - start + 1)));\n    else lua_pushliteral(L, \"\");\n    return 1;\n};\n\nconst str_len = function(L) {\n    lua_pushinteger(L, luaL_checkstring(L, 1).length);\n    return 1;\n};\n\nconst str_char = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    let b = new luaL_Buffer();\n    let p = luaL_buffinitsize(L, b, n);\n    for (let i = 1; i <= n; i++) {\n        let c = luaL_checkinteger(L, i);\n        luaL_argcheck(L, c >= 0 && c <= 255, \"value out of range\"); // Strings are 8-bit clean\n        p[i-1] = c;\n    }\n    luaL_pushresultsize(b, n);\n    return 1;\n};\n\nconst writer = function(L, b, size, B) {\n    luaL_addlstring(B, b, size);\n    return 0;\n};\n\nconst str_dump = function(L) {\n    let b = new luaL_Buffer();\n    let strip = lua_toboolean(L, 2);\n    luaL_checktype(L, 1, LUA_TFUNCTION);\n    lua_settop(L, 1);\n    luaL_buffinit(L, b);\n    if (lua_dump(L, writer, b, strip) !== 0)\n        return luaL_error(L, to_luastring(\"unable to dump given function\"));\n    luaL_pushresult(b);\n    return 1;\n};\n\nconst SIZELENMOD = LUA_NUMBER_FRMLEN.length + 1;\n\nconst L_NBFD = 1;\n\nconst num2straux = function(x) {\n    /* if 'inf' or 'NaN', format it like '%g' */\n    if (Object.is(x, Infinity))\n        return to_luastring('inf');\n    else if (Object.is(x, -Infinity))\n        return to_luastring('-inf');\n    else if (Number.isNaN(x))\n        return to_luastring('nan');\n    else if (x === 0) {  /* can be -0... */\n        /* create \"0\" or \"-0\" followed by exponent */\n        let zero = sprintf(LUA_NUMBER_FMT + \"x0p+0\", x);\n        if (Object.is(x, -0))\n            zero = \"-\" + zero;\n        return to_luastring(zero);\n    } else {\n        let buff = \"\";\n        let fe = frexp(x);  /* 'x' fraction and exponent */\n        let m = fe[0];\n        let e = fe[1];\n        if (m < 0) {  /* is number negative? */\n            buff += '-';  /* add signal */\n            m = -m;  /* make it positive */\n        }\n        buff += \"0x\";  /* add \"0x\" */\n        buff += (m * (1<<L_NBFD)).toString(16);\n        e -= L_NBFD;  /* this digit goes before the radix point */\n        buff += sprintf(\"p%+d\", e);  /* add exponent */\n        return to_luastring(buff);\n    }\n};\n\nconst lua_number2strx = function(L, fmt, x) {\n    let buff = num2straux(x);\n    if (fmt[SIZELENMOD] === 65 /* 'A'.charCodeAt(0) */) {\n        for (let i = 0; i < buff.length; i++) {\n            let c = buff[i];\n            if (c >= 97) /* toupper */\n                buff[i] = c & 0xdf;\n        }\n    } else if (fmt[SIZELENMOD] !== 97 /* 'a'.charCodeAt(0) */)\n        luaL_error(L, to_luastring(\"modifiers for format '%%a'/'%%A' not implemented\"));\n    return buff;\n};\n\n/*\n** Maximum size of each formatted item. This maximum size is produced\n** by format('%.99f', -maxfloat), and is equal to 99 + 3 ('-', '.',\n** and '\\0') + number of decimal digits to represent maxfloat (which\n** is maximum exponent + 1). (99+3+1 then rounded to 120 for \"extra\n** expenses\", such as locale-dependent stuff)\n*/\n// const MAX_ITEM   = 120;// TODO: + l_mathlim(MAX_10_EXP);\n\n\n/* valid flags in a format specification */\nconst FLAGS = to_luastring(\"-+ #0\");\n\n/*\n** maximum size of each format specification (such as \"%-099.99d\")\n*/\n// const MAX_FORMAT = 32;\n\nconst isalpha = e => (97 <= e && e <= 122) || (65 <= e && e <= 90);\nconst isdigit = e => 48 <= e && e <= 57;\nconst iscntrl = e => (0x00 <= e && e <= 0x1f) || e === 0x7f;\nconst isgraph = e => 33 <= e && e <= 126;\nconst islower = e => 97 <= e && e <= 122;\nconst isupper = e => 65 <= e && e <= 90;\nconst isalnum = e => (97 <= e && e <= 122) || (65 <= e && e <= 90) || (48 <= e && e <= 57);\nconst ispunct = e => isgraph(e) && !isalnum(e);\nconst isspace = e => e === 32 || (e >= 9 && e <= 13);\nconst isxdigit = e => (48 <= e && e <= 57) || (65 <= e && e <= 70) || (97 <= e && e <= 102);\n\nconst addquoted = function(b, s, len) {\n    luaL_addchar(b, 34 /* '\"'.charCodeAt(0) */);\n    let i = 0;\n    while (len--) {\n        if (s[i] === 34 /* '\"'.charCodeAt(0) */ ||\n            s[i] === 92 /* '\\\\'.charCodeAt(0) */ ||\n            s[i] === 10 /* '\\n'.charCodeAt(0) */) {\n            luaL_addchar(b, 92 /* '\\\\'.charCodeAt(0) */);\n            luaL_addchar(b, s[i]);\n        } else if (iscntrl(s[i])) {\n            let buff = ''+s[i];\n            if (isdigit(s[i+1]))\n                buff = '0'.repeat(3-buff.length) + buff; /* pad to 3 '0's */\n            luaL_addstring(b, to_luastring(\"\\\\\" + buff));\n        } else\n            luaL_addchar(b, s[i]);\n        i++;\n    }\n    luaL_addchar(b, 34 /* '\"'.charCodeAt(0) */);\n};\n\n/*\n** Ensures the 'buff' string uses a dot as the radix character.\n*/\nconst checkdp = function(buff) {\n    if (luastring_indexOf(buff, 46 /* ('.').charCodeAt(0) */) < 0) {  /* no dot? */\n        let point = lua_getlocaledecpoint();  /* try locale point */\n        let ppoint = luastring_indexOf(buff, point);\n        if (ppoint) buff[ppoint] = 46 /* ('.').charCodeAt(0) */;  /* change it to a dot */\n    }\n};\n\nconst addliteral = function(L, b, arg) {\n    switch(lua_type(L, arg)) {\n        case LUA_TSTRING: {\n            let s = lua_tostring(L, arg);\n            addquoted(b, s, s.length);\n            break;\n        }\n        case LUA_TNUMBER: {\n            let buff;\n            if (!lua_isinteger(L, arg)) {  /* float? */\n                let n = lua_tonumber(L, arg);  /* write as hexa ('%a') */\n                buff = lua_number2strx(L, to_luastring(`%${LUA_INTEGER_FRMLEN}a`), n);\n                checkdp(buff);  /* ensure it uses a dot */\n            } else {  /* integers */\n                let n = lua_tointeger(L, arg);\n                let format = (n === LUA_MININTEGER)  /* corner case? */\n                    ? \"0x%\" + LUA_INTEGER_FRMLEN + \"x\"  /* use hexa */\n                    : LUA_INTEGER_FMT;  /* else use default format */\n                buff = to_luastring(sprintf(format, n));\n            }\n            luaL_addstring(b, buff);\n            break;\n        }\n        case LUA_TNIL: case LUA_TBOOLEAN: {\n            luaL_tolstring(L, arg);\n            luaL_addvalue(b);\n            break;\n        }\n        default: {\n            luaL_argerror(L, arg, to_luastring(\"value has no literal form\"));\n        }\n    }\n};\n\nconst scanformat = function(L, strfrmt, i, form) {\n    let p = i;\n    while (strfrmt[p] !== 0 && luastring_indexOf(FLAGS, strfrmt[p]) >= 0) p++;  /* skip flags */\n    if (p - i >= FLAGS.length)\n        luaL_error(L, to_luastring(\"invalid format (repeated flags)\"));\n    if (isdigit(strfrmt[p])) p++;  /* skip width */\n    if (isdigit(strfrmt[p])) p++;  /* (2 digits at most) */\n    if (strfrmt[p] === 46 /* '.'.charCodeAt(0) */) {\n        p++;\n        if (isdigit(strfrmt[p])) p++;  /* skip precision */\n        if (isdigit(strfrmt[p])) p++;  /* (2 digits at most) */\n    }\n    if (isdigit(strfrmt[p]))\n        luaL_error(L, to_luastring(\"invalid format (width or precision too long)\"));\n    form[0] = 37 /* \"%\".charCodeAt(0) */;\n    for (let j = 0; j < p - i + 1; j++)\n        form[j+1] = strfrmt[i+j];\n    return p;\n};\n\n/*\n** add length modifier into formats\n*/\nconst addlenmod = function(form, lenmod) {\n    let l = form.length;\n    let lm = lenmod.length;\n    let spec = form[l - 1];\n    for (let i = 0; i < lm; i++)\n        form[i + l - 1] = lenmod[i];\n    form[l + lm - 1] = spec;\n    // form[l + lm] = 0;\n};\n\nconst str_format = function(L) {\n    let top = lua_gettop(L);\n    let arg = 1;\n    let strfrmt = luaL_checkstring(L, arg);\n    let i = 0;\n    let b = new luaL_Buffer();\n    luaL_buffinit(L, b);\n    while (i < strfrmt.length) {\n        if (strfrmt[i] !== L_ESC) {\n            luaL_addchar(b, strfrmt[i++]);\n        } else if (strfrmt[++i] === L_ESC) {\n            luaL_addchar(b, strfrmt[i++]); /* %% */\n        } else { /* format item */\n            let form = [];  /* to store the format ('%...') */\n            if (++arg > top)\n                luaL_argerror(L, arg, to_luastring(\"no value\"));\n            i = scanformat(L, strfrmt, i, form);\n            switch (String.fromCharCode(strfrmt[i++])) {\n                case 'c': {\n                    // sprintf(String.fromCharCode(...form), luaL_checkinteger(L, arg));\n                    luaL_addchar(b, luaL_checkinteger(L, arg));\n                    break;\n                }\n                case 'd': case 'i':\n                case 'o': case 'u': case 'x': case 'X': {\n                    let n = luaL_checkinteger(L, arg);\n                    addlenmod(form, to_luastring(LUA_INTEGER_FRMLEN, true));\n                    luaL_addstring(b, to_luastring(sprintf(String.fromCharCode(...form), n)));\n                    break;\n                }\n                case 'a': case 'A': {\n                    addlenmod(form, to_luastring(LUA_INTEGER_FRMLEN, true));\n                    luaL_addstring(b, lua_number2strx(L, form, luaL_checknumber(L, arg)));\n                    break;\n                }\n                case 'e': case 'E': case 'f':\n                case 'g': case 'G': {\n                    let n = luaL_checknumber(L, arg);\n                    addlenmod(form, to_luastring(LUA_INTEGER_FRMLEN, true));\n                    luaL_addstring(b, to_luastring(sprintf(String.fromCharCode(...form), n)));\n                    break;\n                }\n                case 'q': {\n                    addliteral(L, b, arg);\n                    break;\n                }\n                case 's': {\n                    let s = luaL_tolstring(L, arg);\n                    if (form.length <= 2 || form[2] === 0) {  /* no modifiers? */\n                        luaL_addvalue(b);  /* keep entire string */\n                    } else {\n                        luaL_argcheck(L, s.length === strlen(s), arg, \"string contains zeros\");\n                        if (luastring_indexOf(form, 46 /* '.'.charCodeAt(0) */) < 0 && s.length >= 100) {\n                            /* no precision and string is too long to be formatted */\n                            luaL_addvalue(b);  /* keep entire string */\n                        } else {  /* format the string into 'buff' */\n                            // TODO: will fail if s is not valid UTF-8\n                            luaL_addstring(b, to_luastring(sprintf(String.fromCharCode(...form), to_jsstring(s))));\n                            lua_pop(L, 1);  /* remove result from 'luaL_tolstring' */\n                        }\n                    }\n                    break;\n                }\n                default: {  /* also treat cases 'pnLlh' */\n                    return luaL_error(L, to_luastring(\"invalid option '%%%c' to 'format'\"), strfrmt[i-1]);\n                }\n            }\n        }\n    }\n    luaL_pushresult(b);\n    return 1;\n};\n\n/* value used for padding */\nconst LUAL_PACKPADBYTE = 0x00;\n\n/* maximum size for the binary representation of an integer */\nconst MAXINTSIZE = 16;\n\nconst SZINT = 4; // Size of lua_Integer\n\n/* number of bits in a character */\nconst NB = 8;\n\n/* mask for one character (NB 1's) */\nconst MC = ((1 << NB) - 1);\n\nconst MAXALIGN = 8;\n\n/*\n** information to pack/unpack stuff\n*/\nclass Header {\n    constructor(L) {\n        this.L = L;\n        this.islittle = true;\n        this.maxalign = 1;\n    }\n}\n\n/*\n** options for pack/unpack\n*/\nconst Kint       = 0; /* signed integers */\nconst Kuint      = 1; /* unsigned integers */\nconst Kfloat     = 2; /* floating-point numbers */\nconst Kchar      = 3; /* fixed-length strings */\nconst Kstring    = 4; /* strings with prefixed length */\nconst Kzstr      = 5; /* zero-terminated strings */\nconst Kpadding   = 6; /* padding */\nconst Kpaddalign = 7; /* padding for alignment */\nconst Knop       = 8; /* no-op (configuration or spaces) */\n\nconst digit = isdigit;\n\nconst getnum = function(fmt, df) {\n    if (fmt.off >= fmt.s.length || !digit(fmt.s[fmt.off]))  /* no number? */\n        return df;  /* return default value */\n    else {\n        let a = 0;\n        do {\n            a = a * 10 + (fmt.s[fmt.off++] - 48 /* '0'.charCodeAt(0) */);\n        } while (fmt.off < fmt.s.length && digit(fmt.s[fmt.off]) && a <= (MAXSIZE - 9)/10);\n        return a;\n    }\n};\n\n/*\n** Read an integer numeral and raises an error if it is larger\n** than the maximum size for integers.\n*/\nconst getnumlimit = function(h, fmt, df) {\n    let sz = getnum(fmt, df);\n    if (sz > MAXINTSIZE || sz <= 0)\n        luaL_error(h.L, to_luastring(\"integral size (%d) out of limits [1,%d]\"), sz, MAXINTSIZE);\n    return sz;\n};\n\n/*\n** Read and classify next option. 'size' is filled with option's size.\n*/\nconst getoption = function(h, fmt) {\n    let r = {\n        opt: fmt.s[fmt.off++],\n        size: 0  /* default */\n    };\n    switch (r.opt) {\n        case 98  /*'b'*/: r.size = 1; r.opt = Kint;   return r; // sizeof(char): 1\n        case 66  /*'B'*/: r.size = 1; r.opt = Kuint;  return r;\n        case 104 /*'h'*/: r.size = 2; r.opt = Kint;   return r; // sizeof(short): 2\n        case 72  /*'H'*/: r.size = 2; r.opt = Kuint;  return r;\n        case 108 /*'l'*/: r.size = 4; r.opt = Kint;   return r; // sizeof(long): 4\n        case 76  /*'L'*/: r.size = 4; r.opt = Kuint;  return r;\n        case 106 /*'j'*/: r.size = 4; r.opt = Kint;   return r; // sizeof(lua_Integer): 4\n        case 74  /*'J'*/: r.size = 4; r.opt = Kuint;  return r;\n        case 84  /*'T'*/: r.size = 4; r.opt = Kuint;  return r; // sizeof(size_t): 4\n        case 102 /*'f'*/: r.size = 4; r.opt = Kfloat; return r; // sizeof(float): 4\n        case 100 /*'d'*/: r.size = 8; r.opt = Kfloat; return r; // sizeof(double): 8\n        case 110 /*'n'*/: r.size = 8; r.opt = Kfloat; return r; // sizeof(lua_Number): 8\n        case 105 /*'i'*/: r.size = getnumlimit(h, fmt, 4); r.opt = Kint;    return r; // sizeof(int): 4\n        case 73  /*'I'*/: r.size = getnumlimit(h, fmt, 4); r.opt = Kuint;   return r;\n        case 115 /*'s'*/: r.size = getnumlimit(h, fmt, 4); r.opt = Kstring; return r;\n        case 99  /*'c'*/: {\n            r.size = getnum(fmt, -1);\n            if (r.size === -1)\n                luaL_error(h.L, to_luastring(\"missing size for format option 'c'\"));\n            r.opt = Kchar;\n            return r;\n        }\n        case 122 /*'z'*/:             r.opt = Kzstr;      return r;\n        case 120 /*'x'*/: r.size = 1; r.opt = Kpadding;   return r;\n        case 88  /*'X'*/:             r.opt = Kpaddalign; return r;\n        case 32  /*' '*/: break;\n        case 60  /*'<'*/: h.islittle = true; break;\n        case 62  /*'>'*/: h.islittle = false; break;\n        case 61  /*'='*/: h.islittle = true; break;\n        case 33  /*'!'*/: h.maxalign = getnumlimit(h, fmt, MAXALIGN); break;\n        default: luaL_error(h.L, to_luastring(\"invalid format option '%c'\"), r.opt);\n    }\n    r.opt = Knop;\n    return r;\n};\n\n/*\n** Read, classify, and fill other details about the next option.\n** 'psize' is filled with option's size, 'notoalign' with its\n** alignment requirements.\n** Local variable 'size' gets the size to be aligned. (Kpadal option\n** always gets its full alignment, other options are limited by\n** the maximum alignment ('maxalign'). Kchar option needs no alignment\n** despite its size.\n*/\nconst getdetails = function(h, totalsize, fmt) {\n    let r = {\n        opt: NaN,\n        size: NaN,\n        ntoalign: NaN\n    };\n\n    let opt = getoption(h, fmt);\n    r.size = opt.size;\n    r.opt = opt.opt;\n    let align = r.size;  /* usually, alignment follows size */\n    if (r.opt === Kpaddalign) {  /* 'X' gets alignment from following option */\n        if (fmt.off >= fmt.s.length || fmt.s[fmt.off] === 0)\n            luaL_argerror(h.L, 1, to_luastring(\"invalid next option for option 'X'\"));\n        else {\n            let o = getoption(h, fmt);\n            align = o.size;\n            o = o.opt;\n            if (o === Kchar || align === 0)\n                luaL_argerror(h.L, 1, to_luastring(\"invalid next option for option 'X'\"));\n        }\n    }\n    if (align <= 1 || r.opt === Kchar)  /* need no alignment? */\n        r.ntoalign = 0;\n    else {\n        if (align > h.maxalign)  /* enforce maximum alignment */\n            align = h.maxalign;\n        if ((align & (align -1)) !== 0)  /* is 'align' not a power of 2? */\n            luaL_argerror(h.L, 1, to_luastring(\"format asks for alignment not power of 2\"));\n        r.ntoalign = (align - (totalsize & (align - 1))) & (align - 1);\n    }\n    return r;\n};\n\n/*\n** Pack integer 'n' with 'size' bytes and 'islittle' endianness.\n** The final 'if' handles the case when 'size' is larger than\n** the size of a Lua integer, correcting the extra sign-extension\n** bytes if necessary (by default they would be zeros).\n*/\nconst packint = function(b, n, islittle, size, neg) {\n    let buff = luaL_prepbuffsize(b, size);\n    buff[islittle ? 0 : size - 1] = n & MC;  /* first byte */\n    for (let i = 1; i < size; i++) {\n        n >>= NB;\n        buff[islittle ? i : size - 1 - i] = n & MC;\n    }\n    if (neg && size > SZINT) {  /* negative number need sign extension? */\n        for (let i = SZINT; i < size; i++)  /* correct extra bytes */\n            buff[islittle ? i : size - 1 - i] = MC;\n    }\n    luaL_addsize(b, size);  /* add result to buffer */\n};\n\nconst str_pack = function(L) {\n    let b = new luaL_Buffer();\n    let h = new Header(L);\n    let fmt = {\n        s: luaL_checkstring(L, 1),  /* format string */\n        off: 0\n    };\n    let arg = 1;  /* current argument to pack */\n    let totalsize = 0;  /* accumulate total size of result */\n    lua_pushnil(L);  /* mark to separate arguments from string buffer */\n    luaL_buffinit(L, b);\n    while (fmt.off < fmt.s.length) {\n        let details = getdetails(h, totalsize, fmt);\n        let opt = details.opt;\n        let size = details.size;\n        let ntoalign = details.ntoalign;\n        totalsize += ntoalign + size;\n        while (ntoalign-- > 0)\n            luaL_addchar(b, LUAL_PACKPADBYTE);  /* fill alignment */\n        arg++;\n        switch (opt) {\n            case Kint: {  /* signed integers */\n                let n = luaL_checkinteger(L, arg);\n                if (size < SZINT) {  /* need overflow check? */\n                    let lim = 1 << (size * 8) - 1;\n                    luaL_argcheck(L, -lim <= n && n < lim, arg, \"integer overflow\");\n                }\n                packint(b, n, h.islittle, size, n < 0);\n                break;\n            }\n            case Kuint: {  /* unsigned integers */\n                let n = luaL_checkinteger(L, arg);\n                if (size < SZINT)\n                    luaL_argcheck(L, (n>>>0) < (1 << (size * NB)), arg, \"unsigned overflow\");\n                packint(b, n>>>0, h.islittle, size, false);\n                break;\n            }\n            case Kfloat: {  /* floating-point options */\n                let buff = luaL_prepbuffsize(b, size);\n                let n = luaL_checknumber(L, arg);  /* get argument */\n                let dv = new DataView(buff.buffer, buff.byteOffset, buff.byteLength);\n                if (size === 4) dv.setFloat32(0, n, h.islittle);\n                else dv.setFloat64(0, n, h.islittle);\n                luaL_addsize(b, size);\n                break;\n            }\n            case Kchar: {  /* fixed-size string */\n                let s = luaL_checkstring(L, arg);\n                let len = s.length;\n                luaL_argcheck(L, len <= size, arg, \"string longer than given size\");\n                luaL_addlstring(b, s, len);  /* add string */\n                while (len++ < size)  /* pad extra space */\n                    luaL_addchar(b, LUAL_PACKPADBYTE);\n                break;\n            }\n            case Kstring: {  /* strings with length count */\n                let s = luaL_checkstring(L, arg);\n                let len = s.length;\n                luaL_argcheck(L,\n                    size >= 4 /* sizeof(size_t) */ || len < (1 << (size * NB)),\n                    arg, \"string length does not fit in given size\");\n                packint(b, len, h.islittle, size, 0);  /* pack length */\n                luaL_addlstring(b, s, len);\n                totalsize += len;\n                break;\n            }\n            case Kzstr: {  /* zero-terminated string */\n                let s = luaL_checkstring(L, arg);\n                let len = s.length;\n                luaL_argcheck(L, luastring_indexOf(s, 0) < 0, arg, \"strings contains zeros\");\n                luaL_addlstring(b, s, len);\n                luaL_addchar(b, 0);  /* add zero at the end */\n                totalsize += len + 1;\n                break;\n            }\n            case Kpadding: luaL_addchar(b, LUAL_PACKPADBYTE); /* fall through */\n            case Kpaddalign: case Knop:\n                arg--;  /* undo increment */\n                break;\n        }\n    }\n    luaL_pushresult(b);\n    return 1;\n};\n\nconst str_reverse = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let r = new Uint8Array(l);\n    for (let i=0; i<l; i++)\n        r[i] = s[l-1-i];\n    lua_pushstring(L, r);\n    return 1;\n};\n\nconst str_lower = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let r = new Uint8Array(l);\n    for (let i=0; i<l; i++) {\n        let c = s[i];\n        if (isupper(c))\n            c = c | 0x20;\n        r[i] = c;\n    }\n    lua_pushstring(L, r);\n    return 1;\n};\n\nconst str_upper = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let r = new Uint8Array(l);\n    for (let i=0; i<l; i++) {\n        let c = s[i];\n        if (islower(c))\n            c = c & 0xdf;\n        r[i] = c;\n    }\n    lua_pushstring(L, r);\n    return 1;\n};\n\nconst str_rep = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let n = luaL_checkinteger(L, 2);\n    let sep = luaL_optstring(L, 3, \"\");\n    let lsep = sep.length;\n    if (n <= 0) lua_pushliteral(L, \"\");\n    else if (l + lsep < l || l + lsep > MAXSIZE / n)  /* may overflow? */\n        return luaL_error(L, to_luastring(\"resulting string too large\"));\n    else {\n        let totallen = n * l + (n - 1) * lsep;\n        let b = new luaL_Buffer();\n        let p = luaL_buffinitsize(L, b, totallen);\n        let pi = 0;\n        while (n-- > 1) {  /* first n-1 copies (followed by separator) */\n            p.set(s, pi);\n            pi += l;\n            if (lsep > 0) {  /* empty 'memcpy' is not that cheap */\n                p.set(sep, pi);\n                pi += lsep;\n            }\n        }\n        p.set(s, pi);  /* last copy (not followed by separator) */\n        luaL_pushresultsize(b, totallen);\n    }\n    return 1;\n};\n\nconst str_byte = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let posi = posrelat(luaL_optinteger(L, 2, 1), l);\n    let pose = posrelat(luaL_optinteger(L, 3, posi), l);\n\n    if (posi < 1) posi = 1;\n    if (pose > l) pose = l;\n    if (posi > pose) return 0;  /* empty interval; return no values */\n    if (pose - posi >= Number.MAX_SAFE_INTEGER)  /* arithmetic overflow? */\n        return luaL_error(L, \"string slice too long\");\n\n    let n = (pose - posi) + 1;\n    luaL_checkstack(L, n, \"string slice too long\");\n    for (let i = 0; i < n; i++)\n        lua_pushinteger(L, s[posi + i - 1]);\n    return n;\n};\n\nconst str_packsize = function(L) {\n    let h = new Header(L);\n    let fmt = {\n        s: luaL_checkstring(L, 1),\n        off: 0\n    };\n    let totalsize = 0;  /* accumulate total size of result */\n    while (fmt.off < fmt.s.length) {\n        let details = getdetails(h, totalsize, fmt);\n        let opt = details.opt;\n        let size = details.size;\n        let ntoalign = details.ntoalign;\n        size += ntoalign;  /* total space used by option */\n        luaL_argcheck(L, totalsize <= MAXSIZE - size, 1, \"format result too large\");\n        totalsize += size;\n        switch (opt) {\n            case Kstring:  /* strings with length count */\n            case Kzstr:    /* zero-terminated string */\n                luaL_argerror(L, 1, \"variable-length format\");\n                /* call never return, but to avoid warnings: *//* fall through */\n            default:  break;\n        }\n    }\n    lua_pushinteger(L, totalsize);\n    return 1;\n};\n\n/*\n** Unpack an integer with 'size' bytes and 'islittle' endianness.\n** If size is smaller than the size of a Lua integer and integer\n** is signed, must do sign extension (propagating the sign to the\n** higher bits); if size is larger than the size of a Lua integer,\n** it must check the unread bytes to see whether they do not cause an\n** overflow.\n*/\nconst unpackint = function(L, str, islittle, size, issigned) {\n    let res = 0;\n    let limit = size <= SZINT ? size : SZINT;\n    for (let i = limit - 1; i >= 0; i--) {\n        res <<= NB;\n        res |= str[islittle ? i : size - 1 - i];\n    }\n    if (size < SZINT) {  /* real size smaller than lua_Integer? */\n        if (issigned) {  /* needs sign extension? */\n            let mask = 1 << (size * NB - 1);\n            res = ((res ^ mask) - mask);  /* do sign extension */\n        }\n    } else if (size > SZINT) {  /* must check unread bytes */\n        let mask = !issigned || res >= 0 ? 0 : MC;\n        for (let i = limit; i < size; i++) {\n            if (str[islittle ? i : size - 1 - i] !== mask)\n                luaL_error(L, to_luastring(\"%d-byte integer does not fit into Lua Integer\"), size);\n        }\n    }\n    return res;\n};\n\nconst unpacknum = function(L, b, islittle, size) {\n    lualib.lua_assert(b.length >= size);\n\n    let dv = new DataView(new ArrayBuffer(size));\n    for (let i = 0; i < size; i++)\n        dv.setUint8(i, b[i], islittle);\n\n    if (size == 4) return dv.getFloat32(0, islittle);\n    else return dv.getFloat64(0, islittle);\n};\n\nconst str_unpack = function(L) {\n    let h = new Header(L);\n    let fmt = {\n        s: luaL_checkstring(L, 1),\n        off: 0\n    };\n    let data = luaL_checkstring(L, 2);\n    let ld = data.length;\n    let pos = posrelat(luaL_optinteger(L, 3, 1), ld) - 1;\n    let n = 0;  /* number of results */\n    luaL_argcheck(L, pos <= ld && pos >= 0, 3, \"initial position out of string\");\n    while (fmt.off < fmt.s.length) {\n        let details = getdetails(h, pos, fmt);\n        let opt = details.opt;\n        let size = details.size;\n        let ntoalign = details.ntoalign;\n        if (/*ntoalign + size > ~pos ||*/ pos + ntoalign + size > ld)\n            luaL_argerror(L, 2, to_luastring(\"data string too short\"));\n        pos += ntoalign;  /* skip alignment */\n        /* stack space for item + next position */\n        luaL_checkstack(L, 2, \"too many results\");\n        n++;\n        switch (opt) {\n            case Kint:\n            case Kuint: {\n                let res = unpackint(L, data.subarray(pos), h.islittle, size, opt === Kint);\n                lua_pushinteger(L, res);\n                break;\n            }\n            case Kfloat: {\n                let res = unpacknum(L, data.subarray(pos), h.islittle, size);\n                lua_pushnumber(L, res);\n                break;\n            }\n            case Kchar: {\n                lua_pushstring(L, data.subarray(pos, pos + size));\n                break;\n            }\n            case Kstring: {\n                let len = unpackint(L, data.subarray(pos), h.islittle, size, 0);\n                luaL_argcheck(L, pos + len + size <= ld, 2, \"data string too short\");\n                lua_pushstring(L, data.subarray(pos + size, pos + size + len));\n                pos += len;  /* skip string */\n                break;\n            }\n            case Kzstr: {\n                let e = luastring_indexOf(data, 0, pos);\n                if (e === -1) e = data.length - pos;\n                lua_pushstring(L, data.subarray(pos, e));\n                pos = e + 1;  /* skip string plus final '\\0' */\n                break;\n            }\n            case Kpaddalign: case Kpadding: case Knop:\n                n--;  /* undo increment */\n                break;\n        }\n        pos += size;\n    }\n    lua_pushinteger(L, pos + 1);  /* next position */\n    return n + 1;\n};\n\nconst CAP_UNFINISHED = -1;\nconst CAP_POSITION   = -2;\nconst MAXCCALLS      = 200;\nconst SPECIALS       = to_luastring(\"^$*+?.([%-\");\n\nclass MatchState {\n    constructor(L) {\n        this.src = null;  /* unmodified source string */\n        this.src_init = null;  /* init of source string */\n        this.src_end = null;  /* end ('\\0') of source string */\n        this.p = null;  /* unmodified pattern string */\n        this.p_end = null;  /* end ('\\0') of pattern */\n        this.L = L;\n        this.matchdepth = NaN;  /* control for recursive depth */\n        this.level = NaN;  /* total number of captures (finished or unfinished) */\n        this.capture = [];\n    }\n}\n\nconst check_capture = function(ms, l) {\n    l = l - 49 /* '1'.charCodeAt(0) */;\n    if (l < 0 || l >= ms.level || ms.capture[l].len === CAP_UNFINISHED)\n        return luaL_error(ms.L, to_luastring(\"invalid capture index %%%d\"), l + 1);\n    return l;\n};\n\nconst capture_to_close = function(ms) {\n    let level = ms.level;\n    for (level--; level >= 0; level--)\n        if (ms.capture[level].len === CAP_UNFINISHED) return level;\n    return luaL_error(ms.L, to_luastring(\"invalid pattern capture\"));\n};\n\nconst classend = function(ms, p) {\n    switch(ms.p[p++]) {\n        case L_ESC: {\n            if (p === ms.p_end)\n                luaL_error(ms.L, to_luastring(\"malformed pattern (ends with '%%')\"));\n            return p + 1;\n        }\n        case 91 /* '['.charCodeAt(0) */: {\n            if (ms.p[p] === 94 /* '^'.charCodeAt(0) */) p++;\n            do {  /* look for a ']' */\n                if (p === ms.p_end)\n                    luaL_error(ms.L, to_luastring(\"malformed pattern (missing ']')\"));\n                if (ms.p[p++] === L_ESC && p < ms.p_end)\n                    p++;  /* skip escapes (e.g. '%]') */\n            } while (ms.p[p] !== 93 /* ']'.charCodeAt(0) */);\n            return p + 1;\n        }\n        default: {\n            return p;\n        }\n    }\n};\n\nconst match_class = function(c, cl) {\n    switch (cl) {\n        case 97  /* 'a'.charCodeAt(0) */: return  isalpha(c);\n        case 65  /* 'A'.charCodeAt(0) */: return !isalpha(c);\n        case 99  /* 'c'.charCodeAt(0) */: return  iscntrl(c);\n        case 67  /* 'C'.charCodeAt(0) */: return !iscntrl(c);\n        case 100 /* 'd'.charCodeAt(0) */: return  isdigit(c);\n        case 68  /* 'D'.charCodeAt(0) */: return !isdigit(c);\n        case 103 /* 'g'.charCodeAt(0) */: return  isgraph(c);\n        case 71  /* 'G'.charCodeAt(0) */: return !isgraph(c);\n        case 108 /* 'l'.charCodeAt(0) */: return  islower(c);\n        case 76  /* 'L'.charCodeAt(0) */: return !islower(c);\n        case 112 /* 'p'.charCodeAt(0) */: return  ispunct(c);\n        case 80  /* 'P'.charCodeAt(0) */: return !ispunct(c);\n        case 115 /* 's'.charCodeAt(0) */: return  isspace(c);\n        case 83  /* 'S'.charCodeAt(0) */: return !isspace(c);\n        case 117 /* 'u'.charCodeAt(0) */: return  isupper(c);\n        case 85  /* 'U'.charCodeAt(0) */: return !isupper(c);\n        case 119 /* 'w'.charCodeAt(0) */: return  isalnum(c);\n        case 87  /* 'W'.charCodeAt(0) */: return !isalnum(c);\n        case 120 /* 'x'.charCodeAt(0) */: return  isxdigit(c);\n        case 88  /* 'X'.charCodeAt(0) */: return !isxdigit(c);\n        case 122 /* 'z'.charCodeAt(0) */: return (c === 0);  /* deprecated option */\n        case 90  /* 'z'.charCodeAt(0) */: return (c !== 0);  /* deprecated option */\n        default: return (cl === c);\n    }\n};\n\nconst matchbracketclass = function(ms, c, p, ec) {\n    let sig = true;\n    if (ms.p[p + 1] === 94 /* '^'.charCodeAt(0) */) {\n        sig = false;\n        p++;  /* skip the '^' */\n    }\n    while (++p < ec) {\n        if (ms.p[p] === L_ESC) {\n            p++;\n            if (match_class(c, ms.p[p]))\n                return sig;\n        } else if (ms.p[p + 1] === 45 /* '-'.charCodeAt(0) */ && p + 2 < ec) {\n            p += 2;\n            if (ms.p[p - 2] <= c && c <= ms.p[p])\n                return sig;\n        } else if (ms.p[p] === c) return sig;\n    }\n    return !sig;\n};\n\nconst singlematch = function(ms, s, p, ep) {\n    if (s >= ms.src_end)\n        return false;\n    else {\n        let c = ms.src[s];\n        switch (ms.p[p]) {\n            case 46 /* '.'.charCodeAt(0) */: return true;  /* matches any char */\n            case L_ESC: return match_class(c, ms.p[p + 1]);\n            case 91 /* '['.charCodeAt(0) */: return matchbracketclass(ms, c, p, ep - 1);\n            default: return ms.p[p] === c;\n        }\n    }\n};\n\nconst matchbalance = function(ms, s, p) {\n    if (p >= ms.p_end - 1)\n        luaL_error(ms.L, to_luastring(\"malformed pattern (missing arguments to '%%b'\"));\n    if (ms.src[s] !== ms.p[p])\n        return null;\n    else {\n        let b = ms.p[p];\n        let e = ms.p[p + 1];\n        let cont = 1;\n        while (++s < ms.src_end) {\n            if (ms.src[s] === e) {\n                if (--cont === 0) return s + 1;\n            }\n            else if (ms.src[s] === b) cont++;\n        }\n    }\n    return null;  /* string ends out of balance */\n};\n\nconst max_expand = function(ms, s, p, ep) {\n    let i = 0;  /* counts maximum expand for item */\n    while (singlematch(ms, s + i, p, ep))\n        i++;\n    /* keeps trying to match with the maximum repetitions */\n    while (i >= 0) {\n        let res = match(ms, s + i, ep + 1);\n        if (res) return res;\n        i--;  /* else didn't match; reduce 1 repetition to try again */\n    }\n    return null;\n};\n\nconst min_expand = function(ms, s, p, ep) {\n    for (;;) {\n        let res = match(ms, s, ep + 1);\n        if (res !== null)\n            return res;\n        else if (singlematch(ms, s, p, ep))\n            s++;  /* try with one more repetition */\n        else return null;\n    }\n};\n\nconst start_capture = function(ms, s, p, what) {\n    let level = ms.level;\n    if (level >= LUA_MAXCAPTURES) luaL_error(ms.L, to_luastring(\"too many captures\"));\n    ms.capture[level] = ms.capture[level] ? ms.capture[level] : {};\n    ms.capture[level].init = s;\n    ms.capture[level].len = what;\n    ms.level = level + 1;\n    let res;\n    if ((res = match(ms, s, p)) === null)  /* match failed? */\n        ms.level--;  /* undo capture */\n    return res;\n};\n\nconst end_capture = function(ms, s, p) {\n    let l = capture_to_close(ms);\n    ms.capture[l].len = s - ms.capture[l].init;  /* close capture */\n    let res;\n    if ((res = match(ms, s, p)) === null)  /* match failed? */\n        ms.capture[l].len = CAP_UNFINISHED;  /* undo capture */\n    return res;\n};\n\n/* Compare the elements of arrays 'a' and 'b' to see if they contain the same elements */\nconst array_cmp = function(a, ai, b, bi, len) {\n    return luastring_eq(a.subarray(ai, ai+len), b.subarray(bi, bi+len));\n};\n\nconst match_capture = function(ms, s, l) {\n    l = check_capture(ms, l);\n    let len = ms.capture[l].len;\n    if ((ms.src_end-s) >= len && array_cmp(ms.src, ms.capture[l].init, ms.src, s, len))\n        return s+len;\n    else return null;\n};\n\nconst match = function(ms, s, p) {\n    let gotodefault = false;\n    let gotoinit = true;\n\n    if (ms.matchdepth-- === 0)\n        luaL_error(ms.L, to_luastring(\"pattern too complex\"));\n\n    while (gotoinit || gotodefault) {\n        gotoinit = false;\n        if (p !== ms.p_end) {  /* end of pattern? */\n            switch (gotodefault ? void 0 : ms.p[p]) {\n                case 40 /* '('.charCodeAt(0) */: {  /* start capture */\n                    if (ms.p[p + 1] === 41 /* ')'.charCodeAt(0) */)  /* position capture? */\n                        s = start_capture(ms, s, p + 2, CAP_POSITION);\n                    else\n                        s = start_capture(ms, s, p + 1, CAP_UNFINISHED);\n                    break;\n                }\n                case 41 /* ')'.charCodeAt(0) */: {  /* end capture */\n                    s = end_capture(ms, s, p + 1);\n                    break;\n                }\n                case 36 /* '$'.charCodeAt(0) */: {\n                    if (p + 1 !== ms.p_end) {  /* is the '$' the last char in pattern? */\n                        gotodefault = true;  /* no; go to default */\n                        break;\n                    }\n                    s = (ms.src.length - s) === 0 ? s : null;  /* check end of string */\n                    break;\n                }\n                case L_ESC: {  /* escaped sequences not in the format class[*+?-]? */\n                    switch (ms.p[p + 1]) {\n                        case 98 /* 'b'.charCodeAt(0) */: {  /* balanced string? */\n                            s = matchbalance(ms, s, p + 2);\n                            if (s !== null) {\n                                p += 4;\n                                gotoinit = true;\n                            }\n                            break;\n                        }\n                        case 102 /* 'f'.charCodeAt(0) */: {  /* frontier? */\n                            p += 2;\n                            if (ms.p[p] !== 91 /* '['.charCodeAt(0) */)\n                                luaL_error(ms.L, to_luastring(\"missing '[' after '%%f' in pattern\"));\n                            let ep = classend(ms, p);  /* points to what is next */\n                            let previous = s === ms.src_init ? 0 : ms.src[s-1];\n                            if (!matchbracketclass(ms, previous, p, ep - 1) && matchbracketclass(ms, (s===ms.src_end)?0:ms.src[s], p, ep - 1)) {\n                                p = ep; gotoinit = true; break;\n                            }\n                            s = null;  /* match failed */\n                            break;\n                        }\n                        case 48: case 49: case 50: case 51: case 52:\n                        case 53: case 54: case 55: case 56: case 57: {  /* capture results (%0-%9)? */\n                            s = match_capture(ms, s, ms.p[p + 1]);\n                            if (s !== null) {\n                                p += 2; gotoinit = true;\n                            }\n                            break;\n                        }\n                        default: gotodefault = true;\n                    }\n                    break;\n                }\n                default: {  /* pattern class plus optional suffix */\n                    gotodefault = false;\n                    let ep = classend(ms, p);  /* points to optional suffix */\n                    /* does not match at least once? */\n                    if (!singlematch(ms, s, p, ep)) {\n                        if (ms.p[ep] === 42 /* '*'.charCodeAt(0) */ ||\n                            ms.p[ep] === 63 /* '?'.charCodeAt(0) */ ||\n                            ms.p[ep] === 45 /* '-'.charCodeAt(0) */\n                        ) {  /* accept empty? */\n                            p = ep + 1; gotoinit = true; break;\n                        } else  /* '+' or no suffix */\n                            s = null;  /* fail */\n                    } else {  /* matched once */\n                        switch (ms.p[ep]) {  /* handle optional suffix */\n                            case 63 /* '?'.charCodeAt(0) */: {  /* optional */\n                                let res;\n                                if ((res = match(ms, s + 1, ep + 1)) !== null)\n                                    s = res;\n                                else {\n                                    p = ep + 1; gotoinit = true;\n                                }\n                                break;\n                            }\n                            case 43 /* '+'.charCodeAt(0) */:  /* 1 or more repetitions */\n                                s++;  /* 1 match already done */\n                                /* fall through */\n                            case 42 /* '*'.charCodeAt(0) */:  /* 0 or more repetitions */\n                                s = max_expand(ms, s, p, ep);\n                                break;\n                            case 45 /* '-'.charCodeAt(0) */:  /* 0 or more repetitions (minimum) */\n                                s = min_expand(ms, s, p, ep);\n                                break;\n                            default:  /* no suffix */\n                                s++; p = ep; gotoinit = true;\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n    }\n    ms.matchdepth++;\n    return s;\n};\n\nconst push_onecapture = function(ms, i, s, e) {\n    if (i >= ms.level) {\n        if (i === 0)\n            lua_pushlstring(ms.L, ms.src.subarray(s, e), e - s);  /* add whole match */\n        else\n            luaL_error(ms.L, to_luastring(\"invalid capture index %%%d\"), i + 1);\n    } else {\n        let l = ms.capture[i].len;\n        if (l === CAP_UNFINISHED) luaL_error(ms.L, to_luastring(\"unfinished capture\"));\n        if (l === CAP_POSITION)\n            lua_pushinteger(ms.L, ms.capture[i].init - ms.src_init + 1);\n        else\n            lua_pushlstring(ms.L, ms.src.subarray(ms.capture[i].init), l);\n    }\n};\n\nconst push_captures = function(ms, s, e) {\n    let nlevels = ms.level === 0 && ms.src.subarray(s) ? 1 : ms.level;\n    luaL_checkstack(ms.L, nlevels, \"too many captures\");\n    for (let i = 0; i < nlevels; i++)\n        push_onecapture(ms, i, s, e);\n    return nlevels;  /* number of strings pushed */\n};\n\nconst nospecials = function(p, l) {\n    for (let i=0; i<l; i++) {\n        if (luastring_indexOf(SPECIALS, p[i]) !== -1)\n            return false;\n    }\n    return true;\n};\n\nconst prepstate = function(ms, L, s, ls, p, lp) {\n    ms.L = L;\n    ms.matchdepth = MAXCCALLS;\n    ms.src = s;\n    ms.src_init = 0;\n    ms.src_end = ls;\n    ms.p = p;\n    ms.p_end = lp;\n};\n\nconst reprepstate = function(ms) {\n    ms.level = 0;\n    lualib.lua_assert(ms.matchdepth === MAXCCALLS);\n};\n\nconst find_subarray = function(arr, subarr, from_index) {\n    var i = from_index >>> 0,\n        sl = subarr.length;\n\n    if (sl === 0)\n        return i;\n\n    for (; (i = arr.indexOf(subarr[0], i)) !== -1; i++) {\n        if (luastring_eq(arr.subarray(i, i+sl), subarr))\n            return i;\n    }\n\n    return -1;\n};\n\nconst str_find_aux = function(L, find) {\n    let s = luaL_checkstring(L, 1);\n    let p = luaL_checkstring(L, 2);\n    let ls = s.length;\n    let lp = p.length;\n    let init = posrelat(luaL_optinteger(L, 3, 1), ls);\n    if (init < 1) init = 1;\n    else if (init > ls + 1) {  /* start after string's end? */\n        lua_pushnil(L);  /* cannot find anything */\n        return 1;\n    }\n    /* explicit request or no special characters? */\n    if (find && (lua_toboolean(L, 4) || nospecials(p, lp))) {\n        /* do a plain search */\n        let f = find_subarray(s.subarray(init - 1), p, 0);\n        if (f > -1) {\n            lua_pushinteger(L, init + f);\n            lua_pushinteger(L, init + f + lp - 1);\n            return 2;\n        }\n    } else {\n        let ms = new MatchState(L);\n        let s1 = init - 1;\n        let anchor = p[0] === 94 /* '^'.charCodeAt(0) */;\n        if (anchor) {\n            p = p.subarray(1); lp--;  /* skip anchor character */\n        }\n        prepstate(ms, L, s, ls, p, lp);\n        do {\n            let res;\n            reprepstate(ms);\n            if ((res = match(ms, s1, 0)) !== null) {\n                if (find) {\n                    lua_pushinteger(L, s1 + 1);  /* start */\n                    lua_pushinteger(L, res);   /* end */\n                    return push_captures(ms, null, 0) + 2;\n                } else\n                    return push_captures(ms, s1, res);\n            }\n        } while (s1++ < ms.src_end && !anchor);\n    }\n    lua_pushnil(L);  /* not found */\n    return 1;\n};\n\nconst str_find = function(L) {\n    return str_find_aux(L, 1);\n};\n\nconst str_match = function(L) {\n    return str_find_aux(L, 0);\n};\n\n/* state for 'gmatch' */\nclass GMatchState {\n    constructor() {\n        this.src = NaN;  /* current position */\n        this.p = NaN;  /* pattern */\n        this.lastmatch = NaN;  /* end of last match */\n        this.ms = new MatchState();  /* match state */\n    }\n}\n\nconst gmatch_aux = function(L) {\n    let gm = lua_touserdata(L, lua_upvalueindex(3));\n    gm.ms.L = L;\n    for (let src = gm.src; src <= gm.ms.src_end; src++) {\n        reprepstate(gm.ms);\n        let e;\n        if ((e = match(gm.ms, src, gm.p)) !== null && e !== gm.lastmatch) {\n            gm.src = gm.lastmatch = e;\n            return push_captures(gm.ms, src, e);\n        }\n    }\n    return 0;  /* not found */\n};\n\nconst str_gmatch = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let p = luaL_checkstring(L, 2);\n    let ls = s.length;\n    let lp = p.length;\n    lua_settop(L, 2);  /* keep them on closure to avoid being collected */\n    let gm = new GMatchState();\n    lua_pushlightuserdata(L, gm);\n    prepstate(gm.ms, L, s, ls, p, lp);\n    gm.src = 0;\n    gm.p = 0;\n    gm.lastmatch = null;\n    lua_pushcclosure(L, gmatch_aux, 3);\n    return 1;\n};\n\nconst add_s = function(ms, b, s, e) {\n    let L = ms.L;\n    let news = lua_tostring(L, 3);\n    let l = news.length;\n    for (let i = 0; i < l; i++) {\n        if (news[i] !== L_ESC)\n            luaL_addchar(b, news[i]);\n        else {\n            i++;  /* skip ESC */\n            if (!isdigit(news[i])) {\n                if (news[i] !== L_ESC)\n                    luaL_error(L, to_luastring(\"invalid use of '%c' in replacement string\"), L_ESC);\n                luaL_addchar(b, news[i]);\n            } else if (news[i] === 48 /* '0'.charCodeAt(0) */)\n                luaL_addlstring(b, ms.src.subarray(s, e), e - s);\n            else {\n                push_onecapture(ms, news[i] - 49 /* '1'.charCodeAt(0) */, s, e);\n                luaL_tolstring(L, -1);\n                lua_remove(L, -2);  /* remove original value */\n                luaL_addvalue(b);  /* add capture to accumulated result */\n            }\n        }\n    }\n};\n\nconst add_value = function(ms, b, s, e, tr) {\n    let L = ms.L;\n    switch (tr) {\n        case LUA_TFUNCTION: {\n            lua_pushvalue(L, 3);\n            let n = push_captures(ms, s, e);\n            lua_call(L, n, 1);\n            break;\n        }\n        case LUA_TTABLE: {\n            push_onecapture(ms, 0, s, e);\n            lua_gettable(L, 3);\n            break;\n        }\n        default: {  /* LUA_TNUMBER or LUA_TSTRING */\n            add_s(ms, b, s, e);\n            return;\n        }\n    }\n    if (!lua_toboolean(L, -1)) {  /* nil or false? */\n        lua_pop(L, 1);\n        lua_pushlstring(L, ms.src.subarray(s, e), e - s);  /* keep original text */\n    } else if (!lua_isstring(L, -1))\n        luaL_error(L, to_luastring(\"invalid replacement value (a %s)\"), luaL_typename(L, -1));\n    luaL_addvalue(b);  /* add result to accumulator */\n};\n\nconst str_gsub = function(L) {\n    let src = luaL_checkstring(L, 1);  /* subject */\n    let srcl = src.length;\n    let p = luaL_checkstring(L, 2);  /* pattern */\n    let lp = p.length;\n    let lastmatch = null;  /* end of last match */\n    let tr = lua_type(L, 3);  /* replacement type */\n    let max_s = luaL_optinteger(L, 4, srcl + 1);  /* max replacements */\n    let anchor = p[0] === 94 /* '^'.charCodeAt(0) */;\n    let n = 0;  /* replacement count */\n    let ms = new MatchState(L);\n    let b = new luaL_Buffer();\n    luaL_argcheck(L, tr === LUA_TNUMBER || tr === LUA_TSTRING || tr === LUA_TFUNCTION || tr === LUA_TTABLE, 3,\n        \"string/function/table expected\");\n    luaL_buffinit(L, b);\n    if (anchor) {\n        p = p.subarray(1); lp--;  /* skip anchor character */\n    }\n    prepstate(ms, L, src, srcl, p, lp);\n    src = 0; p = 0;\n    while (n < max_s) {\n        let e;\n        reprepstate(ms);\n        if ((e = match(ms, src, p)) !== null && e !== lastmatch) {  /* match? */\n            n++;\n            add_value(ms, b, src, e, tr);  /* add replacement to buffer */\n            src = lastmatch = e;\n        } else if (src < ms.src_end)  /* otherwise, skip one character */\n            luaL_addchar(b, ms.src[src++]);\n        else break;  /* end of subject */\n        if (anchor) break;\n    }\n    luaL_addlstring(b, ms.src.subarray(src, ms.src_end), ms.src_end - src);\n    luaL_pushresult(b);\n    lua_pushinteger(L, n);  /* number of substitutions */\n    return 2;\n};\n\nconst strlib = {\n    \"byte\":     str_byte,\n    \"char\":     str_char,\n    \"dump\":     str_dump,\n    \"find\":     str_find,\n    \"format\":   str_format,\n    \"gmatch\":   str_gmatch,\n    \"gsub\":     str_gsub,\n    \"len\":      str_len,\n    \"lower\":    str_lower,\n    \"match\":    str_match,\n    \"pack\":     str_pack,\n    \"packsize\": str_packsize,\n    \"rep\":      str_rep,\n    \"reverse\":  str_reverse,\n    \"sub\":      str_sub,\n    \"unpack\":   str_unpack,\n    \"upper\":    str_upper\n};\n\nconst createmetatable = function(L) {\n    lua_createtable(L, 0, 1);  /* table to be metatable for strings */\n    lua_pushliteral(L, \"\");  /* dummy string */\n    lua_pushvalue(L, -2);  /* copy table */\n    lua_setmetatable(L, -2);  /* set table as metatable for strings */\n    lua_pop(L, 1);  /* pop dummy string */\n    lua_pushvalue(L, -2);  /* get string library */\n    lua_setfield(L, -2, to_luastring(\"__index\", true));  /* metatable.__index = string */\n    lua_pop(L, 1);  /* pop metatable */\n};\n\nconst luaopen_string = function(L) {\n    luaL_newlib(L, strlib);\n    createmetatable(L);\n    return 1;\n};\n\nmodule.exports.luaopen_string = luaopen_string;\n","\"use strict\";\n\nconst {\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TCCL,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TTABLE,\n        LUA_TTHREAD,\n        LUA_TUSERDATA\n    },\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require('./llimits.js');\nconst ldebug  = require('./ldebug.js');\nconst lobject = require('./lobject.js');\nconst {\n    luaS_hashlongstr,\n    TString\n} = require('./lstring.js');\nconst lstate  = require('./lstate.js');\n\n/* used to prevent conflicts with lightuserdata keys */\nlet lightuserdata_hashes = new WeakMap();\nconst get_lightuserdata_hash = function(v) {\n    let hash = lightuserdata_hashes.get(v);\n    if (!hash) {\n        /* Hash should be something unique that is a valid WeakMap key\n           so that it ends up in dead_weak when removed from a table */\n        hash = {};\n        lightuserdata_hashes.set(v, hash);\n    }\n    return hash;\n};\n\nconst table_hash = function(L, key) {\n    switch(key.type) {\n        case LUA_TNIL:\n            return ldebug.luaG_runerror(L, to_luastring(\"table index is nil\", true));\n        case LUA_TNUMFLT:\n            if (isNaN(key.value))\n                return ldebug.luaG_runerror(L, to_luastring(\"table index is NaN\", true));\n            /* fall through */\n        case LUA_TNUMINT: /* takes advantage of floats and integers being same in JS */\n        case LUA_TBOOLEAN:\n        case LUA_TTABLE:\n        case LUA_TLCL:\n        case LUA_TLCF:\n        case LUA_TCCL:\n        case LUA_TUSERDATA:\n        case LUA_TTHREAD:\n            return key.value;\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR:\n            return luaS_hashlongstr(key.tsvalue());\n        case LUA_TLIGHTUSERDATA: {\n            let v = key.value;\n            switch(typeof v) {\n                case \"string\":\n                    /* possible conflict with LUA_TSTRING.\n                       prefix this string with \"*\" so they don't clash */\n                    return \"*\" + v;\n                case \"number\":\n                    /* possible conflict with LUA_TNUMBER.\n                       turn into string and prefix with \"#\" to avoid clash with other strings */\n                    return \"#\" + v;\n                case \"boolean\":\n                    /* possible conflict with LUA_TBOOLEAN. use strings ?true and ?false instead */\n                    return v?\"?true\":\"?false\";\n                case \"function\":\n                    /* possible conflict with LUA_TLCF.\n                       indirect via a weakmap */\n                    return get_lightuserdata_hash(v);\n                case \"object\":\n                    /* v could be a lua_State, CClosure, LClosure, Table or Userdata from this state as returned by lua_topointer */\n                    if ((v instanceof lstate.lua_State && v.l_G === L.l_G) ||\n                        v instanceof Table ||\n                        v instanceof lobject.Udata ||\n                        v instanceof lobject.LClosure ||\n                        v instanceof lobject.CClosure) {\n                        /* indirect via a weakmap */\n                        return get_lightuserdata_hash(v);\n                    }\n                    /* fall through */\n                default:\n                    return v;\n            }\n        }\n        default:\n            throw new Error(\"unknown key type: \" + key.type);\n    }\n};\n\nclass Table {\n    constructor(L) {\n        this.id = L.l_G.id_counter++;\n        this.strong = new Map();\n        this.dead_strong = new Map();\n        this.dead_weak = void 0; /* initialised when needed */\n        this.f = void 0; /* first entry */\n        this.l = void 0; /* last entry */\n        this.metatable = null;\n        this.flags = ~0;\n    }\n}\n\nconst invalidateTMcache = function(t) {\n    t.flags = 0;\n};\n\nconst add = function(t, hash, key, value) {\n    t.dead_strong.clear();\n    t.dead_weak = void 0;\n    let prev = null;\n    let entry = {\n        key: key,\n        value: value,\n        p: prev = t.l,\n        n: void 0\n    };\n    if (!t.f) t.f = entry;\n    if (prev) prev.n = entry;\n    t.strong.set(hash, entry);\n    t.l = entry;\n};\n\nconst is_valid_weakmap_key = function(k) {\n    return typeof k === 'object' ? k !== null : typeof k === 'function';\n};\n\n/* Move out of 'strong' part and into 'dead' part. */\nconst mark_dead = function(t, hash) {\n    let e = t.strong.get(hash);\n    if (e) {\n        e.key.setdeadvalue();\n        e.value = void 0;\n        let next = e.n;\n        let prev = e.p;\n        e.p = void 0; /* no need to know previous item any more */\n        if(prev) prev.n = next;\n        if(next) next.p = prev;\n        if(t.f === e) t.f = next;\n        if(t.l === e) t.l = prev;\n        t.strong.delete(hash);\n        if (is_valid_weakmap_key(hash)) {\n            if (!t.dead_weak) t.dead_weak = new WeakMap();\n            t.dead_weak.set(hash, e);\n        } else {\n            /* can't be used as key in weakmap */\n            t.dead_strong.set(hash, e);\n        }\n    }\n};\n\nconst luaH_new = function(L) {\n    return new Table(L);\n};\n\nconst getgeneric = function(t, hash) {\n    let v = t.strong.get(hash);\n    return v ? v.value : lobject.luaO_nilobject;\n};\n\nconst luaH_getint = function(t, key) {\n    lua_assert(typeof key == \"number\" && (key|0) === key);\n    return getgeneric(t, key);\n};\n\nconst luaH_getstr = function(t, key) {\n    lua_assert(key instanceof TString);\n    return getgeneric(t, luaS_hashlongstr(key));\n};\n\nconst luaH_get = function(L, t, key) {\n    lua_assert(key instanceof lobject.TValue);\n    if (key.ttisnil() || (key.ttisfloat() && isNaN(key.value)))\n        return lobject.luaO_nilobject;\n    return getgeneric(t, table_hash(L, key));\n};\n\nconst luaH_setint = function(t, key, value) {\n    lua_assert(typeof key == \"number\" && (key|0) === key && value instanceof lobject.TValue);\n    let hash = key; /* table_hash known result */\n    if (value.ttisnil()) {\n        mark_dead(t, hash);\n        return;\n    }\n    let e = t.strong.get(hash);\n    if (e) {\n        let tv = e.value;\n        tv.setfrom(value);\n    } else {\n        let k = new lobject.TValue(LUA_TNUMINT, key);\n        let v = new lobject.TValue(value.type, value.value);\n        add(t, hash, k, v);\n    }\n};\n\nconst luaH_setfrom = function(L, t, key, value) {\n    lua_assert(key instanceof lobject.TValue);\n    let hash = table_hash(L, key);\n    if (value.ttisnil()) { /* delete */\n        mark_dead(t, hash);\n        return;\n    }\n\n    let e = t.strong.get(hash);\n    if (e) {\n        e.value.setfrom(value);\n    } else {\n        let k;\n        let kv = key.value;\n        if ((key.ttisfloat() && (kv|0) === kv)) { /* does index fit in an integer? */\n            /* insert it as an integer */\n            k = new lobject.TValue(LUA_TNUMINT, kv);\n        } else {\n            k = new lobject.TValue(key.type, kv);\n        }\n        let v = new lobject.TValue(value.type, value.value);\n        add(t, hash, k, v);\n    }\n};\n\n/*\n** Try to find a boundary in table 't'. A 'boundary' is an integer index\n** such that t[i] is non-nil and t[i+1] is nil (and 0 if t[1] is nil).\n*/\nconst luaH_getn = function(t) {\n    let i = 0;\n    let j = t.strong.size + 1; /* use known size of Map to bound search */\n    /* now do a binary search between them */\n    while (j - i > 1) {\n        let m = Math.floor((i+j)/2);\n        if (luaH_getint(t, m).ttisnil()) j = m;\n        else i = m;\n    }\n    return i;\n};\n\nconst luaH_next = function(L, table, keyI) {\n    let keyO = L.stack[keyI];\n\n    let entry;\n    if (keyO.type === LUA_TNIL) {\n        entry = table.f;\n        if (!entry)\n            return false;\n    } else {\n        /* First find current key */\n        let hash = table_hash(L, keyO);\n        /* Look in main part of table */\n        entry = table.strong.get(hash);\n        if (entry) {\n            entry = entry.n;\n            if (!entry)\n                return false;\n        } else {\n            /* Try dead keys */\n            entry = (table.dead_weak && table.dead_weak.get(hash)) || table.dead_strong.get(hash);\n            if (!entry)\n                /* item not in table */\n                return ldebug.luaG_runerror(L, to_luastring(\"invalid key to 'next'\"));\n            /* Iterate until either out of keys, or until finding a non-dead key */\n            do {\n                entry = entry.n;\n                if (!entry)\n                    return false;\n            } while (entry.key.ttisdeadkey());\n        }\n    }\n    lobject.setobj2s(L, keyI, entry.key);\n    lobject.setobj2s(L, keyI+1, entry.value);\n    return true;\n};\n\nmodule.exports.invalidateTMcache = invalidateTMcache;\nmodule.exports.luaH_get     = luaH_get;\nmodule.exports.luaH_getint  = luaH_getint;\nmodule.exports.luaH_getn    = luaH_getn;\nmodule.exports.luaH_getstr  = luaH_getstr;\nmodule.exports.luaH_setfrom = luaH_setfrom;\nmodule.exports.luaH_setint  = luaH_setint;\nmodule.exports.luaH_new     = luaH_new;\nmodule.exports.luaH_next    = luaH_next;\nmodule.exports.Table        = Table;\n","\"use strict\";\n\nconst { LUA_MAXINTEGER } = require('./luaconf.js');\nconst {\n    LUA_OPEQ,\n    LUA_OPLT,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TTABLE,\n    lua_call,\n    lua_checkstack,\n    lua_compare,\n    lua_createtable,\n    lua_geti,\n    lua_getmetatable,\n    lua_gettop,\n    lua_insert,\n    lua_isnil,\n    lua_isnoneornil,\n    lua_isstring,\n    lua_pop,\n    lua_pushinteger,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawget,\n    lua_setfield,\n    lua_seti,\n    lua_settop,\n    lua_toboolean,\n    lua_type\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addlstring,\n    luaL_addvalue,\n    luaL_argcheck,\n    luaL_buffinit,\n    luaL_checkinteger,\n    luaL_checktype,\n    luaL_error,\n    luaL_len,\n    luaL_newlib,\n    luaL_opt,\n    luaL_optinteger,\n    luaL_optlstring,\n    luaL_pushresult,\n    luaL_typename\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst { to_luastring } = require(\"./fengaricore.js\");\n\n/*\n** Operations that an object must define to mimic a table\n** (some functions only need some of them)\n*/\nconst TAB_R  = 1;               /* read */\nconst TAB_W  = 2;               /* write */\nconst TAB_L  = 4;               /* length */\nconst TAB_RW = (TAB_R | TAB_W); /* read/write */\n\nconst checkfield = function(L, key, n) {\n    lua_pushstring(L, key);\n    return lua_rawget(L, -n) !== LUA_TNIL;\n};\n\n/*\n** Check that 'arg' either is a table or can behave like one (that is,\n** has a metatable with the required metamethods)\n*/\nconst checktab = function(L, arg, what) {\n    if (lua_type(L, arg) !== LUA_TTABLE) {  /* is it not a table? */\n        let n = 1;\n        if (lua_getmetatable(L, arg) &&  /* must have metatable */\n            (!(what & TAB_R) || checkfield(L, to_luastring(\"__index\", true), ++n)) &&\n            (!(what & TAB_W) || checkfield(L, to_luastring(\"__newindex\", true), ++n)) &&\n            (!(what & TAB_L) || checkfield(L, to_luastring(\"__len\", true), ++n))) {\n            lua_pop(L, n);  /* pop metatable and tested metamethods */\n        }\n        else\n            luaL_checktype(L, arg, LUA_TTABLE);  /* force an error */\n    }\n};\n\nconst aux_getn = function(L, n, w) {\n    checktab(L, n, w | TAB_L);\n    return luaL_len(L, n);\n};\n\nconst addfield = function(L, b, i) {\n    lua_geti(L, 1, i);\n    if (!lua_isstring(L, -1))\n        luaL_error(L, to_luastring(\"invalid value (%s) at index %d in table for 'concat'\"),\n            luaL_typename(L, -1), i);\n\n    luaL_addvalue(b);\n};\n\nconst tinsert = function(L) {\n    let e = aux_getn(L, 1, TAB_RW) + 1;  /* first empty element */\n    let pos;\n    switch (lua_gettop(L)) {\n        case 2:\n            pos = e;\n            break;\n        case 3: {\n            pos = luaL_checkinteger(L, 2);  /* 2nd argument is the position */\n            luaL_argcheck(L, 1 <= pos && pos <= e, 2, \"position out of bounds\");\n            for (let i = e; i > pos; i--) {  /* move up elements */\n                lua_geti(L, 1, i - 1);\n                lua_seti(L, 1, i);  /* t[i] = t[i - 1] */\n            }\n            break;\n        }\n        default: {\n            return luaL_error(L, \"wrong number of arguments to 'insert'\");\n        }\n    }\n\n    lua_seti(L, 1, pos);  /* t[pos] = v */\n    return 0;\n};\n\nconst tremove = function(L) {\n    let size = aux_getn(L, 1, TAB_RW);\n    let pos = luaL_optinteger(L, 2, size);\n    if (pos !== size)  /* validate 'pos' if given */\n        luaL_argcheck(L, 1 <= pos && pos <= size + 1, 1, \"position out of bounds\");\n    lua_geti(L, 1, pos);  /* result = t[pos] */\n    for (; pos < size; pos++) {\n        lua_geti(L, 1, pos + 1);\n        lua_seti(L, 1, pos);  /* t[pos] = t[pos + 1] */\n    }\n    lua_pushnil(L);\n    lua_seti(L, 1, pos);  /* t[pos] = nil */\n    return 1;\n};\n\n/*\n** Copy elements (1[f], ..., 1[e]) into (tt[t], tt[t+1], ...). Whenever\n** possible, copy in increasing order, which is better for rehashing.\n** \"possible\" means destination after original range, or smaller\n** than origin, or copying to another table.\n*/\nconst tmove = function(L) {\n    let f = luaL_checkinteger(L, 2);\n    let e = luaL_checkinteger(L, 3);\n    let t = luaL_checkinteger(L, 4);\n    let tt = !lua_isnoneornil(L, 5) ? 5 : 1;  /* destination table */\n    checktab(L, 1, TAB_R);\n    checktab(L, tt, TAB_W);\n    if (e >= f) {  /* otherwise, nothing to move */\n        luaL_argcheck(L, f > 0 || e < LUA_MAXINTEGER + f, 3, \"too many elements to move\");\n        let n = e - f + 1;  /* number of elements to move */\n        luaL_argcheck(L, t <= LUA_MAXINTEGER - n + 1, 4, \"destination wrap around\");\n\n        if (t > e || t <= f || (tt !== 1 && lua_compare(L, 1, tt, LUA_OPEQ) !== 1)) {\n            for (let i = 0; i < n; i++) {\n                lua_geti(L, 1, f + i);\n                lua_seti(L, tt, t + i);\n            }\n        } else {\n            for (let i = n - 1; i >= 0; i--) {\n                lua_geti(L, 1, f + i);\n                lua_seti(L, tt, t + i);\n            }\n        }\n    }\n\n    lua_pushvalue(L, tt);  /* return destination table */\n    return 1;\n};\n\nconst tconcat = function(L) {\n    let last = aux_getn(L, 1, TAB_R);\n    let sep = luaL_optlstring(L, 2, \"\");\n    let lsep = sep.length;\n    let i = luaL_optinteger(L, 3, 1);\n    last = luaL_optinteger(L, 4, last);\n\n    let b = new luaL_Buffer();\n    luaL_buffinit(L, b);\n\n    for (; i < last; i++) {\n        addfield(L, b, i);\n        luaL_addlstring(b, sep, lsep);\n    }\n\n    if (i === last)\n        addfield(L, b, i);\n\n    luaL_pushresult(b);\n\n    return 1;\n};\n\nconst pack = function(L) {\n    let n = lua_gettop(L);  /* number of elements to pack */\n    lua_createtable(L, n, 1);  /* create result table */\n    lua_insert(L, 1);  /* put it at index 1 */\n    for (let i = n; i >= 1; i--)  /* assign elements */\n        lua_seti(L, 1, i);\n    lua_pushinteger(L, n);\n    lua_setfield(L, 1, to_luastring(\"n\"));  /* t.n = number of elements */\n    return 1;  /* return table */\n};\n\nconst unpack = function(L) {\n    let i = luaL_optinteger(L, 2, 1);\n    let e = luaL_opt(L, luaL_checkinteger, 3, luaL_len(L, 1));\n    if (i > e) return 0;  /* empty range */\n    let n = e - i;  /* number of elements minus 1 (avoid overflows) */\n    if (n >= Number.MAX_SAFE_INTEGER || !lua_checkstack(L, ++n))\n        return luaL_error(L, to_luastring(\"too many results to unpack\"));\n    for (; i < e; i++)  /* push arg[i..e - 1] (to avoid overflows) */\n        lua_geti(L, 1, i);\n    lua_geti(L, 1, e);  /* push last element */\n    return n;\n};\n\nconst l_randomizePivot = function() {\n    return Math.floor(Math.random()*0x100000000);\n};\n\nconst RANLIMIT = 100;\n\nconst set2 = function(L, i, j) {\n    lua_seti(L, 1, i);\n    lua_seti(L, 1, j);\n};\n\nconst sort_comp = function(L, a, b) {\n    if (lua_isnil(L, 2))  /* no function? */\n        return lua_compare(L, a, b, LUA_OPLT);  /* a < b */\n    else {  /* function */\n        lua_pushvalue(L, 2);    /* push function */\n        lua_pushvalue(L, a-1);  /* -1 to compensate function */\n        lua_pushvalue(L, b-2);  /* -2 to compensate function and 'a' */\n        lua_call(L, 2, 1);      /* call function */\n        let res = lua_toboolean(L, -1);  /* get result */\n        lua_pop(L, 1);          /* pop result */\n        return res;\n    }\n};\n\nconst partition = function(L, lo, up) {\n    let i = lo;  /* will be incremented before first use */\n    let j = up - 1;  /* will be decremented before first use */\n    /* loop invariant: a[lo .. i] <= P <= a[j .. up] */\n    for (;;) {\n        /* next loop: repeat ++i while a[i] < P */\n        while (lua_geti(L, 1, ++i), sort_comp(L, -1, -2)) {\n            if (i == up - 1)  /* a[i] < P  but a[up - 1] == P  ?? */\n                luaL_error(L, to_luastring(\"invalid order function for sorting\"));\n            lua_pop(L, 1);  /* remove a[i] */\n        }\n        /* after the loop, a[i] >= P and a[lo .. i - 1] < P */\n        /* next loop: repeat --j while P < a[j] */\n        while (lua_geti(L, 1, --j), sort_comp(L, -3, -1)) {\n            if (j < i)  /* j < i  but  a[j] > P ?? */\n                luaL_error(L, to_luastring(\"invalid order function for sorting\"));\n            lua_pop(L, 1);  /* remove a[j] */\n        }\n        /* after the loop, a[j] <= P and a[j + 1 .. up] >= P */\n        if (j < i) {  /* no elements out of place? */\n            /* a[lo .. i - 1] <= P <= a[j + 1 .. i .. up] */\n            lua_pop(L, 1);  /* pop a[j] */\n            /* swap pivot (a[up - 1]) with a[i] to satisfy pos-condition */\n            set2(L, up - 1, i);\n            return i;\n        }\n        /* otherwise, swap a[i] - a[j] to restore invariant and repeat */\n        set2(L, i, j);\n    }\n};\n\nconst choosePivot = function(lo, up, rnd) {\n    let r4 = Math.floor((up - lo) / 4);  /* range/4 */\n    let p = rnd % (r4 * 2) + (lo + r4);\n    lualib.lua_assert(lo + r4 <= p && p <= up - r4);\n    return p;\n};\n\nconst auxsort = function(L, lo, up, rnd) {\n    while (lo < up) {  /* loop for tail recursion */\n        /* sort elements 'lo', 'p', and 'up' */\n        lua_geti(L, 1, lo);\n        lua_geti(L, 1, up);\n        if (sort_comp(L, -1, -2))  /* a[up] < a[lo]? */\n            set2(L, lo, up);  /* swap a[lo] - a[up] */\n        else\n            lua_pop(L, 2);  /* remove both values */\n        if (up - lo == 1)  /* only 2 elements? */\n            return;  /* already sorted */\n        let p;  /* Pivot index */\n        if (up - lo < RANLIMIT || rnd === 0)  /* small interval or no randomize? */\n            p = Math.floor((lo + up)/2);  /* middle element is a good pivot */\n        else  /* for larger intervals, it is worth a random pivot */\n            p = choosePivot(lo, up, rnd);\n        lua_geti(L, 1, p);\n        lua_geti(L, 1, lo);\n        if (sort_comp(L, -2, -1))  /* a[p] < a[lo]? */\n            set2(L, p, lo);  /* swap a[p] - a[lo] */\n        else {\n            lua_pop(L, 1);  /* remove a[lo] */\n            lua_geti(L, 1, up);\n            if (sort_comp(L, -1, -2))  /* a[up] < a[p]? */\n                set2(L, p, up);  /* swap a[up] - a[p] */\n            else\n                lua_pop(L, 2);\n        }\n        if (up - lo == 2)  /* only 3 elements? */\n            return;  /* already sorted */\n        lua_geti(L, 1, p);  /* get middle element (Pivot) */\n        lua_pushvalue(L, -1);  /* push Pivot */\n        lua_geti(L, 1, up - 1);  /* push a[up - 1] */\n        set2(L, p, up - 1);  /* swap Pivot (a[p]) with a[up - 1] */\n        p = partition(L, lo, up);\n        let n;\n        /* a[lo .. p - 1] <= a[p] == P <= a[p + 1 .. up] */\n        if (p - lo < up - p) {  /* lower interval is smaller? */\n            auxsort(L, lo, p - 1, rnd);  /* call recursively for lower interval */\n            n = p - lo;  /* size of smaller interval */\n            lo = p + 1;  /* tail call for [p + 1 .. up] (upper interval) */\n        } else {\n            auxsort(L, p + 1, up, rnd);  /* call recursively for upper interval */\n            n = up - p;  /* size of smaller interval */\n            up = p - 1;  /* tail call for [lo .. p - 1]  (lower interval) */\n        }\n        if ((up - lo) / 128 > n) /* partition too imbalanced? */\n            rnd = l_randomizePivot();  /* try a new randomization */\n    }  /* tail call auxsort(L, lo, up, rnd) */\n};\n\nconst sort = function(L) {\n    let n = aux_getn(L, 1, TAB_RW);\n    if (n > 1) {  /* non-trivial interval? */\n        luaL_argcheck(L, n < LUA_MAXINTEGER, 1, \"array too big\");\n        if (!lua_isnoneornil(L, 2))  /* is there a 2nd argument? */\n            luaL_checktype(L, 2, LUA_TFUNCTION);  /* must be a function */\n        lua_settop(L, 2);  /* make sure there are two arguments */\n        auxsort(L, 1, n, 0);\n    }\n    return 0;\n};\n\nconst tab_funcs = {\n    \"concat\": tconcat,\n    \"insert\": tinsert,\n    \"move\":   tmove,\n    \"pack\":   pack,\n    \"remove\": tremove,\n    \"sort\":   sort,\n    \"unpack\": unpack\n};\n\nconst luaopen_table = function(L) {\n    luaL_newlib(L, tab_funcs);\n    return 1;\n};\n\nmodule.exports.luaopen_table = luaopen_table;\n","\"use strict\";\n\nconst {\n    constant_types: {\n        LUA_TTABLE,\n        LUA_TUSERDATA\n    },\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require('./llimits.js');\nconst lobject = require('./lobject.js');\nconst ldo     = require('./ldo.js');\nconst lstate  = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_new\n} = require('./lstring.js');\nconst ltable  = require('./ltable.js');\nconst ldebug  = require('./ldebug.js');\nconst lvm     = require('./lvm.js');\n\nconst luaT_typenames_ = [\n    \"no value\",\n    \"nil\",\n    \"boolean\",\n    \"userdata\",\n    \"number\",\n    \"string\",\n    \"table\",\n    \"function\",\n    \"userdata\",\n    \"thread\",\n    \"proto\" /* this last case is used for tests only */\n].map(e => to_luastring(e));\n\nconst ttypename = function(t) {\n    return luaT_typenames_[t + 1];\n};\n\n\n/*\n* WARNING: if you change the order of this enumeration,\n* grep \"ORDER TM\" and \"ORDER OP\"\n*/\nconst TMS = {\n    TM_INDEX:    0,\n    TM_NEWINDEX: 1,\n    TM_GC:       2,\n    TM_MODE:     3,\n    TM_LEN:      4,\n    TM_EQ:       5,  /* last tag method with fast access */\n    TM_ADD:      6,\n    TM_SUB:      7,\n    TM_MUL:      8,\n    TM_MOD:      9,\n    TM_POW:     10,\n    TM_DIV:     11,\n    TM_IDIV:    12,\n    TM_BAND:    13 ,\n    TM_BOR:     14,\n    TM_BXOR:    15,\n    TM_SHL:     16,\n    TM_SHR:     17,\n    TM_UNM:     18,\n    TM_BNOT:    19,\n    TM_LT:      20,\n    TM_LE:      21,\n    TM_CONCAT:  22,\n    TM_CALL:    23,\n    TM_N:       24  /* number of elements in the enum */\n};\n\nconst luaT_init = function(L) {\n    L.l_G.tmname[TMS.TM_INDEX]    = new luaS_new(L, to_luastring(\"__index\", true));\n    L.l_G.tmname[TMS.TM_NEWINDEX] = new luaS_new(L, to_luastring(\"__newindex\", true));\n    L.l_G.tmname[TMS.TM_GC]       = new luaS_new(L, to_luastring(\"__gc\", true));\n    L.l_G.tmname[TMS.TM_MODE]     = new luaS_new(L, to_luastring(\"__mode\", true));\n    L.l_G.tmname[TMS.TM_LEN]      = new luaS_new(L, to_luastring(\"__len\", true));\n    L.l_G.tmname[TMS.TM_EQ]       = new luaS_new(L, to_luastring(\"__eq\", true));\n    L.l_G.tmname[TMS.TM_ADD]      = new luaS_new(L, to_luastring(\"__add\", true));\n    L.l_G.tmname[TMS.TM_SUB]      = new luaS_new(L, to_luastring(\"__sub\", true));\n    L.l_G.tmname[TMS.TM_MUL]      = new luaS_new(L, to_luastring(\"__mul\", true));\n    L.l_G.tmname[TMS.TM_MOD]      = new luaS_new(L, to_luastring(\"__mod\", true));\n    L.l_G.tmname[TMS.TM_POW]      = new luaS_new(L, to_luastring(\"__pow\", true));\n    L.l_G.tmname[TMS.TM_DIV]      = new luaS_new(L, to_luastring(\"__div\", true));\n    L.l_G.tmname[TMS.TM_IDIV]     = new luaS_new(L, to_luastring(\"__idiv\", true));\n    L.l_G.tmname[TMS.TM_BAND]     = new luaS_new(L, to_luastring(\"__band\", true));\n    L.l_G.tmname[TMS.TM_BOR]      = new luaS_new(L, to_luastring(\"__bor\", true));\n    L.l_G.tmname[TMS.TM_BXOR]     = new luaS_new(L, to_luastring(\"__bxor\", true));\n    L.l_G.tmname[TMS.TM_SHL]      = new luaS_new(L, to_luastring(\"__shl\", true));\n    L.l_G.tmname[TMS.TM_SHR]      = new luaS_new(L, to_luastring(\"__shr\", true));\n    L.l_G.tmname[TMS.TM_UNM]      = new luaS_new(L, to_luastring(\"__unm\", true));\n    L.l_G.tmname[TMS.TM_BNOT]     = new luaS_new(L, to_luastring(\"__bnot\", true));\n    L.l_G.tmname[TMS.TM_LT]       = new luaS_new(L, to_luastring(\"__lt\", true));\n    L.l_G.tmname[TMS.TM_LE]       = new luaS_new(L, to_luastring(\"__le\", true));\n    L.l_G.tmname[TMS.TM_CONCAT]   = new luaS_new(L, to_luastring(\"__concat\", true));\n    L.l_G.tmname[TMS.TM_CALL]     = new luaS_new(L, to_luastring(\"__call\", true));\n};\n\n/*\n** Return the name of the type of an object. For tables and userdata\n** with metatable, use their '__name' metafield, if present.\n*/\nconst __name = to_luastring('__name', true);\nconst luaT_objtypename = function(L, o) {\n    let mt;\n    if ((o.ttistable() && (mt = o.value.metatable) !== null) ||\n        (o.ttisfulluserdata() && (mt = o.value.metatable) !== null)) {\n        let name = ltable.luaH_getstr(mt, luaS_bless(L, __name));\n        if (name.ttisstring())\n            return name.svalue();\n    }\n    return ttypename(o.ttnov());\n};\n\nconst luaT_callTM = function(L, f, p1, p2, p3, hasres) {\n    let func = L.top;\n\n    lobject.pushobj2s(L, f); /* push function (assume EXTRA_STACK) */\n    lobject.pushobj2s(L, p1); /* 1st argument */\n    lobject.pushobj2s(L, p2); /* 2nd argument */\n\n    if (!hasres)  /* no result? 'p3' is third argument */\n        lobject.pushobj2s(L, p3); /* 3rd argument */\n\n    if (L.ci.callstatus & lstate.CIST_LUA)\n        ldo.luaD_call(L, func, hasres);\n    else\n        ldo.luaD_callnoyield(L, func, hasres);\n\n    if (hasres) {  /* if has result, move it to its place */\n        let tv = L.stack[L.top-1];\n        delete L.stack[--L.top];\n        p3.setfrom(tv);\n    }\n};\n\nconst luaT_callbinTM = function(L, p1, p2, res, event) {\n    let tm = luaT_gettmbyobj(L, p1, event);\n    if (tm.ttisnil())\n        tm = luaT_gettmbyobj(L, p2, event);\n    if (tm.ttisnil()) return false;\n    luaT_callTM(L, tm, p1, p2, res, 1);\n    return true;\n};\n\nconst luaT_trybinTM = function(L, p1, p2, res, event) {\n    if (!luaT_callbinTM(L, p1, p2, res, event)) {\n        switch (event) {\n            case TMS.TM_CONCAT:\n                return ldebug.luaG_concaterror(L, p1, p2);\n            case TMS.TM_BAND: case TMS.TM_BOR: case TMS.TM_BXOR:\n            case TMS.TM_SHL: case TMS.TM_SHR: case TMS.TM_BNOT: {\n                let n1 = lvm.tonumber(p1);\n                let n2 = lvm.tonumber(p2);\n                if (n1 !== false && n2 !== false)\n                    return ldebug.luaG_tointerror(L, p1, p2);\n                else\n                    return ldebug.luaG_opinterror(L, p1, p2, to_luastring(\"perform bitwise operation on\", true));\n            }\n            default:\n                return ldebug.luaG_opinterror(L, p1, p2, to_luastring(\"perform arithmetic on\", true));\n        }\n    }\n};\n\nconst luaT_callorderTM = function(L, p1, p2, event) {\n    let res = new lobject.TValue();\n    if (!luaT_callbinTM(L, p1, p2, res, event))\n        return null;\n    else\n        return !res.l_isfalse();\n};\n\nconst fasttm = function(l, et, e) {\n    return et === null ? null :\n        (et.flags & (1 << e)) ? null : luaT_gettm(et, e, l.l_G.tmname[e]);\n};\n\nconst luaT_gettm = function(events, event, ename) {\n    const tm = ltable.luaH_getstr(events, ename);\n    lua_assert(event <= TMS.TM_EQ);\n    if (tm.ttisnil()) {  /* no tag method? */\n        events.flags |= 1<<event;  /* cache this fact */\n        return null;\n    }\n    else return tm;\n};\n\nconst luaT_gettmbyobj = function(L, o, event) {\n    let mt;\n    switch(o.ttnov()) {\n        case LUA_TTABLE:\n        case LUA_TUSERDATA:\n            mt = o.value.metatable;\n            break;\n        default:\n            mt = L.l_G.mt[o.ttnov()];\n    }\n\n    return mt ? ltable.luaH_getstr(mt, L.l_G.tmname[event]) : lobject.luaO_nilobject;\n};\n\nmodule.exports.fasttm           = fasttm;\nmodule.exports.TMS              = TMS;\nmodule.exports.luaT_callTM      = luaT_callTM;\nmodule.exports.luaT_callbinTM   = luaT_callbinTM;\nmodule.exports.luaT_trybinTM    = luaT_trybinTM;\nmodule.exports.luaT_callorderTM = luaT_callorderTM;\nmodule.exports.luaT_gettm       = luaT_gettm;\nmodule.exports.luaT_gettmbyobj  = luaT_gettmbyobj;\nmodule.exports.luaT_init        = luaT_init;\nmodule.exports.luaT_objtypename = luaT_objtypename;\nmodule.exports.ttypename        = ttypename;\n","\"use strict\";\n\nconst defs   = require(\"./defs.js\");\nconst lapi   = require(\"./lapi.js\");\nconst ldebug = require(\"./ldebug.js\");\nconst ldo    = require(\"./ldo.js\");\nconst lstate = require(\"./lstate.js\");\n\nmodule.exports.LUA_AUTHORS             = defs.LUA_AUTHORS;\nmodule.exports.LUA_COPYRIGHT           = defs.LUA_COPYRIGHT;\nmodule.exports.LUA_ERRERR              = defs.thread_status.LUA_ERRERR;\nmodule.exports.LUA_ERRGCMM             = defs.thread_status.LUA_ERRGCMM;\nmodule.exports.LUA_ERRMEM              = defs.thread_status.LUA_ERRMEM;\nmodule.exports.LUA_ERRRUN              = defs.thread_status.LUA_ERRRUN;\nmodule.exports.LUA_ERRSYNTAX           = defs.thread_status.LUA_ERRSYNTAX;\nmodule.exports.LUA_HOOKCALL            = defs.LUA_HOOKCALL;\nmodule.exports.LUA_HOOKCOUNT           = defs.LUA_HOOKCOUNT;\nmodule.exports.LUA_HOOKLINE            = defs.LUA_HOOKLINE;\nmodule.exports.LUA_HOOKRET             = defs.LUA_HOOKRET;\nmodule.exports.LUA_HOOKTAILCALL        = defs.LUA_HOOKTAILCALL;\nmodule.exports.LUA_MASKCALL            = defs.LUA_MASKCALL;\nmodule.exports.LUA_MASKCOUNT           = defs.LUA_MASKCOUNT;\nmodule.exports.LUA_MASKLINE            = defs.LUA_MASKLINE;\nmodule.exports.LUA_MASKRET             = defs.LUA_MASKRET;\nmodule.exports.LUA_MINSTACK            = defs.LUA_MINSTACK;\nmodule.exports.LUA_MULTRET             = defs.LUA_MULTRET;\nmodule.exports.LUA_NUMTAGS             = defs.constant_types.LUA_NUMTAGS;\nmodule.exports.LUA_OK                  = defs.thread_status.LUA_OK;\nmodule.exports.LUA_OPADD               = defs.LUA_OPADD;\nmodule.exports.LUA_OPBAND              = defs.LUA_OPBAND;\nmodule.exports.LUA_OPBNOT              = defs.LUA_OPBNOT;\nmodule.exports.LUA_OPBOR               = defs.LUA_OPBOR;\nmodule.exports.LUA_OPBXOR              = defs.LUA_OPBXOR;\nmodule.exports.LUA_OPDIV               = defs.LUA_OPDIV;\nmodule.exports.LUA_OPEQ                = defs.LUA_OPEQ;\nmodule.exports.LUA_OPIDIV              = defs.LUA_OPIDIV;\nmodule.exports.LUA_OPLE                = defs.LUA_OPLE;\nmodule.exports.LUA_OPLT                = defs.LUA_OPLT;\nmodule.exports.LUA_OPMOD               = defs.LUA_OPMOD;\nmodule.exports.LUA_OPMUL               = defs.LUA_OPMUL;\nmodule.exports.LUA_OPPOW               = defs.LUA_OPPOW;\nmodule.exports.LUA_OPSHL               = defs.LUA_OPSHL;\nmodule.exports.LUA_OPSHR               = defs.LUA_OPSHR;\nmodule.exports.LUA_OPSUB               = defs.LUA_OPSUB;\nmodule.exports.LUA_OPUNM               = defs.LUA_OPUNM;\nmodule.exports.LUA_REGISTRYINDEX       = defs.LUA_REGISTRYINDEX;\nmodule.exports.LUA_RELEASE             = defs.LUA_RELEASE;\nmodule.exports.LUA_RIDX_GLOBALS        = defs.LUA_RIDX_GLOBALS;\nmodule.exports.LUA_RIDX_LAST           = defs.LUA_RIDX_LAST;\nmodule.exports.LUA_RIDX_MAINTHREAD     = defs.LUA_RIDX_MAINTHREAD;\nmodule.exports.LUA_SIGNATURE           = defs.LUA_SIGNATURE;\nmodule.exports.LUA_TNONE               = defs.constant_types.LUA_TNONE;\nmodule.exports.LUA_TNIL                = defs.constant_types.LUA_TNIL;\nmodule.exports.LUA_TBOOLEAN            = defs.constant_types.LUA_TBOOLEAN;\nmodule.exports.LUA_TLIGHTUSERDATA      = defs.constant_types.LUA_TLIGHTUSERDATA;\nmodule.exports.LUA_TNUMBER             = defs.constant_types.LUA_TNUMBER;\nmodule.exports.LUA_TSTRING             = defs.constant_types.LUA_TSTRING;\nmodule.exports.LUA_TTABLE              = defs.constant_types.LUA_TTABLE;\nmodule.exports.LUA_TFUNCTION           = defs.constant_types.LUA_TFUNCTION;\nmodule.exports.LUA_TUSERDATA           = defs.constant_types.LUA_TUSERDATA;\nmodule.exports.LUA_TTHREAD             = defs.constant_types.LUA_TTHREAD;\nmodule.exports.LUA_VERSION             = defs.LUA_VERSION;\nmodule.exports.LUA_VERSION_MAJOR       = defs.LUA_VERSION_MAJOR;\nmodule.exports.LUA_VERSION_MINOR       = defs.LUA_VERSION_MINOR;\nmodule.exports.LUA_VERSION_NUM         = defs.LUA_VERSION_NUM;\nmodule.exports.LUA_VERSION_RELEASE     = defs.LUA_VERSION_RELEASE;\nmodule.exports.LUA_YIELD               = defs.thread_status.LUA_YIELD;\nmodule.exports.lua_Debug               = defs.lua_Debug;\nmodule.exports.lua_upvalueindex        = defs.lua_upvalueindex;\nmodule.exports.lua_absindex            = lapi.lua_absindex;\nmodule.exports.lua_arith               = lapi.lua_arith;\nmodule.exports.lua_atpanic             = lapi.lua_atpanic;\nmodule.exports.lua_atnativeerror       = lapi.lua_atnativeerror;\nmodule.exports.lua_call                = lapi.lua_call;\nmodule.exports.lua_callk               = lapi.lua_callk;\nmodule.exports.lua_checkstack          = lapi.lua_checkstack;\nmodule.exports.lua_close               = lstate.lua_close;\nmodule.exports.lua_compare             = lapi.lua_compare;\nmodule.exports.lua_concat              = lapi.lua_concat;\nmodule.exports.lua_copy                = lapi.lua_copy;\nmodule.exports.lua_createtable         = lapi.lua_createtable;\nmodule.exports.lua_dump                = lapi.lua_dump;\nmodule.exports.lua_error               = lapi.lua_error;\nmodule.exports.lua_gc                  = lapi.lua_gc;\nmodule.exports.lua_getallocf           = lapi.lua_getallocf;\nmodule.exports.lua_getextraspace       = lapi.lua_getextraspace;\nmodule.exports.lua_getfield            = lapi.lua_getfield;\nmodule.exports.lua_getglobal           = lapi.lua_getglobal;\nmodule.exports.lua_gethook             = ldebug.lua_gethook;\nmodule.exports.lua_gethookcount        = ldebug.lua_gethookcount;\nmodule.exports.lua_gethookmask         = ldebug.lua_gethookmask;\nmodule.exports.lua_geti                = lapi.lua_geti;\nmodule.exports.lua_getinfo             = ldebug.lua_getinfo;\nmodule.exports.lua_getlocal            = ldebug.lua_getlocal;\nmodule.exports.lua_getmetatable        = lapi.lua_getmetatable;\nmodule.exports.lua_getstack            = ldebug.lua_getstack;\nmodule.exports.lua_gettable            = lapi.lua_gettable;\nmodule.exports.lua_gettop              = lapi.lua_gettop;\nmodule.exports.lua_getupvalue          = lapi.lua_getupvalue;\nmodule.exports.lua_getuservalue        = lapi.lua_getuservalue;\nmodule.exports.lua_insert              = lapi.lua_insert;\nmodule.exports.lua_isboolean           = lapi.lua_isboolean;\nmodule.exports.lua_iscfunction         = lapi.lua_iscfunction;\nmodule.exports.lua_isfunction          = lapi.lua_isfunction;\nmodule.exports.lua_isinteger           = lapi.lua_isinteger;\nmodule.exports.lua_islightuserdata     = lapi.lua_islightuserdata;\nmodule.exports.lua_isnil               = lapi.lua_isnil;\nmodule.exports.lua_isnone              = lapi.lua_isnone;\nmodule.exports.lua_isnoneornil         = lapi.lua_isnoneornil;\nmodule.exports.lua_isnumber            = lapi.lua_isnumber;\nmodule.exports.lua_isproxy             = lapi.lua_isproxy;\nmodule.exports.lua_isstring            = lapi.lua_isstring;\nmodule.exports.lua_istable             = lapi.lua_istable;\nmodule.exports.lua_isthread            = lapi.lua_isthread;\nmodule.exports.lua_isuserdata          = lapi.lua_isuserdata;\nmodule.exports.lua_isyieldable         = ldo.lua_isyieldable;\nmodule.exports.lua_len                 = lapi.lua_len;\nmodule.exports.lua_load                = lapi.lua_load;\nmodule.exports.lua_newstate            = lstate.lua_newstate;\nmodule.exports.lua_newtable            = lapi.lua_newtable;\nmodule.exports.lua_newthread           = lstate.lua_newthread;\nmodule.exports.lua_newuserdata         = lapi.lua_newuserdata;\nmodule.exports.lua_next                = lapi.lua_next;\nmodule.exports.lua_pcall               = lapi.lua_pcall;\nmodule.exports.lua_pcallk              = lapi.lua_pcallk;\nmodule.exports.lua_pop                 = lapi.lua_pop;\nmodule.exports.lua_pushboolean         = lapi.lua_pushboolean;\nmodule.exports.lua_pushcclosure        = lapi.lua_pushcclosure;\nmodule.exports.lua_pushcfunction       = lapi.lua_pushcfunction;\nmodule.exports.lua_pushfstring         = lapi.lua_pushfstring;\nmodule.exports.lua_pushglobaltable     = lapi.lua_pushglobaltable;\nmodule.exports.lua_pushinteger         = lapi.lua_pushinteger;\nmodule.exports.lua_pushjsclosure       = lapi.lua_pushjsclosure;\nmodule.exports.lua_pushjsfunction      = lapi.lua_pushjsfunction;\nmodule.exports.lua_pushlightuserdata   = lapi.lua_pushlightuserdata;\nmodule.exports.lua_pushliteral         = lapi.lua_pushliteral;\nmodule.exports.lua_pushlstring         = lapi.lua_pushlstring;\nmodule.exports.lua_pushnil             = lapi.lua_pushnil;\nmodule.exports.lua_pushnumber          = lapi.lua_pushnumber;\nmodule.exports.lua_pushstring          = lapi.lua_pushstring;\nmodule.exports.lua_pushthread          = lapi.lua_pushthread;\nmodule.exports.lua_pushvalue           = lapi.lua_pushvalue;\nmodule.exports.lua_pushvfstring        = lapi.lua_pushvfstring;\nmodule.exports.lua_rawequal            = lapi.lua_rawequal;\nmodule.exports.lua_rawget              = lapi.lua_rawget;\nmodule.exports.lua_rawgeti             = lapi.lua_rawgeti;\nmodule.exports.lua_rawgetp             = lapi.lua_rawgetp;\nmodule.exports.lua_rawlen              = lapi.lua_rawlen;\nmodule.exports.lua_rawset              = lapi.lua_rawset;\nmodule.exports.lua_rawseti             = lapi.lua_rawseti;\nmodule.exports.lua_rawsetp             = lapi.lua_rawsetp;\nmodule.exports.lua_register            = lapi.lua_register;\nmodule.exports.lua_remove              = lapi.lua_remove;\nmodule.exports.lua_replace             = lapi.lua_replace;\nmodule.exports.lua_resume              = ldo.lua_resume;\nmodule.exports.lua_rotate              = lapi.lua_rotate;\nmodule.exports.lua_setallof            = ldo.lua_setallof;\nmodule.exports.lua_setfield            = lapi.lua_setfield;\nmodule.exports.lua_setglobal           = lapi.lua_setglobal;\nmodule.exports.lua_sethook             = ldebug.lua_sethook;\nmodule.exports.lua_seti                = lapi.lua_seti;\nmodule.exports.lua_setlocal            = ldebug.lua_setlocal;\nmodule.exports.lua_setmetatable        = lapi.lua_setmetatable;\nmodule.exports.lua_settable            = lapi.lua_settable;\nmodule.exports.lua_settop              = lapi.lua_settop;\nmodule.exports.lua_setupvalue          = lapi.lua_setupvalue;\nmodule.exports.lua_setuservalue        = lapi.lua_setuservalue;\nmodule.exports.lua_status              = lapi.lua_status;\nmodule.exports.lua_stringtonumber      = lapi.lua_stringtonumber;\nmodule.exports.lua_toboolean           = lapi.lua_toboolean;\nmodule.exports.lua_todataview          = lapi.lua_todataview;\nmodule.exports.lua_tointeger           = lapi.lua_tointeger;\nmodule.exports.lua_tointegerx          = lapi.lua_tointegerx;\nmodule.exports.lua_tojsstring          = lapi.lua_tojsstring;\nmodule.exports.lua_tolstring           = lapi.lua_tolstring;\nmodule.exports.lua_tonumber            = lapi.lua_tonumber;\nmodule.exports.lua_tonumberx           = lapi.lua_tonumberx;\nmodule.exports.lua_topointer           = lapi.lua_topointer;\nmodule.exports.lua_toproxy             = lapi.lua_toproxy;\nmodule.exports.lua_tostring            = lapi.lua_tostring;\nmodule.exports.lua_tothread            = lapi.lua_tothread;\nmodule.exports.lua_touserdata          = lapi.lua_touserdata;\nmodule.exports.lua_type                = lapi.lua_type;\nmodule.exports.lua_typename            = lapi.lua_typename;\nmodule.exports.lua_upvalueid           = lapi.lua_upvalueid;\nmodule.exports.lua_upvaluejoin         = lapi.lua_upvaluejoin;\nmodule.exports.lua_version             = lapi.lua_version;\nmodule.exports.lua_xmove               = lapi.lua_xmove;\nmodule.exports.lua_yield               = ldo.lua_yield;\nmodule.exports.lua_yieldk              = ldo.lua_yieldk;\nmodule.exports.lua_tocfunction         = lapi.lua_tocfunction;\n","\"use strict\";\n\nconst conf = (process.env.FENGARICONF ? JSON.parse(process.env.FENGARICONF) : {});\n\nconst {\n    LUA_VERSION_MAJOR,\n    LUA_VERSION_MINOR,\n    to_luastring\n} = require('./defs.js');\n\n/*\n** LUA_PATH_SEP is the character that separates templates in a path.\n** LUA_PATH_MARK is the string that marks the substitution points in a\n** template.\n** LUA_EXEC_DIR in a Windows path is replaced by the executable's\n** directory.\n*/\nconst LUA_PATH_SEP  = \";\";\nmodule.exports.LUA_PATH_SEP = LUA_PATH_SEP;\n\nconst LUA_PATH_MARK = \"?\";\nmodule.exports.LUA_PATH_MARK = LUA_PATH_MARK;\n\nconst LUA_EXEC_DIR  = \"!\";\nmodule.exports.LUA_EXEC_DIR = LUA_EXEC_DIR;\n\n/*\n@@ LUA_PATH_DEFAULT is the default path that Lua uses to look for\n** Lua libraries.\n@@ LUA_JSPATH_DEFAULT is the default path that Lua uses to look for\n** JS libraries.\n** CHANGE them if your machine has a non-conventional directory\n** hierarchy or if you want to install your libraries in\n** non-conventional directories.\n*/\nconst LUA_VDIR = LUA_VERSION_MAJOR + \".\" + LUA_VERSION_MINOR;\nmodule.exports.LUA_VDIR = LUA_VDIR;\n\nif (typeof process === \"undefined\") {\n    const LUA_DIRSEP = \"/\";\n    module.exports.LUA_DIRSEP = LUA_DIRSEP;\n\n    const LUA_LDIR = \"./lua/\" + LUA_VDIR + \"/\";\n    module.exports.LUA_LDIR = LUA_LDIR;\n\n    const LUA_JSDIR = LUA_LDIR;\n    module.exports.LUA_JSDIR = LUA_JSDIR;\n\n    const LUA_PATH_DEFAULT = to_luastring(\n        LUA_LDIR + \"?.lua;\" + LUA_LDIR + \"?/init.lua;\" +\n        /* LUA_JSDIR excluded as it is equal to LUA_LDIR */\n        \"./?.lua;./?/init.lua\"\n    );\n    module.exports.LUA_PATH_DEFAULT = LUA_PATH_DEFAULT;\n\n    const LUA_JSPATH_DEFAULT = to_luastring(\n        LUA_JSDIR + \"?.js;\" + LUA_JSDIR + \"loadall.js;./?.js\"\n    );\n    module.exports.LUA_JSPATH_DEFAULT = LUA_JSPATH_DEFAULT;\n} else if (require('os').platform() === 'win32') {\n    const LUA_DIRSEP = \"\\\\\";\n    module.exports.LUA_DIRSEP = LUA_DIRSEP;\n\n    /*\n    ** In Windows, any exclamation mark ('!') in the path is replaced by the\n    ** path of the directory of the executable file of the current process.\n    */\n    const LUA_LDIR = \"!\\\\lua\\\\\";\n    module.exports.LUA_LDIR = LUA_LDIR;\n\n    const LUA_JSDIR = \"!\\\\\";\n    module.exports.LUA_JSDIR = LUA_JSDIR;\n\n    const LUA_SHRDIR = \"!\\\\..\\\\share\\\\lua\\\\\" + LUA_VDIR + \"\\\\\";\n    module.exports.LUA_SHRDIR = LUA_SHRDIR;\n\n    const LUA_PATH_DEFAULT = to_luastring(\n        LUA_LDIR + \"?.lua;\" + LUA_LDIR + \"?\\\\init.lua;\" +\n        LUA_JSDIR + \"?.lua;\" + LUA_JSDIR + \"?\\\\init.lua;\" +\n        LUA_SHRDIR + \"?.lua;\" + LUA_SHRDIR + \"?\\\\init.lua;\" +\n        \".\\\\?.lua;.\\\\?\\\\init.lua\"\n    );\n    module.exports.LUA_PATH_DEFAULT = LUA_PATH_DEFAULT;\n\n    const LUA_JSPATH_DEFAULT = to_luastring(\n        LUA_JSDIR + \"?.js;\" +\n        LUA_JSDIR + \"..\\\\share\\\\lua\\\\\" + LUA_VDIR + \"\\\\?.js;\" +\n        LUA_JSDIR + \"loadall.js;.\\\\?.js\"\n    );\n    module.exports.LUA_JSPATH_DEFAULT = LUA_JSPATH_DEFAULT;\n} else {\n    const LUA_DIRSEP = \"/\";\n    module.exports.LUA_DIRSEP = LUA_DIRSEP;\n\n    const LUA_ROOT = \"/usr/local/\";\n    module.exports.LUA_ROOT = LUA_ROOT;\n    const LUA_ROOT2 = \"/usr/\";\n\n    const LUA_LDIR = LUA_ROOT + \"share/lua/\" + LUA_VDIR + \"/\";\n    const LUA_LDIR2 = LUA_ROOT2 + \"share/lua/\" + LUA_VDIR + \"/\";\n    module.exports.LUA_LDIR = LUA_LDIR;\n\n    const LUA_JSDIR = LUA_LDIR;\n    module.exports.LUA_JSDIR = LUA_JSDIR;\n    const LUA_JSDIR2 = LUA_LDIR2;\n\n    const LUA_PATH_DEFAULT = to_luastring(\n        LUA_LDIR + \"?.lua;\" + LUA_LDIR + \"?/init.lua;\" +\n        LUA_LDIR2 + \"?.lua;\" + LUA_LDIR2 + \"?/init.lua;\" +\n        /* LUA_JSDIR(2) excluded as it is equal to LUA_LDIR(2) */\n        \"./?.lua;./?/init.lua\"\n    );\n    module.exports.LUA_PATH_DEFAULT = LUA_PATH_DEFAULT;\n\n    const LUA_JSPATH_DEFAULT = to_luastring(\n        LUA_JSDIR + \"?.js;\" + LUA_JSDIR + \"loadall.js;\" +\n        LUA_JSDIR2 + \"?.js;\" + LUA_JSDIR2 + \"loadall.js;\" +\n        \"./?.js\"\n    );\n    module.exports.LUA_JSPATH_DEFAULT = LUA_JSPATH_DEFAULT;\n}\n\n/*\n@@ LUA_COMPAT_FLOATSTRING makes Lua format integral floats without a\n@@ a float mark ('.0').\n** This macro is not on by default even in compatibility mode,\n** because this is not really an incompatibility.\n*/\nconst LUA_COMPAT_FLOATSTRING = conf.LUA_COMPAT_FLOATSTRING || false;\n\nconst LUA_MAXINTEGER = 2147483647;\nconst LUA_MININTEGER = -2147483648;\n\n/*\n@@ LUAI_MAXSTACK limits the size of the Lua stack.\n** CHANGE it if you need a different limit. This limit is arbitrary;\n** its only purpose is to stop Lua from consuming unlimited stack\n** space (and to reserve some numbers for pseudo-indices).\n*/\nconst LUAI_MAXSTACK = conf.LUAI_MAXSTACK || 1000000;\n\n/*\n@@ LUA_IDSIZE gives the maximum size for the description of the source\n@@ of a function in debug information.\n** CHANGE it if you want a different size.\n*/\nconst LUA_IDSIZE = conf.LUA_IDSIZE || (60-1); /* fengari uses 1 less than lua as we don't embed the null byte */\n\nconst lua_integer2str = function(n) {\n    return String(n); /* should match behaviour of LUA_INTEGER_FMT */\n};\n\nconst lua_number2str = function(n) {\n    return String(Number(n.toPrecision(14))); /* should match behaviour of LUA_NUMBER_FMT */\n};\n\nconst lua_numbertointeger = function(n) {\n    return n >= LUA_MININTEGER && n < -LUA_MININTEGER ? n : false;\n};\n\nconst LUA_INTEGER_FRMLEN = \"\";\nconst LUA_NUMBER_FRMLEN = \"\";\n\nconst LUA_INTEGER_FMT = `%${LUA_INTEGER_FRMLEN}d`;\nconst LUA_NUMBER_FMT  = \"%.14g\";\n\nconst lua_getlocaledecpoint = function() {\n    /* we hard-code the decimal point to '.' as a user cannot change the\n       locale in most JS environments, and in that you can, a multi-byte\n       locale is common.\n    */\n    return 46 /* '.'.charCodeAt(0) */;\n};\n\nconst luai_apicheck = function(l, e) {\n    if (!e) throw Error(e);\n};\n\n/*\n@@ LUAL_BUFFERSIZE is the buffer size used by the lauxlib buffer system.\n*/\nconst LUAL_BUFFERSIZE = conf.LUAL_BUFFERSIZE || 8192;\n\n// See: http://croquetweak.blogspot.fr/2014/08/deconstructing-floats-frexp-and-ldexp.html\nconst frexp = function(value) {\n    if (value === 0) return [value, 0];\n    var data = new DataView(new ArrayBuffer(8));\n    data.setFloat64(0, value);\n    var bits = (data.getUint32(0) >>> 20) & 0x7FF;\n    if (bits === 0) { // denormal\n        data.setFloat64(0, value * Math.pow(2, 64));  // exp + 64\n        bits = ((data.getUint32(0) >>> 20) & 0x7FF) - 64;\n    }\n    var exponent = bits - 1022;\n    var mantissa = ldexp(value, -exponent);\n    return [mantissa, exponent];\n};\n\nconst ldexp = function(mantissa, exponent) {\n    var steps = Math.min(3, Math.ceil(Math.abs(exponent) / 1023));\n    var result = mantissa;\n    for (var i = 0; i < steps; i++)\n        result *= Math.pow(2, Math.floor((exponent + i) / steps));\n    return result;\n};\n\nmodule.exports.LUAI_MAXSTACK          = LUAI_MAXSTACK;\nmodule.exports.LUA_COMPAT_FLOATSTRING = LUA_COMPAT_FLOATSTRING;\nmodule.exports.LUA_IDSIZE             = LUA_IDSIZE;\nmodule.exports.LUA_INTEGER_FMT        = LUA_INTEGER_FMT;\nmodule.exports.LUA_INTEGER_FRMLEN     = LUA_INTEGER_FRMLEN;\nmodule.exports.LUA_MAXINTEGER         = LUA_MAXINTEGER;\nmodule.exports.LUA_MININTEGER         = LUA_MININTEGER;\nmodule.exports.LUA_NUMBER_FMT         = LUA_NUMBER_FMT;\nmodule.exports.LUA_NUMBER_FRMLEN      = LUA_NUMBER_FRMLEN;\nmodule.exports.LUAL_BUFFERSIZE        = LUAL_BUFFERSIZE;\nmodule.exports.frexp                  = frexp;\nmodule.exports.ldexp                  = ldexp;\nmodule.exports.lua_getlocaledecpoint  = lua_getlocaledecpoint;\nmodule.exports.lua_integer2str        = lua_integer2str;\nmodule.exports.lua_number2str         = lua_number2str;\nmodule.exports.lua_numbertointeger    = lua_numbertointeger;\nmodule.exports.luai_apicheck          = luai_apicheck;\n","\"use strict\";\n\nconst {\n    LUA_VERSION_MAJOR,\n    LUA_VERSION_MINOR\n} = require(\"./lua.js\");\n\nconst LUA_VERSUFFIX = \"_\" + LUA_VERSION_MAJOR + \"_\" + LUA_VERSION_MINOR;\nmodule.exports.LUA_VERSUFFIX = LUA_VERSUFFIX;\n\nmodule.exports.lua_assert = function(c) {};\n\nmodule.exports.luaopen_base = require(\"./lbaselib.js\").luaopen_base;\n\nconst LUA_COLIBNAME = \"coroutine\";\nmodule.exports.LUA_COLIBNAME = LUA_COLIBNAME;\nmodule.exports.luaopen_coroutine = require(\"./lcorolib.js\").luaopen_coroutine;\n\nconst LUA_TABLIBNAME = \"table\";\nmodule.exports.LUA_TABLIBNAME = LUA_TABLIBNAME;\nmodule.exports.luaopen_table = require(\"./ltablib.js\").luaopen_table;\n\nif (typeof process !== \"undefined\") {\n    const LUA_IOLIBNAME = \"io\";\n    module.exports.LUA_IOLIBNAME = LUA_IOLIBNAME;\n    module.exports.luaopen_io = require(\"./liolib.js\").luaopen_io;\n}\n\nconst LUA_OSLIBNAME = \"os\";\nmodule.exports.LUA_OSLIBNAME = LUA_OSLIBNAME;\nmodule.exports.luaopen_os = require(\"./loslib.js\").luaopen_os;\n\nconst LUA_STRLIBNAME = \"string\";\nmodule.exports.LUA_STRLIBNAME = LUA_STRLIBNAME;\nmodule.exports.luaopen_string = require(\"./lstrlib.js\").luaopen_string;\n\nconst LUA_UTF8LIBNAME = \"utf8\";\nmodule.exports.LUA_UTF8LIBNAME = LUA_UTF8LIBNAME;\nmodule.exports.luaopen_utf8 = require(\"./lutf8lib.js\").luaopen_utf8;\n\nconst LUA_BITLIBNAME = \"bit32\";\nmodule.exports.LUA_BITLIBNAME = LUA_BITLIBNAME;\n// module.exports.luaopen_bit32 = require(\"./lbitlib.js\").luaopen_bit32;\n\nconst LUA_MATHLIBNAME = \"math\";\nmodule.exports.LUA_MATHLIBNAME = LUA_MATHLIBNAME;\nmodule.exports.luaopen_math = require(\"./lmathlib.js\").luaopen_math;\n\nconst LUA_DBLIBNAME = \"debug\";\nmodule.exports.LUA_DBLIBNAME = LUA_DBLIBNAME;\nmodule.exports.luaopen_debug = require(\"./ldblib.js\").luaopen_debug;\n\nconst LUA_LOADLIBNAME = \"package\";\nmodule.exports.LUA_LOADLIBNAME = LUA_LOADLIBNAME;\nmodule.exports.luaopen_package = require(\"./loadlib.js\").luaopen_package;\n\nconst LUA_FENGARILIBNAME = \"fengari\";\nmodule.exports.LUA_FENGARILIBNAME = LUA_FENGARILIBNAME;\nmodule.exports.luaopen_fengari = require(\"./fengarilib.js\").luaopen_fengari;\n\nconst linit = require('./linit.js');\nmodule.exports.luaL_openlibs = linit.luaL_openlibs;\n","\"use strict\";\n\nconst {\n    LUA_SIGNATURE,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR\n    },\n    thread_status: { LUA_ERRSYNTAX },\n    is_luastring,\n    luastring_eq,\n    to_luastring\n} = require('./defs.js');\nconst ldo      = require('./ldo.js');\nconst lfunc    = require('./lfunc.js');\nconst lobject  = require('./lobject.js');\nconst {\n    MAXARG_sBx,\n    POS_A,\n    POS_Ax,\n    POS_B,\n    POS_Bx,\n    POS_C,\n    POS_OP,\n    SIZE_A,\n    SIZE_Ax,\n    SIZE_B,\n    SIZE_Bx,\n    SIZE_C,\n    SIZE_OP\n} = require('./lopcodes.js');\nconst { lua_assert } = require(\"./llimits.js\");\nconst { luaS_bless } = require('./lstring.js');\nconst {\n    luaZ_read,\n    ZIO\n} = require('./lzio.js');\n\nlet LUAC_DATA = [0x19, 0x93, 13, 10, 0x1a, 10];\n\nclass BytecodeParser {\n\n    constructor(L, Z, name) {\n        this.intSize = 4;\n        this.size_tSize = 4;\n        this.instructionSize = 4;\n        this.integerSize = 4;\n        this.numberSize = 8;\n\n        lua_assert(Z instanceof ZIO, \"BytecodeParser only operates on a ZIO\");\n        lua_assert(is_luastring(name));\n\n        if (name[0] === 64 /* ('@').charCodeAt(0) */ || name[0] === 61 /* ('=').charCodeAt(0) */)\n            this.name = name.subarray(1);\n        else if (name[0] == LUA_SIGNATURE[0])\n            this.name = to_luastring(\"binary string\", true);\n        else\n            this.name = name;\n\n        this.L = L;\n        this.Z = Z;\n\n        // Used to do buffer to number conversions\n        this.arraybuffer = new ArrayBuffer(\n            Math.max(this.intSize, this.size_tSize, this.instructionSize, this.integerSize, this.numberSize)\n        );\n        this.dv = new DataView(this.arraybuffer);\n        this.u8 = new Uint8Array(this.arraybuffer);\n    }\n\n    read(size) {\n        let u8 = new Uint8Array(size);\n        if(luaZ_read(this.Z, u8, 0, size) !== 0)\n            this.error(\"truncated\");\n        return u8;\n    }\n\n    LoadByte() {\n        if (luaZ_read(this.Z, this.u8, 0, 1) !== 0)\n            this.error(\"truncated\");\n        return this.u8[0];\n    }\n\n    LoadInt() {\n        if (luaZ_read(this.Z, this.u8, 0, this.intSize) !== 0)\n            this.error(\"truncated\");\n        return this.dv.getInt32(0, true);\n    }\n\n    LoadNumber() {\n        if (luaZ_read(this.Z, this.u8, 0, this.numberSize) !== 0)\n            this.error(\"truncated\");\n        return this.dv.getFloat64(0, true);\n    }\n\n    LoadInteger() {\n        if (luaZ_read(this.Z, this.u8, 0, this.integerSize) !== 0)\n            this.error(\"truncated\");\n        return this.dv.getInt32(0, true);\n    }\n\n    LoadSize_t() {\n        return this.LoadInteger();\n    }\n\n    LoadString() {\n        let size = this.LoadByte();\n        if (size === 0xFF)\n            size = this.LoadSize_t();\n        if (size === 0)\n            return null;\n        return luaS_bless(this.L, this.read(size-1));\n    }\n\n    /* creates a mask with 'n' 1 bits at position 'p' */\n    static MASK1(n, p) {\n        return ((~((~0)<<(n)))<<(p));\n    }\n\n    LoadCode(f) {\n        let n = this.LoadInt();\n        let p = BytecodeParser;\n\n        for (let i = 0; i < n; i++) {\n            if (luaZ_read(this.Z, this.u8, 0, this.instructionSize) !== 0)\n                this.error(\"truncated\");\n            let ins = this.dv.getUint32(0, true);\n            f.code[i] = {\n                code:   ins,\n                opcode: (ins >> POS_OP) & p.MASK1(SIZE_OP, 0),\n                A:      (ins >> POS_A)  & p.MASK1(SIZE_A,  0),\n                B:      (ins >> POS_B)  & p.MASK1(SIZE_B,  0),\n                C:      (ins >> POS_C)  & p.MASK1(SIZE_C,  0),\n                Bx:     (ins >> POS_Bx) & p.MASK1(SIZE_Bx, 0),\n                Ax:     (ins >> POS_Ax) & p.MASK1(SIZE_Ax, 0),\n                sBx:    ((ins >> POS_Bx) & p.MASK1(SIZE_Bx, 0)) - MAXARG_sBx\n            };\n        }\n    }\n\n    LoadConstants(f) {\n        let n = this.LoadInt();\n\n        for (let i = 0; i < n; i++) {\n            let t = this.LoadByte();\n\n            switch (t) {\n                case LUA_TNIL:\n                    f.k.push(new lobject.TValue(LUA_TNIL, null));\n                    break;\n                case LUA_TBOOLEAN:\n                    f.k.push(new lobject.TValue(LUA_TBOOLEAN, this.LoadByte() !== 0));\n                    break;\n                case LUA_TNUMFLT:\n                    f.k.push(new lobject.TValue(LUA_TNUMFLT, this.LoadNumber()));\n                    break;\n                case LUA_TNUMINT:\n                    f.k.push(new lobject.TValue(LUA_TNUMINT, this.LoadInteger()));\n                    break;\n                case LUA_TSHRSTR:\n                case LUA_TLNGSTR:\n                    f.k.push(new lobject.TValue(LUA_TLNGSTR, this.LoadString()));\n                    break;\n                default:\n                    this.error(`unrecognized constant '${t}'`);\n            }\n        }\n    }\n\n    LoadProtos(f) {\n        let n = this.LoadInt();\n\n        for (let i = 0; i < n; i++) {\n            f.p[i] = new lfunc.Proto(this.L);\n            this.LoadFunction(f.p[i], f.source);\n        }\n    }\n\n    LoadUpvalues(f) {\n        let n = this.LoadInt();\n\n        for (let i = 0; i < n; i++) {\n            f.upvalues[i] = {\n                name:    null,\n                instack: this.LoadByte(),\n                idx:     this.LoadByte()\n            };\n        }\n    }\n\n    LoadDebug(f) {\n        let n = this.LoadInt();\n        for (let i = 0; i < n; i++)\n            f.lineinfo[i] = this.LoadInt();\n\n        n = this.LoadInt();\n        for (let i = 0; i < n; i++) {\n            f.locvars[i] = {\n                varname: this.LoadString(),\n                startpc: this.LoadInt(),\n                endpc:   this.LoadInt()\n            };\n        }\n\n        n = this.LoadInt();\n        for (let i = 0; i < n; i++) {\n            f.upvalues[i].name = this.LoadString();\n        }\n    }\n\n    LoadFunction(f, psource) {\n        f.source = this.LoadString();\n        if (f.source === null)  /* no source in dump? */\n            f.source = psource;  /* reuse parent's source */\n        f.linedefined = this.LoadInt();\n        f.lastlinedefined = this.LoadInt();\n        f.numparams = this.LoadByte();\n        f.is_vararg = this.LoadByte() !== 0;\n        f.maxstacksize = this.LoadByte();\n        this.LoadCode(f);\n        this.LoadConstants(f);\n        this.LoadUpvalues(f);\n        this.LoadProtos(f);\n        this.LoadDebug(f);\n    }\n\n    checkliteral(s, msg) {\n        let buff = this.read(s.length);\n        if (!luastring_eq(buff, s))\n            this.error(msg);\n    }\n\n    checkHeader() {\n        this.checkliteral(LUA_SIGNATURE.subarray(1), \"not a\"); /* 1st char already checked */\n\n        if (this.LoadByte() !== 0x53)\n            this.error(\"version mismatch in\");\n\n        if (this.LoadByte() !== 0)\n            this.error(\"format mismatch in\");\n\n        this.checkliteral(LUAC_DATA, \"corrupted\");\n\n        this.intSize         = this.LoadByte();\n        this.size_tSize      = this.LoadByte();\n        this.instructionSize = this.LoadByte();\n        this.integerSize     = this.LoadByte();\n        this.numberSize      = this.LoadByte();\n\n        this.checksize(this.intSize, 4, \"int\");\n        this.checksize(this.size_tSize, 4, \"size_t\");\n        this.checksize(this.instructionSize, 4, \"instruction\");\n        this.checksize(this.integerSize, 4, \"integer\");\n        this.checksize(this.numberSize, 8, \"number\");\n\n        if (this.LoadInteger() !== 0x5678)\n            this.error(\"endianness mismatch in\");\n\n        if (this.LoadNumber() !== 370.5)\n            this.error(\"float format mismatch in\");\n\n    }\n\n    error(why) {\n        lobject.luaO_pushfstring(this.L, to_luastring(\"%s: %s precompiled chunk\"), this.name, to_luastring(why));\n        ldo.luaD_throw(this.L, LUA_ERRSYNTAX);\n    }\n\n    checksize(byte, size, tname) {\n        if (byte !== size)\n            this.error(`${tname} size mismatch in`);\n    }\n}\n\nconst luaU_undump = function(L, Z, name) {\n    let S = new BytecodeParser(L, Z, name);\n    S.checkHeader();\n    let cl = lfunc.luaF_newLclosure(L, S.LoadByte());\n    ldo.luaD_inctop(L);\n    L.stack[L.top-1].setclLvalue(cl);\n    cl.p = new lfunc.Proto(L);\n    S.LoadFunction(cl.p, null);\n    lua_assert(cl.nupvalues === cl.p.upvalues.length);\n    /* luai_verifycode */\n    return cl;\n};\n\nmodule.exports.luaU_undump = luaU_undump;\n","\"use strict\";\n\nconst {\n    lua_gettop,\n    lua_pushcfunction,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_setfield,\n    lua_tointeger\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addvalue,\n    luaL_argcheck,\n    luaL_buffinit,\n    luaL_checkinteger,\n    luaL_checkstack,\n    luaL_checkstring,\n    luaL_error,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_pushresult\n} = require('./lauxlib.js');\nconst {\n    luastring_of,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nconst MAXUNICODE = 0x10FFFF;\n\nconst iscont = function(p) {\n    let c = p & 0xC0;\n    return c === 0x80;\n};\n\n/* translate a relative string position: negative means back from end */\nconst u_posrelat = function(pos, len) {\n    if (pos >= 0) return pos;\n    else if (0 - pos > len) return 0;\n    else return len + pos + 1;\n};\n\n/*\n** Decode one UTF-8 sequence, returning NULL if byte sequence is invalid.\n*/\nconst limits = [0xFF, 0x7F, 0x7FF, 0xFFFF];\nconst utf8_decode = function(s, pos) {\n    let c = s[pos];\n    let res = 0;  /* final result */\n    if (c < 0x80)  /* ascii? */\n        res = c;\n    else {\n        let count = 0;  /* to count number of continuation bytes */\n        while (c & 0x40) {  /* still have continuation bytes? */\n            let cc = s[pos + (++count)];  /* read next byte */\n            if ((cc & 0xC0) !== 0x80)  /* not a continuation byte? */\n                return null;  /* invalid byte sequence */\n            res = (res << 6) | (cc & 0x3F);  /* add lower 6 bits from cont. byte */\n            c <<= 1;  /* to test next bit */\n        }\n        res |= ((c & 0x7F) << (count * 5));  /* add first byte */\n        if (count > 3 || res > MAXUNICODE || res <= limits[count])\n            return null;  /* invalid byte sequence */\n        pos += count;  /* skip continuation bytes read */\n    }\n\n    return {\n        code: res,\n        pos: pos + 1\n    };\n};\n\n/*\n** utf8len(s [, i [, j]]) --> number of characters that start in the\n** range [i,j], or nil + current position if 's' is not well formed in\n** that interval\n*/\nconst utflen = function(L) {\n    let n = 0;\n    let s = luaL_checkstring(L, 1);\n    let len = s.length;\n    let posi = u_posrelat(luaL_optinteger(L, 2, 1), len);\n    let posj = u_posrelat(luaL_optinteger(L, 3, -1), len);\n\n    luaL_argcheck(L, 1 <= posi && --posi <= len, 2, \"initial position out of string\");\n    luaL_argcheck(L, --posj < len, 3, \"final position out of string\");\n\n    while (posi <= posj) {\n        let dec = utf8_decode(s, posi);\n        if (dec === null) { /* conversion error? */\n            lua_pushnil(L);  /* return nil ... */\n            lua_pushinteger(L, posi + 1);  /* ... and current position */\n            return 2;\n        }\n        posi = dec.pos;\n        n++;\n    }\n    lua_pushinteger(L, n);\n    return 1;\n};\n\nconst p_U = to_luastring(\"%U\");\nconst pushutfchar = function(L, arg) {\n    let code = luaL_checkinteger(L, arg);\n    luaL_argcheck(L, 0 <= code && code <= MAXUNICODE, arg, \"value out of range\");\n    lua_pushfstring(L, p_U, code);\n};\n\n/*\n** utfchar(n1, n2, ...)  -> char(n1)..char(n2)...\n*/\nconst utfchar = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    if (n === 1)  /* optimize common case of single char */\n        pushutfchar(L, 1);\n    else {\n        let b = new luaL_Buffer();\n        luaL_buffinit(L, b);\n        for (let i = 1; i <= n; i++) {\n            pushutfchar(L, i);\n            luaL_addvalue(b);\n        }\n        luaL_pushresult(b);\n    }\n    return 1;\n};\n\n/*\n** offset(s, n, [i])  -> index where n-th character counting from\n**   position 'i' starts; 0 means character at 'i'.\n*/\nconst byteoffset = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let n = luaL_checkinteger(L, 2);\n    let posi = n >= 0 ? 1 : s.length + 1;\n    posi = u_posrelat(luaL_optinteger(L, 3, posi), s.length);\n\n    luaL_argcheck(L, 1 <= posi && --posi <= s.length, 3, \"position out of range\");\n\n    if (n === 0) {\n        /* find beginning of current byte sequence */\n        while (posi > 0 && iscont(s[posi])) posi--;\n    } else {\n        if (iscont(s[posi]))\n            luaL_error(L, \"initial position is a continuation byte\");\n\n        if (n < 0) {\n            while (n < 0 && posi > 0) {  /* move back */\n                do {  /* find beginning of previous character */\n                    posi--;\n                } while (posi > 0 && iscont(s[posi]));\n                n++;\n            }\n        } else {\n            n--;  /* do not move for 1st character */\n            while (n > 0 && posi < s.length) {\n                do {  /* find beginning of next character */\n                    posi++;\n                } while (iscont(s[posi]));  /* (cannot pass final '\\0') */\n                n--;\n            }\n        }\n    }\n\n    if (n === 0)  /* did it find given character? */\n        lua_pushinteger(L, posi + 1);\n    else  /* no such character */\n        lua_pushnil(L);\n\n    return 1;\n};\n\n/*\n** codepoint(s, [i, [j]])  -> returns codepoints for all characters\n** that start in the range [i,j]\n*/\nconst codepoint = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let posi = u_posrelat(luaL_optinteger(L, 2, 1), s.length);\n    let pose = u_posrelat(luaL_optinteger(L, 3, posi), s.length);\n\n    luaL_argcheck(L, posi >= 1, 2, \"out of range\");\n    luaL_argcheck(L, pose <= s.length, 3, \"out of range\");\n\n    if (posi > pose) return 0;  /* empty interval; return no values */\n    if (pose - posi >= Number.MAX_SAFE_INTEGER)\n        return luaL_error(L, \"string slice too long\");\n    let n = (pose - posi) + 1;\n    luaL_checkstack(L, n, \"string slice too long\");\n    n = 0;\n    for (posi -= 1; posi < pose;) {\n        let dec = utf8_decode(s, posi);\n        if (dec === null)\n            return luaL_error(L, \"invalid UTF-8 code\");\n        lua_pushinteger(L, dec.code);\n        posi = dec.pos;\n        n++;\n    }\n    return n;\n};\n\nconst iter_aux = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let len = s.length;\n    let n = lua_tointeger(L, 2) - 1;\n\n    if (n < 0)  /* first iteration? */\n        n = 0;  /* start from here */\n    else if (n < len) {\n        n++;  /* skip current byte */\n        while (iscont(s[n])) n++;  /* and its continuations */\n    }\n\n    if (n >= len)\n        return 0;  /* no more codepoints */\n    else {\n        let dec = utf8_decode(s, n);\n        if (dec === null || iscont(s[dec.pos]))\n            return luaL_error(L, to_luastring(\"invalid UTF-8 code\"));\n        lua_pushinteger(L, n + 1);\n        lua_pushinteger(L, dec.code);\n        return 2;\n    }\n};\n\nconst iter_codes = function(L) {\n    luaL_checkstring(L, 1);\n    lua_pushcfunction(L, iter_aux);\n    lua_pushvalue(L, 1);\n    lua_pushinteger(L, 0);\n    return 3;\n};\n\nconst funcs = {\n    \"char\":      utfchar,\n    \"codepoint\": codepoint,\n    \"codes\":     iter_codes,\n    \"len\":       utflen,\n    \"offset\":    byteoffset\n};\n\n/* pattern to match a single UTF-8 character */\nconst UTF8PATT = luastring_of(91, 0, 45, 127, 194, 45, 244, 93, 91, 128, 45, 191, 93, 42);\n\nconst luaopen_utf8 = function(L) {\n    luaL_newlib(L, funcs);\n    lua_pushstring(L, UTF8PATT);\n    lua_setfield(L, -2, to_luastring(\"charpattern\", true));\n    return 1;\n};\n\nmodule.exports.luaopen_utf8 = luaopen_utf8;\n","\"use strict\";\n\nconst {\n    LUA_MASKLINE,\n    LUA_MASKCOUNT,\n    LUA_MULTRET,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLCF,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMBER,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TTABLE,\n        LUA_TUSERDATA\n    },\n    to_luastring\n} = require('./defs.js');\nconst {\n    INDEXK,\n    ISK,\n    LFIELDS_PER_FLUSH,\n    OpCodesI: {\n        OP_ADD,\n        OP_BAND,\n        OP_BNOT,\n        OP_BOR,\n        OP_BXOR,\n        OP_CALL,\n        OP_CLOSURE,\n        OP_CONCAT,\n        OP_DIV,\n        OP_EQ,\n        OP_EXTRAARG,\n        OP_FORLOOP,\n        OP_FORPREP,\n        OP_GETTABLE,\n        OP_GETTABUP,\n        OP_GETUPVAL,\n        OP_IDIV,\n        OP_JMP,\n        OP_LE,\n        OP_LEN,\n        OP_LOADBOOL,\n        OP_LOADK,\n        OP_LOADKX,\n        OP_LOADNIL,\n        OP_LT,\n        OP_MOD,\n        OP_MOVE,\n        OP_MUL,\n        OP_NEWTABLE,\n        OP_NOT,\n        OP_POW,\n        OP_RETURN,\n        OP_SELF,\n        OP_SETLIST,\n        OP_SETTABLE,\n        OP_SETTABUP,\n        OP_SETUPVAL,\n        OP_SHL,\n        OP_SHR,\n        OP_SUB,\n        OP_TAILCALL,\n        OP_TEST,\n        OP_TESTSET,\n        OP_TFORCALL,\n        OP_TFORLOOP,\n        OP_UNM,\n        OP_VARARG\n    }\n} = require('./lopcodes.js');\nconst {\n    LUA_MAXINTEGER,\n    LUA_MININTEGER,\n    lua_numbertointeger\n} = require('./luaconf.js');\nconst {\n    lua_assert,\n    luai_nummod\n} = require('./llimits.js');\nconst lobject = require('./lobject.js');\nconst lfunc   = require('./lfunc.js');\nconst lstate  = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_eqlngstr,\n    luaS_hashlongstr\n} = require('./lstring.js');\nconst ldo     = require('./ldo.js');\nconst ltm     = require('./ltm.js');\nconst ltable  = require('./ltable.js');\nconst ldebug  = require('./ldebug.js');\n\n/*\n** finish execution of an opcode interrupted by an yield\n*/\nconst luaV_finishOp = function(L) {\n    let ci = L.ci;\n    let base = ci.l_base;\n    let inst = ci.l_code[ci.l_savedpc - 1];  /* interrupted instruction */\n    let op = inst.opcode;\n\n    switch (op) {  /* finish its execution */\n        case OP_ADD: case OP_SUB: case OP_MUL: case OP_DIV: case OP_IDIV:\n        case OP_BAND: case OP_BOR: case OP_BXOR: case OP_SHL: case OP_SHR:\n        case OP_MOD: case OP_POW:\n        case OP_UNM: case OP_BNOT: case OP_LEN:\n        case OP_GETTABUP: case OP_GETTABLE: case OP_SELF: {\n            lobject.setobjs2s(L, base + inst.A, L.top-1);\n            delete L.stack[--L.top];\n            break;\n        }\n        case OP_LE: case OP_LT: case OP_EQ: {\n            let res = !L.stack[L.top - 1].l_isfalse();\n            delete L.stack[--L.top];\n            if (ci.callstatus & lstate.CIST_LEQ) {  /* \"<=\" using \"<\" instead? */\n                lua_assert(op === OP_LE);\n                ci.callstatus ^= lstate.CIST_LEQ;  /* clear mark */\n                res = !res;  /* negate result */\n            }\n            lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_JMP);\n            if (res !== (inst.A ? true : false))  /* condition failed? */\n                ci.l_savedpc++;  /* skip jump instruction */\n            break;\n        }\n        case OP_CONCAT: {\n            let top = L.top - 1;  /* top when 'luaT_trybinTM' was called */\n            let b = inst.B;  /* first element to concatenate */\n            let total = top - 1 - (base + b);  /* yet to concatenate */\n            lobject.setobjs2s(L, top - 2, top);  /* put TM result in proper position */\n            if (total > 1) {  /* are there elements to concat? */\n                L.top = top - 1;  /* top is one after last element (at top-2) */\n                luaV_concat(L, total);  /* concat them (may yield again) */\n            }\n            /* move final result to final position */\n            lobject.setobjs2s(L, ci.l_base + inst.A, L.top - 1);\n            ldo.adjust_top(L, ci.top);  /* restore top */\n            break;\n        }\n        case OP_TFORCALL: {\n            lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_TFORLOOP);\n            ldo.adjust_top(L, ci.top);  /* correct top */\n            break;\n        }\n        case OP_CALL: {\n            if (inst.C - 1 >= 0)  /* nresults >= 0? */\n                ldo.adjust_top(L, ci.top);  /* adjust results */\n            break;\n        }\n    }\n};\n\nconst RA = function(L, base, i) {\n    return base + i.A;\n};\n\nconst RB = function(L, base, i) {\n    return base + i.B;\n};\n\n// const RC = function(L, base, i) {\n//     return base + i.C;\n// };\n\nconst RKB = function(L, base, k, i) {\n    return ISK(i.B) ? k[INDEXK(i.B)] : L.stack[base + i.B];\n};\n\nconst RKC = function(L, base, k, i) {\n    return ISK(i.C) ? k[INDEXK(i.C)] : L.stack[base + i.C];\n};\n\nconst luaV_execute = function(L) {\n    let ci = L.ci;\n\n    ci.callstatus |= lstate.CIST_FRESH;\n    newframe:\n    for (;;) {\n        lua_assert(ci === L.ci);\n        let cl = ci.func.value;\n        let k = cl.p.k;\n        let base = ci.l_base;\n\n        let i = ci.l_code[ci.l_savedpc++];\n\n        if (L.hookmask & (LUA_MASKLINE | LUA_MASKCOUNT)) {\n            ldebug.luaG_traceexec(L);\n        }\n\n        let ra = RA(L, base, i);\n        let opcode = i.opcode;\n\n        switch (opcode) {\n            case OP_MOVE: {\n                lobject.setobjs2s(L, ra, RB(L, base, i));\n                break;\n            }\n            case OP_LOADK: {\n                let konst = k[i.Bx];\n                lobject.setobj2s(L, ra, konst);\n                break;\n            }\n            case OP_LOADKX: {\n                lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_EXTRAARG);\n                let konst = k[ci.l_code[ci.l_savedpc++].Ax];\n                lobject.setobj2s(L, ra, konst);\n                break;\n            }\n            case OP_LOADBOOL: {\n                L.stack[ra].setbvalue(i.B !== 0);\n\n                if (i.C !== 0)\n                    ci.l_savedpc++; /* skip next instruction (if C) */\n\n                break;\n            }\n            case OP_LOADNIL: {\n                for (let j = 0; j <= i.B; j++)\n                    L.stack[ra + j].setnilvalue();\n                break;\n            }\n            case OP_GETUPVAL: {\n                let b = i.B;\n                lobject.setobj2s(L, ra, cl.upvals[b]);\n                break;\n            }\n            case OP_GETTABUP: {\n                let upval = cl.upvals[i.B];\n                let rc = RKC(L, base, k, i);\n                luaV_gettable(L, upval, rc, ra);\n                break;\n            }\n            case OP_GETTABLE: {\n                let rb = L.stack[RB(L, base, i)];\n                let rc = RKC(L, base, k, i);\n                luaV_gettable(L, rb, rc, ra);\n                break;\n            }\n            case OP_SETTABUP: {\n                let upval = cl.upvals[i.A];\n                let rb = RKB(L, base, k, i);\n                let rc = RKC(L, base, k, i);\n                settable(L, upval, rb, rc);\n                break;\n            }\n            case OP_SETUPVAL: {\n                let uv = cl.upvals[i.B];\n                uv.setfrom(L.stack[ra]);\n                break;\n            }\n            case OP_SETTABLE: {\n                let table = L.stack[ra];\n                let key = RKB(L, base, k, i);\n                let v = RKC(L, base, k, i);\n\n                settable(L, table, key, v);\n                break;\n            }\n            case OP_NEWTABLE: {\n                L.stack[ra].sethvalue(ltable.luaH_new(L));\n                break;\n            }\n            case OP_SELF: {\n                let rb = RB(L, base, i);\n                let rc = RKC(L, base, k, i);\n                lobject.setobjs2s(L, ra + 1, rb);\n                luaV_gettable(L, L.stack[rb], rc, ra);\n                break;\n            }\n            case OP_ADD: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue((op1.value + op2.value)|0);\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 + numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_ADD);\n                }\n                break;\n            }\n            case OP_SUB: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue((op1.value - op2.value)|0);\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 - numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_SUB);\n                }\n                break;\n            }\n            case OP_MUL: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue(luaV_imul(op1.value, op2.value));\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 * numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_MUL);\n                }\n                break;\n            }\n            case OP_MOD: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue(luaV_mod(L, op1.value, op2.value));\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(luai_nummod(L, numberop1, numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_MOD);\n                }\n                break;\n            }\n            case OP_POW: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(Math.pow(numberop1, numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_POW);\n                }\n                break;\n            }\n            case OP_DIV: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 / numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_DIV);\n                }\n                break;\n            }\n            case OP_IDIV: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue(luaV_div(L, op1.value, op2.value));\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(Math.floor(numberop1 / numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_IDIV);\n                }\n                break;\n            }\n            case OP_BAND: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(numberop1 & numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_BAND);\n                }\n                break;\n            }\n            case OP_BOR: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(numberop1 | numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_BOR);\n                }\n                break;\n            }\n            case OP_BXOR: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(numberop1 ^ numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_BXOR);\n                }\n                break;\n            }\n            case OP_SHL: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(luaV_shiftl(numberop1, numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_SHL);\n                }\n                break;\n            }\n            case OP_SHR: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(luaV_shiftl(numberop1, -numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_SHR);\n                }\n                break;\n            }\n            case OP_UNM: {\n                let op = L.stack[RB(L, base, i)];\n                let numberop;\n\n                if (op.ttisinteger()) {\n                    L.stack[ra].setivalue((-op.value)|0);\n                } else if ((numberop = tonumber(op)) !== false) {\n                    L.stack[ra].setfltvalue(-numberop);\n                } else {\n                    ltm.luaT_trybinTM(L, op, op, L.stack[ra], ltm.TMS.TM_UNM);\n                }\n                break;\n            }\n            case OP_BNOT: {\n                let op = L.stack[RB(L, base, i)];\n\n                if (op.ttisinteger()) {\n                    L.stack[ra].setivalue(~op.value);\n                } else {\n                    ltm.luaT_trybinTM(L, op, op, L.stack[ra], ltm.TMS.TM_BNOT);\n                }\n                break;\n            }\n            case OP_NOT: {\n                let op = L.stack[RB(L, base, i)];\n                L.stack[ra].setbvalue(op.l_isfalse());\n                break;\n            }\n            case OP_LEN: {\n                luaV_objlen(L, L.stack[ra], L.stack[RB(L, base, i)]);\n                break;\n            }\n            case OP_CONCAT: {\n                let b = i.B;\n                let c = i.C;\n                L.top = base + c + 1; /* mark the end of concat operands */\n                luaV_concat(L, c - b + 1);\n                let rb = base + b;\n                lobject.setobjs2s(L, ra, rb);\n                ldo.adjust_top(L, ci.top); /* restore top */\n                break;\n            }\n            case OP_JMP: {\n                dojump(L, ci, i, 0);\n                break;\n            }\n            case OP_EQ: {\n                if (luaV_equalobj(L, RKB(L, base, k, i), RKC(L, base, k, i)) !== i.A)\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_LT: {\n                if (luaV_lessthan(L, RKB(L, base, k, i), RKC(L, base, k, i)) !== i.A)\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_LE: {\n                if (luaV_lessequal(L, RKB(L, base, k, i), RKC(L, base, k, i)) !== i.A)\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_TEST: {\n                if (i.C ? L.stack[ra].l_isfalse() : !L.stack[ra].l_isfalse())\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_TESTSET: {\n                let rbIdx = RB(L, base, i);\n                let rb = L.stack[rbIdx];\n                if (i.C ? rb.l_isfalse() : !rb.l_isfalse())\n                    ci.l_savedpc++;\n                else {\n                    lobject.setobjs2s(L, ra, rbIdx);\n                    donextjump(L, ci);\n                }\n                break;\n            }\n            case OP_CALL: {\n                let b = i.B;\n                let nresults = i.C - 1;\n                if (b !== 0) ldo.adjust_top(L, ra+b);  /* else previous instruction set top */\n                if (ldo.luaD_precall(L, ra, nresults)) {\n                    if (nresults >= 0)\n                        ldo.adjust_top(L, ci.top);  /* adjust results */\n                } else {\n                    ci = L.ci;\n                    continue newframe;\n                }\n\n                break;\n            }\n            case OP_TAILCALL: {\n                let b = i.B;\n                if (b !== 0) ldo.adjust_top(L, ra+b);  /* else previous instruction set top */\n                if (ldo.luaD_precall(L, ra, LUA_MULTRET)) { // JS function\n                } else {\n                    /* tail call: put called frame (n) in place of caller one (o) */\n                    let nci = L.ci;\n                    let oci = nci.previous;\n                    let nfunc = nci.func;\n                    let nfuncOff = nci.funcOff;\n                    let ofuncOff = oci.funcOff;\n                    let lim = nci.l_base + nfunc.value.p.numparams;\n                    if (cl.p.p.length > 0) lfunc.luaF_close(L, oci.l_base);\n                    for (let aux = 0; nfuncOff + aux < lim; aux++)\n                        lobject.setobjs2s(L, ofuncOff + aux, nfuncOff + aux);\n                    oci.l_base = ofuncOff + (nci.l_base - nfuncOff);\n                    oci.top = ofuncOff + (L.top - nfuncOff);\n                    ldo.adjust_top(L, oci.top);  /* correct top */\n                    oci.l_code = nci.l_code;\n                    oci.l_savedpc = nci.l_savedpc;\n                    oci.callstatus |= lstate.CIST_TAIL;\n                    oci.next = null;\n                    ci = L.ci = oci;\n\n                    lua_assert(L.top === oci.l_base + L.stack[ofuncOff].value.p.maxstacksize);\n\n                    continue newframe;\n                }\n                break;\n            }\n            case OP_RETURN: {\n                if (cl.p.p.length > 0) lfunc.luaF_close(L, base);\n                let b = ldo.luaD_poscall(L, ci, ra, (i.B !== 0 ? i.B - 1 : L.top - ra));\n\n                if (ci.callstatus & lstate.CIST_FRESH)\n                    return; /* external invocation: return */\n                /* invocation via reentry: continue execution */\n                ci = L.ci;\n                if (b) ldo.adjust_top(L, ci.top);\n                lua_assert(ci.callstatus & lstate.CIST_LUA);\n                lua_assert(ci.l_code[ci.l_savedpc - 1].opcode === OP_CALL);\n                continue newframe;\n            }\n            case OP_FORLOOP: {\n                if (L.stack[ra].ttisinteger()) { /* integer loop? */\n                    let step = L.stack[ra + 2].value;\n                    let idx = (L.stack[ra].value + step)|0;\n                    let limit = L.stack[ra + 1].value;\n\n                    if (0 < step ? idx <= limit : limit <= idx) {\n                        ci.l_savedpc += i.sBx;\n                        L.stack[ra].chgivalue(idx);  /* update internal index... */\n                        L.stack[ra + 3].setivalue(idx);\n                    }\n                } else { /* floating loop */\n                    let step = L.stack[ra + 2].value;\n                    let idx = L.stack[ra].value + step;\n                    let limit = L.stack[ra + 1].value;\n\n                    if (0 < step ? idx <= limit : limit <= idx) {\n                        ci.l_savedpc += i.sBx;\n                        L.stack[ra].chgfltvalue(idx);  /* update internal index... */\n                        L.stack[ra + 3].setfltvalue(idx);\n                    }\n                }\n                break;\n            }\n            case OP_FORPREP: {\n                let init = L.stack[ra];\n                let plimit = L.stack[ra + 1];\n                let pstep = L.stack[ra + 2];\n                let forlim;\n\n                if (init.ttisinteger() && pstep.ttisinteger() && (forlim = forlimit(plimit, pstep.value))) {\n                    /* all values are integer */\n                    let initv = forlim.stopnow ? 0 : init.value;\n                    plimit.value = forlim.ilimit;\n                    init.value = (initv - pstep.value)|0;\n                } else { /* try making all values floats */\n                    let nlimit, nstep, ninit;\n                    if ((nlimit = tonumber(plimit)) === false)\n                        ldebug.luaG_runerror(L, to_luastring(\"'for' limit must be a number\", true));\n                    L.stack[ra + 1].setfltvalue(nlimit);\n                    if ((nstep = tonumber(pstep)) === false)\n                        ldebug.luaG_runerror(L, to_luastring(\"'for' step must be a number\", true));\n                    L.stack[ra + 2].setfltvalue(nstep);\n                    if ((ninit = tonumber(init)) === false)\n                        ldebug.luaG_runerror(L, to_luastring(\"'for' initial value must be a number\", true));\n                    L.stack[ra].setfltvalue(ninit - nstep);\n                }\n\n                ci.l_savedpc += i.sBx;\n                break;\n            }\n            case OP_TFORCALL: {\n                let cb = ra + 3; /* call base */\n                lobject.setobjs2s(L, cb+2, ra+2);\n                lobject.setobjs2s(L, cb+1, ra+1);\n                lobject.setobjs2s(L, cb, ra);\n                ldo.adjust_top(L, cb+3);  /* func. + 2 args (state and index) */\n                ldo.luaD_call(L, cb, i.C);\n                ldo.adjust_top(L, ci.top);\n                /* go straight to OP_TFORLOOP */\n                i = ci.l_code[ci.l_savedpc++];\n                ra = RA(L, base, i);\n                lua_assert(i.opcode === OP_TFORLOOP);\n            }\n            /* fall through */\n            case OP_TFORLOOP: {\n                if (!L.stack[ra + 1].ttisnil()) { /* continue loop? */\n                    lobject.setobjs2s(L, ra, ra + 1); /* save control variable */\n                    ci.l_savedpc += i.sBx; /* jump back */\n                }\n                break;\n            }\n            case OP_SETLIST: {\n                let n = i.B;\n                let c = i.C;\n\n                if (n === 0) n = L.top - ra - 1;\n\n                if (c === 0) {\n                    lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_EXTRAARG);\n                    c = ci.l_code[ci.l_savedpc++].Ax;\n                }\n\n                let h = L.stack[ra].value;\n                let last = ((c - 1) * LFIELDS_PER_FLUSH) + n;\n\n                for (; n > 0; n--) {\n                    ltable.luaH_setint(h, last--, L.stack[ra + n]);\n                }\n                ldo.adjust_top(L, ci.top);  /* correct top (in case of previous open call) */\n                break;\n            }\n            case OP_CLOSURE: {\n                let p = cl.p.p[i.Bx];\n                let ncl = getcached(p, cl.upvals, L.stack, base);  /* cached closure */\n                if (ncl === null)  /* no match? */\n                    pushclosure(L, p, cl.upvals, base, ra);  /* create a new one */\n                else\n                    L.stack[ra].setclLvalue(ncl);\n                break;\n            }\n            case OP_VARARG: {\n                let b = i.B - 1;\n                let n = base - ci.funcOff - cl.p.numparams - 1;\n                let j;\n\n                if (n < 0) /* less arguments than parameters? */\n                    n = 0; /* no vararg arguments */\n\n                if (b < 0) {\n                    b = n;  /* get all var. arguments */\n                    ldo.luaD_checkstack(L, n);\n                    ldo.adjust_top(L, ra + n);\n                }\n\n                for (j = 0; j < b && j < n; j++)\n                    lobject.setobjs2s(L, ra + j, base - n + j);\n\n                for (; j < b; j++) /* complete required results with nil */\n                    L.stack[ra + j].setnilvalue();\n                break;\n            }\n            case OP_EXTRAARG: {\n                throw Error(\"invalid opcode\");\n            }\n        }\n    }\n};\n\nconst dojump = function(L, ci, i, e) {\n    let a = i.A;\n    if (a !== 0) lfunc.luaF_close(L, ci.l_base + a - 1);\n    ci.l_savedpc += i.sBx + e;\n};\n\nconst donextjump = function(L, ci) {\n    dojump(L, ci, ci.l_code[ci.l_savedpc], 1);\n};\n\n\nconst luaV_lessthan = function(L, l, r) {\n    if (l.ttisnumber() && r.ttisnumber())\n        return LTnum(l, r) ? 1 : 0;\n    else if (l.ttisstring() && r.ttisstring())\n        return l_strcmp(l.tsvalue(), r.tsvalue()) < 0 ? 1 : 0;\n    else {\n        let res = ltm.luaT_callorderTM(L, l, r, ltm.TMS.TM_LT);\n        if (res === null)\n            ldebug.luaG_ordererror(L, l, r);\n        return res ? 1 : 0;\n    }\n};\n\nconst luaV_lessequal = function(L, l, r) {\n    let res;\n\n    if (l.ttisnumber() && r.ttisnumber())\n        return LEnum(l, r) ? 1 : 0;\n    else if (l.ttisstring() && r.ttisstring())\n        return l_strcmp(l.tsvalue(), r.tsvalue()) <= 0 ? 1 : 0;\n    else {\n        res = ltm.luaT_callorderTM(L, l, r, ltm.TMS.TM_LE);\n        if (res !== null)\n            return res ? 1 : 0;\n    }\n    /* try 'lt': */\n    L.ci.callstatus |= lstate.CIST_LEQ; /* mark it is doing 'lt' for 'le' */\n    res = ltm.luaT_callorderTM(L, r, l, ltm.TMS.TM_LT);\n    L.ci.callstatus ^= lstate.CIST_LEQ; /* clear mark */\n    if (res === null)\n        ldebug.luaG_ordererror(L, l, r);\n    return res ? 0 : 1; /* result is negated */\n};\n\nconst luaV_equalobj = function(L, t1, t2) {\n    if (t1.ttype() !== t2.ttype()) { /* not the same variant? */\n        if (t1.ttnov() !== t2.ttnov() || t1.ttnov() !== LUA_TNUMBER)\n            return 0; /* only numbers can be equal with different variants */\n        else { /* two numbers with different variants */\n            /* OPTIMIZATION: instead of calling luaV_tointeger we can just let JS do the comparison */\n            return (t1.value === t2.value) ? 1 : 0;\n        }\n    }\n\n    let tm;\n\n    /* values have same type and same variant */\n    switch(t1.ttype()) {\n        case LUA_TNIL:\n            return 1;\n        case LUA_TBOOLEAN:\n            return t1.value == t2.value ? 1 : 0; // Might be 1 or true\n        case LUA_TLIGHTUSERDATA:\n        case LUA_TNUMINT:\n        case LUA_TNUMFLT:\n        case LUA_TLCF:\n            return t1.value === t2.value ? 1 : 0;\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR: {\n            return luaS_eqlngstr(t1.tsvalue(), t2.tsvalue()) ? 1 : 0;\n        }\n        case LUA_TUSERDATA:\n        case LUA_TTABLE:\n            if (t1.value === t2.value) return 1;\n            else if (L === null) return 0;\n\n            tm = ltm.fasttm(L, t1.value.metatable, ltm.TMS.TM_EQ);\n            if (tm === null)\n                tm = ltm.fasttm(L, t2.value.metatable, ltm.TMS.TM_EQ);\n            break;\n        default:\n            return t1.value === t2.value ? 1 : 0;\n    }\n\n    if (tm === null) /* no TM? */\n        return 0;\n\n    let tv = new lobject.TValue(); /* doesn't use the stack */\n    ltm.luaT_callTM(L, tm, t1, t2, tv, 1);\n    return tv.l_isfalse() ? 0 : 1;\n};\n\nconst luaV_rawequalobj = function(t1, t2) {\n    return luaV_equalobj(null, t1, t2);\n};\n\nconst forlimit = function(obj, step) {\n    let stopnow = false;\n    let ilimit = luaV_tointeger(obj, step < 0 ? 2 : 1);\n    if (ilimit === false) {\n        let n = tonumber(obj);\n        if (n === false)\n            return false;\n\n        if (0 < n) {\n            ilimit = LUA_MAXINTEGER;\n            if (step < 0) stopnow = true;\n        } else {\n            ilimit = LUA_MININTEGER;\n            if (step >= 0) stopnow = true;\n        }\n    }\n\n    return {\n        stopnow: stopnow,\n        ilimit: ilimit\n    };\n};\n\n/*\n** try to convert a value to an integer, rounding according to 'mode':\n** mode === 0: accepts only integral values\n** mode === 1: takes the floor of the number\n** mode === 2: takes the ceil of the number\n*/\nconst luaV_tointeger = function(obj, mode) {\n    if (obj.ttisfloat()) {\n        let n = obj.value;\n        let f = Math.floor(n);\n\n        if (n !== f) { /* not an integral value? */\n            if (mode === 0)\n                return false;  /* fails if mode demands integral value */\n            else if (mode > 1)  /* needs ceil? */\n                f += 1;  /* convert floor to ceil (remember: n !== f) */\n        }\n\n        return lua_numbertointeger(f);\n    } else if (obj.ttisinteger()) {\n        return obj.value;\n    } else if (cvt2num(obj)) {\n        let v = new lobject.TValue();\n        if (lobject.luaO_str2num(obj.svalue(), v) === (obj.vslen() + 1))\n            return luaV_tointeger(v, mode);\n    }\n\n    return false;\n};\n\nconst tointeger = function(o) {\n    return o.ttisinteger() ? o.value : luaV_tointeger(o, 0);\n};\n\nconst tonumber = function(o) {\n    if (o.ttnov() === LUA_TNUMBER)\n        return o.value;\n\n    if (cvt2num(o)) {  /* string convertible to number? */\n        let v = new lobject.TValue();\n        if (lobject.luaO_str2num(o.svalue(), v) === (o.vslen() + 1))\n            return v.value;\n    }\n\n    return false;\n};\n\n/*\n** Return 'l < r', for numbers.\n** As fengari uses javascript numbers for both floats and integers and has\n** correct semantics, we can just compare values.\n*/\nconst LTnum = function(l, r) {\n    return l.value < r.value;\n};\n\n/*\n** Return 'l <= r', for numbers.\n*/\nconst LEnum = function(l, r) {\n    return l.value <= r.value;\n};\n\n/*\n** Compare two strings 'ls' x 'rs', returning an integer smaller-equal-\n** -larger than zero if 'ls' is smaller-equal-larger than 'rs'.\n*/\nconst l_strcmp = function(ls, rs) {\n    let l = luaS_hashlongstr(ls);\n    let r = luaS_hashlongstr(rs);\n    /* In fengari we assume string hash has same collation as byte values */\n    if (l === r)\n        return 0;\n    else if (l < r)\n        return -1;\n    else\n        return 1;\n};\n\n/*\n** Main operation 'ra' = #rb'.\n*/\nconst luaV_objlen = function(L, ra, rb) {\n    let tm;\n    switch(rb.ttype()) {\n        case LUA_TTABLE: {\n            let h = rb.value;\n            tm = ltm.fasttm(L, h.metatable, ltm.TMS.TM_LEN);\n            if (tm !== null) break; /* metamethod? break switch to call it */\n            ra.setivalue(ltable.luaH_getn(h)); /* else primitive len */\n            return;\n        }\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR:\n            ra.setivalue(rb.vslen());\n            return;\n        default: {\n            tm = ltm.luaT_gettmbyobj(L, rb, ltm.TMS.TM_LEN);\n            if (tm.ttisnil())\n                ldebug.luaG_typeerror(L, rb, to_luastring(\"get length of\", true));\n            break;\n        }\n    }\n\n    ltm.luaT_callTM(L, tm, rb, rb, ra, 1);\n};\n\n/* Shim taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul */\nconst luaV_imul = Math.imul || function(a, b) {\n    let aHi = (a >>> 16) & 0xffff;\n    let aLo = a & 0xffff;\n    let bHi = (b >>> 16) & 0xffff;\n    let bLo = b & 0xffff;\n    /*\n    ** the shift by 0 fixes the sign on the high part\n    ** the final |0 converts the unsigned value into a signed value\n    */\n    return ((aLo * bLo) + (((aHi * bLo + aLo * bHi) << 16) >>> 0) | 0);\n};\n\nconst luaV_div = function(L, m, n) {\n    if (n === 0)\n        ldebug.luaG_runerror(L, to_luastring(\"attempt to divide by zero\"));\n    return Math.floor(m / n)|0;\n};\n\n// % semantic on negative numbers is different in js\nconst luaV_mod = function(L, m, n) {\n    if (n === 0)\n        ldebug.luaG_runerror(L, to_luastring(\"attempt to perform 'n%%0'\"));\n    return (m - Math.floor(m / n) * n)|0;\n};\n\nconst NBITS = 32;\n\nconst luaV_shiftl = function(x, y) {\n    if (y < 0) {  /* shift right? */\n        if (y <= -NBITS) return 0;\n        else return x >>> -y;\n    }\n    else {  /* shift left */\n        if (y >= NBITS) return 0;\n        else return x << y;\n    }\n};\n\n/*\n** check whether cached closure in prototype 'p' may be reused, that is,\n** whether there is a cached closure with the same upvalues needed by\n** new closure to be created.\n*/\nconst getcached = function(p, encup, stack, base) {\n    let c = p.cache;\n    if (c !== null) {  /* is there a cached closure? */\n        let uv = p.upvalues;\n        let nup = uv.length;\n        for (let i = 0; i < nup; i++) {  /* check whether it has right upvalues */\n            let v = uv[i].instack ? stack[base + uv[i].idx] : encup[uv[i].idx];\n            if (c.upvals[i] !== v)\n                return null;  /* wrong upvalue; cannot reuse closure */\n        }\n    }\n    return c;  /* return cached closure (or NULL if no cached closure) */\n};\n\n/*\n** create a new Lua closure, push it in the stack, and initialize\n** its upvalues.\n*/\nconst pushclosure = function(L, p, encup, base, ra) {\n    let nup = p.upvalues.length;\n    let uv = p.upvalues;\n    let ncl = new lobject.LClosure(L, nup);\n    ncl.p = p;\n    L.stack[ra].setclLvalue(ncl);\n    for (let i = 0; i < nup; i++) {\n        if (uv[i].instack)\n            ncl.upvals[i] = lfunc.luaF_findupval(L, base + uv[i].idx);\n        else\n            ncl.upvals[i] = encup[uv[i].idx];\n    }\n    p.cache = ncl;  /* save it on cache for reuse */\n};\n\nconst cvt2str = function(o) {\n    return o.ttisnumber();\n};\n\nconst cvt2num = function(o) {\n    return o.ttisstring();\n};\n\nconst tostring = function(L, i) {\n    let o = L.stack[i];\n\n    if (o.ttisstring()) return true;\n\n    if (cvt2str(o)) {\n        lobject.luaO_tostring(L, o);\n        return true;\n    }\n\n    return false;\n};\n\nconst isemptystr = function(o) {\n    return o.ttisstring() && o.vslen() === 0;\n};\n\n/* copy strings in stack from top - n up to top - 1 to buffer */\nconst copy2buff = function(L, top, n, buff) {\n    let tl = 0;  /* size already copied */\n    do {\n        let tv = L.stack[top-n];\n        let l = tv.vslen();  /* length of string being copied */\n        let s = tv.svalue();\n        buff.set(s, tl);\n        tl += l;\n    } while (--n > 0);\n};\n\n/*\n** Main operation for concatenation: concat 'total' values in the stack,\n** from 'L->top - total' up to 'L->top - 1'.\n*/\nconst luaV_concat = function(L, total) {\n    lua_assert(total >= 2);\n    do {\n        let top = L.top;\n        let n = 2; /* number of elements handled in this pass (at least 2) */\n\n        if (!(L.stack[top-2].ttisstring() || cvt2str(L.stack[top-2])) || !tostring(L, top - 1)) {\n            ltm.luaT_trybinTM(L, L.stack[top-2], L.stack[top-1], L.stack[top-2], ltm.TMS.TM_CONCAT);\n        } else if (isemptystr(L.stack[top-1])) {\n            tostring(L, top - 2);\n        } else if (isemptystr(L.stack[top-2])) {\n            lobject.setobjs2s(L, top - 2, top - 1);\n        } else {\n            /* at least two non-empty string values; get as many as possible */\n            let tl = L.stack[top-1].vslen();\n            /* collect total length and number of strings */\n            for (n = 1; n < total && tostring(L, top - n - 1); n++) {\n                let l = L.stack[top - n - 1].vslen();\n                tl += l;\n            }\n            let buff = new Uint8Array(tl);\n            copy2buff(L, top, n, buff);\n            let ts = luaS_bless(L, buff);\n            lobject.setsvalue2s(L, top - n, ts);\n        }\n        total -= n - 1; /* got 'n' strings to create 1 new */\n        /* popped 'n' strings and pushed one */\n        for (; L.top > top-(n-1);)\n            delete L.stack[--L.top];\n    } while (total > 1); /* repeat until only 1 result left */\n};\n\nconst MAXTAGLOOP = 2000;\n\nconst luaV_gettable = function(L, t, key, ra) {\n    for (let loop = 0; loop < MAXTAGLOOP; loop++) {\n        let tm;\n\n        if (!t.ttistable()) {\n            tm = ltm.luaT_gettmbyobj(L, t, ltm.TMS.TM_INDEX);\n            if (tm.ttisnil())\n                ldebug.luaG_typeerror(L, t, to_luastring('index', true)); /* no metamethod */\n            /* else will try the metamethod */\n        } else {\n            let slot = ltable.luaH_get(L, t.value, key);\n            if (!slot.ttisnil()) {\n                lobject.setobj2s(L, ra, slot);\n                return;\n            } else { /* 't' is a table */\n                tm = ltm.fasttm(L, t.value.metatable, ltm.TMS.TM_INDEX);  /* table's metamethod */\n                if (tm === null) { /* no metamethod? */\n                    L.stack[ra].setnilvalue(); /* result is nil */\n                    return;\n                }\n            }\n            /* else will try the metamethod */\n        }\n        if (tm.ttisfunction()) { /* is metamethod a function? */\n            ltm.luaT_callTM(L, tm, t, key, L.stack[ra], 1); /* call it */\n            return;\n        }\n        t = tm;  /* else try to access 'tm[key]' */\n    }\n\n    ldebug.luaG_runerror(L, to_luastring(\"'__index' chain too long; possible loop\", true));\n};\n\nconst settable = function(L, t, key, val) {\n    for (let loop = 0; loop < MAXTAGLOOP; loop++) {\n        let tm;\n        if (t.ttistable()) {\n            let h = t.value; /* save 't' table */\n            let slot = ltable.luaH_get(L, h, key);\n            if (!slot.ttisnil() || (tm = ltm.fasttm(L, h.metatable, ltm.TMS.TM_NEWINDEX)) === null) {\n                ltable.luaH_setfrom(L, h, key, val);\n                ltable.invalidateTMcache(h);\n                return;\n            }\n            /* else will try the metamethod */\n        } else { /* not a table; check metamethod */\n            if ((tm = ltm.luaT_gettmbyobj(L, t, ltm.TMS.TM_NEWINDEX)).ttisnil())\n                ldebug.luaG_typeerror(L, t, to_luastring('index', true));\n        }\n        /* try the metamethod */\n        if (tm.ttisfunction()) {\n            ltm.luaT_callTM(L, tm, t, key, val, 0);\n            return;\n        }\n        t = tm;  /* else repeat assignment over 'tm' */\n    }\n\n    ldebug.luaG_runerror(L, to_luastring(\"'__newindex' chain too long; possible loop\", true));\n};\n\n\nmodule.exports.cvt2str          = cvt2str;\nmodule.exports.cvt2num          = cvt2num;\nmodule.exports.luaV_gettable    = luaV_gettable;\nmodule.exports.luaV_concat      = luaV_concat;\nmodule.exports.luaV_div         = luaV_div;\nmodule.exports.luaV_equalobj    = luaV_equalobj;\nmodule.exports.luaV_execute     = luaV_execute;\nmodule.exports.luaV_finishOp    = luaV_finishOp;\nmodule.exports.luaV_imul        = luaV_imul;\nmodule.exports.luaV_lessequal   = luaV_lessequal;\nmodule.exports.luaV_lessthan    = luaV_lessthan;\nmodule.exports.luaV_mod         = luaV_mod;\nmodule.exports.luaV_objlen      = luaV_objlen;\nmodule.exports.luaV_rawequalobj = luaV_rawequalobj;\nmodule.exports.luaV_shiftl      = luaV_shiftl;\nmodule.exports.luaV_tointeger   = luaV_tointeger;\nmodule.exports.settable         = settable;\nmodule.exports.tointeger        = tointeger;\nmodule.exports.tonumber         = tonumber;\n","\"use strict\";\n\nconst { lua_assert } = require(\"./llimits.js\");\n\nclass MBuffer {\n    constructor() {\n        this.buffer = null;\n        this.n = 0;\n    }\n}\n\nconst luaZ_buffer = function(buff) {\n    return buff.buffer.subarray(0, buff.n);\n};\n\nconst luaZ_buffremove = function(buff, i) {\n    buff.n -= i;\n};\n\nconst luaZ_resetbuffer = function(buff) {\n    buff.n = 0;\n};\n\nconst luaZ_resizebuffer = function(L, buff, size) {\n    let newbuff = new Uint8Array(size);\n    if (buff.buffer)\n        newbuff.set(buff.buffer);\n    buff.buffer = newbuff;\n};\n\nclass ZIO {\n    constructor(L, reader, data) {\n        this.L = L;           /* Lua state (for reader) */\n        lua_assert(typeof reader == \"function\", \"ZIO requires a reader\");\n        this.reader = reader; /* reader function */\n        this.data = data;     /* additional data */\n        this.n = 0;           /* bytes still unread */\n        this.buffer = null;\n        this.off = 0;         /* current position in buffer */\n    }\n\n    zgetc () {\n        return ((this.n--) > 0) ? this.buffer[this.off++] : luaZ_fill(this);\n    }\n}\n\nconst EOZ = -1;\n\nconst luaZ_fill = function(z) {\n    let buff = z.reader(z.L, z.data);\n    if (buff === null)\n        return EOZ;\n    lua_assert(buff instanceof Uint8Array, \"Should only load binary of array of bytes\");\n    let size = buff.length;\n    if (size === 0)\n        return EOZ;\n    z.buffer = buff;\n    z.off = 0;\n    z.n = size - 1;\n    return z.buffer[z.off++];\n};\n\n/* b should be an array-like that will be set to bytes\n * b_offset is the offset at which to start filling */\nconst luaZ_read = function(z, b, b_offset, n) {\n    while (n) {\n        if (z.n === 0) { /* no bytes in buffer? */\n            if (luaZ_fill(z) === EOZ)\n                return n; /* no more input; return number of missing bytes */\n            else {\n                z.n++;  /* luaZ_fill consumed first byte; put it back */\n                z.off--;\n            }\n        }\n        let m = (n <= z.n) ? n : z.n; /* min. between n and z->n */\n        for (let i=0; i<m; i++) {\n            b[b_offset++] = z.buffer[z.off++];\n        }\n        z.n -= m;\n        if (z.n === 0) // remove reference to input so it can get freed\n            z.buffer = null;\n        n -= m;\n    }\n\n    return 0;\n};\n\nmodule.exports.EOZ               = EOZ;\nmodule.exports.luaZ_buffer       = luaZ_buffer;\nmodule.exports.luaZ_buffremove   = luaZ_buffremove;\nmodule.exports.luaZ_fill         = luaZ_fill;\nmodule.exports.luaZ_read         = luaZ_read;\nmodule.exports.luaZ_resetbuffer  = luaZ_resetbuffer;\nmodule.exports.luaZ_resizebuffer = luaZ_resizebuffer;\nmodule.exports.MBuffer           = MBuffer;\nmodule.exports.ZIO               = ZIO;\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'linkify',         require('./rules_inline/linkify') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  [ 'fragments_join',  require('./rules_inline/fragments_join') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false;\n\n  if (pos + 1 >= max) return false;\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23 /* # */) {\n    match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n\n        token         = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup  = match[0];\n        token.info    = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token         = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup  = match[0];\n          token.info    = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info   = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function fragments_join(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n\n    if (isLinkOpen(token.content))  state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4496);\n"],"names":["md","inline","block","core","options","html","xhtmlOut","breaks","langPrefix","linkify","typographer","quotes","highlight","maxNesting","parse","src","env","Error","state","this","State","process","tokens","rules","ruler","escape","input","replace","renderOne","output","add","str","push","repeat","level","content","changer","attrGet","href","type","child","children","length","isWhiteSpace","charCodeAt","links","nesting","tag","markdownToLua","outputBuffer","startLevel","token","preprocess","idx","out","search","start","i1","indexOf","i2","substring","end","disable","story","startNode","getAttribute","startNodeName","buf","i","node","tagName","toLowerCase","tags","split","map","t","join","textContent","document","getElementById","outputContainer","luaCode","inputDisabled","toggle","outputDisplay","style","display","checked","onchange","event","opacity","setTimeout","luaSrc","storyToLua","download","onNewText","innerHTML","getEventId","target","Number","id","parentElement","window","URL","createObjectURL","Blob","title","loadStory","invalidate","message","console","error","hovering","addEventListener","raiseEvent","lastTime","performance","now","callback","time","update","requestAnimationFrame","silent","pos","prevToken","splice","attrs","startsWith","endMarker","endBlock","endSyntax","tok","slice","meta","startPos","srcEnd","posMax","endPos","ltrLink","rtlLink","trim","tokenize","isLetter","code","isLetterOrNumber","propertyExpression","callExpression","begin","lambdaExpression","found","enc","TextEncoder","emit","L","wasChanged","invalidated","emitFn","logFn","lauxlib","luaL_newstate","lua","lua_atpanic","lua_tojsstring","lua_gettop","lualib","luaL_openlibs","lua_register","l","args","log","lua_tonumber","lua_pop","x","luaL_dostring","encode","lua_getglobal","lua_pushstring","lua_call","deltaTime","lua_pushnumber","luastring_from","luastring_indexOf","luastring_of","Uint8Array","from","bind","a","len","r","s","v","array_indexOf","call","of","arguments","is_luastring","unicode_error_message","uri_allowed","reduce","c","to_luastring_cache","to_luastring","cache","TypeError","cached","outU8Array","Array","outIdx","u","module","exports","luastring_eq","b","to_jsstring","value","to","replacement_char","Math","min","u0","String","fromCharCode","RangeError","u1","u2","s1","s2","u3","to_uristring","toString","from_userstring","LUA_SIGNATURE","LUA_VERSION_MAJOR","LUA_VERSION_MINOR","LUA_VERSION_NUM","LUA_VERSION_RELEASE","LUA_VERSION","LUA_RELEASE","LUA_COPYRIGHT","LUA_AUTHORS","constant_types","LUA_TNONE","LUA_TNIL","LUA_TBOOLEAN","LUA_TLIGHTUSERDATA","LUA_TNUMBER","LUA_TSTRING","LUA_TTABLE","LUA_TFUNCTION","LUA_TUSERDATA","LUA_TTHREAD","LUA_NUMTAGS","LUA_TSHRSTR","LUA_TLNGSTR","LUA_TNUMFLT","LUA_TNUMINT","LUA_TLCL","LUA_TLCF","LUA_TCCL","LUAI_MAXSTACK","LUA_REGISTRYINDEX","LUA_HOOKCALL","LUA_HOOKCOUNT","LUA_HOOKLINE","LUA_HOOKRET","LUA_HOOKTAILCALL","LUA_MASKCALL","LUA_MASKCOUNT","LUA_MASKLINE","LUA_MASKRET","LUA_MINSTACK","LUA_MULTRET","LUA_OPADD","LUA_OPBAND","LUA_OPBNOT","LUA_OPBOR","LUA_OPBXOR","LUA_OPDIV","LUA_OPEQ","LUA_OPIDIV","LUA_OPLE","LUA_OPLT","LUA_OPMOD","LUA_OPMUL","LUA_OPPOW","LUA_OPSHL","LUA_OPSHR","LUA_OPSUB","LUA_OPUNM","LUA_RIDX_GLOBALS","LUA_RIDX_LAST","LUA_RIDX_MAINTHREAD","lua_Debug","constructor","NaN","name","namewhat","what","source","currentline","linedefined","lastlinedefined","nups","nparams","isvararg","istailcall","short_src","i_ci","lua_upvalueindex","thread_status","LUA_OK","LUA_YIELD","LUA_ERRRUN","LUA_ERRSYNTAX","LUA_ERRMEM","LUA_ERRGCMM","LUA_ERRERR","FENGARI_AUTHORS","FENGARI_COPYRIGHT","FENGARI_RELEASE","FENGARI_VERSION","FENGARI_VERSION_MAJOR","FENGARI_VERSION_MINOR","FENGARI_VERSION_NUM","FENGARI_VERSION_RELEASE","luaconf","defs","lua_pushinteger","lua_pushliteral","lua_setfield","luaL_newlib","luaopen_fengari","api_check","ldebug","ldo","luaU_dump","lfunc","lobject","lstate","luaS_bless","luaS_new","luaS_newliteral","ltm","lvm","ltable","ZIO","TValue","CClosure","api_incr_top","top","ci","api_checknelems","n","funcOff","fengari_argcheck","fengari_argcheckinteger","isvalid","o","luaO_nilobject","index2addr","stack","l_G","l_registry","MAXUPVAL","func","ttislcf","nupvalues","upvalue","index2addr_","lua_settop","newtop","stack_last","adjust_top","reverse","fromtv","temp","setobjs2s","setobj2s","lua_rotate","pIdx","p","m","lua_copy","fromidx","toidx","setfrom","lua_pushcclosure","fn","cl","setclCvalue","lua_pushjsclosure","lua_pushcfunction","lua_pushjsfunction","auxsetstr","k","pushsvalue2s","settable","lua_setglobal","luaH_getint","auxgetstr","luaV_gettable","ttnov","lua_rawgeti","ttistable","pushobj2s","lua_createtable","narray","nrec","luaH_new","aux_upvalue","fi","ttype","f","val","upvalues","getstr","upvals","lua_tolstring","ttisstring","cvt2str","luaO_tostring","svalue","lua_tostring","lua_tointegerx","tointeger","lua_tonumberx","tonumber","seen","WeakMap","f_call","ud","luaD_callnoyield","nresults","lua_type","default_chunkname","checkresults","na","nr","lua_callk","nargs","ctx","callstatus","CIST_LUA","status","nny","c_k","c_ctx","luaD_call","lua_pcallk","errfunc","luaD_pcall","extra","c_old_errfunc","CIST_OAH","allowhook","CIST_YPCALL","getupvalref","fidx","ttisLclosure","lua_absindex","lua_arith","op","luaO_arith","panicf","old","panic","lua_atnativeerror","errorf","atnativeerror","lua_checkstack","res","EXTRA_STACK","luaD_growstack","lua_compare","index1","index2","o1","o2","luaV_equalobj","luaV_lessthan","luaV_lessequal","lua_concat","luaV_concat","lua_dump","writer","data","strip","lua_error","luaG_errormsg","lua_gc","lua_getallocf","warn","lua_getextraspace","lua_getfield","lua_geti","lua_getmetatable","objindex","mt","obj","metatable","lua_gettable","lua_getupvalue","funcindex","up","lua_getuservalue","ttisfulluserdata","uv","uservalue","lua_insert","lua_isboolean","lua_iscfunction","ttisCclosure","lua_isfunction","lua_isinteger","ttisinteger","lua_islightuserdata","lua_isnil","lua_isnone","lua_isnoneornil","lua_isnumber","lua_isproxy","G","get","lua_isstring","lua_istable","lua_isthread","lua_isuserdata","ttislightuserdata","lua_len","tv","luaV_objlen","lua_load","reader","chunkname","mode","z","luaD_protectedparser","gt","lua_newtable","lua_newuserdata","size","Udata","luaS_newudata","lua_next","luaH_next","lua_pcall","lua_pushboolean","lua_pushfstring","fmt","argp","luaO_pushvfstring","lua_pushglobaltable","lua_pushlightuserdata","ts","lua_pushlstring","subarray","lua_pushnil","lua_pushthread","mainthread","lua_pushvalue","lua_pushvfstring","lua_rawequal","lua_rawget","luaH_get","lua_rawgetp","lua_rawlen","vslen","luaH_getn","lua_rawset","luaH_setfrom","invalidateTMcache","lua_rawseti","luaH_setint","lua_rawsetp","lua_remove","lua_replace","lua_setallocf","lua_seti","lua_setmetatable","ttisnil","lua_settable","lua_setupvalue","aux","lua_setuservalue","lua_status","lua_stringtonumber","sz","luaO_str2num","lua_toboolean","l_isfalse","lua_tocfunction","lua_todataview","u8","DataView","buffer","byteOffset","byteLength","lua_tointeger","jsstring","lua_topointer","lua_toproxy","proxy","lua_State","set","create_proxy","lua_tothread","ttisthread","lua_touserdata","lua_typename","ttypename","lua_upvalueid","ref","lua_upvaluejoin","fidx1","n1","fidx2","n2","ref1","ref2","up2","lua_version","version","lua_xmove","LUAL_BUFFERSIZE","lua_getinfo","lua_getstack","lua_newstate","LUA_ERRFILE","LUA_LOADED_TABLE","LUA_PRELOAD_TABLE","LUA_FILEHANDLE","__name","__tostring","empty","luaL_Buffer","findfield","objidx","pushglobalfuncname","ar","pushfuncname","msg","luaL_argerror","arg","extramsg","luaL_error","typeerror","tname","typearg","luaL_getmetafield","luaL_typename","luaL_where","luaL_fileresult","stat","fname","e","errno","luaL_getmetatable","luaL_testudata","tag_error","luaL_checklstring","luaL_checkstring","luaL_optlstring","def","luaL_optstring","luaL_checknumber","d","luaL_checkinteger","interror","luaL_prepbuffsize","B","newend","newsize","max","newbuff","luaL_buffinit","luaL_addlstring","luaL_addsize","luaL_addstring","luaL_pushresult","luaL_opt","getS","string","luaL_loadbufferx","buff","luaL_loadbuffer","luaL_loadstring","tt","luaL_callmeta","p_I","p_f","find_subarray","arr","subarr","from_index","sl","loop","j","luaL_getsubtable","luaL_setfuncs","nup","luaL_checkstack","lib","space","errfile","fnameindex","serr","filename","getc","utf8_bom","luaL_loadfilex","LoadF","err","getF","lf","bytes","path","xhr","XMLHttpRequest","open","responseType","send","statusText","response","com","skipBOM","skipped","skipcomment","readstatus","luaL_loadfile","luaL_checkversion_","ver","LUA_NOREF","LUA_REFNIL","luaL_addchar","luaL_addvalue","luaL_argcheck","cond","luaL_buffinitsize","luaL_checkany","luaL_checkoption","lst","luaL_checktype","luaL_checkudata","luaL_checkversion","luaL_dofile","luaL_execresult","signal","luaL_gsub","wild","luaL_len","luaL_newlibtable","luaL_newmetatable","luaL_optinteger","luaL_optnumber","luaL_prepbuffer","luaL_pushresultsize","luaL_ref","luaL_requiref","modname","openf","glb","luaL_setmetatable","luaL_tolstring","kind","luaL_traceback","L1","last","li","le","floor","lastlevel","LEVELS1","luaL_unref","lua_writestringerror","exec","lua_writestring","lua_writeline","TextDecoder","decoder","decode","stream","copy","apply","opts","luaB_next","ipairsaux","luaB_error","finishpcall","load_aux","envidx","generic_reader","dofilecont","d1","d2","base_funcs","method","iszero","iter","pairsmeta","base","parseInt","isNaN","b_str2int","luaopen_base","lua_assert","llex","lopcodes","lparser","OpCodesI","NO_JUMP","BinOpr","OPR_ADD","OPR_SUB","OPR_MUL","OPR_MOD","OPR_POW","OPR_DIV","OPR_IDIV","OPR_BAND","OPR_BOR","OPR_BXOR","OPR_SHL","OPR_SHR","OPR_CONCAT","OPR_EQ","OPR_LT","OPR_LE","OPR_NE","OPR_GT","OPR_GE","OPR_AND","OPR_OR","OPR_NOBINOPR","UnOpr","OPR_MINUS","OPR_BNOT","OPR_NOT","OPR_LEN","OPR_NOUNOPR","hasjumps","tonumeral","make_tvalue","ek","expkind","VKINT","ival","VKFLT","nval","luaK_nil","fs","previous","pc","lasttarget","opcode","OP_LOADNIL","pfrom","A","pl","SETARG_A","SETARG_B","luaK_codeABC","getinstruction","info","getjump","offset","sBx","fixjump","dest","jmp","abs","MAXARG_sBx","luaX_syntaxerror","ls","SETARG_sBx","luaK_concat","l1","l2","list","next","luaK_jump","jpc","luaK_codeAsBx","OP_JMP","condjump","C","luaK_getlabel","getjumpcontroloffset","testTMode","getjumpcontrol","patchtestreg","reg","OP_TESTSET","NO_REG","CREATE_ABC","OP_TEST","removevalues","patchlistaux","vtarget","dtarget","luaK_patchtohere","luaK_patchlist","luaK_code","dischargejpc","lineinfo","lastline","getOpMode","iABC","getBMode","OpArgN","getCMode","MAXARG_A","MAXARG_B","MAXARG_C","luaK_codeABx","bc","iABx","iAsBx","MAXARG_Bx","CREATE_ABx","codeextraarg","MAXARG_Ax","CREATE_Ax","OP_EXTRAARG","luaK_codek","OP_LOADK","OP_LOADKX","luaK_checkstack","newstack","freereg","maxstacksize","luaK_reserveregs","ISK","nactvar","freeexp","VNONRELOC","freeexps","e1","e2","r1","r2","addk","key","h","nk","luaK_intK","luaK_numberK","boolK","luaK_setreturns","VCALL","SETARG_C","VVARARG","luaK_setoneret","VRELOCABLE","luaK_dischargevars","VLOCAL","VUPVAL","OP_GETUPVAL","VINDEXED","ind","vt","OP_GETTABLE","OP_GETTABUP","code_loadbool","jump","OP_LOADBOOL","discharge2reg","VNIL","VFALSE","VTRUE","VK","OP_MOVE","VJMP","discharge2anyreg","need_value","exp2reg","final","p_t","fj","luaK_exp2nextreg","luaK_exp2anyreg","luaK_exp2val","luaK_exp2RK","vk","nilK","MAXINDEXRK","RKASK","negatecondition","jumponcond","ie","OP_NOT","luaK_goiftrue","luaK_goiffalse","constfolding","v1","v2","validop","codebinexpval","line","rk2","rk1","luaK_fixline","luaK_exp2anyregup","luaK_indexed","vkisinreg","luaK_infix","luaK_jumpto","luaK_patchclose","ins","luaK_posfix","OP_CONCAT","OP_ADD","opr","OP_EQ","codecomp","luaK_prefix","ef","expdesc","codeunexpval","OP_UNM","codenot","luaK_ret","first","nret","OP_RETURN","luaK_self","ereg","OP_SELF","luaK_setlist","nelems","tostore","LFIELDS_PER_FLUSH","OP_SETLIST","luaK_setmultret","luaK_storevar","vr","ex","OP_SETUPVAL","OP_SETTABLE","OP_SETTABUP","luaK_stringK","lua_isyieldable","lua_newthread","lua_resume","lua_yield","getco","co","auxresume","narg","nres","luaB_auxwrap","luaB_cocreate","NL","co_funcs","luaopen_coroutine","lua_gethook","lua_gethookcount","lua_gethookmask","lua_getlocal","lua_sethook","lua_setlocal","checkstack","getthread","thread","settabss","settabsi","settabsb","treatstackoption","auxupvalue","checkupval","argf","argnup","HOOKKEY","hooknames","hookf","dblib","mask","hook","smask","unmakemask","nvar","count","hooktable","makemask","getinput","prompt","debug","luaopen_debug","LUA_IDSIZE","lapi","currentpc","l_savedpc","swapextra","upvalname","findlocal","numparams","l_base","findvararg","luaF_getlocalname","funcinfo","luaO_chunkid","getfuncname","funcname","CIST_FIN","CIST_TAIL","funcnamefromcode","kname","kvalue","INDEXK","getobjname","filterpc","jmptarget","lastpc","setreg","OCi","OP_TFORCALL","OP_CALL","OP_TAILCALL","testAMode","findsetreg","vn","LUA_ENV","Bx","Ax","tm","CIST_HOOKED","TMS","TM_INDEX","TM_NEWINDEX","TM_ADD","OP_SUB","TM_SUB","OP_MUL","TM_MUL","OP_MOD","TM_MOD","OP_POW","TM_POW","OP_DIV","TM_DIV","OP_IDIV","TM_IDIV","OP_BAND","TM_BAND","OP_BOR","TM_BOR","OP_BXOR","TM_BXOR","OP_SHL","TM_SHL","OP_SHR","TM_SHR","TM_UNM","OP_BNOT","TM_BNOT","OP_LEN","TM_LEN","TM_CONCAT","TM_EQ","OP_LT","TM_LT","OP_LE","TM_LE","tmname","varinfo","getupvalname","stkid","isinstack","luaO_pushfstring","luaG_typeerror","luaT_objtypename","luaG_runerror","luaG_addinfo","luaD_throw","luaG_concaterror","p1","p2","luaG_opinterror","luaG_ordererror","t1","t2","luaG_tointerror","luaG_traceexec","hookmask","counthook","hookcount","basehookcount","CIST_HOOKYIELD","luaD_hook","npc","newline","oldpc","ttisfunction","ttisclosure","is_vararg","auxgetinfo","collectvalidlines","local","base_ci","LUAI_MAXCCALLS","lundump","MBuffer","seterrorobj","errcode","oldtop","current_top","setsvalue2s","ERRORSTACKSIZE","luaD_reallocstack","needed","luaD_checkstack","luaD_shrinkstack","inuse","lim","stackinuse","goodsize","luaE_freeCI","luaD_precall","off","luaE_extendCI","luaD_poscall","fsize","adjust_varargs","l_code","callhook","tryfuncTM","firstResult","wanted","moveresults","setnilvalue","ci_top","actual","nfixargs","fixed","luaT_gettmbyobj","TM_CALL","nResults","nCcalls","stackerror","luaV_execute","errorJmp","g","luaD_rawrunprotected","oldnCcalls","lj","finishCcall","unroll","luaV_finishOp","recover","findpcall","luaF_close","resume_error","resume","firstArg","lua_yieldk","old_top","old_ci","old_allowhooks","old_nny","old_errfunc","SParser","dyd","Dyndata","checkmode","f_parser","zgetc","luaU_undump","luaY_parser","luaF_initupvals","luaD_inctop","oldnny","LUAC_DATA","LUAC_VERSION","DumpState","write","DumpBlock","D","DumpByte","y","DumpInt","ab","ArrayBuffer","setInt32","DumpInteger","DumpNumber","setFloat64","DumpString","tsslen","DumpFunction","psource","DumpCode","tsvalue","DumpConstants","instack","DumpUpvalues","DumpProtos","locvars","varname","startpc","endpc","DumpDebug","w","DumpHeader","Proto","id_counter","luaF_findupval","local_number","luaF_newLclosure","LClosure","loadedlibs","luaopen_math","luaopen_package","luaopen_os","luaopen_string","luaopen_table","luaopen_utf8","LUA_LOADLIBNAME","LUA_COLIBNAME","LUA_TABLIBNAME","LUA_OSLIBNAME","LUA_STRLIBNAME","LUA_MATHLIBNAME","LUA_UTF8LIBNAME","LUA_DBLIBNAME","LUA_FENGARILIBNAME","luai_ctype_","lisdigit","lislalnum","lislalpha","lisprint","lisspace","lisxdigit","LUA_MINBUFFER","MAX_INT","luaS_hash","luaS_hashlongstr","EOZ","luaZ_buffer","luaZ_buffremove","luaZ_resetbuffer","luaZ_resizebuffer","FIRST_RESERVED","TK_EOS","TK_FLT","TK_STRING","RESERVED","luaX_tokens","SemInfo","Token","seminfo","save","lexerror","luaX_token2str","currIsNewline","current","save_and_next","TVtrue","luaX_newstring","tpair","strong","inclinenumber","linenumber","check_next1","check_next2","read_numeral","expo","ttisfloat","txtToken","skip_sep","read_long_string","sep","skip","esccheck","gethexa","luaO_hexavalue","readhexaesc","utf8esc","UTF8BUFFSZ","luaO_utf8esc","readutf8desc","readdecesc","read_string","del","will","token_to_index","Object","create","forEach","kidx","LexState","lookahead","envn","isreserved","luaX_lookahead","luaX_next","luaX_setinput","firstchar","luai_apicheck","luai_nummod","MIN_INT","LUA_MAXINTEGER","LUA_MININTEGER","lua_numbertointeger","rand_state","l_rand","pushnumint","mathlib","acos","asin","atan2","ceil","cos","PI","exp","log2","log10","imax","imin","ip","low","random","sin","sqrt","tan","Infinity","LUA_DIRSEP","LUA_EXEC_DIR","LUA_JSPATH_DEFAULT","LUA_PATH_DEFAULT","LUA_PATH_MARK","LUA_PATH_SEP","fengari","global_env","WorkerGlobalScope","self","eval","JSLIBS","LUA_CSUBSEP","LUA_LSUBSEP","LUA_POF","LUA_OFSEP","AUXMARK","lsys_load","readable","seeglb","test","Function","lookforfunc","sym","checkjslib","addtojslib","lsys_sym","setpath","fieldname","envname","dft","nver","LUA_VERSUFFIX","undefined","noenv","plib","pushnexttemplate","searchpath","dirsep","findfile","pname","checkload","searcher_Lua","loadfunc","openfunc","mark","searcher_C","searcher_Croot","searcher_preload","findloader_cont","ll_require_cont","ll_require_cont2","pk_funcs","init","ll_funcs","findloader","createjslibstable","searchers","createsearcherstable","LUA_COMPAT_FLOATSTRING","ldexp","lua_integer2str","lua_number2str","LUA_TPROTO","LUA_TDEADKEY","checktag","checktype","ttisnumber","ttisboolean","ttisshrstring","ttislngstring","ttisdeadkey","setfltvalue","chgfltvalue","setivalue","chgivalue","setfvalue","setpvalue","setbvalue","setsvalue","setuvalue","setthvalue","setclLvalue","sethvalue","setdeadvalue","newidx","freeze","RETS","PRE","POS","mfb","SIGILS","modes","MAXBY10","MAXLASTD","pushstr","Table","JSON","stringify","ids","intarith","luaV_imul","luaV_mod","luaV_div","luaV_shiftl","numarith","pow","LocVar","p3","luaT_trybinTM","bufflen","nli","out_i","luaO_int2fb","s2i","neg","l_str2int","pmode","result","sigdig","nosigdig","hasdot","neg1","exp1","lua_strx2number","flt","parseFloat","lua_str2number","l_str2dloc","l_str2d","oldidx","oldtv","luaP_opmodes","SIZE_Bx","POS_C","POS_Bx","MASK1","MASK0","setarg","fullins","SETARG_Bx","BITRK","GET_OPCODE","GETARG_A","GETARG_B","GETARG_C","GETARG_Bx","GETARG_Ax","GETARG_sBx","OpArgK","OpArgR","OpArgU","OpCodes","OP_NEWTABLE","OP_FORLOOP","OP_FORPREP","OP_TFORLOOP","OP_CLOSURE","OP_VARARG","POS_A","POS_Ax","POS_B","POS_OP","SETARG_Ax","SET_OPCODE","SIZE_A","SIZE_Ax","SIZE_B","SIZE_C","SIZE_OP","iAx","lua_close","LUA_STRFTIMEOPTIONS","setfield","setallfields","utc","getUTCSeconds","getSeconds","getUTCMinutes","getMinutes","getUTCHours","getHours","getUTCDate","getDate","getUTCMonth","getMonth","getUTCFullYear","getFullYear","getUTCDay","getDay","Date","L_MAXDATEFIELD","MAX_SAFE_INTEGER","getfield","delta","locale","days","shortDays","months","shortMonths","AM","PM","am","pm","formats","F","R","T","X","week_number","date","start_of_week","weekday","yday","push_pad_2","pad","strftime","checkoption","tzString","match","day","getTimezoneOffset","conv","option","oplen","l_checktime","syslib","stm","luaS_eqlngstr","hasmultret","eqstr","BlockCnt","firstlabel","firstgoto","upval","isloop","VVOID","FuncState","prev","bl","np","firstlocal","nlocvars","Vardesc","Labeldesc","Labellist","semerror","error_expected","checklimit","limit","where","errorlimit","testnext","check","checknext","check_condition","check_match","who","str_checkname","TK_NAME","init_exp","codestring","checkname","new_localvar","registerlocalvar","actvar","new_localvarliteral","getlocvar","adjustlocalvars","nvars","newupvalue","singlevaraux","searchvar","markupval","searchupvalue","singlevar","adjust_assign","nexps","enterlevel","leavelevel","closegoto","label","gl","vname","findlabel","lb","newlabelentry","findgotos","enterblock","open_func","leaveblock","breaklabel","tolevel","removevars","movegotosout","undefgoto","close_func","block_follow","withuntil","TK_ELSE","TK_ELSEIF","TK_END","TK_UNTIL","statlist","TK_RETURN","statement","fieldsel","yindex","expr","ConsControl","nh","recfield","cc","rkkey","closelistfield","listfield","field","lastlistfield","body","ismethod","new_fs","clp","addprototype","TK_DOTS","parlist","TK_FUNCTION","codeclosure","explist","funcargs","suffixedexp","primaryexp","priority","left","right","subexpr","uop","TK_NOT","getunopr","TK_INT","TK_NIL","TK_TRUE","TK_FALSE","simpleexp","TK_IDIV","TK_SHL","TK_SHR","TK_CONCAT","TK_NE","TK_EQ","TK_LE","TK_GE","TK_AND","TK_OR","getbinopr","nextop","LHS_assign","assignment","lh","nv","conflict","check_conflict","gotostat","TK_GOTO","forbody","isnum","endfor","TK_DO","prep","test_then_block","escapelist","jf","TK_THEN","TK_BREAK","TK_IF","ifstat","TK_WHILE","whileinit","condexit","whilestat","TK_FOR","fornum","TK_IN","indexname","forlist","forstat","TK_REPEAT","repeat_init","bl1","bl2","repeatstat","funcstat","TK_LOCAL","localfunc","localstat","TK_DBCOLON","ll","checkrepeated","skipnoopstat","labelstat","retstat","exprstat","lexstate","funcstate","mainfunc","BASIC_STACK_SIZE","CallInfo","global_State","TM_N","stack_init","freestack","f_luaopen","registry","init_registry","luaT_init","CIST_FRESH","CIST_LEQ","close_state","luaE_freethread","TString","hash","realstring","sprintf","LUA_INTEGER_FMT","LUA_INTEGER_FRMLEN","LUA_NUMBER_FMT","LUA_NUMBER_FRMLEN","frexp","lua_getlocaledecpoint","L_ESC","MAXSIZE","strlen","posrelat","SIZELENMOD","lua_number2strx","is","zero","fe","num2straux","FLAGS","isalpha","isdigit","iscntrl","isgraph","islower","isupper","isalnum","ispunct","isspace","isxdigit","addliteral","addquoted","point","ppoint","checkdp","scanformat","strfrmt","form","addlenmod","lenmod","lm","spec","MC","Header","islittle","maxalign","digit","getnum","df","getnumlimit","getoption","opt","getdetails","totalsize","ntoalign","align","packint","unpackint","issigned","unpacknum","dv","setUint8","getFloat32","getFloat64","SPECIALS","MatchState","src_init","src_end","p_end","matchdepth","capture","classend","ms","match_class","matchbracketclass","ec","sig","singlematch","ep","matchbalance","cont","max_expand","min_expand","start_capture","end_capture","capture_to_close","match_capture","check_capture","ai","bi","array_cmp","gotodefault","gotoinit","push_onecapture","push_captures","nlevels","prepstate","lp","reprepstate","str_find_aux","find","nospecials","anchor","GMatchState","lastmatch","gmatch_aux","gm","add_value","tr","news","add_s","strlib","posi","pose","srcl","max_s","details","setFloat32","lsep","totallen","pi","ld","createmetatable","lightuserdata_hashes","get_lightuserdata_hash","table_hash","Map","dead_strong","dead_weak","flags","clear","entry","mark_dead","delete","getgeneric","luaH_getstr","kv","table","keyI","keyO","checkfield","checktab","aux_getn","addfield","set2","sort_comp","partition","lo","choosePivot","rnd","r4","auxsort","tab_funcs","luaT_typenames_","TM_GC","TM_MODE","luaT_callTM","hasres","luaT_callbinTM","luaT_gettm","events","ename","fasttm","et","luaT_callorderTM","lua_setallof","conf","LUA_VDIR","LUA_LDIR","LUA_JSDIR","mantissa","exponent","steps","bits","getUint32","toPrecision","LUA_BITLIBNAME","linit","luaZ_read","BytecodeParser","Z","intSize","size_tSize","instructionSize","integerSize","numberSize","arraybuffer","read","LoadByte","LoadInt","getInt32","LoadNumber","LoadInteger","LoadSize_t","LoadString","static","LoadCode","LoadConstants","LoadProtos","LoadFunction","LoadUpvalues","LoadDebug","checkliteral","checkHeader","checksize","why","byte","S","MAXUNICODE","iscont","u_posrelat","limits","utf8_decode","p_U","pushutfchar","iter_aux","dec","funcs","posj","UTF8PATT","RA","RB","RKB","RKC","dojump","donextjump","LTnum","l_strcmp","LEnum","forlimit","step","stopnow","ilimit","luaV_tointeger","cvt2num","rs","ra","rb","imul","aLo","bLo","getcached","encup","pushclosure","ncl","tostring","isemptystr","copy2buff","tl","total","slot","newframe","konst","rc","numberop1","numberop2","op1","op2","numberop","rbIdx","nci","oci","nfunc","nfuncOff","ofuncOff","forlim","plimit","pstep","initv","nlimit","nstep","ninit","cb","inst","luaV_rawequalobj","luaZ_fill","b_offset","open_tag","close_tag","HTML_TAG_RE","RegExp","HTML_OPEN_CLOSE_TAG_RE","_hasOwnProperty","prototype","hasOwnProperty","has","object","isValidEntityCode","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","mdurl","ucmicro","assign","sources","keys","isString","_class","unescapeMd","unescapeAll","escaped","entity","replaceEntityPattern","escapeHtml","arrayReplaceAt","newElements","concat","isSpace","isMdAsciiPunct","isPunctChar","escapeRE","normalizeReference","toUpperCase","Ruler","_rules","ParserBlock","alt","startLine","endLine","getRules","hasEmptyLines","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","Core","_rules2","ParserInline","ruler2","skipToken","ok","pending","pushPending","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","altName","chain","at","index","before","beforeName","ruleName","after","afterName","enable","ignoreInvalid","isArray","enableOnly","chainName","adjustTab","initial","lastLineEmpty","lines","nextLine","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","isOutdented","oldLineMax","bMarks","tShift","eMarks","bsCount","parentType","markup","getLines","marker","params","mem","haveEndMarker","skipChars","skipSpaces","tmp","skipSpacesBack","skipCharsBack","cnt","block_names","HTML_SEQUENCES","lineText","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","hidden","markTightParagraphs","_endLine","destEndPos","destEndLineNo","labelEnd","helpers","parseLinkDestination","normalizeLink","validateLink","parseLinkTitle","references","StateBlock","indent_found","ddIndent","keepLastLF","lineIndent","queue","lineStart","getLine","escapedSplit","isEscaped","lastPos","columns","columnCount","aligns","tableLines","tbodyLines","firstCh","secondCh","shift","pop","inlineMode","isLinkClose","currentToken","nodes","ln","text","htmlLinkLevel","url","fullUrl","urlText","blockTokens","pretest","schema","normalizeLinkText","lastIndex","NEWLINES_RE","NULL_RE","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","openQuote","closeQuote","OUTER","single","StateCore","curr","EMAIL_RE","AUTOLINK_RE","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","close","tokens_meta","postProcess","startDelim","endDelim","isStrong","scanned","scanDelims","can_open","can_close","DIGITAL_RE","NAMED_RE","ESCAPED","ch1","ch2","origStr","escapedStr","lc","linkLevel","labelStart","oldPos","parseLinkLabel","parseReference","SCHEME_RE","proto","link","matchAtStart","pmax","ws","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","left_flanking","right_flanking","loneMarkers","isTerminatorChar","attrIndex","attrPush","attrData","attrSet","attrJoin","re","not_string","not_bool","not_type","not_primitive","number","numeric_arg","json","not_json","modulo","placeholder","key_access","index_access","sign","sprintf_format","sprintf_parse","parse_tree","argv","ph","pad_character","pad_length","is_positive","cursor","tree_length","param_no","width","precision","toExponential","toFixed","valueOf","pad_char","charAt","sprintf_cache","_fmt","arg_names","SyntaxError","field_list","replacement_field","field_match","Any","Cc","Cf","P","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","Symbol","toStringTag","defineProperty"],"sourceRoot":""}