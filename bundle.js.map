{"version":3,"sources":["webpack://moontale/./node_modules/fengari/src/defs.js","webpack://moontale/./node_modules/fengari/src/fengari.js","webpack://moontale/./node_modules/fengari/src/fengaricore.js","webpack://moontale/./node_modules/fengari/src/fengarilib.js","webpack://moontale/./node_modules/fengari/src/lapi.js","webpack://moontale/./node_modules/fengari/src/lauxlib.js","webpack://moontale/./node_modules/fengari/src/lbaselib.js","webpack://moontale/./node_modules/fengari/src/lcode.js","webpack://moontale/./node_modules/fengari/src/lcorolib.js","webpack://moontale/./node_modules/fengari/src/ldblib.js","webpack://moontale/./node_modules/fengari/src/ldebug.js","webpack://moontale/./node_modules/fengari/src/ldo.js","webpack://moontale/./node_modules/fengari/src/ldump.js","webpack://moontale/./node_modules/fengari/src/lfunc.js","webpack://moontale/./node_modules/fengari/src/linit.js","webpack://moontale/./node_modules/fengari/src/ljstype.js","webpack://moontale/./node_modules/fengari/src/llex.js","webpack://moontale/./node_modules/fengari/src/llimits.js","webpack://moontale/./node_modules/fengari/src/lmathlib.js","webpack://moontale/./node_modules/fengari/src/loadlib.js","webpack://moontale/./node_modules/fengari/src/lobject.js","webpack://moontale/./node_modules/fengari/src/lopcodes.js","webpack://moontale/./node_modules/fengari/src/loslib.js","webpack://moontale/./node_modules/fengari/src/lparser.js","webpack://moontale/./node_modules/fengari/src/lstate.js","webpack://moontale/./node_modules/fengari/src/lstring.js","webpack://moontale/./node_modules/fengari/src/lstrlib.js","webpack://moontale/./node_modules/fengari/src/ltable.js","webpack://moontale/./node_modules/fengari/src/ltablib.js","webpack://moontale/./node_modules/fengari/src/ltm.js","webpack://moontale/./node_modules/fengari/src/lua.js","webpack://moontale/./node_modules/fengari/src/luaconf.js","webpack://moontale/./node_modules/fengari/src/lualib.js","webpack://moontale/./node_modules/fengari/src/lundump.js","webpack://moontale/./node_modules/fengari/src/lutf8lib.js","webpack://moontale/./node_modules/fengari/src/lvm.js","webpack://moontale/./node_modules/fengari/src/lzio.js","webpack://moontale/./node_modules/markdown-it/lib/common/entities.js","webpack://moontale/./node_modules/markdown-it/lib/common/html_blocks.js","webpack://moontale/./node_modules/markdown-it/lib/common/html_re.js","webpack://moontale/./node_modules/markdown-it/lib/common/utils.js","webpack://moontale/./node_modules/markdown-it/lib/parser_block.js","webpack://moontale/./node_modules/markdown-it/lib/parser_core.js","webpack://moontale/./node_modules/markdown-it/lib/parser_inline.js","webpack://moontale/./node_modules/markdown-it/lib/ruler.js","webpack://moontale/./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack://moontale/./node_modules/markdown-it/lib/rules_block/code.js","webpack://moontale/./node_modules/markdown-it/lib/rules_block/fence.js","webpack://moontale/./node_modules/markdown-it/lib/rules_block/heading.js","webpack://moontale/./node_modules/markdown-it/lib/rules_block/hr.js","webpack://moontale/./node_modules/markdown-it/lib/rules_block/html_block.js","webpack://moontale/./node_modules/markdown-it/lib/rules_block/lheading.js","webpack://moontale/./node_modules/markdown-it/lib/rules_block/list.js","webpack://moontale/./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack://moontale/./node_modules/markdown-it/lib/rules_block/reference.js","webpack://moontale/./node_modules/markdown-it/lib/rules_block/state_block.js","webpack://moontale/./node_modules/markdown-it/lib/rules_block/table.js","webpack://moontale/./node_modules/markdown-it/lib/rules_core/block.js","webpack://moontale/./node_modules/markdown-it/lib/rules_core/inline.js","webpack://moontale/./node_modules/markdown-it/lib/rules_core/linkify.js","webpack://moontale/./node_modules/markdown-it/lib/rules_core/normalize.js","webpack://moontale/./node_modules/markdown-it/lib/rules_core/replacements.js","webpack://moontale/./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack://moontale/./node_modules/markdown-it/lib/rules_core/state_core.js","webpack://moontale/./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack://moontale/./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack://moontale/./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack://moontale/./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack://moontale/./node_modules/markdown-it/lib/rules_inline/entity.js","webpack://moontale/./node_modules/markdown-it/lib/rules_inline/escape.js","webpack://moontale/./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack://moontale/./node_modules/markdown-it/lib/rules_inline/image.js","webpack://moontale/./node_modules/markdown-it/lib/rules_inline/link.js","webpack://moontale/./node_modules/markdown-it/lib/rules_inline/newline.js","webpack://moontale/./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack://moontale/./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack://moontale/./node_modules/markdown-it/lib/rules_inline/text.js","webpack://moontale/./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack://moontale/./node_modules/markdown-it/lib/token.js","webpack://moontale/./node_modules/sprintf-js/src/sprintf.js","webpack://moontale/./src/convert.ts","webpack://moontale/./src/index.ts","webpack://moontale/./src/rules/content_block.ts","webpack://moontale/./src/rules/expression.ts","webpack://moontale/./src/rules/passage_link.ts","webpack://moontale/./src/rules/script_block.ts","webpack://moontale/./src/rules/variable.ts","webpack://moontale/./src/runtime.ts","webpack://moontale/./node_modules/uc.micro/categories/Cc/regex.js","webpack://moontale/./node_modules/uc.micro/categories/Cf/regex.js","webpack://moontale/./node_modules/uc.micro/categories/P/regex.js","webpack://moontale/./node_modules/uc.micro/categories/Z/regex.js","webpack://moontale/./node_modules/uc.micro/index.js","webpack://moontale/./node_modules/uc.micro/properties/Any/regex.js","webpack://moontale/webpack/bootstrap","webpack://moontale/webpack/runtime/make namespace object","webpack://moontale/webpack/startup"],"names":["luastring_from","luastring_indexOf","luastring_of","Uint8Array","from","bind","a","i","len","length","r","s","v","indexOf","array_indexOf","call","Error","of","arguments","is_luastring","unicode_error_message","uri_allowed","split","reduce","c","charCodeAt","to_luastring_cache","to_luastring","str","cache","TypeError","cached","outU8Array","Array","outIdx","u","module","exports","luastring_eq","b","to_jsstring","value","to","replacement_char","Math","min","u0","String","fromCharCode","RangeError","u1","u2","s1","s2","u3","to_uristring","toString","from_userstring","LUA_SIGNATURE","LUA_VERSION_MAJOR","LUA_VERSION_MINOR","LUA_VERSION_NUM","LUA_VERSION_RELEASE","LUA_VERSION","LUA_RELEASE","LUA_COPYRIGHT","LUA_AUTHORS","constant_types","LUA_TNONE","LUA_TNIL","LUA_TBOOLEAN","LUA_TLIGHTUSERDATA","LUA_TNUMBER","LUA_TSTRING","LUA_TTABLE","LUA_TFUNCTION","LUA_TUSERDATA","LUA_TTHREAD","LUA_NUMTAGS","LUA_TSHRSTR","LUA_TLNGSTR","LUA_TNUMFLT","LUA_TNUMINT","LUA_TLCL","LUA_TLCF","LUA_TCCL","LUAI_MAXSTACK","LUA_REGISTRYINDEX","LUA_HOOKCALL","LUA_HOOKCOUNT","LUA_HOOKLINE","LUA_HOOKRET","LUA_HOOKTAILCALL","LUA_MASKCALL","LUA_MASKCOUNT","LUA_MASKLINE","LUA_MASKRET","LUA_MINSTACK","LUA_MULTRET","LUA_OPADD","LUA_OPBAND","LUA_OPBNOT","LUA_OPBOR","LUA_OPBXOR","LUA_OPDIV","LUA_OPEQ","LUA_OPIDIV","LUA_OPLE","LUA_OPLT","LUA_OPMOD","LUA_OPMUL","LUA_OPPOW","LUA_OPSHL","LUA_OPSHR","LUA_OPSUB","LUA_OPUNM","LUA_RIDX_GLOBALS","LUA_RIDX_LAST","LUA_RIDX_MAINTHREAD","lua_Debug","this","event","NaN","name","namewhat","what","source","currentline","linedefined","lastlinedefined","nups","nparams","isvararg","istailcall","short_src","i_ci","lua_upvalueindex","thread_status","LUA_OK","LUA_YIELD","LUA_ERRRUN","LUA_ERRSYNTAX","LUA_ERRMEM","LUA_ERRGCMM","LUA_ERRERR","core","FENGARI_AUTHORS","FENGARI_COPYRIGHT","FENGARI_RELEASE","FENGARI_VERSION","FENGARI_VERSION_MAJOR","FENGARI_VERSION_MINOR","FENGARI_VERSION_NUM","FENGARI_VERSION_RELEASE","luaconf","lua","lauxlib","lualib","defs","lua_pushinteger","lua_pushliteral","lua_setfield","luaL_newlib","luaopen_fengari","L","api_check","ldebug","ldo","luaU_dump","lfunc","lobject","lstate","luaS_bless","luaS_new","luaS_newliteral","ltm","lvm","ltable","ZIO","TValue","CClosure","api_incr_top","top","ci","api_checknelems","n","funcOff","fengari_argcheck","fengari_argcheckinteger","isvalid","o","luaO_nilobject","index2addr","idx","stack","l_G","l_registry","MAXUPVAL","func","ttislcf","nupvalues","upvalue","index2addr_","lua_settop","newtop","stack_last","adjust_top","lua_pop","reverse","fromtv","temp","type","setobjs2s","setobj2s","lua_rotate","t","pIdx","p","m","lua_copy","fromidx","toidx","setfrom","lua_pushcclosure","fn","cl","setclCvalue","lua_pushjsclosure","lua_pushcfunction","lua_pushjsfunction","auxsetstr","k","pushsvalue2s","settable","lua_setglobal","luaH_getint","auxgetstr","luaV_gettable","ttnov","lua_rawgeti","ttistable","pushobj2s","lua_createtable","narray","nrec","luaH_new","aux_upvalue","fi","ttype","f","val","upvalues","getstr","upvals","lua_tolstring","ttisstring","cvt2str","luaO_tostring","svalue","lua_tostring","lua_tointegerx","tointeger","lua_tonumberx","tonumber","seen","WeakMap","f_call","ud","luaD_callnoyield","nresults","lua_type","default_chunkname","checkresults","na","nr","lua_callk","nargs","ctx","callstatus","CIST_LUA","status","nny","c_k","c_ctx","luaD_call","lua_pcallk","errfunc","luaD_pcall","extra","c_old_errfunc","CIST_OAH","allowhook","CIST_YPCALL","getupvalref","fidx","ttisLclosure","lua_absindex","lua_arith","op","luaO_arith","lua_atpanic","panicf","old","panic","lua_atnativeerror","errorf","atnativeerror","lua_call","lua_checkstack","res","EXTRA_STACK","luaD_growstack","lua_compare","index1","index2","o1","o2","luaV_equalobj","luaV_lessthan","luaV_lessequal","lua_concat","luaV_concat","lua_dump","writer","data","strip","lua_error","luaG_errormsg","lua_gc","lua_getallocf","console","warn","lua_getextraspace","lua_getfield","lua_getglobal","lua_geti","lua_getmetatable","objindex","mt","obj","metatable","lua_gettable","lua_gettop","lua_getupvalue","funcindex","up","lua_getuservalue","ttisfulluserdata","uv","uservalue","lua_insert","lua_isboolean","lua_iscfunction","ttisCclosure","lua_isfunction","lua_isinteger","ttisinteger","lua_islightuserdata","lua_isnil","lua_isnone","lua_isnoneornil","lua_isnumber","lua_isproxy","G","get","lua_isstring","lua_istable","lua_isthread","lua_isuserdata","ttislightuserdata","lua_len","tv","luaV_objlen","lua_load","reader","chunkname","mode","z","luaD_protectedparser","gt","lua_newtable","lua_newuserdata","size","Udata","luaS_newudata","lua_next","luaH_next","lua_pcall","lua_pushboolean","lua_pushfstring","fmt","argp","luaO_pushvfstring","lua_pushglobaltable","lua_pushlightuserdata","ts","lua_pushlstring","subarray","lua_pushnil","lua_pushnumber","lua_pushstring","lua_pushthread","mainthread","lua_pushvalue","lua_pushvfstring","lua_rawequal","lua_rawget","luaH_get","lua_rawgetp","lua_rawlen","vslen","luaH_getn","lua_rawset","luaH_setfrom","invalidateTMcache","lua_rawseti","luaH_setint","lua_rawsetp","lua_register","lua_remove","lua_replace","lua_setallocf","lua_seti","lua_setmetatable","ttisnil","lua_settable","lua_setupvalue","aux","lua_setuservalue","lua_status","lua_stringtonumber","sz","luaO_str2num","lua_toboolean","l_isfalse","lua_tocfunction","lua_todataview","u8","DataView","buffer","byteOffset","byteLength","lua_tointeger","lua_tojsstring","jsstring","lua_tonumber","lua_topointer","lua_toproxy","proxy","lua_State","set","create_proxy","lua_tothread","ttisthread","lua_touserdata","lua_typename","ttypename","lua_upvalueid","ref","lua_upvaluejoin","fidx1","n1","fidx2","n2","ref1","ref2","up2","lua_version","version","lua_xmove","LUAL_BUFFERSIZE","lua_getinfo","lua_getstack","lua_newstate","LUA_ERRFILE","LUA_LOADED_TABLE","LUA_PRELOAD_TABLE","LUA_FILEHANDLE","__name","__tostring","empty","luaL_Buffer","findfield","objidx","level","pushglobalfuncname","ar","pushfuncname","msg","luaL_argerror","arg","extramsg","luaL_error","typeerror","tname","typearg","luaL_getmetafield","luaL_typename","luaL_where","luaL_fileresult","stat","fname","e","message","errno","luaL_getmetatable","luaL_testudata","tag_error","tag","luaL_checklstring","luaL_checkstring","luaL_optlstring","def","luaL_optstring","luaL_checknumber","d","luaL_checkinteger","interror","luaL_prepbuffsize","B","newend","newsize","max","newbuff","luaL_buffinit","luaL_addlstring","l","luaL_addsize","luaL_addstring","luaL_pushresult","luaL_opt","getS","string","luaL_loadbufferx","buff","luaL_loadbuffer","luaL_loadstring","tt","luaL_callmeta","p_I","p_f","find_subarray","arr","subarr","from_index","sl","loop","j","luaL_getsubtable","luaL_setfuncs","nup","luaL_checkstack","lib","space","errfile","fnameindex","error","serr","filename","getc","utf8_bom","luaL_loadfilex","LoadF","pos","err","getF","lf","bytes","path","xhr","XMLHttpRequest","open","window","responseType","send","statusText","response","com","skipBOM","skipped","skipcomment","readstatus","luaL_loadfile","luaL_checkversion_","ver","LUA_NOREF","LUA_REFNIL","luaL_addchar","luaL_addvalue","luaL_argcheck","cond","luaL_buffinitsize","luaL_checkany","luaL_checkoption","lst","luaL_checktype","luaL_checkudata","luaL_checkversion","luaL_dofile","luaL_dostring","luaL_execresult","signal","luaL_gsub","wild","luaL_len","luaL_newlibtable","luaL_newmetatable","luaL_newstate","luaL_optinteger","luaL_optnumber","luaL_prepbuffer","luaL_pushresultsize","luaL_ref","luaL_requiref","modname","openf","glb","luaL_setmetatable","luaL_tolstring","kind","luaL_traceback","L1","last","li","le","floor","lastlevel","LEVELS1","luaL_unref","lua_writestringerror","exec","lua_writestring","lua_writeline","TextDecoder","decoder","decode","stream","log","copy","push","apply","opts","map","luaB_next","ipairsaux","luaB_error","finishpcall","load_aux","envidx","generic_reader","dofilecont","d1","d2","base_funcs","env","method","iszero","iter","pairsmeta","base","parseInt","isNaN","b_str2int","luaopen_base","lua_assert","llex","lopcodes","lparser","OpCodesI","NO_JUMP","BinOpr","OPR_ADD","OPR_SUB","OPR_MUL","OPR_MOD","OPR_POW","OPR_DIV","OPR_IDIV","OPR_BAND","OPR_BOR","OPR_BXOR","OPR_SHL","OPR_SHR","OPR_CONCAT","OPR_EQ","OPR_LT","OPR_LE","OPR_NE","OPR_GT","OPR_GE","OPR_AND","OPR_OR","OPR_NOBINOPR","UnOpr","OPR_MINUS","OPR_BNOT","OPR_NOT","OPR_LEN","OPR_NOUNOPR","hasjumps","tonumeral","make_tvalue","ek","expkind","VKINT","ival","VKFLT","nval","luaK_nil","fs","previous","pc","lasttarget","code","opcode","OP_LOADNIL","pfrom","A","pl","SETARG_A","SETARG_B","luaK_codeABC","getinstruction","info","getjump","offset","sBx","fixjump","dest","jmp","abs","MAXARG_sBx","luaX_syntaxerror","ls","SETARG_sBx","luaK_concat","l1","l2","list","next","luaK_jump","jpc","luaK_codeAsBx","OP_JMP","condjump","C","luaK_getlabel","getjumpcontroloffset","testTMode","getjumpcontrol","patchtestreg","node","reg","OP_TESTSET","NO_REG","CREATE_ABC","OP_TEST","removevalues","patchlistaux","vtarget","dtarget","luaK_patchtohere","luaK_patchlist","target","luaK_code","dischargejpc","lineinfo","lastline","getOpMode","iABC","getBMode","OpArgN","getCMode","MAXARG_A","MAXARG_B","MAXARG_C","luaK_codeABx","bc","iABx","iAsBx","MAXARG_Bx","CREATE_ABx","codeextraarg","MAXARG_Ax","CREATE_Ax","OP_EXTRAARG","luaK_codek","OP_LOADK","OP_LOADKX","luaK_checkstack","newstack","freereg","maxstacksize","luaK_reserveregs","ISK","nactvar","freeexp","VNONRELOC","freeexps","e1","e2","r1","r2","addk","key","h","nk","luaK_intK","luaK_numberK","boolK","luaK_setreturns","VCALL","SETARG_C","VVARARG","luaK_setoneret","VRELOCABLE","luaK_dischargevars","VLOCAL","VUPVAL","OP_GETUPVAL","VINDEXED","ind","vt","OP_GETTABLE","OP_GETTABUP","code_loadbool","jump","OP_LOADBOOL","discharge2reg","VNIL","VFALSE","VTRUE","VK","OP_MOVE","VJMP","discharge2anyreg","need_value","exp2reg","final","p_t","fj","luaK_exp2nextreg","luaK_exp2anyreg","luaK_exp2val","luaK_exp2RK","vk","nilK","MAXINDEXRK","RKASK","negatecondition","jumponcond","ie","OP_NOT","luaK_goiftrue","luaK_goiffalse","constfolding","v1","v2","validop","codebinexpval","line","rk2","rk1","luaK_fixline","luaK_exp2anyregup","luaK_indexed","vkisinreg","luaK_infix","luaK_jumpto","luaK_patchclose","ins","luaK_posfix","OP_CONCAT","OP_ADD","opr","OP_EQ","codecomp","luaK_prefix","ef","expdesc","codeunexpval","OP_UNM","codenot","luaK_ret","first","nret","OP_RETURN","luaK_self","ereg","OP_SELF","luaK_setlist","nelems","tostore","LFIELDS_PER_FLUSH","OP_SETLIST","luaK_setmultret","luaK_storevar","vr","ex","OP_SETUPVAL","OP_SETTABLE","OP_SETTABUP","luaK_stringK","lua_isyieldable","lua_newthread","lua_resume","lua_yield","getco","co","auxresume","narg","nres","luaB_auxwrap","luaB_cocreate","NL","co_funcs","luaopen_coroutine","lua_gethook","lua_gethookcount","lua_gethookmask","lua_getlocal","lua_sethook","lua_setlocal","checkstack","getthread","thread","settabss","settabsi","settabsb","treatstackoption","auxupvalue","checkupval","argf","argnup","HOOKKEY","hooknames","hookf","dblib","mask","hook","smask","unmakemask","options","nvar","count","hooktable","makemask","getinput","input","prompt","debug","luaopen_debug","LUA_IDSIZE","lapi","currentpc","l_savedpc","swapextra","upvalname","findlocal","numparams","l_base","findvararg","luaF_getlocalname","funcinfo","luaO_chunkid","getfuncname","funcname","CIST_FIN","CIST_TAIL","funcnamefromcode","kname","kvalue","INDEXK","getobjname","filterpc","jmptarget","lastpc","setreg","OCi","OP_TFORCALL","OP_CALL","OP_TAILCALL","testAMode","findsetreg","vn","LUA_ENV","Bx","Ax","tm","CIST_HOOKED","TMS","TM_INDEX","TM_NEWINDEX","TM_ADD","OP_SUB","TM_SUB","OP_MUL","TM_MUL","OP_MOD","TM_MOD","OP_POW","TM_POW","OP_DIV","TM_DIV","OP_IDIV","TM_IDIV","OP_BAND","TM_BAND","OP_BOR","TM_BOR","OP_BXOR","TM_BXOR","OP_SHL","TM_SHL","OP_SHR","TM_SHR","TM_UNM","OP_BNOT","TM_BNOT","OP_LEN","TM_LEN","TM_CONCAT","TM_EQ","OP_LT","TM_LT","OP_LE","TM_LE","tmname","varinfo","getupvalname","stkid","isinstack","luaO_pushfstring","luaG_typeerror","luaT_objtypename","luaG_runerror","luaG_addinfo","src","luaD_throw","luaG_concaterror","p1","p2","luaG_opinterror","luaG_ordererror","t1","t2","luaG_tointerror","luaG_traceexec","hookmask","counthook","hookcount","basehookcount","CIST_HOOKYIELD","luaD_hook","npc","newline","oldpc","ttisfunction","ttisclosure","is_vararg","auxgetinfo","collectvalidlines","local","base_ci","LUAI_MAXCCALLS","lundump","MBuffer","seterrorobj","errcode","oldtop","current_top","setsvalue2s","ERRORSTACKSIZE","luaD_reallocstack","needed","luaD_checkstack","luaD_shrinkstack","inuse","lim","stackinuse","goodsize","luaE_freeCI","luaD_precall","off","luaE_extendCI","luaD_poscall","fsize","adjust_varargs","l_code","callhook","tryfuncTM","firstResult","wanted","moveresults","setnilvalue","ci_top","actual","nfixargs","fixed","luaT_gettmbyobj","TM_CALL","nResults","nCcalls","stackerror","luaV_execute","errorJmp","g","luaD_rawrunprotected","oldnCcalls","lj","finishCcall","unroll","luaV_finishOp","recover","findpcall","luaF_close","resume_error","resume","firstArg","lua_yieldk","old_top","old_ci","old_allowhooks","old_nny","old_errfunc","SParser","dyd","Dyndata","checkmode","x","f_parser","zgetc","luaU_undump","luaY_parser","luaF_initupvals","luaD_inctop","oldnny","LUAC_DATA","LUAC_VERSION","Number","DumpState","write","DumpBlock","D","DumpByte","y","DumpInt","ab","ArrayBuffer","setInt32","DumpInteger","DumpNumber","setFloat64","DumpString","tsslen","DumpFunction","psource","DumpCode","tsvalue","DumpConstants","instack","DumpUpvalues","DumpProtos","locvars","varname","startpc","endpc","DumpDebug","w","DumpHeader","Proto","id","id_counter","luaF_findupval","local_number","luaF_newLclosure","LClosure","loadedlibs","luaL_openlibs","luaopen_math","luaopen_package","luaopen_os","luaopen_string","luaopen_table","luaopen_utf8","LUA_LOADLIBNAME","LUA_COLIBNAME","LUA_TABLIBNAME","LUA_OSLIBNAME","LUA_STRLIBNAME","LUA_MATHLIBNAME","LUA_UTF8LIBNAME","LUA_DBLIBNAME","LUA_FENGARILIBNAME","luai_ctype_","lisdigit","lislalnum","lislalpha","lisprint","lisspace","lisxdigit","LUA_MINBUFFER","MAX_INT","luaS_hash","luaS_hashlongstr","EOZ","luaZ_buffer","luaZ_buffremove","luaZ_resetbuffer","luaZ_resizebuffer","FIRST_RESERVED","TK_EOS","TK_FLT","TK_STRING","RESERVED","luaX_tokens","SemInfo","Token","token","seminfo","save","lexerror","luaX_token2str","currIsNewline","current","save_and_next","TVtrue","luaX_newstring","tpair","strong","inclinenumber","linenumber","check_next1","check_next2","read_numeral","expo","ttisfloat","txtToken","skip_sep","read_long_string","sep","skip","esccheck","gethexa","luaO_hexavalue","readhexaesc","utf8esc","UTF8BUFFSZ","luaO_utf8esc","readutf8desc","readdecesc","read_string","del","will","token_to_index","Object","create","forEach","kidx","LexState","lookahead","envn","isreserved","luaX_lookahead","luaX_next","luaX_setinput","firstchar","luai_apicheck","luai_nummod","MIN_INT","LUA_MAXINTEGER","LUA_MININTEGER","lua_numbertointeger","rand_state","l_rand","pushnumint","mathlib","acos","asin","atan2","ceil","cos","PI","exp","log2","log10","imax","imin","ip","low","random","sin","sqrt","tan","Infinity","LUA_DIRSEP","LUA_EXEC_DIR","LUA_JSPATH_DEFAULT","LUA_PATH_DEFAULT","LUA_PATH_MARK","LUA_PATH_SEP","fengari","global_env","WorkerGlobalScope","self","eval","JSLIBS","LUA_CSUBSEP","LUA_LSUBSEP","LUA_POF","LUA_OFSEP","AUXMARK","lsys_load","readable","seeglb","test","Function","lookforfunc","sym","checkjslib","addtojslib","lsys_sym","setpath","fieldname","envname","dft","nver","LUA_VERSUFFIX","undefined","noenv","plib","pushnexttemplate","searchpath","dirsep","findfile","pname","checkload","searcher_Lua","loadfunc","openfunc","mark","searcher_C","searcher_Croot","searcher_preload","findloader_cont","ll_require_cont","ll_require_cont2","pk_funcs","init","ll_funcs","findloader","createjslibstable","searchers","createsearcherstable","LUA_COMPAT_FLOATSTRING","ldexp","lua_integer2str","lua_number2str","LUA_TPROTO","LUA_TDEADKEY","checktype","checktag","ttisboolean","newidx","setsvalue","freeze","RETS","PRE","POS","mfb","SIGILS","modes","MAXBY10","MAXLASTD","pushstr","setivalue","setfltvalue","Table","JSON","stringify","ids","intarith","luaV_imul","luaV_mod","luaV_div","luaV_shiftl","numarith","pow","LocVar","p3","i1","i2","luaT_trybinTM","bufflen","out","nli","out_i","luaO_int2fb","s2i","neg","l_str2int","pmode","result","sigdig","nosigdig","hasdot","neg1","exp1","lua_strx2number","flt","parseFloat","lua_str2number","l_str2dloc","l_str2d","oldidx","oldtv","luaP_opmodes","SIZE_Bx","POS_C","POS_Bx","MASK1","MASK0","setarg","fullins","SETARG_Bx","BITRK","GET_OPCODE","GETARG_A","GETARG_B","GETARG_C","GETARG_Bx","GETARG_Ax","GETARG_sBx","OpArgK","OpArgR","OpArgU","OpCodes","OP_NEWTABLE","OP_FORLOOP","OP_FORPREP","OP_TFORLOOP","OP_CLOSURE","OP_VARARG","POS_A","POS_Ax","POS_B","POS_OP","SETARG_Ax","SET_OPCODE","SIZE_A","SIZE_Ax","SIZE_B","SIZE_C","SIZE_OP","iAx","lua_close","LUA_STRFTIMEOPTIONS","setfield","setallfields","time","utc","getUTCSeconds","getSeconds","getUTCMinutes","getMinutes","getUTCHours","getHours","getUTCDate","getDate","getUTCMonth","getMonth","getUTCFullYear","getFullYear","getUTCDay","getDay","Date","L_MAXDATEFIELD","MAX_SAFE_INTEGER","getfield","delta","locale","days","shortDays","months","shortMonths","AM","PM","am","pm","formats","F","R","T","X","week_number","date","start_of_week","weekday","yday","push_pad_2","pad","strftime","checkoption","tzString","match","day","getTimezoneOffset","conv","option","oplen","l_checktime","syslib","stm","performance","now","luaS_eqlngstr","hasmultret","eqstr","BlockCnt","firstlabel","firstgoto","upval","isloop","VVOID","FuncState","prev","bl","np","firstlocal","nlocvars","Vardesc","Labeldesc","Labellist","semerror","error_expected","checklimit","limit","where","errorlimit","testnext","check","checknext","check_condition","check_match","who","str_checkname","TK_NAME","init_exp","codestring","checkname","new_localvar","registerlocalvar","actvar","new_localvarliteral","getlocvar","adjustlocalvars","nvars","newupvalue","singlevaraux","searchvar","markupval","searchupvalue","singlevar","adjust_assign","nexps","enterlevel","leavelevel","closegoto","label","gl","vname","findlabel","lb","newlabelentry","findgotos","enterblock","open_func","leaveblock","breaklabel","tolevel","removevars","movegotosout","undefgoto","close_func","block_follow","withuntil","TK_ELSE","TK_ELSEIF","TK_END","TK_UNTIL","statlist","TK_RETURN","statement","fieldsel","yindex","expr","ConsControl","nh","recfield","cc","rkkey","closelistfield","listfield","field","constructor","lastlistfield","body","ismethod","new_fs","clp","addprototype","TK_DOTS","parlist","TK_FUNCTION","codeclosure","explist","funcargs","args","suffixedexp","primaryexp","priority","left","right","subexpr","uop","TK_NOT","getunopr","TK_INT","TK_NIL","TK_TRUE","TK_FALSE","simpleexp","TK_IDIV","TK_SHL","TK_SHR","TK_CONCAT","TK_NE","TK_EQ","TK_LE","TK_GE","TK_AND","TK_OR","getbinopr","nextop","block","LHS_assign","assignment","lh","nv","conflict","check_conflict","gotostat","TK_GOTO","forbody","isnum","endfor","TK_DO","prep","test_then_block","escapelist","jf","TK_THEN","TK_BREAK","TK_IF","ifstat","TK_WHILE","whileinit","condexit","whilestat","TK_FOR","fornum","TK_IN","indexname","forlist","forstat","TK_REPEAT","repeat_init","bl1","bl2","repeatstat","funcstat","TK_LOCAL","localfunc","localstat","TK_DBCOLON","ll","checkrepeated","skipnoopstat","labelstat","retstat","exprstat","lexstate","funcstate","setclLvalue","sethvalue","mainfunc","BASIC_STACK_SIZE","CallInfo","global_State","TM_N","stack_init","freestack","f_luaopen","registry","init_registry","luaT_init","CIST_FRESH","CIST_LEQ","close_state","luaE_freethread","TString","hash","realstring","sprintf","LUA_INTEGER_FMT","LUA_INTEGER_FRMLEN","LUA_NUMBER_FMT","LUA_NUMBER_FRMLEN","frexp","lua_getlocaledecpoint","L_ESC","MAXSIZE","strlen","posrelat","SIZELENMOD","lua_number2strx","is","zero","fe","num2straux","FLAGS","isalpha","isdigit","iscntrl","isgraph","islower","isupper","isalnum","ispunct","isspace","isxdigit","addliteral","repeat","addquoted","point","ppoint","checkdp","scanformat","strfrmt","form","addlenmod","lenmod","lm","spec","MC","Header","islittle","maxalign","digit","getnum","df","getnumlimit","getoption","opt","getdetails","totalsize","ntoalign","align","packint","unpackint","issigned","unpacknum","dv","setUint8","getFloat32","getFloat64","SPECIALS","MatchState","src_init","src_end","p_end","matchdepth","capture","classend","ms","match_class","matchbracketclass","ec","sig","singlematch","ep","matchbalance","cont","max_expand","min_expand","start_capture","end_capture","capture_to_close","match_capture","check_capture","ai","bi","array_cmp","gotodefault","gotoinit","push_onecapture","push_captures","nlevels","prepstate","lp","reprepstate","str_find_aux","find","nospecials","anchor","GMatchState","lastmatch","gmatch_aux","gm","add_value","tr","news","add_s","strlib","posi","pose","srcl","max_s","details","setFloat32","lsep","totallen","pi","start","end","ld","createmetatable","lightuserdata_hashes","get_lightuserdata_hash","table_hash","Map","dead_strong","dead_weak","flags","add","clear","entry","mark_dead","setdeadvalue","delete","getgeneric","luaH_getstr","kv","table","keyI","keyO","ttisdeadkey","checkfield","checktab","aux_getn","addfield","set2","sort_comp","partition","lo","choosePivot","rnd","r4","auxsort","tab_funcs","luaT_typenames_","TM_GC","TM_MODE","luaT_callTM","hasres","luaT_callbinTM","luaT_gettm","events","ename","fasttm","et","luaT_callorderTM","lua_setallof","conf","LUA_VDIR","LUA_LDIR","LUA_JSDIR","mantissa","exponent","steps","bits","getUint32","toPrecision","LUA_BITLIBNAME","linit","luaZ_read","BytecodeParser","Z","intSize","size_tSize","instructionSize","integerSize","numberSize","arraybuffer","getInt32","LoadInteger","LoadByte","LoadSize_t","read","LoadInt","LoadNumber","LoadString","LoadFunction","LoadCode","LoadConstants","LoadUpvalues","LoadProtos","LoadDebug","checkliteral","checksize","why","byte","S","checkHeader","MAXUNICODE","iscont","u_posrelat","limits","utf8_decode","p_U","pushutfchar","iter_aux","dec","funcs","posj","UTF8PATT","RA","RB","RKB","RKC","dojump","donextjump","ttisnumber","LTnum","l_strcmp","LEnum","forlimit","step","stopnow","ilimit","luaV_tointeger","cvt2num","rs","ra","rb","imul","aLo","bLo","getcached","encup","pushclosure","ncl","tostring","isemptystr","copy2buff","tl","total","slot","newframe","konst","setbvalue","rc","numberop1","numberop2","op1","op2","numberop","rbIdx","nci","oci","nfunc","nfuncOff","ofuncOff","chgivalue","chgfltvalue","forlim","plimit","pstep","initv","nlimit","nstep","ninit","cb","inst","luaV_rawequalobj","luaZ_fill","b_offset","open_tag","close_tag","HTML_TAG_RE","RegExp","HTML_OPEN_CLOSE_TAG_RE","_hasOwnProperty","prototype","hasOwnProperty","UNICODE_PUNCT_RE","object","surrogate1","surrogate2","newElements","concat","slice","ch","trim","replace","toLowerCase","toUpperCase","Ruler","_rules","ParserBlock","ruler","alt","tokenize","state","startLine","endLine","rules","getRules","hasEmptyLines","maxNesting","md","skipEmptyLines","sCount","blkIndent","tight","isEmpty","parse","outTokens","State","lineMax","Core","process","_rules2","ParserInline","ruler2","skipToken","ok","posMax","pending","pushPending","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","altName","chain","at","index","before","beforeName","ruleName","splice","after","afterName","enable","ignoreInvalid","isArray","enableOnly","disable","chainName","isSpace","silent","adjustTab","initial","lastLineEmpty","lines","nextLine","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","isOutdented","oldLineMax","bMarks","tShift","eMarks","bsCount","parentType","markup","content","getLines","marker","params","mem","haveEndMarker","skipChars","skipSpaces","tmp","skipSpacesBack","skipCharsBack","children","cnt","join","block_names","HTML_SEQUENCES","lineText","html","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","substr","tokens","attrs","hidden","markTightParagraphs","normalizeReference","_endLine","destEndPos","destEndLineNo","href","labelEnd","title","helpers","parseLinkDestination","normalizeLink","validateLink","parseLinkTitle","references","StateBlock","indent_found","ddIndent","nesting","begin","keepLastLF","lineIndent","queue","lineStart","getLine","escapedSplit","isEscaped","lastPos","substring","columns","columnCount","aligns","tableLines","tbodyLines","shift","pop","inlineMode","tok","inline","arrayReplaceAt","isLinkClose","currentToken","nodes","ln","text","htmlLinkLevel","url","fullUrl","urlText","links","blockTokens","linkify","pretest","schema","normalizeLinkText","lastIndex","NEWLINES_RE","NULL_RE","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","isWhiteSpace","isPunctChar","isMdAsciiPunct","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","openQuote","closeQuote","OUTER","single","quotes","StateCore","EMAIL_RE","AUTOLINK_RE","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","close","curr","tokens_meta","postProcess","startDelim","endDelim","isStrong","scanned","scanDelims","can_open","can_close","entities","has","isValidEntityCode","fromCodePoint","DIGITAL_RE","NAMED_RE","ESCAPED","lc","isLetter","labelStart","oldPos","parseLinkLabel","parseReference","pmax","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","left_flanking","right_flanking","loneMarkers","isTerminatorChar","meta","attrIndex","attrPush","attrData","attrSet","attrGet","attrJoin","re","not_string","not_bool","not_type","not_primitive","number","numeric_arg","json","not_json","modulo","placeholder","key_access","index_access","sign","sprintf_format","sprintf_parse","vsprintf","argv","parse_tree","ph","pad_character","pad_length","is_positive","cursor","tree_length","output","keys","param_no","width","precision","toExponential","toFixed","valueOf","pad_char","charAt","sprintf_cache","_fmt","arg_names","SyntaxError","field_list","replacement_field","field_match","xhtmlOut","breaks","langPrefix","highlight","escape","renderOne","changer","markdownToLua","outputBuffer","story","startNode","getAttribute","startNodeName","buf","tagName","tags","textContent","luaSrc","storyToLua","document","getElementById","onNewText","innerHTML","style","opacity","loadStory","setTimeout","addEventListener","raiseEvent","prevToken","startsWith","startPos","srcEnd","endPos","ltrLink","rtlLink","isLetterOrNumber","propertyExpression","callExpression","lambdaExpression","found","emit","enc","TextEncoder","wasChanged","emitFn","logFn","_","encode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","Symbol","toStringTag","defineProperty"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\n\n/*\n * Fengari specific string conversion functions\n */\n\nlet luastring_from;\nif (typeof Uint8Array.from === \"function\") {\n    luastring_from = Uint8Array.from.bind(Uint8Array);\n} else {\n    luastring_from = function(a) {\n        let i = 0;\n        let len = a.length;\n        let r = new Uint8Array(len);\n        while (len > i) r[i] = a[i++];\n        return r;\n    };\n}\n\nlet luastring_indexOf;\nif (typeof (new Uint8Array().indexOf) === \"function\") {\n    luastring_indexOf = function(s, v, i) {\n        return s.indexOf(v, i);\n    };\n} else {\n    /* Browsers that don't support Uint8Array.indexOf seem to allow using Array.indexOf on Uint8Array objects e.g. IE11 */\n    let array_indexOf = [].indexOf;\n    if (array_indexOf.call(new Uint8Array(1), 0) !== 0) throw Error(\"missing .indexOf\");\n    luastring_indexOf = function(s, v, i) {\n        return array_indexOf.call(s, v, i);\n    };\n}\n\nlet luastring_of;\nif (typeof Uint8Array.of === \"function\") {\n    luastring_of = Uint8Array.of.bind(Uint8Array);\n} else {\n    luastring_of = function() {\n        return luastring_from(arguments);\n    };\n}\n\nconst is_luastring = function(s) {\n    return s instanceof Uint8Array;\n};\n\n/* test two lua strings for equality */\nconst luastring_eq = function(a, b) {\n    if (a !== b) {\n        let len = a.length;\n        if (len !== b.length) return false;\n        /* XXX: Should this be a constant time algorithm? */\n        for (let i=0; i<len; i++)\n            if (a[i] !== b[i]) return false;\n    }\n    return true;\n};\n\nconst unicode_error_message = \"cannot convert invalid utf8 to javascript string\";\nconst to_jsstring = function(value, from, to, replacement_char) {\n    if (!is_luastring(value)) throw new TypeError(\"to_jsstring expects a Uint8Array\");\n\n    if (to === void 0) {\n        to = value.length;\n    } else {\n        to = Math.min(value.length, to);\n    }\n\n    let str = \"\";\n    for (let i = (from!==void 0?from:0); i < to;) {\n        let u0 = value[i++];\n        if (u0 < 0x80) {\n            /* single byte sequence */\n            str += String.fromCharCode(u0);\n        } else if (u0 < 0xC2 || u0 > 0xF4) {\n            if (!replacement_char) throw RangeError(unicode_error_message);\n            str += \"�\";\n        } else if (u0 <= 0xDF) {\n            /* two byte sequence */\n            if (i >= to) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u1 = value[i++];\n            if ((u1&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            str += String.fromCharCode(((u0 & 0x1F) << 6) + (u1 & 0x3F));\n        } else if (u0 <= 0xEF) {\n            /* three byte sequence */\n            if (i+1 >= to) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u1 = value[i++];\n            if ((u1&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u2 = value[i++];\n            if ((u2&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u = ((u0 & 0x0F) << 12) + ((u1 & 0x3F) << 6) + (u2 & 0x3F);\n            if (u <= 0xFFFF) { /* BMP codepoint */\n                str += String.fromCharCode(u);\n            } else { /* Astral codepoint */\n                u -= 0x10000;\n                let s1 = (u >> 10) + 0xD800;\n                let s2 = (u % 0x400) + 0xDC00;\n                str += String.fromCharCode(s1, s2);\n            }\n        } else {\n            /* four byte sequence */\n            if (i+2 >= to) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u1 = value[i++];\n            if ((u1&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u2 = value[i++];\n            if ((u2&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            let u3 = value[i++];\n            if ((u3&0xC0) !== 0x80) {\n                if (!replacement_char) throw RangeError(unicode_error_message);\n                str += \"�\";\n                continue;\n            }\n            /* Has to be astral codepoint */\n            let u = ((u0 & 0x07) << 18) + ((u1 & 0x3F) << 12) + ((u2 & 0x3F) << 6) + (u3 & 0x3F);\n            u -= 0x10000;\n            let s1 = (u >> 10) + 0xD800;\n            let s2 = (u % 0x400) + 0xDC00;\n            str += String.fromCharCode(s1, s2);\n        }\n    }\n    return str;\n};\n\n/* bytes allowed unescaped in a uri */\nconst uri_allowed = (\";,/?:@&=+$abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789,-_.!~*'()#\").split('').reduce(function(uri_allowed, c) {\n    uri_allowed[c.charCodeAt(0)] = true;\n    return uri_allowed;\n}, {});\n\n/* utility function to convert a lua string to a js string with uri escaping */\nconst to_uristring = function(a) {\n    if (!is_luastring(a)) throw new TypeError(\"to_uristring expects a Uint8Array\");\n    let s = \"\";\n    for (let i=0; i<a.length; i++) {\n        let v = a[i];\n        if (uri_allowed[v]) {\n            s += String.fromCharCode(v);\n        } else {\n            s += \"%\" + (v<0x10?\"0\":\"\") + v.toString(16);\n        }\n    }\n    return s;\n};\n\nconst to_luastring_cache = {};\n\nconst to_luastring = function(str, cache) {\n    if (typeof str !== \"string\") throw new TypeError(\"to_luastring expects a javascript string\");\n\n    if (cache) {\n        let cached = to_luastring_cache[str];\n        if (is_luastring(cached)) return cached;\n    }\n\n    let len = str.length;\n    let outU8Array = Array(len); /* array is at *least* going to be length of string */\n    let outIdx = 0;\n    for (let i = 0; i < len; ++i) {\n        let u = str.charCodeAt(i);\n        if (u <= 0x7F) {\n            outU8Array[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n            outU8Array[outIdx++] = 0xC0 | (u >> 6);\n            outU8Array[outIdx++] = 0x80 | (u & 63);\n        } else {\n            /* This part is to work around possible lack of String.codePointAt */\n            if (u >= 0xD800 && u <= 0xDBFF && (i+1) < len) {\n                /* is first half of surrogate pair */\n                let v = str.charCodeAt(i+1);\n                if (v >= 0xDC00 && v <= 0xDFFF) {\n                    /* is valid low surrogate */\n                    i++;\n                    u = (u - 0xD800) * 0x400 + v + 0x2400;\n                }\n            }\n            if (u <= 0xFFFF) {\n                outU8Array[outIdx++] = 0xE0 | (u >> 12);\n                outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n                outU8Array[outIdx++] = 0x80 | (u & 63);\n            } else {\n                outU8Array[outIdx++] = 0xF0 | (u >> 18);\n                outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n                outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n                outU8Array[outIdx++] = 0x80 | (u & 63);\n            }\n        }\n    }\n    outU8Array = luastring_from(outU8Array);\n\n    if (cache) to_luastring_cache[str] = outU8Array;\n\n    return outU8Array;\n};\n\nconst from_userstring = function(str) {\n    if (!is_luastring(str)) {\n        if (typeof str === \"string\") {\n            str = to_luastring(str);\n        } else {\n            throw new TypeError(\"expects an array of bytes or javascript string\");\n        }\n    }\n    return str;\n};\n\nmodule.exports.luastring_from    = luastring_from;\nmodule.exports.luastring_indexOf = luastring_indexOf;\nmodule.exports.luastring_of      = luastring_of;\nmodule.exports.is_luastring      = is_luastring;\nmodule.exports.luastring_eq      = luastring_eq;\nmodule.exports.to_jsstring       = to_jsstring;\nmodule.exports.to_uristring      = to_uristring;\nmodule.exports.to_luastring      = to_luastring;\nmodule.exports.from_userstring   = from_userstring;\n\n\n/* mark for precompiled code ('<esc>Lua') */\nconst LUA_SIGNATURE = to_luastring(\"\\x1bLua\");\n\nconst LUA_VERSION_MAJOR   = \"5\";\nconst LUA_VERSION_MINOR   = \"3\";\nconst LUA_VERSION_NUM     = 503;\nconst LUA_VERSION_RELEASE = \"4\";\n\nconst LUA_VERSION         = \"Lua \" + LUA_VERSION_MAJOR + \".\" + LUA_VERSION_MINOR;\nconst LUA_RELEASE         = LUA_VERSION + \".\" + LUA_VERSION_RELEASE;\nconst LUA_COPYRIGHT       = LUA_RELEASE + \"  Copyright (C) 1994-2017 Lua.org, PUC-Rio\";\nconst LUA_AUTHORS         = \"R. Ierusalimschy, L. H. de Figueiredo, W. Celes\";\n\nmodule.exports.LUA_SIGNATURE       = LUA_SIGNATURE;\nmodule.exports.LUA_VERSION_MAJOR   = LUA_VERSION_MAJOR;\nmodule.exports.LUA_VERSION_MINOR   = LUA_VERSION_MINOR;\nmodule.exports.LUA_VERSION_NUM     = LUA_VERSION_NUM;\nmodule.exports.LUA_VERSION_RELEASE = LUA_VERSION_RELEASE;\nmodule.exports.LUA_VERSION         = LUA_VERSION;\nmodule.exports.LUA_RELEASE         = LUA_RELEASE;\nmodule.exports.LUA_COPYRIGHT       = LUA_COPYRIGHT;\nmodule.exports.LUA_AUTHORS         = LUA_AUTHORS;\n\n\nconst thread_status = {\n    LUA_OK:        0,\n    LUA_YIELD:     1,\n    LUA_ERRRUN:    2,\n    LUA_ERRSYNTAX: 3,\n    LUA_ERRMEM:    4,\n    LUA_ERRGCMM:   5,\n    LUA_ERRERR:    6\n};\n\nconst constant_types = {\n    LUA_TNONE:          -1,\n    LUA_TNIL:           0,\n    LUA_TBOOLEAN:       1,\n    LUA_TLIGHTUSERDATA: 2,\n    LUA_TNUMBER:        3,\n    LUA_TSTRING:        4,\n    LUA_TTABLE:         5,\n    LUA_TFUNCTION:      6,\n    LUA_TUSERDATA:      7,\n    LUA_TTHREAD:        8,\n    LUA_NUMTAGS:        9\n};\n\nconstant_types.LUA_TSHRSTR = constant_types.LUA_TSTRING | (0 << 4);  /* short strings */\nconstant_types.LUA_TLNGSTR = constant_types.LUA_TSTRING | (1 << 4);  /* long strings */\n\nconstant_types.LUA_TNUMFLT = constant_types.LUA_TNUMBER | (0 << 4);  /* float numbers */\nconstant_types.LUA_TNUMINT = constant_types.LUA_TNUMBER | (1 << 4);  /* integer numbers */\n\nconstant_types.LUA_TLCL = constant_types.LUA_TFUNCTION | (0 << 4);  /* Lua closure */\nconstant_types.LUA_TLCF = constant_types.LUA_TFUNCTION | (1 << 4);  /* light C function */\nconstant_types.LUA_TCCL = constant_types.LUA_TFUNCTION | (2 << 4);  /* C closure */\n\n/*\n** Comparison and arithmetic functions\n*/\n\nconst LUA_OPADD  = 0;   /* ORDER TM, ORDER OP */\nconst LUA_OPSUB  = 1;\nconst LUA_OPMUL  = 2;\nconst LUA_OPMOD  = 3;\nconst LUA_OPPOW  = 4;\nconst LUA_OPDIV  = 5;\nconst LUA_OPIDIV = 6;\nconst LUA_OPBAND = 7;\nconst LUA_OPBOR  = 8;\nconst LUA_OPBXOR = 9;\nconst LUA_OPSHL  = 10;\nconst LUA_OPSHR  = 11;\nconst LUA_OPUNM  = 12;\nconst LUA_OPBNOT = 13;\n\nconst LUA_OPEQ = 0;\nconst LUA_OPLT = 1;\nconst LUA_OPLE = 2;\n\nconst LUA_MINSTACK = 20;\n\nconst { LUAI_MAXSTACK } = require('./luaconf.js');\nconst LUA_REGISTRYINDEX = -LUAI_MAXSTACK - 1000;\n\nconst lua_upvalueindex = function(i) {\n    return LUA_REGISTRYINDEX - i;\n};\n\n/* predefined values in the registry */\nconst LUA_RIDX_MAINTHREAD = 1;\nconst LUA_RIDX_GLOBALS    = 2;\nconst LUA_RIDX_LAST       = LUA_RIDX_GLOBALS;\n\nclass lua_Debug {\n    constructor() {\n        this.event = NaN;\n        this.name = null;           /* (n) */\n        this.namewhat = null;       /* (n) 'global', 'local', 'field', 'method' */\n        this.what = null;           /* (S) 'Lua', 'C', 'main', 'tail' */\n        this.source = null;         /* (S) */\n        this.currentline = NaN;     /* (l) */\n        this.linedefined = NaN;     /* (S) */\n        this.lastlinedefined = NaN; /* (S) */\n        this.nups = NaN;            /* (u) number of upvalues */\n        this.nparams = NaN;         /* (u) number of parameters */\n        this.isvararg = NaN;        /* (u) */\n        this.istailcall = NaN;      /* (t) */\n        this.short_src = null;      /* (S) */\n        /* private part */\n        this.i_ci = null;           /* active function */\n    }\n}\n\n/*\n** Event codes\n*/\nconst LUA_HOOKCALL     = 0;\nconst LUA_HOOKRET      = 1;\nconst LUA_HOOKLINE     = 2;\nconst LUA_HOOKCOUNT    = 3;\nconst LUA_HOOKTAILCALL = 4;\n\n\n/*\n** Event masks\n*/\nconst LUA_MASKCALL  = (1 << LUA_HOOKCALL);\nconst LUA_MASKRET   = (1 << LUA_HOOKRET);\nconst LUA_MASKLINE  = (1 << LUA_HOOKLINE);\nconst LUA_MASKCOUNT = (1 << LUA_HOOKCOUNT);\n\nmodule.exports.LUA_HOOKCALL            = LUA_HOOKCALL;\nmodule.exports.LUA_HOOKCOUNT           = LUA_HOOKCOUNT;\nmodule.exports.LUA_HOOKLINE            = LUA_HOOKLINE;\nmodule.exports.LUA_HOOKRET             = LUA_HOOKRET;\nmodule.exports.LUA_HOOKTAILCALL        = LUA_HOOKTAILCALL;\nmodule.exports.LUA_MASKCALL            = LUA_MASKCALL;\nmodule.exports.LUA_MASKCOUNT           = LUA_MASKCOUNT;\nmodule.exports.LUA_MASKLINE            = LUA_MASKLINE;\nmodule.exports.LUA_MASKRET             = LUA_MASKRET;\nmodule.exports.LUA_MINSTACK            = LUA_MINSTACK;\nmodule.exports.LUA_MULTRET             = -1;\nmodule.exports.LUA_OPADD               = LUA_OPADD;\nmodule.exports.LUA_OPBAND              = LUA_OPBAND;\nmodule.exports.LUA_OPBNOT              = LUA_OPBNOT;\nmodule.exports.LUA_OPBOR               = LUA_OPBOR;\nmodule.exports.LUA_OPBXOR              = LUA_OPBXOR;\nmodule.exports.LUA_OPDIV               = LUA_OPDIV;\nmodule.exports.LUA_OPEQ                = LUA_OPEQ;\nmodule.exports.LUA_OPIDIV              = LUA_OPIDIV;\nmodule.exports.LUA_OPLE                = LUA_OPLE;\nmodule.exports.LUA_OPLT                = LUA_OPLT;\nmodule.exports.LUA_OPMOD               = LUA_OPMOD;\nmodule.exports.LUA_OPMUL               = LUA_OPMUL;\nmodule.exports.LUA_OPPOW               = LUA_OPPOW;\nmodule.exports.LUA_OPSHL               = LUA_OPSHL;\nmodule.exports.LUA_OPSHR               = LUA_OPSHR;\nmodule.exports.LUA_OPSUB               = LUA_OPSUB;\nmodule.exports.LUA_OPUNM               = LUA_OPUNM;\nmodule.exports.LUA_REGISTRYINDEX       = LUA_REGISTRYINDEX;\nmodule.exports.LUA_RIDX_GLOBALS        = LUA_RIDX_GLOBALS;\nmodule.exports.LUA_RIDX_LAST           = LUA_RIDX_LAST;\nmodule.exports.LUA_RIDX_MAINTHREAD     = LUA_RIDX_MAINTHREAD;\nmodule.exports.constant_types          = constant_types;\nmodule.exports.lua_Debug               = lua_Debug;\nmodule.exports.lua_upvalueindex        = lua_upvalueindex;\nmodule.exports.thread_status           = thread_status;\n","/**\n@license MIT\n\nCopyright © 2017-2018 Benoit Giannangeli\nCopyright © 2017-2018 Daurnimator\nCopyright © 1994–2017 Lua.org, PUC-Rio.\n*/\n\n\"use strict\";\n\nconst core = require(\"./fengaricore.js\");\n\nmodule.exports.FENGARI_AUTHORS         = core.FENGARI_AUTHORS;\nmodule.exports.FENGARI_COPYRIGHT       = core.FENGARI_COPYRIGHT;\nmodule.exports.FENGARI_RELEASE         = core.FENGARI_RELEASE;\nmodule.exports.FENGARI_VERSION         = core.FENGARI_VERSION;\nmodule.exports.FENGARI_VERSION_MAJOR   = core.FENGARI_VERSION_MAJOR;\nmodule.exports.FENGARI_VERSION_MINOR   = core.FENGARI_VERSION_MINOR;\nmodule.exports.FENGARI_VERSION_NUM     = core.FENGARI_VERSION_NUM;\nmodule.exports.FENGARI_VERSION_RELEASE = core.FENGARI_VERSION_RELEASE;\n\nmodule.exports.luastring_eq      = core.luastring_eq;\nmodule.exports.luastring_indexOf = core.luastring_indexOf;\nmodule.exports.luastring_of      = core.luastring_of;\nmodule.exports.to_jsstring       = core.to_jsstring;\nmodule.exports.to_luastring      = core.to_luastring;\nmodule.exports.to_uristring      = core.to_uristring;\n\nconst luaconf = require('./luaconf.js');\nconst lua     = require('./lua.js');\nconst lauxlib = require('./lauxlib.js');\nconst lualib  = require('./lualib.js');\n\nmodule.exports.luaconf = luaconf;\nmodule.exports.lua     = lua;\nmodule.exports.lauxlib = lauxlib;\nmodule.exports.lualib  = lualib;\n","/* Fengari specific functions\n *\n * This file includes fengari-specific data or and functionality for users to\n * manipulate fengari's string type.\n * The fields are exposed to the user on the 'fengari' entry point; however to\n * avoid a dependency on defs.js from lauxlib.js they are defined in this file.\n */\n\nconst defs = require(\"./defs.js\");\n\nconst FENGARI_VERSION_MAJOR   = \"0\";\nconst FENGARI_VERSION_MINOR   = \"1\";\nconst FENGARI_VERSION_NUM     = 1;\nconst FENGARI_VERSION_RELEASE = \"4\";\nconst FENGARI_VERSION         = \"Fengari \" + FENGARI_VERSION_MAJOR + \".\" + FENGARI_VERSION_MINOR;\nconst FENGARI_RELEASE         = FENGARI_VERSION + \".\" + FENGARI_VERSION_RELEASE;\nconst FENGARI_AUTHORS         = \"B. Giannangeli, Daurnimator\";\nconst FENGARI_COPYRIGHT       = FENGARI_RELEASE + \"  Copyright (C) 2017-2018 \" + FENGARI_AUTHORS + \"\\nBased on: \" + defs.LUA_COPYRIGHT;\n\nmodule.exports.FENGARI_AUTHORS         = FENGARI_AUTHORS;\nmodule.exports.FENGARI_COPYRIGHT       = FENGARI_COPYRIGHT;\nmodule.exports.FENGARI_RELEASE         = FENGARI_RELEASE;\nmodule.exports.FENGARI_VERSION         = FENGARI_VERSION;\nmodule.exports.FENGARI_VERSION_MAJOR   = FENGARI_VERSION_MAJOR;\nmodule.exports.FENGARI_VERSION_MINOR   = FENGARI_VERSION_MINOR;\nmodule.exports.FENGARI_VERSION_NUM     = FENGARI_VERSION_NUM;\nmodule.exports.FENGARI_VERSION_RELEASE = FENGARI_VERSION_RELEASE;\nmodule.exports.is_luastring            = defs.is_luastring;\nmodule.exports.luastring_eq            = defs.luastring_eq;\nmodule.exports.luastring_from          = defs.luastring_from;\nmodule.exports.luastring_indexOf       = defs.luastring_indexOf;\nmodule.exports.luastring_of            = defs.luastring_of;\nmodule.exports.to_jsstring             = defs.to_jsstring;\nmodule.exports.to_luastring            = defs.to_luastring;\nmodule.exports.to_uristring            = defs.to_uristring;\nmodule.exports.from_userstring         = defs.from_userstring;\n","const {\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_setfield\n} = require('./lua.js');\nconst {\n    luaL_newlib\n} = require('./lauxlib.js');\nconst {\n    FENGARI_AUTHORS,\n    FENGARI_COPYRIGHT,\n    FENGARI_RELEASE,\n    FENGARI_VERSION,\n    FENGARI_VERSION_MAJOR,\n    FENGARI_VERSION_MINOR,\n    FENGARI_VERSION_NUM,\n    FENGARI_VERSION_RELEASE,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nconst luaopen_fengari = function(L) {\n    luaL_newlib(L, {});\n    lua_pushliteral(L, FENGARI_AUTHORS);\n    lua_setfield(L, -2, to_luastring(\"AUTHORS\"));\n    lua_pushliteral(L, FENGARI_COPYRIGHT);\n    lua_setfield(L, -2, to_luastring(\"COPYRIGHT\"));\n    lua_pushliteral(L, FENGARI_RELEASE);\n    lua_setfield(L, -2, to_luastring(\"RELEASE\"));\n    lua_pushliteral(L, FENGARI_VERSION);\n    lua_setfield(L, -2, to_luastring(\"VERSION\"));\n    lua_pushliteral(L, FENGARI_VERSION_MAJOR);\n    lua_setfield(L, -2, to_luastring(\"VERSION_MAJOR\"));\n    lua_pushliteral(L, FENGARI_VERSION_MINOR);\n    lua_setfield(L, -2, to_luastring(\"VERSION_MINOR\"));\n    lua_pushinteger(L, FENGARI_VERSION_NUM);\n    lua_setfield(L, -2, to_luastring(\"VERSION_NUM\"));\n    lua_pushliteral(L, FENGARI_VERSION_RELEASE);\n    lua_setfield(L, -2, to_luastring(\"VERSION_RELEASE\"));\n    return 1;\n};\n\nmodule.exports.luaopen_fengari = luaopen_fengari;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    LUA_OPBNOT,\n    LUA_OPEQ,\n    LUA_OPLE,\n    LUA_OPLT,\n    LUA_OPUNM,\n    LUA_REGISTRYINDEX,\n    LUA_RIDX_GLOBALS,\n    LUA_VERSION_NUM,\n    constant_types: {\n        LUA_NUMTAGS,\n        LUA_TBOOLEAN,\n        LUA_TCCL,\n        LUA_TFUNCTION,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNONE,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TTABLE,\n        LUA_TTHREAD,\n        LUA_TUSERDATA\n    },\n    thread_status: { LUA_OK },\n    from_userstring,\n    to_luastring,\n} = require('./defs.js');\nconst { api_check } = require('./llimits.js');\nconst ldebug    = require('./ldebug.js');\nconst ldo       = require('./ldo.js');\nconst { luaU_dump } = require('./ldump.js');\nconst lfunc     = require('./lfunc.js');\nconst lobject   = require('./lobject.js');\nconst lstate    = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_new,\n    luaS_newliteral\n} = require('./lstring.js');\nconst ltm       = require('./ltm.js');\nconst { LUAI_MAXSTACK } = require('./luaconf.js');\nconst lvm       = require('./lvm.js');\nconst ltable    = require('./ltable.js');\nconst { ZIO } = require('./lzio.js');\nconst TValue    = lobject.TValue;\nconst CClosure  = lobject.CClosure;\n\nconst api_incr_top = function(L) {\n    L.top++;\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n};\n\nconst api_checknelems = function(L, n) {\n    api_check(L, n < (L.top - L.ci.funcOff), \"not enough elements in the stack\");\n};\n\nconst fengari_argcheck = function(c) {\n    if (!c) throw TypeError(\"invalid argument\");\n};\n\nconst fengari_argcheckinteger = function(n) {\n    fengari_argcheck(typeof n === \"number\" && (n|0) === n);\n};\n\nconst isvalid = function(o) {\n    return o !== lobject.luaO_nilobject;\n};\n\nconst lua_version = function(L) {\n    if (L === null) return LUA_VERSION_NUM;\n    else return L.l_G.version;\n};\n\nconst lua_atpanic = function(L, panicf) {\n    let old = L.l_G.panic;\n    L.l_G.panic = panicf;\n    return old;\n};\n\nconst lua_atnativeerror = function(L, errorf) {\n    let old = L.l_G.atnativeerror;\n    L.l_G.atnativeerror = errorf;\n    return old;\n};\n\n// Return value for idx on stack\nconst index2addr = function(L, idx) {\n    let ci = L.ci;\n    if (idx > 0) {\n        let o = ci.funcOff + idx;\n        api_check(L, idx <= ci.top - (ci.funcOff + 1), \"unacceptable index\");\n        if (o >= L.top) return lobject.luaO_nilobject;\n        else return L.stack[o];\n    } else if (idx > LUA_REGISTRYINDEX) {\n        api_check(L, idx !== 0 && -idx <= L.top, \"invalid index\");\n        return L.stack[L.top + idx];\n    } else if (idx === LUA_REGISTRYINDEX) {\n        return L.l_G.l_registry;\n    } else { /* upvalues */\n        idx = LUA_REGISTRYINDEX - idx;\n        api_check(L, idx <= lfunc.MAXUPVAL + 1, \"upvalue index too large\");\n        if (ci.func.ttislcf()) /* light C function? */\n            return lobject.luaO_nilobject; /* it has no upvalues */\n        else {\n            return idx <= ci.func.value.nupvalues ? ci.func.value.upvalue[idx - 1] : lobject.luaO_nilobject;\n        }\n    }\n};\n\n// Like index2addr but returns the index on stack; doesn't allow pseudo indices\nconst index2addr_ = function(L, idx) {\n    let ci = L.ci;\n    if (idx > 0) {\n        let o = ci.funcOff + idx;\n        api_check(L, idx <= ci.top - (ci.funcOff + 1), \"unacceptable index\");\n        if (o >= L.top) return null;\n        else return o;\n    } else if (idx > LUA_REGISTRYINDEX) {\n        api_check(L, idx !== 0 && -idx <= L.top, \"invalid index\");\n        return L.top + idx;\n    } else { /* registry or upvalue */\n        throw Error(\"attempt to use pseudo-index\");\n    }\n};\n\nconst lua_checkstack = function(L, n) {\n    let res;\n    let ci = L.ci;\n    api_check(L, n >= 0, \"negative 'n'\");\n    if (L.stack_last - L.top > n) /* stack large enough? */\n        res = true;\n    else { /* no; need to grow stack */\n        let inuse = L.top + lstate.EXTRA_STACK;\n        if (inuse > LUAI_MAXSTACK - n)  /* can grow without overflow? */\n            res = false;  /* no */\n        else { /* try to grow stack */\n            ldo.luaD_growstack(L, n);\n            res = true;\n        }\n    }\n\n    if (res && ci.top < L.top + n)\n        ci.top = L.top + n;  /* adjust frame top */\n\n    return res;\n};\n\nconst lua_xmove = function(from, to, n) {\n    if (from === to) return;\n    api_checknelems(from, n);\n    api_check(from, from.l_G === to.l_G, \"moving among independent states\");\n    api_check(from, to.ci.top - to.top >= n, \"stack overflow\");\n    from.top -= n;\n    for (let i = 0; i < n; i++) {\n        to.stack[to.top] = new lobject.TValue();\n        lobject.setobj2s(to, to.top, from.stack[from.top + i]);\n        delete from.stack[from.top + i];\n        to.top++;\n    }\n};\n\n/*\n** basic stack manipulation\n*/\n\n/*\n** convert an acceptable stack index into an absolute index\n*/\nconst lua_absindex = function(L, idx) {\n    return (idx > 0 || idx <= LUA_REGISTRYINDEX)\n        ? idx\n        : (L.top - L.ci.funcOff) + idx;\n};\n\nconst lua_gettop = function(L) {\n    return L.top - (L.ci.funcOff + 1);\n};\n\nconst lua_pushvalue = function(L, idx) {\n    lobject.pushobj2s(L, index2addr(L, idx));\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n};\n\nconst lua_settop = function(L, idx) {\n    let func = L.ci.funcOff;\n    let newtop;\n    if (idx >= 0) {\n        api_check(L, idx <= L.stack_last - (func + 1), \"new top too large\");\n        newtop = func + 1 + idx;\n    } else {\n        api_check(L, -(idx + 1) <= L.top - (func + 1), \"invalid new top\");\n        newtop = L.top + idx + 1; /* 'subtract' index (index is negative) */\n    }\n    ldo.adjust_top(L, newtop);\n};\n\nconst lua_pop = function(L, n) {\n    lua_settop(L, -n - 1);\n};\n\nconst reverse = function(L, from, to) {\n    for (; from < to; from++, to--) {\n        let fromtv = L.stack[from];\n        let temp = new TValue(fromtv.type, fromtv.value);\n        lobject.setobjs2s(L, from, to);\n        lobject.setobj2s(L, to, temp);\n    }\n};\n\n/*\n** Let x = AB, where A is a prefix of length 'n'. Then,\n** rotate x n === BA. But BA === (A^r . B^r)^r.\n*/\nconst lua_rotate = function(L, idx, n) {\n    let t = L.top - 1;\n    let pIdx = index2addr_(L, idx);\n    let p = L.stack[pIdx];\n    api_check(L, isvalid(p) && idx > LUA_REGISTRYINDEX, \"index not in the stack\");\n    api_check(L, (n >= 0 ? n : -n) <= (t - pIdx + 1), \"invalid 'n'\");\n    let m = n >= 0 ? t - n : pIdx - n - 1;  /* end of prefix */\n    reverse(L, pIdx, m);\n    reverse(L, m + 1, L.top - 1);\n    reverse(L, pIdx, L.top - 1);\n};\n\nconst lua_copy = function(L, fromidx, toidx) {\n    let from = index2addr(L, fromidx);\n    index2addr(L, toidx).setfrom(from);\n};\n\nconst lua_remove = function(L, idx) {\n    lua_rotate(L, idx, -1);\n    lua_pop(L, 1);\n};\n\nconst lua_insert = function(L, idx) {\n    lua_rotate(L, idx, 1);\n};\n\nconst lua_replace = function(L, idx) {\n    lua_copy(L, -1, idx);\n    lua_pop(L, 1);\n};\n\n/*\n** push functions (JS -> stack)\n*/\n\nconst lua_pushnil = function(L) {\n    L.stack[L.top] = new TValue(LUA_TNIL, null);\n    api_incr_top(L);\n};\n\nconst lua_pushnumber = function(L, n) {\n    fengari_argcheck(typeof n === \"number\");\n    L.stack[L.top] = new TValue(LUA_TNUMFLT, n);\n    api_incr_top(L);\n};\n\nconst lua_pushinteger = function(L, n) {\n    fengari_argcheckinteger(n);\n    L.stack[L.top] = new TValue(LUA_TNUMINT, n);\n    api_incr_top(L);\n};\n\nconst lua_pushlstring = function(L, s, len) {\n    fengari_argcheckinteger(len);\n    let ts;\n    if (len === 0) {\n        s = to_luastring(\"\", true);\n        ts = luaS_bless(L, s);\n    } else {\n        s = from_userstring(s);\n        api_check(L, s.length >= len, \"invalid length to lua_pushlstring\");\n        ts = luaS_new(L, s.subarray(0, len));\n    }\n    lobject.pushsvalue2s(L, ts);\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return ts.value;\n};\n\nconst lua_pushstring = function (L, s) {\n    if (s === undefined || s === null) {\n        L.stack[L.top] = new TValue(LUA_TNIL, null);\n        L.top++;\n    } else {\n        let ts = luaS_new(L, from_userstring(s));\n        lobject.pushsvalue2s(L, ts);\n        s = ts.getstr(); /* internal copy */\n    }\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return s;\n};\n\nconst lua_pushvfstring = function (L, fmt, argp) {\n    fmt = from_userstring(fmt);\n    return lobject.luaO_pushvfstring(L, fmt, argp);\n};\n\nconst lua_pushfstring = function (L, fmt, ...argp) {\n    fmt = from_userstring(fmt);\n    return lobject.luaO_pushvfstring(L, fmt, argp);\n};\n\n/* Similar to lua_pushstring, but takes a JS string */\nconst lua_pushliteral = function (L, s) {\n    if (s === undefined || s === null) {\n        L.stack[L.top] = new TValue(LUA_TNIL, null);\n        L.top++;\n    } else {\n        fengari_argcheck(typeof s === \"string\");\n        let ts = luaS_newliteral(L, s);\n        lobject.pushsvalue2s(L, ts);\n        s = ts.getstr(); /* internal copy */\n    }\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n\n    return s;\n};\n\nconst lua_pushcclosure = function(L, fn, n) {\n    fengari_argcheck(typeof fn === \"function\");\n    fengari_argcheckinteger(n);\n    if (n === 0)\n        L.stack[L.top] = new TValue(LUA_TLCF, fn);\n    else {\n        api_checknelems(L, n);\n        api_check(L, n <= lfunc.MAXUPVAL, \"upvalue index too large\");\n        let cl = new CClosure(L, fn, n);\n        for (let i=0; i<n; i++)\n            cl.upvalue[i].setfrom(L.stack[L.top - n + i]);\n        for (let i=1; i<n; i++)\n            delete L.stack[--L.top];\n        if (n>0)\n            --L.top;\n        L.stack[L.top].setclCvalue(cl);\n    }\n    api_incr_top(L);\n};\n\nconst lua_pushjsclosure = lua_pushcclosure;\n\nconst lua_pushcfunction = function(L, fn) {\n    lua_pushcclosure(L, fn, 0);\n};\n\nconst lua_pushjsfunction = lua_pushcfunction;\n\nconst lua_pushboolean = function(L, b) {\n    L.stack[L.top] = new TValue(LUA_TBOOLEAN, !!b);\n    api_incr_top(L);\n};\n\nconst lua_pushlightuserdata = function(L, p) {\n    L.stack[L.top] = new TValue(LUA_TLIGHTUSERDATA, p);\n    api_incr_top(L);\n};\n\nconst lua_pushthread = function(L) {\n    L.stack[L.top] = new TValue(LUA_TTHREAD, L);\n    api_incr_top(L);\n    return L.l_G.mainthread === L;\n};\n\nconst lua_pushglobaltable = function(L) {\n    lua_rawgeti(L, LUA_REGISTRYINDEX, LUA_RIDX_GLOBALS);\n};\n\n/*\n** set functions (stack -> Lua)\n*/\n\n/*\n** t[k] = value at the top of the stack (where 'k' is a string)\n*/\nconst auxsetstr = function(L, t, k) {\n    let str = luaS_new(L, from_userstring(k));\n    api_checknelems(L, 1);\n    lobject.pushsvalue2s(L, str); /* push 'str' (to make it a TValue) */\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    lvm.settable(L, t, L.stack[L.top - 1], L.stack[L.top - 2]);\n    /* pop value and key */\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_setglobal = function(L, name) {\n    auxsetstr(L, ltable.luaH_getint(L.l_G.l_registry.value, LUA_RIDX_GLOBALS), name);\n};\n\nconst lua_setmetatable = function(L, objindex) {\n    api_checknelems(L, 1);\n    let mt;\n    let obj = index2addr(L, objindex);\n    if (L.stack[L.top - 1].ttisnil())\n        mt = null;\n    else {\n        api_check(L, L.stack[L.top - 1].ttistable(), \"table expected\");\n        mt = L.stack[L.top - 1].value;\n    }\n\n    switch (obj.ttnov()) {\n        case LUA_TUSERDATA:\n        case LUA_TTABLE: {\n            obj.value.metatable = mt;\n            break;\n        }\n        default: {\n            L.l_G.mt[obj.ttnov()] = mt;\n            break;\n        }\n    }\n\n    delete L.stack[--L.top];\n    return true;\n};\n\nconst lua_settable = function(L, idx) {\n    api_checknelems(L, 2);\n    let t = index2addr(L, idx);\n    lvm.settable(L, t, L.stack[L.top - 2], L.stack[L.top - 1]);\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_setfield = function(L, idx, k) {\n    auxsetstr(L, index2addr(L, idx), k);\n};\n\nconst lua_seti = function(L, idx, n) {\n    fengari_argcheckinteger(n);\n    api_checknelems(L, 1);\n    let t = index2addr(L, idx);\n    L.stack[L.top] = new TValue(LUA_TNUMINT, n);\n    api_incr_top(L);\n    lvm.settable(L, t, L.stack[L.top - 1], L.stack[L.top - 2]);\n    /* pop value and key */\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_rawset = function(L, idx) {\n    api_checknelems(L, 2);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttistable(), \"table expected\");\n    let k = L.stack[L.top - 2];\n    let v = L.stack[L.top - 1];\n    ltable.luaH_setfrom(L, o.value, k, v);\n    ltable.invalidateTMcache(o.value);\n    delete L.stack[--L.top];\n    delete L.stack[--L.top];\n};\n\nconst lua_rawseti = function(L, idx, n) {\n    fengari_argcheckinteger(n);\n    api_checknelems(L, 1);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttistable(), \"table expected\");\n    ltable.luaH_setint(o.value, n, L.stack[L.top - 1]);\n    delete L.stack[--L.top];\n};\n\nconst lua_rawsetp = function(L, idx, p) {\n    api_checknelems(L, 1);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttistable(), \"table expected\");\n    let k = new TValue(LUA_TLIGHTUSERDATA, p);\n    let v = L.stack[L.top - 1];\n    ltable.luaH_setfrom(L, o.value, k, v);\n    delete L.stack[--L.top];\n};\n\n/*\n** get functions (Lua -> stack)\n*/\n\nconst auxgetstr = function(L, t, k) {\n    let str = luaS_new(L, from_userstring(k));\n    lobject.pushsvalue2s(L, str);\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    lvm.luaV_gettable(L, t, L.stack[L.top - 1], L.top - 1);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_rawgeti = function(L, idx, n) {\n    let t = index2addr(L, idx);\n    fengari_argcheckinteger(n);\n    api_check(L, t.ttistable(), \"table expected\");\n    lobject.pushobj2s(L, ltable.luaH_getint(t.value, n));\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_rawgetp = function(L, idx, p) {\n    let t = index2addr(L, idx);\n    api_check(L, t.ttistable(), \"table expected\");\n    let k = new TValue(LUA_TLIGHTUSERDATA, p);\n    lobject.pushobj2s(L, ltable.luaH_get(L, t.value, k));\n    api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_rawget = function(L, idx) {\n    let t = index2addr(L, idx);\n    api_check(L, t.ttistable(t), \"table expected\");\n    lobject.setobj2s(L, L.top - 1, ltable.luaH_get(L, t.value, L.stack[L.top - 1]));\n    return L.stack[L.top - 1].ttnov();\n};\n\n// narray and nrec are mostly useless for this implementation\nconst lua_createtable = function(L, narray, nrec) {\n    let t = new lobject.TValue(LUA_TTABLE, ltable.luaH_new(L));\n    L.stack[L.top] = t;\n    api_incr_top(L);\n};\n\nconst luaS_newudata = function(L, size) {\n    return new lobject.Udata(L, size);\n};\n\nconst lua_newuserdata = function(L, size) {\n    let u = luaS_newudata(L, size);\n    L.stack[L.top] = new lobject.TValue(LUA_TUSERDATA, u);\n    api_incr_top(L);\n    return u.data;\n};\n\nconst aux_upvalue = function(L, fi, n) {\n    fengari_argcheckinteger(n);\n    switch(fi.ttype()) {\n        case LUA_TCCL: {  /* C closure */\n            let f = fi.value;\n            if (!(1 <= n && n <= f.nupvalues)) return null;\n            return {\n                name: to_luastring(\"\", true),\n                val: f.upvalue[n-1]\n            };\n        }\n        case LUA_TLCL: {  /* Lua closure */\n            let f = fi.value;\n            let p = f.p;\n            if (!(1 <= n && n <= p.upvalues.length)) return null;\n            let name = p.upvalues[n-1].name;\n            return {\n                name: name ? name.getstr() : to_luastring(\"(*no name)\", true),\n                val: f.upvals[n-1]\n            };\n        }\n        default: return null;  /* not a closure */\n    }\n};\n\nconst lua_getupvalue = function(L, funcindex, n) {\n    let up = aux_upvalue(L, index2addr(L, funcindex), n);\n    if (up) {\n        let name = up.name;\n        let val = up.val;\n        lobject.pushobj2s(L, val);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n        return name;\n    }\n    return null;\n};\n\nconst lua_setupvalue = function(L, funcindex, n) {\n    let fi = index2addr(L, funcindex);\n    api_checknelems(L, 1);\n    let aux = aux_upvalue(L, fi, n);\n    if (aux) {\n        let name = aux.name;\n        let val = aux.val;\n        val.setfrom(L.stack[L.top-1]);\n        delete L.stack[--L.top];\n        return name;\n    }\n    return null;\n};\n\nconst lua_newtable = function(L) {\n    lua_createtable(L, 0, 0);\n};\n\nconst lua_register = function(L, n, f) {\n    lua_pushcfunction(L, f);\n    lua_setglobal(L, n);\n};\n\nconst lua_getmetatable = function(L, objindex) {\n    let obj = index2addr(L, objindex);\n    let mt;\n    let res = false;\n    switch (obj.ttnov()) {\n        case LUA_TTABLE:\n        case LUA_TUSERDATA:\n            mt = obj.value.metatable;\n            break;\n        default:\n            mt = L.l_G.mt[obj.ttnov()];\n            break;\n    }\n\n    if (mt !== null && mt !== undefined) {\n        L.stack[L.top] = new TValue(LUA_TTABLE, mt);\n        api_incr_top(L);\n        res = true;\n    }\n\n    return res;\n};\n\nconst lua_getuservalue = function(L, idx) {\n    let o = index2addr(L, idx);\n    api_check(L, o.ttisfulluserdata(), \"full userdata expected\");\n    let uv = o.value.uservalue;\n    L.stack[L.top] = new TValue(uv.type, uv.value);\n    api_incr_top(L);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_gettable = function(L, idx) {\n    let t = index2addr(L, idx);\n    lvm.luaV_gettable(L, t, L.stack[L.top - 1], L.top - 1);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_getfield = function(L, idx, k) {\n    return auxgetstr(L, index2addr(L, idx), k);\n};\n\nconst lua_geti = function(L, idx, n) {\n    let t = index2addr(L, idx);\n    fengari_argcheckinteger(n);\n    L.stack[L.top] = new TValue(LUA_TNUMINT, n);\n    api_incr_top(L);\n    lvm.luaV_gettable(L, t, L.stack[L.top - 1], L.top - 1);\n    return L.stack[L.top - 1].ttnov();\n};\n\nconst lua_getglobal = function(L, name) {\n    return auxgetstr(L, ltable.luaH_getint(L.l_G.l_registry.value, LUA_RIDX_GLOBALS), name);\n};\n\n/*\n** access functions (stack -> JS)\n*/\n\nconst lua_toboolean = function(L, idx) {\n    let o = index2addr(L, idx);\n    return !o.l_isfalse();\n};\n\nconst lua_tolstring = function(L, idx) {\n    let o = index2addr(L, idx);\n\n    if (!o.ttisstring()) {\n        if (!lvm.cvt2str(o)) {  /* not convertible? */\n            return null;\n        }\n        lobject.luaO_tostring(L, o);\n    }\n    return o.svalue();\n};\n\nconst lua_tostring =  lua_tolstring;\n\nconst lua_tojsstring = function(L, idx) {\n    let o = index2addr(L, idx);\n\n    if (!o.ttisstring()) {\n        if (!lvm.cvt2str(o)) {  /* not convertible? */\n            return null;\n        }\n        lobject.luaO_tostring(L, o);\n    }\n    return o.jsstring();\n};\n\nconst lua_todataview = function(L, idx) {\n    let u8 = lua_tolstring(L, idx);\n    return new DataView(u8.buffer, u8.byteOffset, u8.byteLength);\n};\n\nconst lua_rawlen = function(L, idx) {\n    let o = index2addr(L, idx);\n    switch (o.ttype()) {\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR:\n            return o.vslen();\n        case LUA_TUSERDATA:\n            return o.value.len;\n        case LUA_TTABLE:\n            return ltable.luaH_getn(o.value);\n        default:\n            return 0;\n    }\n};\n\nconst lua_tocfunction = function(L, idx) {\n    let o = index2addr(L, idx);\n    if (o.ttislcf() || o.ttisCclosure()) return o.value;\n    else return null;  /* not a C function */\n};\n\nconst lua_tointeger = function(L, idx) {\n    let n = lua_tointegerx(L, idx);\n    return n === false ? 0 : n;\n};\n\nconst lua_tointegerx = function(L, idx) {\n    return lvm.tointeger(index2addr(L, idx));\n};\n\nconst lua_tonumber = function(L, idx) {\n    let n = lua_tonumberx(L, idx);\n    return n === false ? 0 : n;\n};\n\nconst lua_tonumberx = function(L, idx) {\n    return lvm.tonumber(index2addr(L, idx));\n};\n\nconst lua_touserdata = function(L, idx) {\n    let o = index2addr(L, idx);\n    switch (o.ttnov()) {\n        case LUA_TUSERDATA:\n            return o.value.data;\n        case LUA_TLIGHTUSERDATA:\n            return o.value;\n        default: return null;\n    }\n};\n\nconst lua_tothread = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttisthread() ? o.value : null;\n};\n\nconst lua_topointer = function(L, idx) {\n    let o = index2addr(L, idx);\n    switch (o.ttype()) {\n        case LUA_TTABLE:\n        case LUA_TLCL:\n        case LUA_TCCL:\n        case LUA_TLCF:\n        case LUA_TTHREAD:\n        case LUA_TUSERDATA: /* note: this differs in behaviour to reference lua implementation */\n        case LUA_TLIGHTUSERDATA:\n            return o.value;\n        default:\n            return null;\n    }\n};\n\n\n/* A proxy is a function that the same lua value to the given lua state. */\n\n/* Having a weakmap of created proxies was only way I could think of to provide an 'isproxy' function */\nconst seen = new WeakMap();\n\n/* is the passed object a proxy? is it from the given state? (if passed) */\nconst lua_isproxy = function(p, L) {\n    let G = seen.get(p);\n    if (!G)\n        return false;\n    return (L === null) || (L.l_G === G);\n};\n\n/* Use 'create_proxy' helper function so that 'L' is not in scope */\nconst create_proxy = function(G, type, value) {\n    let proxy = function(L) {\n        api_check(L, L instanceof lstate.lua_State && G === L.l_G, \"must be from same global state\");\n        L.stack[L.top] = new TValue(type, value);\n        api_incr_top(L);\n    };\n    seen.set(proxy, G);\n    return proxy;\n};\n\nconst lua_toproxy = function(L, idx) {\n    let tv = index2addr(L, idx);\n    /* pass broken down tv incase it is an upvalue index */\n    return create_proxy(L.l_G, tv.type, tv.value);\n};\n\n\nconst lua_compare = function(L, index1, index2, op) {\n    let o1 = index2addr(L, index1);\n    let o2 = index2addr(L, index2);\n\n    let i = 0;\n\n    if (isvalid(o1) && isvalid(o2)) {\n        switch (op) {\n            case LUA_OPEQ: i = lvm.luaV_equalobj(L, o1, o2); break;\n            case LUA_OPLT: i = lvm.luaV_lessthan(L, o1, o2); break;\n            case LUA_OPLE: i = lvm.luaV_lessequal(L, o1, o2); break;\n            default: api_check(L, false, \"invalid option\");\n        }\n    }\n\n    return i;\n};\n\nconst lua_stringtonumber = function(L, s) {\n    let tv = new TValue();\n    let sz = lobject.luaO_str2num(s, tv);\n    if (sz !== 0) {\n        L.stack[L.top] = tv;\n        api_incr_top(L);\n    }\n    return sz;\n};\n\nconst f_call = function(L, ud) {\n    ldo.luaD_callnoyield(L, ud.funcOff, ud.nresults);\n};\n\nconst lua_type = function(L, idx) {\n    let o = index2addr(L, idx);\n    return isvalid(o) ?  o.ttnov() : LUA_TNONE;\n};\n\nconst lua_typename = function(L, t) {\n    api_check(L, LUA_TNONE <= t && t < LUA_NUMTAGS, \"invalid tag\");\n    return ltm.ttypename(t);\n};\n\nconst lua_iscfunction = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttislcf(o) || o.ttisCclosure();\n};\n\nconst lua_isnil = function(L, n) {\n    return lua_type(L, n) === LUA_TNIL;\n};\n\nconst lua_isboolean = function(L, n) {\n    return lua_type(L, n) === LUA_TBOOLEAN;\n};\n\nconst lua_isnone = function(L, n) {\n    return lua_type(L, n) === LUA_TNONE;\n};\n\nconst lua_isnoneornil = function(L, n) {\n    return lua_type(L, n) <= 0;\n};\n\nconst lua_istable = function(L, idx) {\n    return index2addr(L, idx).ttistable();\n};\n\nconst lua_isinteger = function(L, idx) {\n    return index2addr(L, idx).ttisinteger();\n};\n\nconst lua_isnumber = function(L, idx) {\n    return lvm.tonumber(index2addr(L, idx)) !== false;\n};\n\nconst lua_isstring = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttisstring() || lvm.cvt2str(o);\n};\n\nconst lua_isuserdata = function(L, idx) {\n    let o = index2addr(L, idx);\n    return o.ttisfulluserdata(o) || o.ttislightuserdata();\n};\n\nconst lua_isthread = function(L, idx) {\n    return lua_type(L, idx) === LUA_TTHREAD;\n};\n\nconst lua_isfunction = function(L, idx) {\n    return lua_type(L, idx) === LUA_TFUNCTION;\n};\n\nconst lua_islightuserdata = function(L, idx) {\n    return lua_type(L, idx) === LUA_TLIGHTUSERDATA;\n};\n\nconst lua_rawequal = function(L, index1, index2) {\n    let o1 = index2addr(L, index1);\n    let o2 = index2addr(L, index2);\n    return isvalid(o1) && isvalid(o2) ? lvm.luaV_equalobj(null, o1, o2) : 0;\n};\n\nconst lua_arith = function(L, op) {\n    if (op !== LUA_OPUNM && op !== LUA_OPBNOT)\n        api_checknelems(L, 2);  /* all other operations expect two operands */\n    else {  /* for unary operations, add fake 2nd operand */\n        api_checknelems(L, 1);\n        lobject.pushobj2s(L, L.stack[L.top-1]);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    }\n    /* first operand at top - 2, second at top - 1; result go to top - 2 */\n    lobject.luaO_arith(L, op, L.stack[L.top - 2], L.stack[L.top - 1], L.stack[L.top - 2]);\n    delete L.stack[--L.top];  /* remove second operand */\n};\n\n/*\n** 'load' and 'call' functions (run Lua code)\n*/\n\nconst default_chunkname = to_luastring(\"?\");\nconst lua_load = function(L, reader, data, chunkname, mode) {\n    if (!chunkname) chunkname = default_chunkname;\n    else chunkname = from_userstring(chunkname);\n    if (mode !== null) mode = from_userstring(mode);\n    let z = new ZIO(L, reader, data);\n    let status = ldo.luaD_protectedparser(L, z, chunkname, mode);\n    if (status === LUA_OK) {  /* no errors? */\n        let f = L.stack[L.top - 1].value; /* get newly created function */\n        if (f.nupvalues >= 1) {  /* does it have an upvalue? */\n            /* get global table from registry */\n            let gt = ltable.luaH_getint(L.l_G.l_registry.value, LUA_RIDX_GLOBALS);\n            /* set global table as 1st upvalue of 'f' (may be LUA_ENV) */\n            f.upvals[0].setfrom(gt);\n        }\n    }\n    return status;\n};\n\nconst lua_dump = function(L, writer, data, strip) {\n    api_checknelems(L, 1);\n    let o = L.stack[L.top -1];\n    if (o.ttisLclosure())\n        return luaU_dump(L, o.value.p, writer, data, strip);\n    return 1;\n};\n\nconst lua_status = function(L) {\n    return L.status;\n};\n\nconst lua_setuservalue = function(L, idx) {\n    api_checknelems(L, 1);\n    let o = index2addr(L, idx);\n    api_check(L, o.ttisfulluserdata(), \"full userdata expected\");\n    o.value.uservalue.setfrom(L.stack[L.top - 1]);\n    delete L.stack[--L.top];\n};\n\nconst checkresults = function(L,na,nr) {\n    api_check(L, nr === LUA_MULTRET || (L.ci.top - L.top >= (nr) - (na)),\n        \"results from function overflow current stack size\");\n};\n\nconst lua_callk = function(L, nargs, nresults, ctx, k) {\n    api_check(L, k === null || !(L.ci.callstatus & lstate.CIST_LUA), \"cannot use continuations inside hooks\");\n    api_checknelems(L, nargs + 1);\n    api_check(L, L.status === LUA_OK, \"cannot do calls on non-normal thread\");\n    checkresults(L, nargs, nresults);\n    let func = L.top - (nargs + 1);\n    if (k !== null && L.nny === 0) { /* need to prepare continuation? */\n        L.ci.c_k = k;\n        L.ci.c_ctx = ctx;\n        ldo.luaD_call(L, func, nresults);\n    } else { /* no continuation or no yieldable */\n        ldo.luaD_callnoyield(L, func, nresults);\n    }\n\n    if (nresults === LUA_MULTRET && L.ci.top < L.top)\n        L.ci.top = L.top;\n};\n\nconst lua_call = function(L, n, r) {\n    lua_callk(L, n, r, 0, null);\n};\n\nconst lua_pcallk = function(L, nargs, nresults, errfunc, ctx, k) {\n    api_check(L, k === null || !(L.ci.callstatus & lstate.CIST_LUA), \"cannot use continuations inside hooks\");\n    api_checknelems(L, nargs + 1);\n    api_check(L, L.status === LUA_OK, \"cannot do calls on non-normal thread\");\n    checkresults(L, nargs, nresults);\n    let status;\n    let func;\n    if (errfunc === 0)\n        func = 0;\n    else {\n        func = index2addr_(L, errfunc);\n    }\n    let funcOff = L.top - (nargs + 1); /* function to be called */\n    if (k === null || L.nny > 0) { /* no continuation or no yieldable? */\n        let c = {\n            funcOff: funcOff,\n            nresults: nresults /* do a 'conventional' protected call */\n        };\n        status = ldo.luaD_pcall(L, f_call, c, funcOff, func);\n    } else { /* prepare continuation (call is already protected by 'resume') */\n        let ci = L.ci;\n        ci.c_k = k;  /* prepare continuation (call is already protected by 'resume') */\n        ci.c_ctx = ctx;  /* prepare continuation (call is already protected by 'resume') */\n        /* save information for error recovery */\n        ci.extra = funcOff;\n        ci.c_old_errfunc = L.errfunc;\n        L.errfunc = func;\n        ci.callstatus &= ~lstate.CIST_OAH | L.allowhook;\n        ci.callstatus |= lstate.CIST_YPCALL;  /* function can do error recovery */\n        ldo.luaD_call(L, funcOff, nresults);  /* do the call */\n        ci.callstatus &= ~lstate.CIST_YPCALL;\n        L.errfunc = ci.c_old_errfunc;\n        status = LUA_OK;\n    }\n\n    if (nresults === LUA_MULTRET && L.ci.top < L.top)\n        L.ci.top = L.top;\n\n    return status;\n};\n\nconst lua_pcall = function(L, n, r, f) {\n    return lua_pcallk(L, n, r, f, 0, null);\n};\n\n/*\n** miscellaneous functions\n*/\n\nconst lua_error = function(L) {\n    api_checknelems(L, 1);\n    ldebug.luaG_errormsg(L);\n};\n\nconst lua_next = function(L, idx) {\n    let t = index2addr(L, idx);\n    api_check(L, t.ttistable(), \"table expected\");\n    L.stack[L.top] = new TValue();\n    let more = ltable.luaH_next(L, t.value, L.top - 1);\n    if (more) {\n        api_incr_top(L);\n        return 1;\n    } else {\n        delete L.stack[L.top];\n        delete L.stack[--L.top];\n        return 0;\n    }\n};\n\nconst lua_concat = function(L, n) {\n    api_checknelems(L, n);\n    if (n >= 2)\n        lvm.luaV_concat(L, n);\n    else if (n === 0) {\n        lobject.pushsvalue2s(L, luaS_bless(L, to_luastring(\"\", true)));\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    }\n};\n\nconst lua_len = function(L, idx) {\n    let t = index2addr(L, idx);\n    let tv = new TValue();\n    lvm.luaV_objlen(L, tv, t);\n    L.stack[L.top] = tv;\n    api_incr_top(L);\n};\n\nconst getupvalref = function(L, fidx, n) {\n    let fi = index2addr(L, fidx);\n    api_check(L, fi.ttisLclosure(), \"Lua function expected\");\n    let f = fi.value;\n    fengari_argcheckinteger(n);\n    api_check(L, 1 <= n && n <= f.p.upvalues.length, \"invalid upvalue index\");\n    return {\n        f: f,\n        i: n - 1\n    };\n};\n\nconst lua_upvalueid = function(L, fidx, n) {\n    let fi = index2addr(L, fidx);\n    switch (fi.ttype()) {\n        case LUA_TLCL: {  /* lua closure */\n            let ref = getupvalref(L, fidx, n);\n            return ref.f.upvals[ref.i];\n        }\n        case LUA_TCCL: {  /* C closure */\n            let f = fi.value;\n            api_check(L, (n|0) === n && n > 0 && n <= f.nupvalues, \"invalid upvalue index\");\n            return f.upvalue[n - 1];\n        }\n        default: {\n            api_check(L, false, \"closure expected\");\n            return null;\n        }\n    }\n};\n\nconst lua_upvaluejoin = function(L, fidx1, n1, fidx2, n2) {\n    let ref1 = getupvalref(L, fidx1, n1);\n    let ref2 = getupvalref(L, fidx2, n2);\n    let up2 = ref2.f.upvals[ref2.i];\n    ref1.f.upvals[ref1.i] = up2;\n};\n\n// This functions are only there for compatibility purposes\nconst lua_gc = function () {};\n\nconst lua_getallocf = function () {\n    console.warn(\"lua_getallocf is not available\");\n    return 0;\n};\n\nconst lua_setallocf = function () {\n    console.warn(\"lua_setallocf is not available\");\n    return 0;\n};\n\nconst lua_getextraspace = function () {\n    console.warn(\"lua_getextraspace is not available\");\n    return 0;\n};\n\nmodule.exports.api_incr_top          = api_incr_top;\nmodule.exports.api_checknelems       = api_checknelems;\nmodule.exports.lua_absindex          = lua_absindex;\nmodule.exports.lua_arith             = lua_arith;\nmodule.exports.lua_atpanic           = lua_atpanic;\nmodule.exports.lua_atnativeerror     = lua_atnativeerror;\nmodule.exports.lua_call              = lua_call;\nmodule.exports.lua_callk             = lua_callk;\nmodule.exports.lua_checkstack        = lua_checkstack;\nmodule.exports.lua_compare           = lua_compare;\nmodule.exports.lua_concat            = lua_concat;\nmodule.exports.lua_copy              = lua_copy;\nmodule.exports.lua_createtable       = lua_createtable;\nmodule.exports.lua_dump              = lua_dump;\nmodule.exports.lua_error             = lua_error;\nmodule.exports.lua_gc                = lua_gc;\nmodule.exports.lua_getallocf         = lua_getallocf;\nmodule.exports.lua_getextraspace     = lua_getextraspace;\nmodule.exports.lua_getfield          = lua_getfield;\nmodule.exports.lua_getglobal         = lua_getglobal;\nmodule.exports.lua_geti              = lua_geti;\nmodule.exports.lua_getmetatable      = lua_getmetatable;\nmodule.exports.lua_gettable          = lua_gettable;\nmodule.exports.lua_gettop            = lua_gettop;\nmodule.exports.lua_getupvalue        = lua_getupvalue;\nmodule.exports.lua_getuservalue      = lua_getuservalue;\nmodule.exports.lua_insert            = lua_insert;\nmodule.exports.lua_isboolean         = lua_isboolean;\nmodule.exports.lua_iscfunction       = lua_iscfunction;\nmodule.exports.lua_isfunction        = lua_isfunction;\nmodule.exports.lua_isinteger         = lua_isinteger;\nmodule.exports.lua_islightuserdata   = lua_islightuserdata;\nmodule.exports.lua_isnil             = lua_isnil;\nmodule.exports.lua_isnone            = lua_isnone;\nmodule.exports.lua_isnoneornil       = lua_isnoneornil;\nmodule.exports.lua_isnumber          = lua_isnumber;\nmodule.exports.lua_isproxy           = lua_isproxy;\nmodule.exports.lua_isstring          = lua_isstring;\nmodule.exports.lua_istable           = lua_istable;\nmodule.exports.lua_isthread          = lua_isthread;\nmodule.exports.lua_isuserdata        = lua_isuserdata;\nmodule.exports.lua_len               = lua_len;\nmodule.exports.lua_load              = lua_load;\nmodule.exports.lua_newtable          = lua_newtable;\nmodule.exports.lua_newuserdata       = lua_newuserdata;\nmodule.exports.lua_next              = lua_next;\nmodule.exports.lua_pcall             = lua_pcall;\nmodule.exports.lua_pcallk            = lua_pcallk;\nmodule.exports.lua_pop               = lua_pop;\nmodule.exports.lua_pushboolean       = lua_pushboolean;\nmodule.exports.lua_pushcclosure      = lua_pushcclosure;\nmodule.exports.lua_pushcfunction     = lua_pushcfunction;\nmodule.exports.lua_pushfstring       = lua_pushfstring;\nmodule.exports.lua_pushglobaltable   = lua_pushglobaltable;\nmodule.exports.lua_pushinteger       = lua_pushinteger;\nmodule.exports.lua_pushjsclosure     = lua_pushjsclosure;\nmodule.exports.lua_pushjsfunction    = lua_pushjsfunction;\nmodule.exports.lua_pushlightuserdata = lua_pushlightuserdata;\nmodule.exports.lua_pushliteral       = lua_pushliteral;\nmodule.exports.lua_pushlstring       = lua_pushlstring;\nmodule.exports.lua_pushnil           = lua_pushnil;\nmodule.exports.lua_pushnumber        = lua_pushnumber;\nmodule.exports.lua_pushstring        = lua_pushstring;\nmodule.exports.lua_pushthread        = lua_pushthread;\nmodule.exports.lua_pushvalue         = lua_pushvalue;\nmodule.exports.lua_pushvfstring      = lua_pushvfstring;\nmodule.exports.lua_rawequal          = lua_rawequal;\nmodule.exports.lua_rawget            = lua_rawget;\nmodule.exports.lua_rawgeti           = lua_rawgeti;\nmodule.exports.lua_rawgetp           = lua_rawgetp;\nmodule.exports.lua_rawlen            = lua_rawlen;\nmodule.exports.lua_rawset            = lua_rawset;\nmodule.exports.lua_rawseti           = lua_rawseti;\nmodule.exports.lua_rawsetp           = lua_rawsetp;\nmodule.exports.lua_register          = lua_register;\nmodule.exports.lua_remove            = lua_remove;\nmodule.exports.lua_replace           = lua_replace;\nmodule.exports.lua_rotate            = lua_rotate;\nmodule.exports.lua_setallocf         = lua_setallocf;\nmodule.exports.lua_setfield          = lua_setfield;\nmodule.exports.lua_setglobal         = lua_setglobal;\nmodule.exports.lua_seti              = lua_seti;\nmodule.exports.lua_setmetatable      = lua_setmetatable;\nmodule.exports.lua_settable          = lua_settable;\nmodule.exports.lua_settop            = lua_settop;\nmodule.exports.lua_setupvalue        = lua_setupvalue;\nmodule.exports.lua_setuservalue      = lua_setuservalue;\nmodule.exports.lua_status            = lua_status;\nmodule.exports.lua_stringtonumber    = lua_stringtonumber;\nmodule.exports.lua_toboolean         = lua_toboolean;\nmodule.exports.lua_tocfunction       = lua_tocfunction;\nmodule.exports.lua_todataview        = lua_todataview;\nmodule.exports.lua_tointeger         = lua_tointeger;\nmodule.exports.lua_tointegerx        = lua_tointegerx;\nmodule.exports.lua_tojsstring        = lua_tojsstring;\nmodule.exports.lua_tolstring         = lua_tolstring;\nmodule.exports.lua_tonumber          = lua_tonumber;\nmodule.exports.lua_tonumberx         = lua_tonumberx;\nmodule.exports.lua_topointer         = lua_topointer;\nmodule.exports.lua_toproxy           = lua_toproxy;\nmodule.exports.lua_tostring          = lua_tostring;\nmodule.exports.lua_tothread          = lua_tothread;\nmodule.exports.lua_touserdata        = lua_touserdata;\nmodule.exports.lua_type              = lua_type;\nmodule.exports.lua_typename          = lua_typename;\nmodule.exports.lua_upvalueid         = lua_upvalueid;\nmodule.exports.lua_upvaluejoin       = lua_upvaluejoin;\nmodule.exports.lua_version           = lua_version;\nmodule.exports.lua_xmove             = lua_xmove;\n","\"use strict\";\n\nconst {\n    LUAL_BUFFERSIZE\n} = require('./luaconf.js');\nconst {\n    LUA_ERRERR,\n    LUA_MULTRET,\n    LUA_REGISTRYINDEX,\n    LUA_SIGNATURE,\n    LUA_TBOOLEAN,\n    LUA_TLIGHTUSERDATA,\n    LUA_TNIL,\n    LUA_TNONE,\n    LUA_TNUMBER,\n    LUA_TSTRING,\n    LUA_TTABLE,\n    LUA_VERSION_NUM,\n    lua_Debug,\n    lua_absindex,\n    lua_atpanic,\n    lua_call,\n    lua_checkstack,\n    lua_concat,\n    lua_copy,\n    lua_createtable,\n    lua_error,\n    lua_getfield,\n    lua_getinfo,\n    lua_getmetatable,\n    lua_getstack,\n    lua_gettop,\n    lua_insert,\n    lua_isinteger,\n    lua_isnil,\n    lua_isnumber,\n    lua_isstring,\n    lua_istable,\n    lua_len,\n    lua_load,\n    lua_newstate,\n    lua_newtable,\n    lua_next,\n    lua_pcall,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcclosure,\n    lua_pushcfunction,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushlstring,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_pushvfstring,\n    lua_rawequal,\n    lua_rawget,\n    lua_rawgeti,\n    lua_rawlen,\n    lua_rawseti,\n    lua_remove,\n    lua_setfield,\n    lua_setglobal,\n    lua_setmetatable,\n    lua_settop,\n    lua_toboolean,\n    lua_tointeger,\n    lua_tointegerx,\n    lua_tojsstring,\n    lua_tolstring,\n    lua_tonumber,\n    lua_tonumberx,\n    lua_topointer,\n    lua_tostring,\n    lua_touserdata,\n    lua_type,\n    lua_typename,\n    lua_version\n} = require('./lua.js');\nconst {\n    from_userstring,\n    luastring_eq,\n    to_luastring,\n    to_uristring\n} = require(\"./fengaricore.js\");\n\n/* extra error code for 'luaL_loadfilex' */\nconst LUA_ERRFILE = LUA_ERRERR+1;\n\n/* key, in the registry, for table of loaded modules */\nconst LUA_LOADED_TABLE = to_luastring(\"_LOADED\");\n\n/* key, in the registry, for table of preloaded loaders */\nconst LUA_PRELOAD_TABLE = to_luastring(\"_PRELOAD\");\n\nconst LUA_FILEHANDLE = to_luastring(\"FILE*\");\n\nconst LUAL_NUMSIZES  = 4*16 + 8;\n\nconst __name = to_luastring(\"__name\");\nconst __tostring = to_luastring(\"__tostring\");\n\nconst empty = new Uint8Array(0);\n\nclass luaL_Buffer {\n    constructor() {\n        this.L = null;\n        this.b = empty;\n        this.n = 0;\n    }\n}\n\nconst LEVELS1 = 10;  /* size of the first part of the stack */\nconst LEVELS2 = 11;  /* size of the second part of the stack */\n\n/*\n** search for 'objidx' in table at index -1.\n** return 1 + string at top if find a good name.\n*/\nconst findfield = function(L, objidx, level) {\n    if (level === 0 || !lua_istable(L, -1))\n        return 0;  /* not found */\n\n    lua_pushnil(L);  /* start 'next' loop */\n\n    while (lua_next(L, -2)) {  /* for each pair in table */\n        if (lua_type(L, -2) === LUA_TSTRING) {  /* ignore non-string keys */\n            if (lua_rawequal(L, objidx, -1)) {  /* found object? */\n                lua_pop(L, 1);  /* remove value (but keep name) */\n                return 1;\n            } else if (findfield(L, objidx, level - 1)) {  /* try recursively */\n                lua_remove(L, -2);  /* remove table (but keep name) */\n                lua_pushliteral(L, \".\");\n                lua_insert(L, -2);  /* place '.' between the two names */\n                lua_concat(L, 3);\n                return 1;\n            }\n        }\n        lua_pop(L, 1);  /* remove value */\n    }\n\n    return 0;  /* not found */\n};\n\n/*\n** Search for a name for a function in all loaded modules\n*/\nconst pushglobalfuncname = function(L, ar) {\n    let top = lua_gettop(L);\n    lua_getinfo(L, to_luastring(\"f\"), ar);  /* push function */\n    lua_getfield(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    if (findfield(L, top + 1, 2)) {\n        let name = lua_tostring(L, -1);\n        if (name[0] === 95 /* '_'.charCodeAt(0) */ &&\n            name[1] === 71 /* 'G'.charCodeAt(0) */ &&\n            name[2] === 46 /* '.'.charCodeAt(0) */\n        ) {  /* name start with '_G.'? */\n            lua_pushstring(L, name.subarray(3));  /* push name without prefix */\n            lua_remove(L, -2);  /* remove original name */\n        }\n        lua_copy(L, -1, top + 1);  /* move name to proper place */\n        lua_pop(L, 2);  /* remove pushed values */\n        return 1;\n    } else {\n        lua_settop(L, top);  /* remove function and global table */\n        return 0;\n    }\n};\n\nconst pushfuncname = function(L, ar) {\n    if (pushglobalfuncname(L, ar)) {  /* try first a global name */\n        lua_pushfstring(L, to_luastring(\"function '%s'\"), lua_tostring(L, -1));\n        lua_remove(L, -2);  /* remove name */\n    }\n    else if (ar.namewhat.length !== 0)  /* is there a name from code? */\n        lua_pushfstring(L, to_luastring(\"%s '%s'\"), ar.namewhat, ar.name);  /* use it */\n    else if (ar.what && ar.what[0] === 109 /* 'm'.charCodeAt(0) */)  /* main? */\n        lua_pushliteral(L, \"main chunk\");\n    else if (ar.what && ar.what[0] === 76 /* 'L'.charCodeAt(0) */)  /* for Lua functions, use <file:line> */\n        lua_pushfstring(L, to_luastring(\"function <%s:%d>\"), ar.short_src, ar.linedefined);\n    else  /* nothing left... */\n        lua_pushliteral(L, \"?\");\n};\n\nconst lastlevel = function(L) {\n    let ar = new lua_Debug();\n    let li = 1;\n    let le = 1;\n    /* find an upper bound */\n    while (lua_getstack(L, le, ar)) { li = le; le *= 2; }\n    /* do a binary search */\n    while (li < le) {\n        let m = Math.floor((li + le)/2);\n        if (lua_getstack(L, m, ar)) li = m + 1;\n        else le = m;\n    }\n    return le - 1;\n};\n\nconst luaL_traceback = function(L, L1, msg, level) {\n    let ar = new lua_Debug();\n    let top = lua_gettop(L);\n    let last = lastlevel(L1);\n    let n1 = last - level > LEVELS1 + LEVELS2 ? LEVELS1 : -1;\n    if (msg)\n        lua_pushfstring(L, to_luastring(\"%s\\n\"), msg);\n    luaL_checkstack(L, 10, null);\n    lua_pushliteral(L, \"stack traceback:\");\n    while (lua_getstack(L1, level++, ar)) {\n        if (n1-- === 0) {  /* too many levels? */\n            lua_pushliteral(L, \"\\n\\t...\");  /* add a '...' */\n            level = last - LEVELS2 + 1;  /* and skip to last ones */\n        } else {\n            lua_getinfo(L1, to_luastring(\"Slnt\", true), ar);\n            lua_pushfstring(L, to_luastring(\"\\n\\t%s:\"), ar.short_src);\n            if (ar.currentline > 0)\n                lua_pushliteral(L, `${ar.currentline}:`);\n            lua_pushliteral(L, \" in \");\n            pushfuncname(L, ar);\n            if (ar.istailcall)\n                lua_pushliteral(L, \"\\n\\t(...tail calls..)\");\n            lua_concat(L, lua_gettop(L) - top);\n        }\n    }\n    lua_concat(L, lua_gettop(L) - top);\n};\n\nconst panic = function(L) {\n    let msg = \"PANIC: unprotected error in call to Lua API (\" + lua_tojsstring(L, -1) + \")\";\n    throw new Error(msg);\n};\n\nconst luaL_argerror = function(L, arg, extramsg) {\n    let ar = new lua_Debug();\n\n    if (!lua_getstack(L, 0, ar))  /* no stack frame? */\n        return luaL_error(L, to_luastring(\"bad argument #%d (%s)\"), arg, extramsg);\n\n    lua_getinfo(L, to_luastring(\"n\"), ar);\n\n    if (luastring_eq(ar.namewhat, to_luastring(\"method\"))) {\n        arg--;  /* do not count 'self' */\n        if (arg === 0)  /* error is in the self argument itself? */\n            return luaL_error(L, to_luastring(\"calling '%s' on bad self (%s)\"), ar.name, extramsg);\n    }\n\n    if (ar.name === null)\n        ar.name = pushglobalfuncname(L, ar) ? lua_tostring(L, -1) : to_luastring(\"?\");\n\n    return luaL_error(L, to_luastring(\"bad argument #%d to '%s' (%s)\"), arg, ar.name, extramsg);\n};\n\nconst typeerror = function(L, arg, tname) {\n    let typearg;\n    if (luaL_getmetafield(L, arg, __name) === LUA_TSTRING)\n        typearg = lua_tostring(L, -1);\n    else if (lua_type(L, arg) === LUA_TLIGHTUSERDATA)\n        typearg = to_luastring(\"light userdata\", true);\n    else\n        typearg = luaL_typename(L, arg);\n\n    let msg = lua_pushfstring(L, to_luastring(\"%s expected, got %s\"), tname, typearg);\n    return luaL_argerror(L, arg, msg);\n};\n\nconst luaL_where = function(L, level) {\n    let ar = new lua_Debug();\n    if (lua_getstack(L, level, ar)) {\n        lua_getinfo(L, to_luastring(\"Sl\", true), ar);\n        if (ar.currentline > 0) {\n            lua_pushfstring(L, to_luastring(\"%s:%d: \"), ar.short_src, ar.currentline);\n            return;\n        }\n    }\n    lua_pushstring(L, to_luastring(\"\"));\n};\n\nconst luaL_error = function(L, fmt, ...argp) {\n    luaL_where(L, 1);\n    lua_pushvfstring(L, fmt, argp);\n    lua_concat(L, 2);\n    return lua_error(L);\n};\n\n/* Unlike normal lua, we pass in an error object */\nconst luaL_fileresult = function(L, stat, fname, e) {\n    if (stat) {\n        lua_pushboolean(L, 1);\n        return 1;\n    } else {\n        lua_pushnil(L);\n        let message, errno;\n        if (e) {\n            message = e.message;\n            errno = -e.errno;\n        } else {\n            message = \"Success\"; /* what strerror(0) returns */\n            errno = 0;\n        }\n        if (fname)\n            lua_pushfstring(L, to_luastring(\"%s: %s\"), fname, to_luastring(message));\n        else\n            lua_pushstring(L, to_luastring(message));\n        lua_pushinteger(L, errno);\n        return 3;\n    }\n};\n\n/* Unlike normal lua, we pass in an error object */\nconst luaL_execresult = function(L, e) {\n    let what, stat;\n    if (e === null) {\n        lua_pushboolean(L, 1);\n        lua_pushliteral(L, \"exit\");\n        lua_pushinteger(L, 0);\n        return 3;\n    } else if (e.status) {\n        what = \"exit\";\n        stat = e.status;\n    } else if (e.signal) {\n        what = \"signal\";\n        stat = e.signal;\n    } else {\n        /* XXX: node seems to have e.errno as a string instead of a number */\n        return luaL_fileresult(L, 0, null, e);\n    }\n    lua_pushnil(L);\n    lua_pushliteral(L, what);\n    lua_pushinteger(L, stat);\n    return 3;\n};\n\nconst luaL_getmetatable = function(L, n) {\n    return lua_getfield(L, LUA_REGISTRYINDEX, n);\n};\n\nconst luaL_newmetatable = function(L, tname) {\n    if (luaL_getmetatable(L, tname) !== LUA_TNIL)  /* name already in use? */\n        return 0;  /* leave previous value on top, but return 0 */\n    lua_pop(L, 1);\n    lua_createtable(L, 0, 2);  /* create metatable */\n    lua_pushstring(L, tname);\n    lua_setfield(L, -2, __name);  /* metatable.__name = tname */\n    lua_pushvalue(L, -1);\n    lua_setfield(L, LUA_REGISTRYINDEX, tname);  /* registry.name = metatable */\n    return 1;\n\n};\n\nconst luaL_setmetatable = function(L, tname) {\n    luaL_getmetatable(L, tname);\n    lua_setmetatable(L, -2);\n};\n\nconst luaL_testudata = function(L, ud, tname) {\n    let p = lua_touserdata(L, ud);\n    if (p !== null) {  /* value is a userdata? */\n        if (lua_getmetatable(L, ud)) {  /* does it have a metatable? */\n            luaL_getmetatable(L, tname);  /* get correct metatable */\n            if (!lua_rawequal(L, -1, -2))  /* not the same? */\n                p = null;  /* value is a userdata with wrong metatable */\n            lua_pop(L, 2);  /* remove both metatables */\n            return p;\n        }\n    }\n    return null;  /* value is not a userdata with a metatable */\n};\n\nconst luaL_checkudata = function(L, ud, tname) {\n    let p = luaL_testudata(L, ud, tname);\n    if (p === null) typeerror(L, ud, tname);\n    return p;\n};\n\nconst luaL_checkoption = function(L, arg, def, lst) {\n    let name = def !== null ? luaL_optstring(L, arg, def) : luaL_checkstring(L, arg);\n    for (let i = 0; lst[i]; i++)\n        if (luastring_eq(lst[i], name))\n            return i;\n    return luaL_argerror(L, arg, lua_pushfstring(L, to_luastring(\"invalid option '%s'\"), name));\n};\n\nconst tag_error = function(L, arg, tag) {\n    typeerror(L, arg, lua_typename(L, tag));\n};\n\nconst luaL_newstate = function() {\n    let L = lua_newstate();\n    if (L) lua_atpanic(L, panic);\n    return L;\n};\n\n\nconst luaL_typename = function(L, i) {\n    return lua_typename(L, lua_type(L, i));\n};\n\nconst luaL_argcheck = function(L, cond, arg, extramsg) {\n    if (!cond) luaL_argerror(L, arg, extramsg);\n};\n\nconst luaL_checkany = function(L, arg) {\n    if (lua_type(L, arg) === LUA_TNONE)\n        luaL_argerror(L, arg, to_luastring(\"value expected\", true));\n};\n\nconst luaL_checktype = function(L, arg, t) {\n    if (lua_type(L, arg) !== t)\n        tag_error(L, arg, t);\n};\n\nconst luaL_checklstring = function(L, arg) {\n    let s = lua_tolstring(L, arg);\n    if (s === null || s === undefined) tag_error(L, arg, LUA_TSTRING);\n    return s;\n};\n\nconst luaL_checkstring = luaL_checklstring;\n\nconst luaL_optlstring = function(L, arg, def) {\n    if (lua_type(L, arg) <= 0) {\n        return def === null ? null : from_userstring(def);\n    } else return luaL_checklstring(L, arg);\n};\n\nconst luaL_optstring = luaL_optlstring;\n\nconst interror = function(L, arg) {\n    if (lua_isnumber(L, arg))\n        luaL_argerror(L, arg, to_luastring(\"number has no integer representation\", true));\n    else\n        tag_error(L, arg, LUA_TNUMBER);\n};\n\nconst luaL_checknumber = function(L, arg) {\n    let d = lua_tonumberx(L, arg);\n    if (d === false)\n        tag_error(L, arg, LUA_TNUMBER);\n    return d;\n};\n\nconst luaL_optnumber = function(L, arg, def) {\n    return luaL_opt(L, luaL_checknumber, arg, def);\n};\n\nconst luaL_checkinteger = function(L, arg) {\n    let d = lua_tointegerx(L, arg);\n    if (d === false)\n        interror(L, arg);\n    return d;\n};\n\nconst luaL_optinteger = function(L, arg, def) {\n    return luaL_opt(L, luaL_checkinteger, arg, def);\n};\n\nconst luaL_prepbuffsize = function(B, sz) {\n    let newend = B.n + sz;\n    if (B.b.length < newend) {\n        let newsize = Math.max(B.b.length * 2, newend);  /* double buffer size */\n        let newbuff = new Uint8Array(newsize);  /* create larger buffer */\n        newbuff.set(B.b);  /* copy original content */\n        B.b = newbuff;\n    }\n    return B.b.subarray(B.n, newend);\n};\n\nconst luaL_buffinit = function(L, B) {\n    B.L = L;\n    B.b = empty;\n};\n\nconst luaL_buffinitsize = function(L, B, sz) {\n    luaL_buffinit(L, B);\n    return luaL_prepbuffsize(B, sz);\n};\n\nconst luaL_prepbuffer = function(B) {\n    return luaL_prepbuffsize(B, LUAL_BUFFERSIZE);\n};\n\nconst luaL_addlstring = function(B, s, l) {\n    if (l > 0) {\n        s = from_userstring(s);\n        let b = luaL_prepbuffsize(B, l);\n        b.set(s.subarray(0, l));\n        luaL_addsize(B, l);\n    }\n};\n\nconst luaL_addstring = function(B, s) {\n    s = from_userstring(s);\n    luaL_addlstring(B, s, s.length);\n};\n\nconst luaL_pushresult = function(B) {\n    lua_pushlstring(B.L, B.b, B.n);\n    /* delete old buffer */\n    B.n = 0;\n    B.b = empty;\n};\n\nconst luaL_addchar = function(B, c) {\n    luaL_prepbuffsize(B, 1);\n    B.b[B.n++] = c;\n};\n\nconst luaL_addsize = function(B, s) {\n    B.n += s;\n};\n\nconst luaL_pushresultsize = function(B, sz) {\n    luaL_addsize(B, sz);\n    luaL_pushresult(B);\n};\n\nconst luaL_addvalue = function(B) {\n    let L = B.L;\n    let s = lua_tostring(L, -1);\n    luaL_addlstring(B, s, s.length);\n    lua_pop(L, 1);  /* remove value */\n};\n\nconst luaL_opt = function(L, f, n, d) {\n    return lua_type(L, n) <= 0 ? d : f(L, n);\n};\n\nconst getS = function(L, ud) {\n    let s = ud.string;\n    ud.string = null;\n    return s;\n};\n\nconst luaL_loadbufferx = function(L, buff, size, name, mode) {\n    return lua_load(L, getS, {string: buff}, name, mode);\n};\n\nconst luaL_loadbuffer = function(L, s, sz, n) {\n    return luaL_loadbufferx(L, s, sz, n, null);\n};\n\nconst luaL_loadstring = function(L, s) {\n    return luaL_loadbuffer(L, s, s.length, s);\n};\n\nconst luaL_dostring = function(L, s) {\n    return (luaL_loadstring(L, s) || lua_pcall(L, 0, LUA_MULTRET, 0));\n};\n\nconst luaL_getmetafield = function(L, obj, event) {\n    if (!lua_getmetatable(L, obj))  /* no metatable? */\n        return LUA_TNIL;\n    else {\n        lua_pushstring(L, event);\n        let tt = lua_rawget(L, -2);\n        if (tt === LUA_TNIL)  /* is metafield nil? */\n            lua_pop(L, 2);  /* remove metatable and metafield */\n        else\n            lua_remove(L, -2);  /* remove only metatable */\n        return tt;  /* return metafield type */\n    }\n};\n\nconst luaL_callmeta = function(L, obj, event) {\n    obj = lua_absindex(L, obj);\n    if (luaL_getmetafield(L, obj, event) === LUA_TNIL)\n        return false;\n\n    lua_pushvalue(L, obj);\n    lua_call(L, 1, 1);\n\n    return true;\n};\n\nconst luaL_len = function(L, idx) {\n    lua_len(L, idx);\n    let l = lua_tointegerx(L, -1);\n    if (l === false)\n        luaL_error(L, to_luastring(\"object length is not an integer\", true));\n    lua_pop(L, 1);  /* remove object */\n    return l;\n};\n\nconst p_I = to_luastring(\"%I\");\nconst p_f = to_luastring(\"%f\");\nconst luaL_tolstring = function(L, idx) {\n    if (luaL_callmeta(L, idx, __tostring)) {\n        if (!lua_isstring(L, -1))\n            luaL_error(L, to_luastring(\"'__tostring' must return a string\"));\n    } else {\n        let t = lua_type(L, idx);\n        switch(t) {\n            case LUA_TNUMBER: {\n                if (lua_isinteger(L, idx))\n                    lua_pushfstring(L, p_I, lua_tointeger(L, idx));\n                else\n                    lua_pushfstring(L, p_f, lua_tonumber(L, idx));\n                break;\n            }\n            case LUA_TSTRING:\n                lua_pushvalue(L, idx);\n                break;\n            case LUA_TBOOLEAN:\n                lua_pushliteral(L, (lua_toboolean(L, idx) ? \"true\" : \"false\"));\n                break;\n            case LUA_TNIL:\n                lua_pushliteral(L, \"nil\");\n                break;\n            default: {\n                let tt = luaL_getmetafield(L, idx, __name);\n                let kind = tt === LUA_TSTRING ? lua_tostring(L, -1) : luaL_typename(L, idx);\n                lua_pushfstring(L, to_luastring(\"%s: %p\"), kind, lua_topointer(L, idx));\n                if (tt !== LUA_TNIL)\n                    lua_remove(L, -2);\n                break;\n            }\n        }\n    }\n\n    return lua_tolstring(L, -1);\n};\n\n/*\n** Stripped-down 'require': After checking \"loaded\" table, calls 'openf'\n** to open a module, registers the result in 'package.loaded' table and,\n** if 'glb' is true, also registers the result in the global table.\n** Leaves resulting module on the top.\n*/\nconst luaL_requiref = function(L, modname, openf, glb) {\n    luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    lua_getfield(L, -1, modname); /* LOADED[modname] */\n    if (!lua_toboolean(L, -1)) {  /* package not already loaded? */\n        lua_pop(L, 1);  /* remove field */\n        lua_pushcfunction(L, openf);\n        lua_pushstring(L, modname);  /* argument to open function */\n        lua_call(L, 1, 1);  /* call 'openf' to open module */\n        lua_pushvalue(L, -1);  /* make copy of module (call result) */\n        lua_setfield(L, -3, modname);  /* LOADED[modname] = module */\n    }\n    lua_remove(L, -2);  /* remove LOADED table */\n    if (glb) {\n        lua_pushvalue(L, -1);  /* copy of module */\n        lua_setglobal(L, modname);  /* _G[modname] = module */\n    }\n};\n\nconst find_subarray = function(arr, subarr, from_index) {\n    var i = from_index >>> 0,\n        sl = subarr.length,\n        l = arr.length + 1 - sl;\n\n    loop: for (; i < l; i++) {\n        for (let j = 0; j < sl; j++)\n            if (arr[i+j] !== subarr[j])\n                continue loop;\n        return i;\n    }\n    return -1;\n};\n\nconst luaL_gsub = function(L, s, p, r) {\n    let wild;\n    let b = new luaL_Buffer();\n    luaL_buffinit(L, b);\n    while ((wild = find_subarray(s, p)) >= 0) {\n        luaL_addlstring(b, s, wild);  /* push prefix */\n        luaL_addstring(b, r);  /* push replacement in place of pattern */\n        s = s.subarray(wild + p.length);  /* continue after 'p' */\n    }\n    luaL_addstring(b, s);  /* push last suffix */\n    luaL_pushresult(b);\n    return lua_tostring(L, -1);\n};\n\n/*\n** ensure that stack[idx][fname] has a table and push that table\n** into the stack\n*/\nconst luaL_getsubtable = function(L, idx, fname) {\n    if (lua_getfield(L, idx, fname) === LUA_TTABLE)\n        return true;  /* table already there */\n    else {\n        lua_pop(L, 1);  /* remove previous result */\n        idx = lua_absindex(L, idx);\n        lua_newtable(L);\n        lua_pushvalue(L, -1);  /* copy to be left at top */\n        lua_setfield(L, idx, fname);  /* assign new table to field */\n        return false;  /* false, because did not find table there */\n    }\n};\n\n/*\n** set functions from list 'l' into table at top - 'nup'; each\n** function gets the 'nup' elements at the top as upvalues.\n** Returns with only the table at the stack.\n*/\nconst luaL_setfuncs = function(L, l, nup) {\n    luaL_checkstack(L, nup, to_luastring(\"too many upvalues\", true));\n    for (let lib in l) {  /* fill the table with given functions */\n        for (let i = 0; i < nup; i++)  /* copy upvalues to the top */\n            lua_pushvalue(L, -nup);\n        lua_pushcclosure(L, l[lib], nup);  /* closure with those upvalues */\n        lua_setfield(L, -(nup + 2), to_luastring(lib));\n    }\n    lua_pop(L, nup);  /* remove upvalues */\n};\n\n/*\n** Ensures the stack has at least 'space' extra slots, raising an error\n** if it cannot fulfill the request. (The error handling needs a few\n** extra slots to format the error message. In case of an error without\n** this extra space, Lua will generate the same 'stack overflow' error,\n** but without 'msg'.)\n*/\nconst luaL_checkstack = function(L, space, msg) {\n    if (!lua_checkstack(L, space)) {\n        if (msg)\n            luaL_error(L, to_luastring(\"stack overflow (%s)\"), msg);\n        else\n            luaL_error(L, to_luastring('stack overflow', true));\n    }\n};\n\nconst luaL_newlibtable = function(L) {\n    lua_createtable(L);\n};\n\nconst luaL_newlib = function(L, l) {\n    lua_createtable(L);\n    luaL_setfuncs(L, l, 0);\n};\n\n/* predefined references */\nconst LUA_NOREF  = -2;\nconst LUA_REFNIL = -1;\n\nconst luaL_ref = function(L, t) {\n    let ref;\n    if (lua_isnil(L, -1)) {\n        lua_pop(L, 1);  /* remove from stack */\n        return LUA_REFNIL;  /* 'nil' has a unique fixed reference */\n    }\n    t = lua_absindex(L, t);\n    lua_rawgeti(L, t, 0);  /* get first free element */\n    ref = lua_tointeger(L, -1);  /* ref = t[freelist] */\n    lua_pop(L, 1);  /* remove it from stack */\n    if (ref !== 0) {  /* any free element? */\n        lua_rawgeti(L, t, ref);  /* remove it from list */\n        lua_rawseti(L, t, 0);  /* (t[freelist] = t[ref]) */\n    }\n    else  /* no free elements */\n        ref = lua_rawlen(L, t) + 1;  /* get a new reference */\n    lua_rawseti(L, t, ref);\n    return ref;\n};\n\n\nconst luaL_unref = function(L, t, ref) {\n    if (ref >= 0) {\n        t = lua_absindex(L, t);\n        lua_rawgeti(L, t, 0);\n        lua_rawseti(L, t, ref);  /* t[ref] = t[freelist] */\n        lua_pushinteger(L, ref);\n        lua_rawseti(L, t, 0);  /* t[freelist] = ref */\n    }\n};\n\n\nconst errfile = function(L, what, fnameindex, error) {\n    let serr = error.message;\n    let filename = lua_tostring(L, fnameindex).subarray(1);\n    lua_pushfstring(L, to_luastring(\"cannot %s %s: %s\"), to_luastring(what), filename, to_luastring(serr));\n    lua_remove(L, fnameindex);\n    return LUA_ERRFILE;\n};\n\nlet getc;\n\nconst utf8_bom = [0XEF, 0XBB, 0XBF];  /* UTF-8 BOM mark */\nconst skipBOM = function(lf) {\n    lf.n = 0;\n    let c;\n    let p = 0;\n    do {\n        c = getc(lf);\n        if (c === null || c !== utf8_bom[p]) return c;\n        p++;\n        lf.buff[lf.n++] = c;  /* to be read by the parser */\n    } while (p < utf8_bom.length);\n    lf.n = 0;  /* prefix matched; discard it */\n    return getc(lf);  /* return next character */\n};\n\n/*\n** reads the first character of file 'f' and skips an optional BOM mark\n** in its beginning plus its first line if it starts with '#'. Returns\n** true if it skipped the first line.  In any case, '*cp' has the\n** first \"valid\" character of the file (after the optional BOM and\n** a first-line comment).\n*/\nconst skipcomment = function(lf) {\n    let c = skipBOM(lf);\n    if (c === 35 /* '#'.charCodeAt(0) */) {  /* first line is a comment (Unix exec. file)? */\n        do {  /* skip first line */\n            c = getc(lf);\n        } while (c && c !== 10 /* '\\n'.charCodeAt(0) */);\n\n        return {\n            skipped: true,\n            c: getc(lf)  /* skip end-of-line, if present */\n        };\n    } else {\n        return {\n            skipped: false,\n            c: c\n        };\n    }\n};\n\nlet luaL_loadfilex;\n\nif (typeof process === \"undefined\") {\n    class LoadF {\n        constructor() {\n            this.n = NaN;  /* number of pre-read characters */\n            this.f = null;  /* file being read */\n            this.buff = new Uint8Array(1024);  /* area for reading file */\n            this.pos = 0;  /* current position in file */\n            this.err = void 0;\n        }\n    }\n\n    const getF = function(L, ud) {\n        let lf = ud;\n\n        if (lf.f !== null && lf.n > 0) {  /* are there pre-read characters to be read? */\n            let bytes = lf.n; /* return them (chars already in buffer) */\n            lf.n = 0;  /* no more pre-read characters */\n            lf.f = lf.f.subarray(lf.pos);  /* we won't use lf.buff anymore */\n            return lf.buff.subarray(0, bytes);\n        }\n\n        let f = lf.f;\n        lf.f = null;\n        return f;\n    };\n\n    getc = function(lf) {\n        return lf.pos < lf.f.length ? lf.f[lf.pos++] : null;\n    };\n\n    luaL_loadfilex = function(L, filename, mode) {\n        let lf = new LoadF();\n        let fnameindex = lua_gettop(L) + 1;  /* index of filename on the stack */\n        if (filename === null) {\n            throw new Error(\"Can't read stdin in the browser\");\n        } else {\n            lua_pushfstring(L, to_luastring(\"@%s\"), filename);\n            let path = to_uristring(filename);\n            let xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", path, false);\n            /*\n            Synchronous xhr in main thread always returns a js string.\n            Some browsers make console noise if you even attempt to set responseType\n            */\n            if (typeof window === \"undefined\") {\n                xhr.responseType = \"arraybuffer\";\n            }\n            xhr.send();\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                if (typeof xhr.response === \"string\") {\n                    lf.f = to_luastring(xhr.response);\n                } else {\n                    lf.f = new Uint8Array(xhr.response);\n                }\n            } else {\n                lf.err = xhr.status;\n                return errfile(L, \"open\", fnameindex, { message: `${xhr.status}: ${xhr.statusText}` });\n            }\n        }\n        let com = skipcomment(lf);\n        /* check for signature first, as we don't want to add line number corrections in binary case */\n        if (com.c === LUA_SIGNATURE[0] && filename) {  /* binary file? */\n            /* no need to re-open */\n        } else if (com.skipped) { /* read initial portion */\n            lf.buff[lf.n++] = 10 /* '\\n'.charCodeAt(0) */;  /* add line to correct line numbers */\n        }\n        if (com.c !== null)\n            lf.buff[lf.n++] = com.c; /* 'c' is the first character of the stream */\n        let status = lua_load(L, getF, lf, lua_tostring(L, -1), mode);\n        let readstatus = lf.err;\n        if (readstatus) {\n            lua_settop(L, fnameindex);  /* ignore results from 'lua_load' */\n            return errfile(L, \"read\", fnameindex, readstatus);\n        }\n        lua_remove(L, fnameindex);\n        return status;\n    };\n} else {\n    const fs = require('fs');\n\n    class LoadF {\n        constructor() {\n            this.n = NaN;  /* number of pre-read characters */\n            this.f = null;  /* file being read */\n            this.buff = Buffer.alloc(1024);  /* area for reading file */\n            this.pos = 0;  /* current position in file */\n            this.err = void 0;\n        }\n    }\n\n    const getF = function(L, ud) {\n        let lf = ud;\n        let bytes = 0;\n        if (lf.n > 0) {  /* are there pre-read characters to be read? */\n            bytes = lf.n; /* return them (chars already in buffer) */\n            lf.n = 0;  /* no more pre-read characters */\n        } else {  /* read a block from file */\n            try {\n                bytes = fs.readSync(lf.f, lf.buff, 0, lf.buff.length, lf.pos); /* read block */\n            } catch(e) {\n                lf.err = e;\n                bytes = 0;\n            }\n            lf.pos += bytes;\n        }\n        if (bytes > 0)\n            return lf.buff.subarray(0, bytes);\n        else return null;\n    };\n\n    getc = function(lf) {\n        let b = Buffer.alloc(1);\n        let bytes;\n        try {\n            bytes = fs.readSync(lf.f, b, 0, 1, lf.pos);\n        } catch(e) {\n            lf.err = e;\n            return null;\n        }\n        lf.pos += bytes;\n        return bytes > 0 ? b.readUInt8() : null;\n    };\n\n    luaL_loadfilex = function(L, filename, mode) {\n        let lf = new LoadF();\n        let fnameindex = lua_gettop(L) + 1;  /* index of filename on the stack */\n        if (filename === null) {\n            lua_pushliteral(L, \"=stdin\");\n            lf.f = process.stdin.fd;\n        } else {\n            lua_pushfstring(L, to_luastring(\"@%s\"), filename);\n            try {\n                lf.f = fs.openSync(filename, \"r\");\n            } catch (e) {\n                return errfile(L, \"open\", fnameindex, e);\n            }\n        }\n        let com = skipcomment(lf);\n        /* check for signature first, as we don't want to add line number corrections in binary case */\n        if (com.c === LUA_SIGNATURE[0] && filename) {  /* binary file? */\n            /* no need to re-open */\n        } else if (com.skipped) { /* read initial portion */\n            lf.buff[lf.n++] = 10 /* '\\n'.charCodeAt(0) */;  /* add line to correct line numbers */\n        }\n        if (com.c !== null)\n            lf.buff[lf.n++] = com.c; /* 'c' is the first character of the stream */\n        let status = lua_load(L, getF, lf, lua_tostring(L, -1), mode);\n        let readstatus = lf.err;\n        if (filename) try { fs.closeSync(lf.f); } catch(e) {}  /* close file (even in case of errors) */\n        if (readstatus) {\n            lua_settop(L, fnameindex);  /* ignore results from 'lua_load' */\n            return errfile(L, \"read\", fnameindex, readstatus);\n        }\n        lua_remove(L, fnameindex);\n        return status;\n    };\n}\n\nconst luaL_loadfile = function(L, filename) {\n    return luaL_loadfilex(L, filename, null);\n};\n\nconst luaL_dofile = function(L, filename) {\n    return (luaL_loadfile(L, filename) || lua_pcall(L, 0, LUA_MULTRET, 0));\n};\n\nconst lua_writestringerror = function() {\n    for (let i=0; i<arguments.length; i++) {\n        let a = arguments[i];\n        if (typeof process === \"undefined\") {\n            /* split along new lines for separate console.error invocations */\n            do {\n                /* regexp uses [\\d\\D] to work around matching new lines\n                   the 's' flag is non-standard */\n                let r = /([^\\n]*)\\n?([\\d\\D]*)/.exec(a);\n                console.error(r[1]);\n                a = r[2];\n            } while (a !== \"\");\n        } else {\n            process.stderr.write(a);\n        }\n    }\n};\n\nconst luaL_checkversion_ = function(L, ver, sz) {\n    let v = lua_version(L);\n    if (sz != LUAL_NUMSIZES)  /* check numeric types */\n        luaL_error(L, to_luastring(\"core and library have incompatible numeric types\"));\n    if (v != lua_version(null))\n        luaL_error(L, to_luastring(\"multiple Lua VMs detected\"));\n    else if (v !== ver)\n        luaL_error(L, to_luastring(\"version mismatch: app. needs %f, Lua core provides %f\"), ver, v);\n};\n\n/* There is no point in providing this function... */\nconst luaL_checkversion = function(L) {\n    luaL_checkversion_(L, LUA_VERSION_NUM, LUAL_NUMSIZES);\n};\n\nmodule.exports.LUA_ERRFILE          = LUA_ERRFILE;\nmodule.exports.LUA_FILEHANDLE       = LUA_FILEHANDLE;\nmodule.exports.LUA_LOADED_TABLE     = LUA_LOADED_TABLE;\nmodule.exports.LUA_NOREF            = LUA_NOREF;\nmodule.exports.LUA_PRELOAD_TABLE    = LUA_PRELOAD_TABLE;\nmodule.exports.LUA_REFNIL           = LUA_REFNIL;\nmodule.exports.luaL_Buffer          = luaL_Buffer;\nmodule.exports.luaL_addchar         = luaL_addchar;\nmodule.exports.luaL_addlstring      = luaL_addlstring;\nmodule.exports.luaL_addsize         = luaL_addsize;\nmodule.exports.luaL_addstring       = luaL_addstring;\nmodule.exports.luaL_addvalue        = luaL_addvalue;\nmodule.exports.luaL_argcheck        = luaL_argcheck;\nmodule.exports.luaL_argerror        = luaL_argerror;\nmodule.exports.luaL_buffinit        = luaL_buffinit;\nmodule.exports.luaL_buffinitsize    = luaL_buffinitsize;\nmodule.exports.luaL_callmeta        = luaL_callmeta;\nmodule.exports.luaL_checkany        = luaL_checkany;\nmodule.exports.luaL_checkinteger    = luaL_checkinteger;\nmodule.exports.luaL_checklstring    = luaL_checklstring;\nmodule.exports.luaL_checknumber     = luaL_checknumber;\nmodule.exports.luaL_checkoption     = luaL_checkoption;\nmodule.exports.luaL_checkstack      = luaL_checkstack;\nmodule.exports.luaL_checkstring     = luaL_checkstring;\nmodule.exports.luaL_checktype       = luaL_checktype;\nmodule.exports.luaL_checkudata      = luaL_checkudata;\nmodule.exports.luaL_checkversion    = luaL_checkversion;\nmodule.exports.luaL_checkversion_   = luaL_checkversion_;\nmodule.exports.luaL_dofile          = luaL_dofile;\nmodule.exports.luaL_dostring        = luaL_dostring;\nmodule.exports.luaL_error           = luaL_error;\nmodule.exports.luaL_execresult      = luaL_execresult;\nmodule.exports.luaL_fileresult      = luaL_fileresult;\nmodule.exports.luaL_getmetafield    = luaL_getmetafield;\nmodule.exports.luaL_getmetatable    = luaL_getmetatable;\nmodule.exports.luaL_getsubtable     = luaL_getsubtable;\nmodule.exports.luaL_gsub            = luaL_gsub;\nmodule.exports.luaL_len             = luaL_len;\nmodule.exports.luaL_loadbuffer      = luaL_loadbuffer;\nmodule.exports.luaL_loadbufferx     = luaL_loadbufferx;\nmodule.exports.luaL_loadfile        = luaL_loadfile;\nmodule.exports.luaL_loadfilex       = luaL_loadfilex;\nmodule.exports.luaL_loadstring      = luaL_loadstring;\nmodule.exports.luaL_newlib          = luaL_newlib;\nmodule.exports.luaL_newlibtable     = luaL_newlibtable;\nmodule.exports.luaL_newmetatable    = luaL_newmetatable;\nmodule.exports.luaL_newstate        = luaL_newstate;\nmodule.exports.luaL_opt             = luaL_opt;\nmodule.exports.luaL_optinteger      = luaL_optinteger;\nmodule.exports.luaL_optlstring      = luaL_optlstring;\nmodule.exports.luaL_optnumber       = luaL_optnumber;\nmodule.exports.luaL_optstring       = luaL_optstring;\nmodule.exports.luaL_prepbuffer      = luaL_prepbuffer;\nmodule.exports.luaL_prepbuffsize    = luaL_prepbuffsize;\nmodule.exports.luaL_pushresult      = luaL_pushresult;\nmodule.exports.luaL_pushresultsize  = luaL_pushresultsize;\nmodule.exports.luaL_ref             = luaL_ref;\nmodule.exports.luaL_requiref        = luaL_requiref;\nmodule.exports.luaL_setfuncs        = luaL_setfuncs;\nmodule.exports.luaL_setmetatable    = luaL_setmetatable;\nmodule.exports.luaL_testudata       = luaL_testudata;\nmodule.exports.luaL_tolstring       = luaL_tolstring;\nmodule.exports.luaL_traceback       = luaL_traceback;\nmodule.exports.luaL_typename        = luaL_typename;\nmodule.exports.luaL_unref           = luaL_unref;\nmodule.exports.luaL_where           = luaL_where;\nmodule.exports.lua_writestringerror = lua_writestringerror;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    LUA_OK,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TNONE,\n    LUA_TNUMBER,\n    LUA_TSTRING,\n    LUA_TTABLE,\n    LUA_VERSION,\n    LUA_YIELD,\n    lua_call,\n    lua_callk,\n    lua_concat,\n    lua_error,\n    lua_getglobal,\n    lua_geti,\n    lua_getmetatable,\n    lua_gettop,\n    lua_insert,\n    lua_isnil,\n    lua_isnone,\n    lua_isstring,\n    lua_load,\n    lua_next,\n    lua_pcallk,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcfunction,\n    lua_pushglobaltable,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawequal,\n    lua_rawget,\n    lua_rawlen,\n    lua_rawset,\n    lua_remove,\n    lua_replace,\n    lua_rotate,\n    lua_setfield,\n    lua_setmetatable,\n    lua_settop,\n    lua_setupvalue,\n    lua_stringtonumber,\n    lua_toboolean,\n    lua_tolstring,\n    lua_tostring,\n    lua_type,\n    lua_typename\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_checkany,\n    luaL_checkinteger,\n    luaL_checkoption,\n    luaL_checkstack,\n    luaL_checktype,\n    luaL_error,\n    luaL_getmetafield,\n    luaL_loadbufferx,\n    luaL_loadfile,\n    luaL_loadfilex,\n    luaL_optinteger,\n    luaL_optstring,\n    luaL_setfuncs,\n    luaL_tolstring,\n    luaL_where\n} = require('./lauxlib.js');\nconst {\n    to_jsstring,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nlet lua_writestring;\nlet lua_writeline;\nif (typeof process === \"undefined\") {\n    if (typeof TextDecoder === \"function\") { /* Older browsers don't have TextDecoder */\n        let buff = \"\";\n        let decoder = new TextDecoder(\"utf-8\");\n        lua_writestring = function(s) {\n            buff += decoder.decode(s, {stream: true});\n        };\n        let empty = new Uint8Array(0);\n        lua_writeline = function() {\n            buff += decoder.decode(empty);\n            console.log(buff);\n            buff = \"\";\n        };\n    } else {\n        let buff = [];\n        lua_writestring = function(s) {\n            try {\n                /* If the string is valid utf8, then we can use to_jsstring */\n                s = to_jsstring(s);\n            } catch(e) {\n                /* otherwise push copy of raw array */\n                let copy = new Uint8Array(s.length);\n                copy.set(s);\n                s = copy;\n            }\n            buff.push(s);\n        };\n        lua_writeline = function() {\n            console.log.apply(console.log, buff);\n            buff = [];\n        };\n    }\n} else {\n    lua_writestring = function(s) {\n        process.stdout.write(Buffer.from(s));\n    };\n    lua_writeline = function() {\n        process.stdout.write(\"\\n\");\n    };\n}\nconst luaB_print = function(L) {\n    let n = lua_gettop(L); /* number of arguments */\n    lua_getglobal(L, to_luastring(\"tostring\", true));\n    for (let i = 1; i <= n; i++) {\n        lua_pushvalue(L, -1);  /* function to be called */\n        lua_pushvalue(L, i);  /* value to print */\n        lua_call(L, 1, 1);\n        let s = lua_tolstring(L, -1);\n        if (s === null)\n            return luaL_error(L, to_luastring(\"'tostring' must return a string to 'print'\"));\n        if (i > 1) lua_writestring(to_luastring(\"\\t\"));\n        lua_writestring(s);\n        lua_pop(L, 1);\n    }\n    lua_writeline();\n    return 0;\n};\n\nconst luaB_tostring = function(L) {\n    luaL_checkany(L, 1);\n    luaL_tolstring(L, 1);\n\n    return 1;\n};\n\nconst luaB_getmetatable = function(L) {\n    luaL_checkany(L, 1);\n    if (!lua_getmetatable(L, 1)) {\n        lua_pushnil(L);\n        return 1;  /* no metatable */\n    }\n    luaL_getmetafield(L, 1, to_luastring(\"__metatable\", true));\n    return 1;  /* returns either __metatable field (if present) or metatable */\n};\n\nconst luaB_setmetatable = function(L) {\n    let t = lua_type(L, 2);\n    luaL_checktype(L, 1, LUA_TTABLE);\n    luaL_argcheck(L, t === LUA_TNIL || t === LUA_TTABLE, 2, \"nil or table expected\");\n    if (luaL_getmetafield(L, 1, to_luastring(\"__metatable\", true)) !== LUA_TNIL)\n        return luaL_error(L, to_luastring(\"cannot change a protected metatable\"));\n    lua_settop(L, 2);\n    lua_setmetatable(L, 1);\n    return 1;\n};\n\nconst luaB_rawequal = function(L) {\n    luaL_checkany(L, 1);\n    luaL_checkany(L, 2);\n    lua_pushboolean(L, lua_rawequal(L, 1, 2));\n    return 1;\n};\n\nconst luaB_rawlen = function(L) {\n    let t = lua_type(L, 1);\n    luaL_argcheck(L, t === LUA_TTABLE || t === LUA_TSTRING, 1, \"table or string expected\");\n    lua_pushinteger(L, lua_rawlen(L, 1));\n    return 1;\n};\n\nconst luaB_rawget = function(L) {\n    luaL_checktype(L, 1, LUA_TTABLE);\n    luaL_checkany(L, 2);\n    lua_settop(L, 2);\n    lua_rawget(L, 1);\n    return 1;\n};\n\nconst luaB_rawset = function(L) {\n    luaL_checktype(L, 1, LUA_TTABLE);\n    luaL_checkany(L, 2);\n    luaL_checkany(L, 3);\n    lua_settop(L, 3);\n    lua_rawset(L, 1);\n    return 1;\n};\n\nconst opts = [\n    \"stop\", \"restart\", \"collect\",\n    \"count\", \"step\", \"setpause\", \"setstepmul\",\n    \"isrunning\"\n].map((e) => to_luastring(e));\nconst luaB_collectgarbage = function(L) {\n    luaL_checkoption(L, 1, \"collect\", opts);\n    luaL_optinteger(L, 2, 0);\n    luaL_error(L, to_luastring(\"lua_gc not implemented\"));\n};\n\nconst luaB_type = function(L) {\n    let t = lua_type(L, 1);\n    luaL_argcheck(L, t !== LUA_TNONE, 1, \"value expected\");\n    lua_pushstring(L, lua_typename(L, t));\n    return 1;\n};\n\nconst pairsmeta = function(L, method, iszero, iter) {\n    luaL_checkany(L, 1);\n    if (luaL_getmetafield(L, 1, method) === LUA_TNIL) {  /* no metamethod? */\n        lua_pushcfunction(L, iter);  /* will return generator, */\n        lua_pushvalue(L, 1);  /* state, */\n        if (iszero) lua_pushinteger(L, 0);  /* and initial value */\n        else lua_pushnil(L);\n    } else {\n        lua_pushvalue(L, 1);  /* argument 'self' to metamethod */\n        lua_call(L, 1, 3);  /* get 3 values from metamethod */\n    }\n    return 3;\n};\n\nconst luaB_next = function(L) {\n    luaL_checktype(L, 1, LUA_TTABLE);\n    lua_settop(L, 2);  /* create a 2nd argument if there isn't one */\n    if (lua_next(L, 1))\n        return 2;\n    else {\n        lua_pushnil(L);\n        return 1;\n    }\n};\n\nconst luaB_pairs = function(L) {\n    return pairsmeta(L, to_luastring(\"__pairs\", true), 0, luaB_next);\n};\n\n/*\n** Traversal function for 'ipairs'\n*/\nconst ipairsaux = function(L) {\n    let i = luaL_checkinteger(L, 2) + 1;\n    lua_pushinteger(L, i);\n    return lua_geti(L, 1, i) === LUA_TNIL ? 1 : 2;\n};\n\n/*\n** 'ipairs' function. Returns 'ipairsaux', given \"table\", 0.\n** (The given \"table\" may not be a table.)\n*/\nconst luaB_ipairs = function(L) {\n    // Lua 5.2\n    // return pairsmeta(L, \"__ipairs\", 1, ipairsaux);\n\n    luaL_checkany(L, 1);\n    lua_pushcfunction(L, ipairsaux);  /* iteration function */\n    lua_pushvalue(L, 1);  /* state */\n    lua_pushinteger(L, 0);  /* initial value */\n    return 3;\n};\n\nconst b_str2int = function(s, base) {\n    try {\n        s = to_jsstring(s);\n    } catch (e) {\n        return null;\n    }\n    let r = /^[\\t\\v\\f \\n\\r]*([+-]?)0*([0-9A-Za-z]+)[\\t\\v\\f \\n\\r]*$/.exec(s);\n    if (!r) return null;\n    let v = parseInt(r[1]+r[2], base);\n    if (isNaN(v)) return null;\n    return v|0;\n};\n\nconst luaB_tonumber = function(L) {\n    if (lua_type(L, 2) <= 0) {  /* standard conversion? */\n        luaL_checkany(L, 1);\n        if (lua_type(L, 1) === LUA_TNUMBER) {  /* already a number? */\n            lua_settop(L, 1);\n            return 1;\n        } else {\n            let s = lua_tostring(L, 1);\n            if (s !== null && lua_stringtonumber(L, s) === s.length+1)\n                return 1;  /* successful conversion to number */\n        }\n    } else {\n        let base = luaL_checkinteger(L, 2);\n        luaL_checktype(L, 1, LUA_TSTRING);  /* no numbers as strings */\n        let s = lua_tostring(L, 1);\n        luaL_argcheck(L, 2 <= base && base <= 36, 2, \"base out of range\");\n        let n = b_str2int(s, base);\n        if (n !== null) {\n            lua_pushinteger(L, n);\n            return 1;\n        }\n    }\n\n    lua_pushnil(L);\n    return 1;\n};\n\nconst luaB_error = function(L) {\n    let level = luaL_optinteger(L, 2, 1);\n    lua_settop(L, 1);\n    if (lua_type(L, 1) === LUA_TSTRING && level > 0) {\n        luaL_where(L, level);  /* add extra information */\n        lua_pushvalue(L, 1);\n        lua_concat(L, 2);\n    }\n    return lua_error(L);\n};\n\nconst luaB_assert = function(L) {\n    if (lua_toboolean(L, 1))  /* condition is true? */\n        return lua_gettop(L);  /* return all arguments */\n    else {\n        luaL_checkany(L, 1);  /* there must be a condition */\n        lua_remove(L, 1);  /* remove it */\n        lua_pushliteral(L, \"assertion failed!\");  /* default message */\n        lua_settop(L, 1);  /* leave only message (default if no other one) */\n        return luaB_error(L);  /* call 'error' */\n    }\n};\n\nconst luaB_select = function(L) {\n    let n = lua_gettop(L);\n    if (lua_type(L, 1) === LUA_TSTRING && lua_tostring(L, 1)[0] === 35 /* '#'.charCodeAt(0) */) {\n        lua_pushinteger(L, n - 1);\n        return 1;\n    } else {\n        let i = luaL_checkinteger(L, 1);\n        if (i < 0) i = n + i;\n        else if (i > n) i = n;\n        luaL_argcheck(L, 1 <= i, 1, \"index out of range\");\n        return n - i;\n    }\n};\n\n/*\n** Continuation function for 'pcall' and 'xpcall'. Both functions\n** already pushed a 'true' before doing the call, so in case of success\n** 'finishpcall' only has to return everything in the stack minus\n** 'extra' values (where 'extra' is exactly the number of items to be\n** ignored).\n*/\nconst finishpcall = function(L, status, extra) {\n    if (status !== LUA_OK && status !== LUA_YIELD) {  /* error? */\n        lua_pushboolean(L, 0);  /* first result (false) */\n        lua_pushvalue(L, -2);  /* error message */\n        return 2;  /* return false, msg */\n    } else\n        return lua_gettop(L) - extra;\n};\n\nconst luaB_pcall = function(L) {\n    luaL_checkany(L, 1);\n    lua_pushboolean(L, 1);  /* first result if no errors */\n    lua_insert(L, 1);  /* put it in place */\n    let status = lua_pcallk(L, lua_gettop(L) - 2, LUA_MULTRET, 0, 0, finishpcall);\n    return finishpcall(L, status, 0);\n};\n\n/*\n** Do a protected call with error handling. After 'lua_rotate', the\n** stack will have <f, err, true, f, [args...]>; so, the function passes\n** 2 to 'finishpcall' to skip the 2 first values when returning results.\n*/\nconst luaB_xpcall = function(L) {\n    let n = lua_gettop(L);\n    luaL_checktype(L, 2, LUA_TFUNCTION);  /* check error function */\n    lua_pushboolean(L, 1);  /* first result */\n    lua_pushvalue(L, 1);  /* function */\n    lua_rotate(L, 3, 2);  /* move them below function's arguments */\n    let status = lua_pcallk(L, n - 2, LUA_MULTRET, 2, 2, finishpcall);\n    return finishpcall(L, status, 2);\n};\n\nconst load_aux = function(L, status, envidx) {\n    if (status === LUA_OK) {\n        if (envidx !== 0) {  /* 'env' parameter? */\n            lua_pushvalue(L, envidx);  /* environment for loaded function */\n            if (!lua_setupvalue(L, -2, 1))  /* set it as 1st upvalue */\n                lua_pop(L, 1);  /* remove 'env' if not used by previous call */\n        }\n        return 1;\n    } else {  /* error (message is on top of the stack) */\n        lua_pushnil(L);\n        lua_insert(L, -2);  /* put before error message */\n        return 2;  /* return nil plus error message */\n    }\n};\n\n/*\n** reserved slot, above all arguments, to hold a copy of the returned\n** string to avoid it being collected while parsed. 'load' has four\n** optional arguments (chunk, source name, mode, and environment).\n*/\nconst RESERVEDSLOT = 5;\n\n/*\n** Reader for generic 'load' function: 'lua_load' uses the\n** stack for internal stuff, so the reader cannot change the\n** stack top. Instead, it keeps its resulting string in a\n** reserved slot inside the stack.\n*/\nconst generic_reader = function(L, ud) {\n    luaL_checkstack(L, 2, \"too many nested functions\");\n    lua_pushvalue(L, 1);  /* get function */\n    lua_call(L, 0, 1);  /* call it */\n    if (lua_isnil(L, -1)) {\n        lua_pop(L, 1);  /* pop result */\n        return null;\n    } else if (!lua_isstring(L, -1))\n        luaL_error(L, to_luastring(\"reader function must return a string\"));\n    lua_replace(L, RESERVEDSLOT);  /* save string in reserved slot */\n    return lua_tostring(L, RESERVEDSLOT);\n};\n\nconst luaB_load = function(L) {\n    let s = lua_tostring(L, 1);\n    let mode = luaL_optstring(L, 3, \"bt\");\n    let env = !lua_isnone(L, 4) ? 4 : 0;  /* 'env' index or 0 if no 'env' */\n    let status;\n    if (s !== null) {  /* loading a string? */\n        let chunkname = luaL_optstring(L, 2, s);\n        status = luaL_loadbufferx(L, s, s.length, chunkname, mode);\n    } else {  /* loading from a reader function */\n        let chunkname = luaL_optstring(L, 2, \"=(load)\");\n        luaL_checktype(L, 1, LUA_TFUNCTION);\n        lua_settop(L, RESERVEDSLOT);  /* create reserved slot */\n        status = lua_load(L, generic_reader, null, chunkname, mode);\n    }\n    return load_aux(L, status, env);\n};\n\nconst luaB_loadfile = function(L) {\n    let fname = luaL_optstring(L, 1, null);\n    let mode = luaL_optstring(L, 2, null);\n    let env = !lua_isnone(L, 3) ? 3 : 0;  /* 'env' index or 0 if no 'env' */\n    let status = luaL_loadfilex(L, fname, mode);\n    return load_aux(L, status, env);\n};\n\nconst dofilecont = function(L, d1, d2) {\n    return lua_gettop(L) - 1;\n};\n\nconst luaB_dofile = function(L) {\n    let fname = luaL_optstring(L, 1, null);\n    lua_settop(L, 1);\n    if (luaL_loadfile(L, fname) !== LUA_OK)\n        return lua_error(L);\n    lua_callk(L, 0, LUA_MULTRET, 0, dofilecont);\n    return dofilecont(L, 0, 0);\n};\n\nconst base_funcs = {\n    \"assert\":         luaB_assert,\n    \"collectgarbage\": luaB_collectgarbage,\n    \"dofile\":         luaB_dofile,\n    \"error\":          luaB_error,\n    \"getmetatable\":   luaB_getmetatable,\n    \"ipairs\":         luaB_ipairs,\n    \"load\":           luaB_load,\n    \"loadfile\":       luaB_loadfile,\n    \"next\":           luaB_next,\n    \"pairs\":          luaB_pairs,\n    \"pcall\":          luaB_pcall,\n    \"print\":          luaB_print,\n    \"rawequal\":       luaB_rawequal,\n    \"rawget\":         luaB_rawget,\n    \"rawlen\":         luaB_rawlen,\n    \"rawset\":         luaB_rawset,\n    \"select\":         luaB_select,\n    \"setmetatable\":   luaB_setmetatable,\n    \"tonumber\":       luaB_tonumber,\n    \"tostring\":       luaB_tostring,\n    \"type\":           luaB_type,\n    \"xpcall\":         luaB_xpcall\n};\n\nconst luaopen_base = function(L) {\n    /* open lib into global table */\n    lua_pushglobaltable(L);\n    luaL_setfuncs(L, base_funcs, 0);\n    /* set global _G */\n    lua_pushvalue(L, -1);\n    lua_setfield(L, -2, to_luastring(\"_G\"));\n    /* set global _VERSION */\n    lua_pushliteral(L, LUA_VERSION);\n    lua_setfield(L, -2, to_luastring(\"_VERSION\"));\n    return 1;\n};\n\nmodule.exports.luaopen_base = luaopen_base;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    LUA_OPADD,\n    LUA_OPBAND,\n    LUA_OPBNOT,\n    LUA_OPBOR,\n    LUA_OPBXOR,\n    LUA_OPDIV,\n    LUA_OPIDIV,\n    LUA_OPMOD,\n    LUA_OPSHL,\n    LUA_OPSHR,\n    LUA_OPUNM,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TTABLE\n    },\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require(\"./llimits.js\");\nconst llex     = require('./llex.js');\nconst lobject  = require('./lobject.js');\nconst lopcodes = require('./lopcodes.js');\nconst lparser  = require('./lparser.js');\nconst ltable   = require('./ltable.js');\nconst lvm      = require('./lvm.js');\n\nconst OpCodesI = lopcodes.OpCodesI;\nconst TValue   = lobject.TValue;\n\n/* Maximum number of registers in a Lua function (must fit in 8 bits) */\nconst MAXREGS = 255;\n\n/*\n** Marks the end of a patch list. It is an invalid value both as an absolute\n** address, and as a list link (would link an element to itself).\n*/\nconst NO_JUMP = -1;\n\nconst BinOpr = {\n    OPR_ADD:      0,\n    OPR_SUB:      1,\n    OPR_MUL:      2,\n    OPR_MOD:      3,\n    OPR_POW:      4,\n    OPR_DIV:      5,\n    OPR_IDIV:     6,\n    OPR_BAND:     7,\n    OPR_BOR:      8,\n    OPR_BXOR:     9,\n    OPR_SHL:      10,\n    OPR_SHR:      11,\n    OPR_CONCAT:   12,\n    OPR_EQ:       13,\n    OPR_LT:       14,\n    OPR_LE:       15,\n    OPR_NE:       16,\n    OPR_GT:       17,\n    OPR_GE:       18,\n    OPR_AND:      19,\n    OPR_OR:       20,\n    OPR_NOBINOPR: 21\n};\n\nconst UnOpr = {\n    OPR_MINUS:    0,\n    OPR_BNOT:     1,\n    OPR_NOT:      2,\n    OPR_LEN:      3,\n    OPR_NOUNOPR:  4\n};\n\nconst hasjumps = function(e) {\n    return e.t !== e.f;\n};\n\n/*\n** If expression is a numeric constant returns either true or a new TValue\n** (depending on 'make_tvalue'). Otherwise, returns false.\n*/\nconst tonumeral = function(e, make_tvalue) {\n    let ek = lparser.expkind;\n    if (hasjumps(e))\n        return false;  /* not a numeral */\n    switch (e.k) {\n        case ek.VKINT:\n            if (make_tvalue) {\n                return new TValue(LUA_TNUMINT, e.u.ival);\n            }\n            return true;\n        case ek.VKFLT:\n            if (make_tvalue) {\n                return new TValue(LUA_TNUMFLT, e.u.nval);\n            }\n            return true;\n        default: return false;\n    }\n};\n\n/*\n** Create a OP_LOADNIL instruction, but try to optimize: if the previous\n** instruction is also OP_LOADNIL and ranges are compatible, adjust\n** range of previous instruction instead of emitting a new one. (For\n** instance, 'local a; local b' will generate a single opcode.)\n*/\nconst luaK_nil = function(fs, from, n) {\n    let previous;\n    let l = from + n - 1;  /* last register to set nil */\n    if (fs.pc > fs.lasttarget) {  /* no jumps to current position? */\n        previous = fs.f.code[fs.pc-1];\n        if (previous.opcode === OpCodesI.OP_LOADNIL) {  /* previous is LOADNIL? */\n            let pfrom = previous.A;  /* get previous range */\n            let pl = pfrom + previous.B;\n            if ((pfrom <= from && from <= pl + 1) ||\n                    (from <= pfrom && pfrom <= l + 1)) {  /* can connect both? */\n                if (pfrom < from) from = pfrom;  /* from = min(from, pfrom) */\n                if (pl > l) l = pl;  /* l = max(l, pl) */\n                lopcodes.SETARG_A(previous, from);\n                lopcodes.SETARG_B(previous, l - from);\n                return;\n            }\n        }  /* else go through */\n    }\n    luaK_codeABC(fs, OpCodesI.OP_LOADNIL, from, n - 1, 0);  /* else no optimization */\n};\n\nconst getinstruction = function(fs, e) {\n    return fs.f.code[e.u.info];\n};\n\n/*\n** Gets the destination address of a jump instruction. Used to traverse\n** a list of jumps.\n*/\nconst getjump = function(fs, pc) {\n    let offset = fs.f.code[pc].sBx;\n    if (offset === NO_JUMP)  /* point to itself represents end of list */\n        return NO_JUMP;  /* end of list */\n    else\n        return pc + 1 + offset;  /* turn offset into absolute position */\n};\n\n/*\n** Fix jump instruction at position 'pc' to jump to 'dest'.\n** (Jump addresses are relative in Lua)\n*/\nconst fixjump = function(fs, pc, dest) {\n    let jmp = fs.f.code[pc];\n    let offset = dest - (pc + 1);\n    lua_assert(dest !== NO_JUMP);\n    if (Math.abs(offset) > lopcodes.MAXARG_sBx)\n        llex.luaX_syntaxerror(fs.ls, to_luastring(\"control structure too long\", true));\n    lopcodes.SETARG_sBx(jmp, offset);\n};\n\n/*\n** Concatenate jump-list 'l2' into jump-list 'l1'\n*/\nconst luaK_concat = function(fs, l1, l2) {\n    if (l2 === NO_JUMP) return l1;  /* nothing to concatenate? */\n    else if (l1 === NO_JUMP)  /* no original list? */\n        l1 = l2;\n    else {\n        let list = l1;\n        let next = getjump(fs, list);\n        while (next !== NO_JUMP) {  /* find last element */\n            list = next;\n            next = getjump(fs, list);\n        }\n        fixjump(fs, list, l2);\n    }\n\n    return l1;\n};\n\n/*\n** Create a jump instruction and return its position, so its destination\n** can be fixed later (with 'fixjump'). If there are jumps to\n** this position (kept in 'jpc'), link them all together so that\n** 'patchlistaux' will fix all them directly to the final destination.\n*/\nconst luaK_jump = function (fs) {\n    let jpc = fs.jpc;  /* save list of jumps to here */\n    fs.jpc = NO_JUMP;  /* no more jumps to here */\n    let j = luaK_codeAsBx(fs, OpCodesI.OP_JMP, 0, NO_JUMP);\n    j = luaK_concat(fs, j, jpc);  /* keep them on hold */\n    return j;\n};\n\nconst luaK_jumpto = function(fs, t) {\n    return luaK_patchlist(fs, luaK_jump(fs), t);\n};\n\n/*\n** Code a 'return' instruction\n*/\nconst luaK_ret = function(fs, first, nret) {\n    luaK_codeABC(fs, OpCodesI.OP_RETURN, first, nret + 1, 0);\n};\n\n/*\n** Code a \"conditional jump\", that is, a test or comparison opcode\n** followed by a jump. Return jump position.\n*/\nconst condjump = function(fs, op, A, B, C) {\n    luaK_codeABC(fs, op, A, B, C);\n    return luaK_jump(fs);\n};\n\n/*\n** returns current 'pc' and marks it as a jump target (to avoid wrong\n** optimizations with consecutive instructions not in the same basic block).\n*/\nconst luaK_getlabel = function(fs) {\n    fs.lasttarget = fs.pc;\n    return fs.pc;\n};\n\n/*\n** Returns the position of the instruction \"controlling\" a given\n** jump (that is, its condition), or the jump itself if it is\n** unconditional.\n*/\nconst getjumpcontroloffset = function(fs, pc) {\n    if (pc >= 1 && lopcodes.testTMode(fs.f.code[pc - 1].opcode))\n        return pc - 1;\n    else\n        return pc;\n};\nconst getjumpcontrol = function(fs, pc) {\n    return fs.f.code[getjumpcontroloffset(fs, pc)];\n};\n\n/*\n** Patch destination register for a TESTSET instruction.\n** If instruction in position 'node' is not a TESTSET, return 0 (\"fails\").\n** Otherwise, if 'reg' is not 'NO_REG', set it as the destination\n** register. Otherwise, change instruction to a simple 'TEST' (produces\n** no register value)\n*/\nconst patchtestreg = function(fs, node, reg) {\n    let pc = getjumpcontroloffset(fs, node);\n    let i = fs.f.code[pc];\n    if (i.opcode !== OpCodesI.OP_TESTSET)\n        return false;  /* cannot patch other instructions */\n    if (reg !== lopcodes.NO_REG && reg !== i.B)\n        lopcodes.SETARG_A(i, reg);\n    else {\n        /* no register to put value or register already has the value;\n           change instruction to simple test */\n        fs.f.code[pc] = lopcodes.CREATE_ABC(OpCodesI.OP_TEST, i.B, 0, i.C);\n    }\n    return true;\n};\n\n/*\n** Traverse a list of tests ensuring no one produces a value\n*/\nconst removevalues = function(fs, list) {\n    for (; list !== NO_JUMP; list = getjump(fs, list))\n        patchtestreg(fs, list, lopcodes.NO_REG);\n};\n\n/*\n** Traverse a list of tests, patching their destination address and\n** registers: tests producing values jump to 'vtarget' (and put their\n** values in 'reg'), other tests jump to 'dtarget'.\n*/\nconst patchlistaux = function(fs, list, vtarget, reg, dtarget) {\n    while (list !== NO_JUMP) {\n        let next = getjump(fs, list);\n        if (patchtestreg(fs, list, reg))\n            fixjump(fs, list, vtarget);\n        else\n            fixjump(fs, list, dtarget);  /* jump to default target */\n        list = next;\n    }\n};\n\n/*\n** Ensure all pending jumps to current position are fixed (jumping\n** to current position with no values) and reset list of pending\n** jumps\n*/\nconst dischargejpc = function(fs) {\n    patchlistaux(fs, fs.jpc, fs.pc, lopcodes.NO_REG, fs.pc);\n    fs.jpc = NO_JUMP;\n};\n\n/*\n** Add elements in 'list' to list of pending jumps to \"here\"\n** (current position)\n*/\nconst luaK_patchtohere = function(fs, list) {\n    luaK_getlabel(fs);  /* mark \"here\" as a jump target */\n    fs.jpc = luaK_concat(fs, fs.jpc, list);\n};\n\n/*\n** Path all jumps in 'list' to jump to 'target'.\n** (The assert means that we cannot fix a jump to a forward address\n** because we only know addresses once code is generated.)\n*/\nconst luaK_patchlist = function(fs, list, target) {\n    if (target === fs.pc)  /* 'target' is current position? */\n        luaK_patchtohere(fs, list);  /* add list to pending jumps */\n    else {\n        lua_assert(target < fs.pc);\n        patchlistaux(fs, list, target, lopcodes.NO_REG, target);\n    }\n};\n\n/*\n** Path all jumps in 'list' to close upvalues up to given 'level'\n** (The assertion checks that jumps either were closing nothing\n** or were closing higher levels, from inner blocks.)\n*/\nconst luaK_patchclose = function(fs, list, level) {\n    level++;  /* argument is +1 to reserve 0 as non-op */\n    for (; list !== NO_JUMP; list = getjump(fs, list)) {\n        let ins = fs.f.code[list];\n        lua_assert(ins.opcode === OpCodesI.OP_JMP && (ins.A === 0 || ins.A >= level));\n        lopcodes.SETARG_A(ins, level);\n    }\n};\n\n/*\n** Emit instruction 'i', checking for array sizes and saving also its\n** line information. Return 'i' position.\n*/\nconst luaK_code = function(fs, i) {\n    let f = fs.f;\n    dischargejpc(fs);  /* 'pc' will change */\n    /* put new instruction in code array */\n    f.code[fs.pc] = i;\n    f.lineinfo[fs.pc] = fs.ls.lastline;\n    return fs.pc++;\n};\n\n/*\n** Format and emit an 'iABC' instruction. (Assertions check consistency\n** of parameters versus opcode.)\n*/\nconst luaK_codeABC = function(fs, o, a, b, c) {\n    lua_assert(lopcodes.getOpMode(o) === lopcodes.iABC);\n    lua_assert(lopcodes.getBMode(o) !== lopcodes.OpArgN || b === 0);\n    lua_assert(lopcodes.getCMode(o) !== lopcodes.OpArgN || c === 0);\n    lua_assert(a <= lopcodes.MAXARG_A && b <= lopcodes.MAXARG_B && c <= lopcodes.MAXARG_C);\n    return luaK_code(fs, lopcodes.CREATE_ABC(o, a, b, c));\n};\n\n/*\n** Format and emit an 'iABx' instruction.\n*/\nconst luaK_codeABx = function(fs, o, a, bc) {\n    lua_assert(lopcodes.getOpMode(o) === lopcodes.iABx || lopcodes.getOpMode(o) === lopcodes.iAsBx);\n    lua_assert(lopcodes.getCMode(o) === lopcodes.OpArgN);\n    lua_assert(a <= lopcodes.MAXARG_A && bc <= lopcodes.MAXARG_Bx);\n    return luaK_code(fs, lopcodes.CREATE_ABx(o, a, bc));\n};\n\nconst luaK_codeAsBx = function(fs,o,A,sBx) {\n    return luaK_codeABx(fs, o, A, (sBx) + lopcodes.MAXARG_sBx);\n};\n\n/*\n** Emit an \"extra argument\" instruction (format 'iAx')\n*/\nconst codeextraarg = function(fs, a) {\n    lua_assert(a <= lopcodes.MAXARG_Ax);\n    return luaK_code(fs, lopcodes.CREATE_Ax(OpCodesI.OP_EXTRAARG, a));\n};\n\n/*\n** Emit a \"load constant\" instruction, using either 'OP_LOADK'\n** (if constant index 'k' fits in 18 bits) or an 'OP_LOADKX'\n** instruction with \"extra argument\".\n*/\nconst luaK_codek = function(fs, reg, k) {\n    if (k <= lopcodes.MAXARG_Bx)\n        return luaK_codeABx(fs, OpCodesI.OP_LOADK, reg, k);\n    else {\n        let p = luaK_codeABx(fs, OpCodesI.OP_LOADKX, reg, 0);\n        codeextraarg(fs, k);\n        return p;\n    }\n};\n\n/*\n** Check register-stack level, keeping track of its maximum size\n** in field 'maxstacksize'\n*/\nconst luaK_checkstack = function(fs, n) {\n    let newstack = fs.freereg + n;\n    if (newstack > fs.f.maxstacksize) {\n        if (newstack >= MAXREGS)\n            llex.luaX_syntaxerror(fs.ls, to_luastring(\"function or expression needs too many registers\", true));\n        fs.f.maxstacksize = newstack;\n    }\n};\n\n/*\n** Reserve 'n' registers in register stack\n*/\nconst luaK_reserveregs = function(fs, n) {\n    luaK_checkstack(fs, n);\n    fs.freereg += n;\n};\n\n/*\n** Free register 'reg', if it is neither a constant index nor\n** a local variable.\n*/\nconst freereg = function(fs, reg) {\n    if (!lopcodes.ISK(reg) && reg >= fs.nactvar) {\n        fs.freereg--;\n        lua_assert(reg === fs.freereg);\n    }\n};\n\n/*\n** Free register used by expression 'e' (if any)\n*/\nconst freeexp = function(fs, e) {\n    if (e.k === lparser.expkind.VNONRELOC)\n        freereg(fs, e.u.info);\n};\n\n/*\n** Free registers used by expressions 'e1' and 'e2' (if any) in proper\n** order.\n*/\nconst freeexps = function(fs, e1, e2) {\n    let r1 = (e1.k === lparser.expkind.VNONRELOC) ? e1.u.info : -1;\n    let r2 = (e2.k === lparser.expkind.VNONRELOC) ? e2.u.info : -1;\n    if (r1 > r2) {\n        freereg(fs, r1);\n        freereg(fs, r2);\n    }\n    else {\n        freereg(fs, r2);\n        freereg(fs, r1);\n    }\n};\n\n\n/*\n** Add constant 'v' to prototype's list of constants (field 'k').\n** Use scanner's table to cache position of constants in constant list\n** and try to reuse constants. Because some values should not be used\n** as keys (nil cannot be a key, integer keys can collapse with float\n** keys), the caller must provide a useful 'key' for indexing the cache.\n*/\nconst addk = function(fs, key, v) {\n    let f = fs.f;\n    let idx = ltable.luaH_get(fs.L, fs.ls.h, key);  /* index scanner table */\n    if (idx.ttisinteger()) {  /* is there an index there? */\n        let k = idx.value;\n        /* correct value? (warning: must distinguish floats from integers!) */\n        if (k < fs.nk && f.k[k].ttype() === v.ttype() && f.k[k].value === v.value)\n            return k;  /* reuse index */\n    }\n    /* constant not found; create a new entry */\n    let k = fs.nk;\n    ltable.luaH_setfrom(fs.L, fs.ls.h, key, new lobject.TValue(LUA_TNUMINT, k));\n    f.k[k] = v;\n    fs.nk++;\n    return k;\n};\n\n/*\n** Add a string to list of constants and return its index.\n*/\nconst luaK_stringK = function(fs, s) {\n    let o = new TValue(LUA_TLNGSTR, s);\n    return addk(fs, o, o);  /* use string itself as key */\n};\n\n\n/*\n** Add an integer to list of constants and return its index.\n** Integers use userdata as keys to avoid collision with floats with\n** same value.\n*/\nconst luaK_intK = function(fs, n) {\n    let k = new TValue(LUA_TLIGHTUSERDATA, n);\n    let o = new TValue(LUA_TNUMINT, n);\n    return addk(fs, k, o);\n};\n\n/*\n** Add a float to list of constants and return its index.\n*/\nconst luaK_numberK = function(fs, r) {\n    let o = new TValue(LUA_TNUMFLT, r);\n    return addk(fs, o, o);  /* use number itself as key */\n};\n\n\n/*\n** Add a boolean to list of constants and return its index.\n*/\nconst boolK = function(fs, b) {\n    let o = new TValue(LUA_TBOOLEAN, b);\n    return addk(fs, o, o);  /* use boolean itself as key */\n};\n\n\n/*\n** Add nil to list of constants and return its index.\n*/\nconst nilK = function(fs) {\n    let v = new TValue(LUA_TNIL, null);\n    let k = new TValue(LUA_TTABLE, fs.ls.h);\n    /* cannot use nil as key; instead use table itself to represent nil */\n    return addk(fs, k, v);\n};\n\n/*\n** Fix an expression to return the number of results 'nresults'.\n** Either 'e' is a multi-ret expression (function call or vararg)\n** or 'nresults' is LUA_MULTRET (as any expression can satisfy that).\n*/\nconst luaK_setreturns = function(fs, e, nresults) {\n    let ek = lparser.expkind;\n    if (e.k === ek.VCALL) {  /* expression is an open function call? */\n        lopcodes.SETARG_C(getinstruction(fs, e), nresults + 1);\n    }\n    else if (e.k === ek.VVARARG) {\n        let pc = getinstruction(fs, e);\n        lopcodes.SETARG_B(pc, nresults + 1);\n        lopcodes.SETARG_A(pc, fs.freereg);\n        luaK_reserveregs(fs, 1);\n    }\n    else lua_assert(nresults === LUA_MULTRET);\n};\n\nconst luaK_setmultret = function(fs, e) {\n    luaK_setreturns(fs, e, LUA_MULTRET);\n};\n\n/*\n** Fix an expression to return one result.\n** If expression is not a multi-ret expression (function call or\n** vararg), it already returns one result, so nothing needs to be done.\n** Function calls become VNONRELOC expressions (as its result comes\n** fixed in the base register of the call), while vararg expressions\n** become VRELOCABLE (as OP_VARARG puts its results where it wants).\n** (Calls are created returning one result, so that does not need\n** to be fixed.)\n*/\nconst luaK_setoneret = function(fs, e) {\n    let ek = lparser.expkind;\n    if (e.k === ek.VCALL) {  /* expression is an open function call? */\n        /* already returns 1 value */\n        lua_assert(getinstruction(fs, e).C === 2);\n        e.k = ek.VNONRELOC;  /* result has fixed position */\n        e.u.info = getinstruction(fs, e).A;\n    } else if (e.k === ek.VVARARG) {\n        lopcodes.SETARG_B(getinstruction(fs, e), 2);\n        e.k = ek.VRELOCABLE;  /* can relocate its simple result */\n    }\n};\n\n/*\n** Ensure that expression 'e' is not a variable.\n*/\nconst luaK_dischargevars = function(fs, e) {\n    let ek = lparser.expkind;\n\n    switch (e.k) {\n        case ek.VLOCAL: {  /* already in a register */\n            e.k =  ek.VNONRELOC;  /* becomes a non-relocatable value */\n            break;\n        }\n        case ek.VUPVAL: {  /* move value to some (pending) register */\n            e.u.info = luaK_codeABC(fs, OpCodesI.OP_GETUPVAL, 0, e.u.info, 0);\n            e.k = ek.VRELOCABLE;\n            break;\n        }\n        case ek.VINDEXED: {\n            let op;\n            freereg(fs, e.u.ind.idx);\n            if (e.u.ind.vt === ek.VLOCAL) {  /* is 't' in a register? */\n                freereg(fs, e.u.ind.t);\n                op = OpCodesI.OP_GETTABLE;\n            } else {\n                lua_assert(e.u.ind.vt === ek.VUPVAL);\n                op = OpCodesI.OP_GETTABUP;  /* 't' is in an upvalue */\n            }\n            e.u.info = luaK_codeABC(fs, op, 0, e.u.ind.t, e.u.ind.idx);\n            e.k = ek.VRELOCABLE;\n            break;\n        }\n        case ek.VVARARG: case ek.VCALL: {\n            luaK_setoneret(fs, e);\n            break;\n        }\n        default: break;  /* there is one value available (somewhere) */\n    }\n};\n\nconst code_loadbool = function(fs, A, b, jump) {\n    luaK_getlabel(fs);  /* those instructions may be jump targets */\n    return luaK_codeABC(fs, OpCodesI.OP_LOADBOOL, A, b, jump);\n};\n\n/*\n** Ensures expression value is in register 'reg' (and therefore\n** 'e' will become a non-relocatable expression).\n*/\nconst discharge2reg = function(fs, e, reg) {\n    let ek = lparser.expkind;\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VNIL: {\n            luaK_nil(fs, reg, 1);\n            break;\n        }\n        case ek.VFALSE: case ek.VTRUE: {\n            luaK_codeABC(fs, OpCodesI.OP_LOADBOOL, reg, e.k === ek.VTRUE, 0);\n            break;\n        }\n        case ek.VK: {\n            luaK_codek(fs, reg, e.u.info);\n            break;\n        }\n        case ek.VKFLT: {\n            luaK_codek(fs, reg, luaK_numberK(fs, e.u.nval));\n            break;\n        }\n        case ek.VKINT: {\n            luaK_codek(fs, reg, luaK_intK(fs, e.u.ival));\n            break;\n        }\n        case ek.VRELOCABLE: {\n            let pc = getinstruction(fs, e);\n            lopcodes.SETARG_A(pc, reg);  /* instruction will put result in 'reg' */\n            break;\n        }\n        case ek.VNONRELOC: {\n            if (reg !== e.u.info)\n                luaK_codeABC(fs, OpCodesI.OP_MOVE, reg, e.u.info, 0);\n            break;\n        }\n        default: {\n            lua_assert(e.k === ek.VJMP);\n            return;  /* nothing to do... */\n        }\n    }\n    e.u.info = reg;\n    e.k = ek.VNONRELOC;\n};\n\n/*\n** Ensures expression value is in any register.\n*/\nconst discharge2anyreg = function(fs, e) {\n    if (e.k !== lparser.expkind.VNONRELOC) {  /* no fixed register yet? */\n        luaK_reserveregs(fs, 1);  /* get a register */\n        discharge2reg(fs, e, fs.freereg-1);  /* put value there */\n    }\n};\n\n/*\n** check whether list has any jump that do not produce a value\n** or produce an inverted value\n*/\nconst need_value = function(fs, list) {\n    for (; list !== NO_JUMP; list = getjump(fs, list)) {\n        let i = getjumpcontrol(fs, list);\n        if (i.opcode !== OpCodesI.OP_TESTSET) return true;\n    }\n    return false;  /* not found */\n};\n\n/*\n** Ensures final expression result (including results from its jump\n** lists) is in register 'reg'.\n** If expression has jumps, need to patch these jumps either to\n** its final position or to \"load\" instructions (for those tests\n** that do not produce values).\n*/\nconst exp2reg = function(fs, e, reg) {\n    let ek = lparser.expkind;\n    discharge2reg(fs, e, reg);\n    if (e.k === ek.VJMP)  /* expression itself is a test? */\n        e.t = luaK_concat(fs, e.t, e.u.info);  /* put this jump in 't' list */\n    if (hasjumps(e)) {\n        let final;  /* position after whole expression */\n        let p_f = NO_JUMP;  /* position of an eventual LOAD false */\n        let p_t = NO_JUMP;  /* position of an eventual LOAD true */\n        if (need_value(fs, e.t) || need_value(fs, e.f)) {\n            let fj = (e.k === ek.VJMP) ? NO_JUMP : luaK_jump(fs);\n            p_f = code_loadbool(fs, reg, 0, 1);\n            p_t = code_loadbool(fs, reg, 1, 0);\n            luaK_patchtohere(fs, fj);\n        }\n        final = luaK_getlabel(fs);\n        patchlistaux(fs, e.f, final, reg, p_f);\n        patchlistaux(fs, e.t, final, reg, p_t);\n    }\n    e.f = e.t = NO_JUMP;\n    e.u.info = reg;\n    e.k = ek.VNONRELOC;\n};\n\n/*\n** Ensures final expression result (including results from its jump\n** lists) is in next available register.\n*/\nconst luaK_exp2nextreg = function(fs, e) {\n    luaK_dischargevars(fs, e);\n    freeexp(fs, e);\n    luaK_reserveregs(fs, 1);\n    exp2reg(fs, e, fs.freereg - 1);\n};\n\n\n/*\n** Ensures final expression result (including results from its jump\n** lists) is in some (any) register and return that register.\n*/\nconst luaK_exp2anyreg = function(fs, e) {\n    luaK_dischargevars(fs, e);\n    if (e.k === lparser.expkind.VNONRELOC) {  /* expression already has a register? */\n        if (!hasjumps(e))  /* no jumps? */\n            return e.u.info;  /* result is already in a register */\n        if (e.u.info >= fs.nactvar) {  /* reg. is not a local? */\n            exp2reg(fs, e, e.u.info);  /* put final result in it */\n            return e.u.info;\n        }\n    }\n    luaK_exp2nextreg(fs, e);  /* otherwise, use next available register */\n    return e.u.info;\n};\n\n/*\n** Ensures final expression result is either in a register or in an\n** upvalue.\n*/\nconst luaK_exp2anyregup = function(fs, e) {\n    if (e.k !== lparser.expkind.VUPVAL || hasjumps(e))\n        luaK_exp2anyreg(fs, e);\n};\n\n/*\n** Ensures final expression result is either in a register or it is\n** a constant.\n*/\nconst luaK_exp2val = function(fs, e) {\n    if (hasjumps(e))\n        luaK_exp2anyreg(fs, e);\n    else\n        luaK_dischargevars(fs, e);\n};\n\n/*\n** Ensures final expression result is in a valid R/K index\n** (that is, it is either in a register or in 'k' with an index\n** in the range of R/K indices).\n** Returns R/K index.\n*/\nconst luaK_exp2RK = function(fs, e) {\n    let ek = lparser.expkind;\n    let vk = false;\n    luaK_exp2val(fs, e);\n    switch (e.k) {  /* move constants to 'k' */\n        case ek.VTRUE: e.u.info = boolK(fs, true); vk = true; break;\n        case ek.VFALSE: e.u.info = boolK(fs, false); vk = true; break;\n        case ek.VNIL: e.u.info = nilK(fs); vk = true; break;\n        case ek.VKINT: e.u.info = luaK_intK(fs, e.u.ival); vk = true; break;\n        case ek.VKFLT: e.u.info = luaK_numberK(fs, e.u.nval); vk = true; break;\n        case ek.VK: vk = true; break;\n        default: break;\n    }\n\n    if (vk) {\n        e.k = ek.VK;\n        if (e.u.info <= lopcodes.MAXINDEXRK)  /* constant fits in 'argC'? */\n            return lopcodes.RKASK(e.u.info);\n    }\n\n    /* not a constant in the right range: put it in a register */\n    return luaK_exp2anyreg(fs, e);\n};\n\n/*\n** Generate code to store result of expression 'ex' into variable 'var'.\n*/\nconst luaK_storevar = function(fs, vr, ex) {\n    let ek = lparser.expkind;\n    switch (vr.k) {\n        case ek.VLOCAL: {\n            freeexp(fs, ex);\n            exp2reg(fs, ex, vr.u.info);  /* compute 'ex' into proper place */\n            return;\n        }\n        case ek.VUPVAL: {\n            let e = luaK_exp2anyreg(fs, ex);\n            luaK_codeABC(fs, OpCodesI.OP_SETUPVAL, e, vr.u.info, 0);\n            break;\n        }\n        case ek.VINDEXED: {\n            let op = (vr.u.ind.vt === ek.VLOCAL) ? OpCodesI.OP_SETTABLE : OpCodesI.OP_SETTABUP;\n            let e = luaK_exp2RK(fs, ex);\n            luaK_codeABC(fs, op, vr.u.ind.t, vr.u.ind.idx, e);\n            break;\n        }\n    }\n    freeexp(fs, ex);\n};\n\n\n/*\n** Emit SELF instruction (convert expression 'e' into 'e:key(e,').\n*/\nconst luaK_self = function(fs, e, key) {\n    luaK_exp2anyreg(fs, e);\n    let ereg = e.u.info;  /* register where 'e' was placed */\n    freeexp(fs, e);\n    e.u.info = fs.freereg;  /* base register for op_self */\n    e.k = lparser.expkind.VNONRELOC;  /* self expression has a fixed register */\n    luaK_reserveregs(fs, 2);  /* function and 'self' produced by op_self */\n    luaK_codeABC(fs, OpCodesI.OP_SELF, e.u.info, ereg, luaK_exp2RK(fs, key));\n    freeexp(fs, key);\n};\n\n/*\n** Negate condition 'e' (where 'e' is a comparison).\n*/\nconst negatecondition = function(fs, e) {\n    let pc = getjumpcontrol(fs, e.u.info);\n    lua_assert(lopcodes.testTMode(pc.opcode) && pc.opcode !== OpCodesI.OP_TESTSET && pc.opcode !== OpCodesI.OP_TEST);\n    lopcodes.SETARG_A(pc, !(pc.A));\n};\n\n/*\n** Emit instruction to jump if 'e' is 'cond' (that is, if 'cond'\n** is true, code will jump if 'e' is true.) Return jump position.\n** Optimize when 'e' is 'not' something, inverting the condition\n** and removing the 'not'.\n*/\nconst jumponcond = function(fs, e, cond) {\n    if (e.k === lparser.expkind.VRELOCABLE) {\n        let ie = getinstruction(fs, e);\n        if (ie.opcode === OpCodesI.OP_NOT) {\n            fs.pc--;  /* remove previous OP_NOT */\n            return condjump(fs, OpCodesI.OP_TEST, ie.B, 0, !cond);\n        }\n        /* else go through */\n    }\n    discharge2anyreg(fs, e);\n    freeexp(fs, e);\n    return condjump(fs, OpCodesI.OP_TESTSET, lopcodes.NO_REG, e.u.info, cond);\n};\n\n/*\n** Emit code to go through if 'e' is true, jump otherwise.\n*/\nconst luaK_goiftrue = function(fs, e) {\n    let ek = lparser.expkind;\n    let pc;  /* pc of new jump */\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VJMP: {  /* condition? */\n            negatecondition(fs, e);  /* jump when it is false */\n            pc = e.u.info;  /* save jump position */\n            break;\n        }\n        case ek.VK: case ek.VKFLT: case ek.VKINT: case ek.VTRUE: {\n            pc = NO_JUMP;  /* always true; do nothing */\n            break;\n        }\n        default: {\n            pc = jumponcond(fs, e, 0);  /* jump when false */\n            break;\n        }\n    }\n    e.f = luaK_concat(fs, e.f, pc);  /* insert new jump in false list */\n    luaK_patchtohere(fs, e.t);  /* true list jumps to here (to go through) */\n    e.t = NO_JUMP;\n};\n\n/*\n** Emit code to go through if 'e' is false, jump otherwise.\n*/\nconst luaK_goiffalse = function(fs, e) {\n    let ek = lparser.expkind;\n    let pc;  /* pc of new jump */\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VJMP: {\n            pc = e.u.info;  /* already jump if true */\n            break;\n        }\n        case ek.VNIL: case ek.VFALSE: {\n            pc = NO_JUMP;  /* always false; do nothing */\n            break;\n        }\n        default: {\n            pc = jumponcond(fs, e, 1);  /* jump if true */\n            break;\n        }\n    }\n    e.t = luaK_concat(fs, e.t, pc);  /* insert new jump in 't' list */\n    luaK_patchtohere(fs, e.f);  /* false list jumps to here (to go through) */\n    e.f = NO_JUMP;\n};\n\n/*\n** Code 'not e', doing constant folding.\n*/\nconst codenot = function(fs, e) {\n    let ek = lparser.expkind;\n    luaK_dischargevars(fs, e);\n    switch (e.k) {\n        case ek.VNIL: case ek.VFALSE: {\n            e.k = ek.VTRUE;  /* true === not nil === not false */\n            break;\n        }\n        case ek.VK: case ek.VKFLT: case ek.VKINT: case ek.VTRUE: {\n            e.k = ek.VFALSE;  /* false === not \"x\" === not 0.5 === not 1 === not true */\n            break;\n        }\n        case ek.VJMP: {\n            negatecondition(fs, e);\n            break;\n        }\n        case ek.VRELOCABLE:\n        case ek.VNONRELOC: {\n            discharge2anyreg(fs, e);\n            freeexp(fs, e);\n            e.u.info = luaK_codeABC(fs, OpCodesI.OP_NOT, 0, e.u.info, 0);\n            e.k = ek.VRELOCABLE;\n            break;\n        }\n    }\n    /* interchange true and false lists */\n    { let temp = e.f; e.f = e.t; e.t = temp; }\n    removevalues(fs, e.f);  /* values are useless when negated */\n    removevalues(fs, e.t);\n};\n\n/*\n** Create expression 't[k]'. 't' must have its final result already in a\n** register or upvalue.\n*/\nconst luaK_indexed = function(fs, t, k) {\n    let ek = lparser.expkind;\n    lua_assert(!hasjumps(t) && (lparser.vkisinreg(t.k) || t.k === ek.VUPVAL));\n    t.u.ind.t = t.u.info;  /* register or upvalue index */\n    t.u.ind.idx = luaK_exp2RK(fs, k);  /* R/K index for key */\n    t.u.ind.vt = (t.k === ek.VUPVAL) ? ek.VUPVAL : ek.VLOCAL;\n    t.k = ek.VINDEXED;\n};\n\n/*\n** Return false if folding can raise an error.\n** Bitwise operations need operands convertible to integers; division\n** operations cannot have 0 as divisor.\n*/\nconst validop = function(op, v1, v2) {\n    switch (op) {\n        case LUA_OPBAND: case LUA_OPBOR: case LUA_OPBXOR:\n        case LUA_OPSHL: case LUA_OPSHR: case LUA_OPBNOT: {  /* conversion errors */\n            return (lvm.tointeger(v1) !== false && lvm.tointeger(v2) !== false);\n        }\n        case LUA_OPDIV: case LUA_OPIDIV: case LUA_OPMOD:  /* division by 0 */\n            return (v2.value !== 0);\n        default: return 1;  /* everything else is valid */\n    }\n};\n\n/*\n** Try to \"constant-fold\" an operation; return 1 iff successful.\n** (In this case, 'e1' has the final result.)\n*/\nconst constfolding = function(op, e1, e2) {\n    let ek = lparser.expkind;\n    let v1, v2;\n    if (!(v1 = tonumeral(e1, true)) || !(v2 = tonumeral(e2, true)) || !validop(op, v1, v2))\n        return 0;  /* non-numeric operands or not safe to fold */\n    let res = new TValue(); /* FIXME */\n    lobject.luaO_arith(null, op, v1, v2, res);  /* does operation */\n    if (res.ttisinteger()) {\n        e1.k = ek.VKINT;\n        e1.u.ival = res.value;\n    }\n    else {  /* folds neither NaN nor 0.0 (to avoid problems with -0.0) */\n        let n = res.value;\n        if (isNaN(n) || n === 0)\n            return false;\n        e1.k = ek.VKFLT;\n        e1.u.nval = n;\n    }\n    return true;\n};\n\n/*\n** Emit code for unary expressions that \"produce values\"\n** (everything but 'not').\n** Expression to produce final result will be encoded in 'e'.\n*/\nconst codeunexpval = function(fs, op, e, line) {\n    let r = luaK_exp2anyreg(fs, e);  /* opcodes operate only on registers */\n    freeexp(fs, e);\n    e.u.info = luaK_codeABC(fs, op, 0, r, 0);  /* generate opcode */\n    e.k = lparser.expkind.VRELOCABLE;  /* all those operations are relocatable */\n    luaK_fixline(fs, line);\n};\n\n/*\n** Emit code for binary expressions that \"produce values\"\n** (everything but logical operators 'and'/'or' and comparison\n** operators).\n** Expression to produce final result will be encoded in 'e1'.\n** Because 'luaK_exp2RK' can free registers, its calls must be\n** in \"stack order\" (that is, first on 'e2', which may have more\n** recent registers to be released).\n*/\nconst codebinexpval = function(fs, op, e1, e2, line) {\n    let rk2 = luaK_exp2RK(fs, e2);  /* both operands are \"RK\" */\n    let rk1 = luaK_exp2RK(fs, e1);\n    freeexps(fs, e1, e2);\n    e1.u.info = luaK_codeABC(fs, op, 0, rk1, rk2);  /* generate opcode */\n    e1.k = lparser.expkind.VRELOCABLE;  /* all those operations are relocatable */\n    luaK_fixline(fs, line);\n};\n\n\n/*\n** Emit code for comparisons.\n** 'e1' was already put in R/K form by 'luaK_infix'.\n*/\nconst codecomp = function(fs, opr, e1, e2) {\n    let ek = lparser.expkind;\n\n    let rk1;\n    if (e1.k === ek.VK)\n        rk1 = lopcodes.RKASK(e1.u.info);\n    else {\n        lua_assert(e1.k === ek.VNONRELOC);\n        rk1 = e1.u.info;\n    }\n\n    let rk2 = luaK_exp2RK(fs, e2);\n    freeexps(fs, e1, e2);\n    switch (opr) {\n        case BinOpr.OPR_NE: {  /* '(a ~= b)' ==> 'not (a === b)' */\n            e1.u.info = condjump(fs, OpCodesI.OP_EQ, 0, rk1, rk2);\n            break;\n        }\n        case BinOpr.OPR_GT: case BinOpr.OPR_GE: {\n            /* '(a > b)' ==> '(b < a)';  '(a >= b)' ==> '(b <= a)' */\n            let op = (opr - BinOpr.OPR_NE) + OpCodesI.OP_EQ;\n            e1.u.info = condjump(fs, op, 1, rk2, rk1);  /* invert operands */\n            break;\n        }\n        default: {  /* '==', '<', '<=' use their own opcodes */\n            let op = (opr - BinOpr.OPR_EQ) + OpCodesI.OP_EQ;\n            e1.u.info = condjump(fs, op, 1, rk1, rk2);\n            break;\n        }\n    }\n    e1.k = ek.VJMP;\n};\n\n/*\n** Apply prefix operation 'op' to expression 'e'.\n*/\nconst luaK_prefix = function(fs, op, e, line) {\n    let ef = new lparser.expdesc();\n    ef.k = lparser.expkind.VKINT;\n    ef.u.ival = ef.u.nval = ef.u.info = 0;\n    ef.t = NO_JUMP;\n    ef.f = NO_JUMP;\n    switch (op) {\n        case UnOpr.OPR_MINUS: case UnOpr.OPR_BNOT:  /* use 'ef' as fake 2nd operand */\n            if (constfolding(op + LUA_OPUNM, e, ef))\n                break;\n            /* FALLTHROUGH */\n        case UnOpr.OPR_LEN:\n            codeunexpval(fs, op + OpCodesI.OP_UNM, e, line);\n            break;\n        case UnOpr.OPR_NOT: codenot(fs, e); break;\n    }\n};\n\n/*\n** Process 1st operand 'v' of binary operation 'op' before reading\n** 2nd operand.\n*/\nconst luaK_infix = function(fs, op, v) {\n    switch (op) {\n        case BinOpr.OPR_AND: {\n            luaK_goiftrue(fs, v);  /* go ahead only if 'v' is true */\n            break;\n        }\n        case BinOpr.OPR_OR: {\n            luaK_goiffalse(fs, v);  /* go ahead only if 'v' is false */\n            break;\n        }\n        case BinOpr.OPR_CONCAT: {\n            luaK_exp2nextreg(fs, v);  /* operand must be on the 'stack' */\n            break;\n        }\n        case BinOpr.OPR_ADD: case BinOpr.OPR_SUB:\n        case BinOpr.OPR_MUL: case BinOpr.OPR_DIV: case BinOpr.OPR_IDIV:\n        case BinOpr.OPR_MOD: case BinOpr.OPR_POW:\n        case BinOpr.OPR_BAND: case BinOpr.OPR_BOR: case BinOpr.OPR_BXOR:\n        case BinOpr.OPR_SHL: case BinOpr.OPR_SHR: {\n            if (!tonumeral(v, false))\n                luaK_exp2RK(fs, v);\n            /* else keep numeral, which may be folded with 2nd operand */\n            break;\n        }\n        default: {\n            luaK_exp2RK(fs, v);\n            break;\n        }\n    }\n};\n\n/*\n** Finalize code for binary operation, after reading 2nd operand.\n** For '(a .. b .. c)' (which is '(a .. (b .. c))', because\n** concatenation is right associative), merge second CONCAT into first\n** one.\n*/\nconst luaK_posfix = function(fs, op, e1, e2, line) {\n    let ek = lparser.expkind;\n    switch (op) {\n        case BinOpr.OPR_AND: {\n            lua_assert(e1.t === NO_JUMP);  /* list closed by 'luK_infix' */\n            luaK_dischargevars(fs, e2);\n            e2.f = luaK_concat(fs, e2.f, e1.f);\n            e1.to(e2);\n            break;\n        }\n        case BinOpr.OPR_OR: {\n            lua_assert(e1.f === NO_JUMP);  /* list closed by 'luK_infix' */\n            luaK_dischargevars(fs, e2);\n            e2.t = luaK_concat(fs, e2.t, e1.t);\n            e1.to(e2);\n            break;\n        }\n        case BinOpr.OPR_CONCAT: {\n            luaK_exp2val(fs, e2);\n            let ins = getinstruction(fs, e2);\n            if (e2.k === ek.VRELOCABLE && ins.opcode === OpCodesI.OP_CONCAT) {\n                lua_assert(e1.u.info === ins.B - 1);\n                freeexp(fs, e1);\n                lopcodes.SETARG_B(ins, e1.u.info);\n                e1.k = ek.VRELOCABLE; e1.u.info = e2.u.info;\n            }\n            else {\n                luaK_exp2nextreg(fs, e2);  /* operand must be on the 'stack' */\n                codebinexpval(fs, OpCodesI.OP_CONCAT, e1, e2, line);\n            }\n            break;\n        }\n        case BinOpr.OPR_ADD: case BinOpr.OPR_SUB: case BinOpr.OPR_MUL: case BinOpr.OPR_DIV:\n        case BinOpr.OPR_IDIV: case BinOpr.OPR_MOD: case BinOpr.OPR_POW:\n        case BinOpr.OPR_BAND: case BinOpr.OPR_BOR: case BinOpr.OPR_BXOR:\n        case BinOpr.OPR_SHL: case BinOpr.OPR_SHR: {\n            if (!constfolding(op + LUA_OPADD, e1, e2))\n                codebinexpval(fs, op + OpCodesI.OP_ADD, e1, e2, line);\n            break;\n        }\n        case BinOpr.OPR_EQ: case BinOpr.OPR_LT: case BinOpr.OPR_LE:\n        case BinOpr.OPR_NE: case BinOpr.OPR_GT: case BinOpr.OPR_GE: {\n            codecomp(fs, op, e1, e2);\n            break;\n        }\n    }\n\n    return e1;\n};\n\n/*\n** Change line information associated with current position.\n*/\nconst luaK_fixline = function(fs, line) {\n    fs.f.lineinfo[fs.pc - 1] = line;\n};\n\n/*\n** Emit a SETLIST instruction.\n** 'base' is register that keeps table;\n** 'nelems' is #table plus those to be stored now;\n** 'tostore' is number of values (in registers 'base + 1',...) to add to\n** table (or LUA_MULTRET to add up to stack top).\n*/\nconst luaK_setlist = function(fs, base, nelems, tostore) {\n    let c =  (nelems - 1)/lopcodes.LFIELDS_PER_FLUSH + 1;\n    let b = (tostore === LUA_MULTRET) ? 0 : tostore;\n    lua_assert(tostore !== 0 && tostore <= lopcodes.LFIELDS_PER_FLUSH);\n    if (c <= lopcodes.MAXARG_C)\n        luaK_codeABC(fs, OpCodesI.OP_SETLIST, base, b, c);\n    else if (c <= lopcodes.MAXARG_Ax) {\n        luaK_codeABC(fs, OpCodesI.OP_SETLIST, base, b, 0);\n        codeextraarg(fs, c);\n    }\n    else\n        llex.luaX_syntaxerror(fs.ls, to_luastring(\"constructor too long\", true));\n    fs.freereg = base + 1;  /* free registers with list values */\n};\n\n\nmodule.exports.BinOpr             = BinOpr;\nmodule.exports.NO_JUMP            = NO_JUMP;\nmodule.exports.UnOpr              = UnOpr;\nmodule.exports.getinstruction     = getinstruction;\nmodule.exports.luaK_checkstack    = luaK_checkstack;\nmodule.exports.luaK_code          = luaK_code;\nmodule.exports.luaK_codeABC       = luaK_codeABC;\nmodule.exports.luaK_codeABx       = luaK_codeABx;\nmodule.exports.luaK_codeAsBx      = luaK_codeAsBx;\nmodule.exports.luaK_codek         = luaK_codek;\nmodule.exports.luaK_concat        = luaK_concat;\nmodule.exports.luaK_dischargevars = luaK_dischargevars;\nmodule.exports.luaK_exp2RK        = luaK_exp2RK;\nmodule.exports.luaK_exp2anyreg    = luaK_exp2anyreg;\nmodule.exports.luaK_exp2anyregup  = luaK_exp2anyregup;\nmodule.exports.luaK_exp2nextreg   = luaK_exp2nextreg;\nmodule.exports.luaK_exp2val       = luaK_exp2val;\nmodule.exports.luaK_fixline       = luaK_fixline;\nmodule.exports.luaK_getlabel      = luaK_getlabel;\nmodule.exports.luaK_goiffalse     = luaK_goiffalse;\nmodule.exports.luaK_goiftrue      = luaK_goiftrue;\nmodule.exports.luaK_indexed       = luaK_indexed;\nmodule.exports.luaK_infix         = luaK_infix;\nmodule.exports.luaK_intK          = luaK_intK;\nmodule.exports.luaK_jump          = luaK_jump;\nmodule.exports.luaK_jumpto        = luaK_jumpto;\nmodule.exports.luaK_nil           = luaK_nil;\nmodule.exports.luaK_numberK       = luaK_numberK;\nmodule.exports.luaK_patchclose    = luaK_patchclose;\nmodule.exports.luaK_patchlist     = luaK_patchlist;\nmodule.exports.luaK_patchtohere   = luaK_patchtohere;\nmodule.exports.luaK_posfix        = luaK_posfix;\nmodule.exports.luaK_prefix        = luaK_prefix;\nmodule.exports.luaK_reserveregs   = luaK_reserveregs;\nmodule.exports.luaK_ret           = luaK_ret;\nmodule.exports.luaK_self          = luaK_self;\nmodule.exports.luaK_setlist       = luaK_setlist;\nmodule.exports.luaK_setmultret    = luaK_setmultret;\nmodule.exports.luaK_setoneret     = luaK_setoneret;\nmodule.exports.luaK_setreturns    = luaK_setreturns;\nmodule.exports.luaK_storevar      = luaK_storevar;\nmodule.exports.luaK_stringK       = luaK_stringK;\n","\"use strict\";\n\nconst {\n    LUA_OK,\n    LUA_TFUNCTION,\n    LUA_TSTRING,\n    LUA_YIELD,\n    lua_Debug,\n    lua_checkstack,\n    lua_concat,\n    lua_error,\n    lua_getstack,\n    lua_gettop,\n    lua_insert,\n    lua_isyieldable,\n    lua_newthread,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcclosure,\n    lua_pushliteral,\n    lua_pushthread,\n    lua_pushvalue,\n    lua_resume,\n    lua_status,\n    lua_tothread,\n    lua_type,\n    lua_upvalueindex,\n    lua_xmove,\n    lua_yield\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_checktype,\n    luaL_newlib,\n    luaL_where\n} = require('./lauxlib.js');\n\nconst getco = function(L) {\n    let co = lua_tothread(L, 1);\n    luaL_argcheck(L, co, 1, \"thread expected\");\n    return co;\n};\n\nconst auxresume = function(L, co, narg) {\n    if (!lua_checkstack(co, narg)) {\n        lua_pushliteral(L, \"too many arguments to resume\");\n        return -1;  /* error flag */\n    }\n\n    if (lua_status(co) === LUA_OK && lua_gettop(co) === 0) {\n        lua_pushliteral(L, \"cannot resume dead coroutine\");\n        return -1;  /* error flag */\n    }\n\n    lua_xmove(L, co, narg);\n    let status = lua_resume(co, L, narg);\n    if (status === LUA_OK || status === LUA_YIELD) {\n        let nres = lua_gettop(co);\n        if (!lua_checkstack(L, nres + 1)) {\n            lua_pop(co, nres);  /* remove results anyway */\n            lua_pushliteral(L, \"too many results to resume\");\n            return -1;  /* error flag */\n        }\n\n        lua_xmove(co,  L, nres);  /* move yielded values */\n        return nres;\n    } else {\n        lua_xmove(co, L, 1);  /* move error message */\n        return -1;  /* error flag */\n    }\n};\n\nconst luaB_coresume = function(L) {\n    let co = getco(L);\n    let r = auxresume(L, co, lua_gettop(L) - 1);\n    if (r < 0) {\n        lua_pushboolean(L, 0);\n        lua_insert(L, -2);\n        return 2;  /* return false + error message */\n    } else {\n        lua_pushboolean(L, 1);\n        lua_insert(L, -(r + 1));\n        return r + 1;  /* return true + 'resume' returns */\n    }\n};\n\nconst luaB_auxwrap = function(L) {\n    let co = lua_tothread(L, lua_upvalueindex(1));\n    let r = auxresume(L, co, lua_gettop(L));\n    if (r < 0) {\n        if (lua_type(L, -1) === LUA_TSTRING) {  /* error object is a string? */\n            luaL_where(L, 1);  /* add extra info */\n            lua_insert(L, -2);\n            lua_concat(L, 2);\n        }\n\n        return lua_error(L);  /* propagate error */\n    }\n\n    return r;\n};\n\nconst luaB_cocreate = function(L) {\n    luaL_checktype(L, 1, LUA_TFUNCTION);\n    let NL = lua_newthread(L);\n    lua_pushvalue(L, 1);  /* move function to top */\n    lua_xmove(L, NL, 1);  /* move function from L to NL */\n    return 1;\n};\n\nconst luaB_cowrap = function(L) {\n    luaB_cocreate(L);\n    lua_pushcclosure(L, luaB_auxwrap, 1);\n    return 1;\n};\n\nconst luaB_yield = function(L) {\n    return lua_yield(L, lua_gettop(L));\n};\n\nconst luaB_costatus = function(L) {\n    let co = getco(L);\n    if (L === co) lua_pushliteral(L, \"running\");\n    else {\n        switch (lua_status(co)) {\n            case LUA_YIELD:\n                lua_pushliteral(L, \"suspended\");\n                break;\n            case LUA_OK: {\n                let ar = new lua_Debug();\n                if (lua_getstack(co, 0, ar) > 0)  /* does it have frames? */\n                    lua_pushliteral(L, \"normal\");  /* it is running */\n                else if (lua_gettop(co) === 0)\n                    lua_pushliteral(L, \"dead\");\n                else\n                    lua_pushliteral(L, \"suspended\");  /* initial state */\n                break;\n            }\n            default:  /* some error occurred */\n                lua_pushliteral(L, \"dead\");\n                break;\n        }\n    }\n\n    return 1;\n};\n\nconst luaB_yieldable = function(L) {\n    lua_pushboolean(L, lua_isyieldable(L));\n    return 1;\n};\n\nconst luaB_corunning = function(L) {\n    lua_pushboolean(L, lua_pushthread(L));\n    return 2;\n};\n\nconst co_funcs = {\n    \"create\":      luaB_cocreate,\n    \"isyieldable\": luaB_yieldable,\n    \"resume\":      luaB_coresume,\n    \"running\":     luaB_corunning,\n    \"status\":      luaB_costatus,\n    \"wrap\":        luaB_cowrap,\n    \"yield\":       luaB_yield\n};\n\nconst luaopen_coroutine = function(L) {\n    luaL_newlib(L, co_funcs);\n    return 1;\n};\n\nmodule.exports.luaopen_coroutine = luaopen_coroutine;\n","\"use strict\";\n\nconst {\n    LUA_MASKCALL,\n    LUA_MASKCOUNT,\n    LUA_MASKLINE,\n    LUA_MASKRET,\n    LUA_REGISTRYINDEX,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TTABLE,\n    LUA_TUSERDATA,\n    lua_Debug,\n    lua_call,\n    lua_checkstack,\n    lua_gethook,\n    lua_gethookcount,\n    lua_gethookmask,\n    lua_getinfo,\n    lua_getlocal,\n    lua_getmetatable,\n    lua_getstack,\n    lua_getupvalue,\n    lua_getuservalue,\n    lua_insert,\n    lua_iscfunction,\n    lua_isfunction,\n    lua_isnoneornil,\n    lua_isthread,\n    lua_newtable,\n    lua_pcall,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushlightuserdata,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawgetp,\n    lua_rawsetp,\n    lua_rotate,\n    lua_setfield,\n    lua_sethook,\n    lua_setlocal,\n    lua_setmetatable,\n    lua_settop,\n    lua_setupvalue,\n    lua_setuservalue,\n    lua_tojsstring,\n    lua_toproxy,\n    lua_tostring,\n    lua_tothread,\n    lua_touserdata,\n    lua_type,\n    lua_upvalueid,\n    lua_upvaluejoin,\n    lua_xmove\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_argerror,\n    luaL_checkany,\n    luaL_checkinteger,\n    luaL_checkstring,\n    luaL_checktype,\n    luaL_error,\n    luaL_loadbuffer,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_optstring,\n    luaL_traceback,\n    lua_writestringerror\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst {\n    luastring_indexOf,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\n/*\n** If L1 != L, L1 can be in any state, and therefore there are no\n** guarantees about its stack space; any push in L1 must be\n** checked.\n*/\nconst checkstack = function(L, L1, n) {\n    if (L !== L1 && !lua_checkstack(L1, n))\n        luaL_error(L, to_luastring(\"stack overflow\", true));\n};\n\nconst db_getregistry = function(L) {\n    lua_pushvalue(L, LUA_REGISTRYINDEX);\n    return 1;\n};\n\nconst db_getmetatable = function(L) {\n    luaL_checkany(L, 1);\n    if (!lua_getmetatable(L, 1)) {\n        lua_pushnil(L);  /* no metatable */\n    }\n    return 1;\n};\n\nconst db_setmetatable = function(L) {\n    const t = lua_type(L, 2);\n    luaL_argcheck(L, t == LUA_TNIL || t == LUA_TTABLE, 2, \"nil or table expected\");\n    lua_settop(L, 2);\n    lua_setmetatable(L, 1);\n    return 1;  /* return 1st argument */\n};\n\nconst db_getuservalue = function(L) {\n    if (lua_type(L, 1) !== LUA_TUSERDATA)\n        lua_pushnil(L);\n    else\n        lua_getuservalue(L, 1);\n    return 1;\n};\n\n\nconst db_setuservalue = function(L) {\n    luaL_checktype(L, 1, LUA_TUSERDATA);\n    luaL_checkany(L, 2);\n    lua_settop(L, 2);\n    lua_setuservalue(L, 1);\n    return 1;\n};\n\n/*\n** Auxiliary function used by several library functions: check for\n** an optional thread as function's first argument and set 'arg' with\n** 1 if this argument is present (so that functions can skip it to\n** access their other arguments)\n*/\nconst getthread = function(L) {\n    if (lua_isthread(L, 1)) {\n        return {\n            arg: 1,\n            thread: lua_tothread(L, 1)\n        };\n    } else {\n        return {\n            arg: 0,\n            thread: L\n        };  /* function will operate over current thread */\n    }\n};\n\n/*\n** Variations of 'lua_settable', used by 'db_getinfo' to put results\n** from 'lua_getinfo' into result table. Key is always a string;\n** value can be a string, an int, or a boolean.\n*/\nconst settabss = function(L, k, v) {\n    lua_pushstring(L, v);\n    lua_setfield(L, -2, k);\n};\n\nconst settabsi = function(L, k, v) {\n    lua_pushinteger(L, v);\n    lua_setfield(L, -2, k);\n};\n\nconst settabsb = function(L, k, v) {\n    lua_pushboolean(L, v);\n    lua_setfield(L, -2, k);\n};\n\n\n/*\n** In function 'db_getinfo', the call to 'lua_getinfo' may push\n** results on the stack; later it creates the result table to put\n** these objects. Function 'treatstackoption' puts the result from\n** 'lua_getinfo' on top of the result table so that it can call\n** 'lua_setfield'.\n*/\nconst treatstackoption = function(L, L1, fname) {\n    if (L == L1)\n        lua_rotate(L, -2, 1);  /* exchange object and table */\n    else\n        lua_xmove(L1, L, 1);  /* move object to the \"main\" stack */\n    lua_setfield(L, -2, fname);  /* put object into table */\n};\n\n/*\n** Calls 'lua_getinfo' and collects all results in a new table.\n** L1 needs stack space for an optional input (function) plus\n** two optional outputs (function and line table) from function\n** 'lua_getinfo'.\n*/\nconst db_getinfo = function(L) {\n    let ar = new lua_Debug();\n    let thread = getthread(L);\n    let arg = thread.arg;\n    let L1 = thread.thread;\n    let options = luaL_optstring(L, arg + 2, \"flnStu\");\n    checkstack(L, L1, 3);\n    if (lua_isfunction(L, arg + 1)) {  /* info about a function? */\n        options = lua_pushfstring(L, to_luastring(\">%s\"), options);  /* add '>' to 'options' */\n        lua_pushvalue(L, arg + 1);  /* move function to 'L1' stack */\n        lua_xmove(L, L1, 1);\n    } else {  /* stack level */\n        if (!lua_getstack(L1, luaL_checkinteger(L, arg + 1), ar)) {\n            lua_pushnil(L);  /* level out of range */\n            return 1;\n        }\n    }\n\n    if (!lua_getinfo(L1, options, ar))\n        luaL_argerror(L, arg + 2, \"invalid option\");\n    lua_newtable(L);  /* table to collect results */\n    if (luastring_indexOf(options, 83 /* 'S'.charCodeAt(0) */) > -1) {\n        settabss(L, to_luastring(\"source\", true), ar.source);\n        settabss(L, to_luastring(\"short_src\", true), ar.short_src);\n        settabsi(L, to_luastring(\"linedefined\", true), ar.linedefined);\n        settabsi(L, to_luastring(\"lastlinedefined\", true), ar.lastlinedefined);\n        settabss(L, to_luastring(\"what\", true), ar.what);\n    }\n    if (luastring_indexOf(options, 108 /* 'l'.charCodeAt(0) */) > -1)\n        settabsi(L, to_luastring(\"currentline\", true), ar.currentline);\n    if (luastring_indexOf(options, 117 /* 'u'.charCodeAt(0) */) > -1) {\n        settabsi(L, to_luastring(\"nups\", true), ar.nups);\n        settabsi(L, to_luastring(\"nparams\", true), ar.nparams);\n        settabsb(L, to_luastring(\"isvararg\", true), ar.isvararg);\n    }\n    if (luastring_indexOf(options, 110 /* 'n'.charCodeAt(0) */) > -1) {\n        settabss(L, to_luastring(\"name\", true), ar.name);\n        settabss(L, to_luastring(\"namewhat\", true), ar.namewhat);\n    }\n    if (luastring_indexOf(options, 116 /* 't'.charCodeAt(0) */) > -1)\n        settabsb(L, to_luastring(\"istailcall\", true), ar.istailcall);\n    if (luastring_indexOf(options, 76 /* 'L'.charCodeAt(0) */) > -1)\n        treatstackoption(L, L1, to_luastring(\"activelines\", true));\n    if (luastring_indexOf(options, 102 /* 'f'.charCodeAt(0) */) > -1)\n        treatstackoption(L, L1, to_luastring(\"func\", true));\n    return 1;  /* return table */\n};\n\nconst db_getlocal = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    let ar = new lua_Debug();\n    let nvar = luaL_checkinteger(L, arg + 2);  /* local-variable index */\n    if (lua_isfunction(L, arg + 1)) {\n        lua_pushvalue(L, arg + 1);  /* push function */\n        lua_pushstring(L, lua_getlocal(L, null, nvar));  /* push local name */\n        return 1;  /* return only name (there is no value) */\n    } else {  /* stack-level argument */\n        let level = luaL_checkinteger(L, arg + 1);\n        if (!lua_getstack(L1, level, ar))  /* out of range? */\n            return luaL_argerror(L, arg+1, \"level out of range\");\n        checkstack(L, L1, 1);\n        let name = lua_getlocal(L1, ar, nvar);\n        if (name) {\n            lua_xmove(L1, L, 1);  /* move local value */\n            lua_pushstring(L, name);  /* push name */\n            lua_rotate(L, -2, 1);  /* re-order */\n            return 2;\n        }\n        else {\n            lua_pushnil(L);  /* no name (nor value) */\n            return 1;\n        }\n    }\n};\n\nconst db_setlocal = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    let ar = new lua_Debug();\n    let level = luaL_checkinteger(L, arg + 1);\n    let nvar = luaL_checkinteger(L, arg + 2);\n    if (!lua_getstack(L1, level, ar))  /* out of range? */\n        return luaL_argerror(L, arg + 1, \"level out of range\");\n    luaL_checkany(L, arg + 3);\n    lua_settop(L, arg + 3);\n    checkstack(L, L1, 1);\n    lua_xmove(L, L1, 1);\n    let name = lua_setlocal(L1, ar, nvar);\n    if (name === null)\n        lua_pop(L1, 1);  /* pop value (if not popped by 'lua_setlocal') */\n    lua_pushstring(L, name);\n    return 1;\n};\n\n/*\n** get (if 'get' is true) or set an upvalue from a closure\n*/\nconst auxupvalue = function(L, get) {\n    let n = luaL_checkinteger(L, 2);  /* upvalue index */\n    luaL_checktype(L, 1, LUA_TFUNCTION);  /* closure */\n    let name = get ? lua_getupvalue(L, 1, n) : lua_setupvalue(L, 1, n);\n    if (name === null) return 0;\n    lua_pushstring(L, name);\n    lua_insert(L, -(get+1));  /* no-op if get is false */\n    return get + 1;\n};\n\n\nconst db_getupvalue = function(L) {\n    return auxupvalue(L, 1);\n};\n\nconst db_setupvalue = function(L) {\n    luaL_checkany(L, 3);\n    return auxupvalue(L, 0);\n};\n\n/*\n** Check whether a given upvalue from a given closure exists and\n** returns its index\n*/\nconst checkupval = function(L, argf, argnup) {\n    let nup = luaL_checkinteger(L, argnup);  /* upvalue index */\n    luaL_checktype(L, argf, LUA_TFUNCTION);  /* closure */\n    luaL_argcheck(L, (lua_getupvalue(L, argf, nup) !== null), argnup, \"invalid upvalue index\");\n    return nup;\n};\n\nconst db_upvalueid = function(L) {\n    let n = checkupval(L, 1, 2);\n    lua_pushlightuserdata(L, lua_upvalueid(L, 1, n));\n    return 1;\n};\n\nconst db_upvaluejoin = function(L) {\n    let n1 = checkupval(L, 1, 2);\n    let n2 = checkupval(L, 3, 4);\n    luaL_argcheck(L, !lua_iscfunction(L, 1), 1, \"Lua function expected\");\n    luaL_argcheck(L, !lua_iscfunction(L, 3), 3, \"Lua function expected\");\n    lua_upvaluejoin(L, 1, n1, 3, n2);\n    return 0;\n};\n\n/*\n** The hook table at registry[HOOKKEY] maps threads to their current\n** hook function. (We only need the unique address of 'HOOKKEY'.)\n*/\nconst HOOKKEY = to_luastring(\"__hooks__\", true);\n\nconst hooknames = [\"call\", \"return\", \"line\", \"count\", \"tail call\"].map(e => to_luastring(e));\n\n/*\n** Call hook function registered at hook table for the current\n** thread (if there is one)\n*/\nconst hookf = function(L, ar) {\n    lua_rawgetp(L, LUA_REGISTRYINDEX, HOOKKEY);\n    let hooktable = lua_touserdata(L, -1);\n    let proxy = hooktable.get(L);\n    if (proxy) {  /* is there a hook function? */\n        proxy(L);\n        lua_pushstring(L, hooknames[ar.event]);  /* push event name */\n        if (ar.currentline >= 0)\n            lua_pushinteger(L, ar.currentline);  /* push current line */\n        else lua_pushnil(L);\n        lualib.lua_assert(lua_getinfo(L, to_luastring(\"lS\"), ar));\n        lua_call(L, 2, 0);  /* call hook function */\n    }\n};\n\n/*\n** Convert a string mask (for 'sethook') into a bit mask\n*/\nconst makemask = function(smask, count) {\n    let mask = 0;\n    if (luastring_indexOf(smask, 99 /* 'c'.charCodeAt(0) */) > -1) mask |= LUA_MASKCALL;\n    if (luastring_indexOf(smask, 114 /* 'r'.charCodeAt(0) */) > -1) mask |= LUA_MASKRET;\n    if (luastring_indexOf(smask, 108 /* 'l'.charCodeAt(0) */) > -1) mask |= LUA_MASKLINE;\n    if (count > 0) mask |= LUA_MASKCOUNT;\n    return mask;\n};\n\n/*\n** Convert a bit mask (for 'gethook') into a string mask\n*/\nconst unmakemask = function(mask, smask) {\n    let i = 0;\n    if (mask & LUA_MASKCALL) smask[i++] = 99 /* 'c'.charCodeAt(0) */;\n    if (mask & LUA_MASKRET) smask[i++] = 114 /* 'r'.charCodeAt(0) */;\n    if (mask & LUA_MASKLINE) smask[i++] = 108 /* 'l'.charCodeAt(0) */;\n    return smask.subarray(0, i);\n};\n\nconst db_sethook = function(L) {\n    let mask, count, func;\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    if (lua_isnoneornil(L, arg+1)) {  /* no hook? */\n        lua_settop(L, arg+1);\n        func = null; mask = 0; count = 0;  /* turn off hooks */\n    }\n    else {\n        const smask = luaL_checkstring(L, arg + 2);\n        luaL_checktype(L, arg+1, LUA_TFUNCTION);\n        count = luaL_optinteger(L, arg + 3, 0);\n        func = hookf; mask = makemask(smask, count);\n    }\n    /* as weak tables are not supported; use a JS weak-map */\n    let hooktable;\n    if (lua_rawgetp(L, LUA_REGISTRYINDEX, HOOKKEY) === LUA_TNIL) {\n        hooktable = new WeakMap();\n        lua_pushlightuserdata(L, hooktable);\n        lua_rawsetp(L, LUA_REGISTRYINDEX, HOOKKEY);  /* set it in position */\n    } else {\n        hooktable = lua_touserdata(L, -1);\n    }\n    let proxy = lua_toproxy(L, arg + 1);  /* value (hook function) */\n    hooktable.set(L1, proxy);\n    lua_sethook(L1, func, mask, count);\n    return 0;\n};\n\nconst db_gethook = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let buff = new Uint8Array(5);\n    let mask = lua_gethookmask(L1);\n    let hook = lua_gethook(L1);\n    if (hook === null)  /* no hook? */\n        lua_pushnil(L);\n    else if (hook !== hookf)  /* external hook? */\n        lua_pushliteral(L, \"external hook\");\n    else {  /* hook table must exist */\n        lua_rawgetp(L, LUA_REGISTRYINDEX, HOOKKEY);\n        let hooktable = lua_touserdata(L, -1);\n        let proxy = hooktable.get(L1);\n        proxy(L);\n    }\n    lua_pushstring(L, unmakemask(mask, buff));  /* 2nd result = mask */\n    lua_pushinteger(L, lua_gethookcount(L1));  /* 3rd result = count */\n    return 3;\n};\n\nconst db_traceback = function(L) {\n    let thread = getthread(L);\n    let L1 = thread.thread;\n    let arg = thread.arg;\n    let msg = lua_tostring(L, arg + 1);\n    if (msg === null && !lua_isnoneornil(L, arg + 1))  /* non-string 'msg'? */\n        lua_pushvalue(L, arg + 1);  /* return it untouched */\n    else {\n        let level = luaL_optinteger(L, arg + 2, L === L1 ? 1 : 0);\n        luaL_traceback(L, L1, msg, level);\n    }\n    return 1;\n};\n\nconst dblib = {\n    \"gethook\":      db_gethook,\n    \"getinfo\":      db_getinfo,\n    \"getlocal\":     db_getlocal,\n    \"getmetatable\": db_getmetatable,\n    \"getregistry\":  db_getregistry,\n    \"getupvalue\":   db_getupvalue,\n    \"getuservalue\": db_getuservalue,\n    \"sethook\":      db_sethook,\n    \"setlocal\":     db_setlocal,\n    \"setmetatable\": db_setmetatable,\n    \"setupvalue\":   db_setupvalue,\n    \"setuservalue\": db_setuservalue,\n    \"traceback\":    db_traceback,\n    \"upvalueid\":    db_upvalueid,\n    \"upvaluejoin\":  db_upvaluejoin\n};\n\nlet getinput;\nif (typeof process !== \"undefined\") { // Only with Node\n    const readlineSync = require('readline-sync');\n    readlineSync.setDefaultOptions({\n        prompt: 'lua_debug> '\n    });\n    getinput = function() {\n        return readlineSync.prompt();\n    };\n} else if (typeof window !== \"undefined\") {\n    /* if in browser use window.prompt. Doesn't work from web workers.\n       See https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt\n    */\n    getinput = function() {\n        let input = prompt(\"lua_debug>\", \"\");\n        return (input !== null) ? input : \"\";\n    };\n}\nif (getinput) {\n    dblib.debug = function(L) {\n        for (;;) {\n            let input = getinput();\n\n            if (input === \"cont\")\n                return 0;\n\n            if (input.length === 0)\n                continue;\n\n            let buffer = to_luastring(input);\n            if (luaL_loadbuffer(L, buffer, buffer.length, to_luastring(\"=(debug command)\", true))\n                || lua_pcall(L, 0, 0, 0)) {\n                lua_writestringerror(lua_tojsstring(L, -1), \"\\n\");\n            }\n            lua_settop(L, 0);  /* remove eventual returns */\n        }\n    };\n}\n\nconst luaopen_debug = function(L) {\n    luaL_newlib(L, dblib);\n    return 1;\n};\n\nmodule.exports.luaopen_debug = luaopen_debug;\n","\"use strict\";\n\nconst {\n    LUA_HOOKCOUNT,\n    LUA_HOOKLINE,\n    LUA_MASKCOUNT,\n    LUA_MASKLINE,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TNIL,\n        LUA_TTABLE\n    },\n    thread_status: {\n        LUA_ERRRUN,\n        LUA_YIELD\n    },\n    from_userstring,\n    luastring_eq,\n    luastring_indexOf,\n    to_luastring\n} = require('./defs.js');\nconst {\n    api_check,\n    lua_assert\n} = require('./llimits.js');\nconst { LUA_IDSIZE } = require('./luaconf.js');\nconst lapi     = require('./lapi.js');\nconst ldo      = require('./ldo.js');\nconst lfunc    = require('./lfunc.js');\nconst llex     = require('./llex.js');\nconst lobject  = require('./lobject.js');\nconst lopcodes = require('./lopcodes.js');\nconst lstate   = require('./lstate.js');\nconst ltable   = require('./ltable.js');\nconst ltm      = require('./ltm.js');\nconst lvm      = require('./lvm.js');\n\nconst currentpc = function(ci) {\n    lua_assert(ci.callstatus & lstate.CIST_LUA);\n    return ci.l_savedpc - 1;\n};\n\nconst currentline = function(ci) {\n    return ci.func.value.p.lineinfo.length !== 0 ? ci.func.value.p.lineinfo[currentpc(ci)] : -1;\n};\n\n/*\n** If function yielded, its 'func' can be in the 'extra' field. The\n** next function restores 'func' to its correct value for debugging\n** purposes. (It exchanges 'func' and 'extra'; so, when called again,\n** after debugging, it also \"re-restores\" ** 'func' to its altered value.\n*/\nconst swapextra = function(L) {\n    if (L.status === LUA_YIELD) {\n        let ci = L.ci;  /* get function that yielded */\n        let temp = ci.funcOff;  /* exchange its 'func' and 'extra' values */\n        ci.func = L.stack[ci.extra];\n        ci.funcOff = ci.extra;\n        ci.extra = temp;\n    }\n};\n\nconst lua_sethook = function(L, func, mask, count) {\n    if (func === null || mask === 0) {  /* turn off hooks? */\n        mask = 0;\n        func = null;\n    }\n    if (L.ci.callstatus & lstate.CIST_LUA)\n        L.oldpc = L.ci.l_savedpc;\n    L.hook = func;\n    L.basehookcount = count;\n    L.hookcount = L.basehookcount;\n    L.hookmask = mask;\n};\n\nconst lua_gethook = function(L) {\n    return L.hook;\n};\n\n\nconst lua_gethookmask = function(L) {\n    return L.hookmask;\n};\n\n\nconst lua_gethookcount = function(L) {\n    return L.basehookcount;\n};\n\nconst lua_getstack = function(L, level, ar) {\n    let ci;\n    let status;\n    if (level < 0) return 0;  /* invalid (negative) level */\n    for (ci = L.ci; level > 0 && ci !== L.base_ci; ci = ci.previous)\n        level--;\n    if (level === 0 && ci !== L.base_ci) {  /* level found? */\n        status = 1;\n        ar.i_ci = ci;\n    } else\n        status = 0;  /* no such level */\n    return status;\n};\n\nconst upvalname = function(p, uv) {\n    lua_assert(uv < p.upvalues.length);\n    let s = p.upvalues[uv].name;\n    if (s === null) return to_luastring(\"?\", true);\n    return s.getstr();\n};\n\nconst findvararg = function(ci, n) {\n    let nparams = ci.func.value.p.numparams;\n    if (n >= ci.l_base - ci.funcOff - nparams)\n        return null;  /* no such vararg */\n    else {\n        return {\n            pos: ci.funcOff + nparams + n,\n            name: to_luastring(\"(*vararg)\", true)  /* generic name for any vararg */\n        };\n    }\n};\n\nconst findlocal = function(L, ci, n) {\n    let base, name = null;\n\n    if (ci.callstatus & lstate.CIST_LUA) {\n        if (n < 0)  /* access to vararg values? */\n            return findvararg(ci, -n);\n        else {\n            base = ci.l_base;\n            name = lfunc.luaF_getlocalname(ci.func.value.p, n, currentpc(ci));\n        }\n    } else\n        base = ci.funcOff + 1;\n\n    if (name === null) {  /* no 'standard' name? */\n        let limit = ci === L.ci ? L.top : ci.next.funcOff;\n        if (limit - base >= n && n > 0)  /* is 'n' inside 'ci' stack? */\n            name = to_luastring(\"(*temporary)\", true);  /* generic name for any valid slot */\n        else\n            return null;  /* no name */\n    }\n    return {\n        pos: base + (n - 1),\n        name: name\n    };\n};\n\nconst lua_getlocal = function(L, ar, n) {\n    let name;\n    swapextra(L);\n    if (ar === null) {  /* information about non-active function? */\n        if (!L.stack[L.top - 1].ttisLclosure())  /* not a Lua function? */\n            name = null;\n        else  /* consider live variables at function start (parameters) */\n            name = lfunc.luaF_getlocalname(L.stack[L.top - 1].value.p, n, 0);\n    } else {  /* active function; get information through 'ar' */\n        let local = findlocal(L, ar.i_ci, n);\n        if (local) {\n            name = local.name;\n            lobject.pushobj2s(L, L.stack[local.pos]);\n            api_check(L, L.top <= L.ci.top, \"stack overflow\");\n        } else {\n            name = null;\n        }\n    }\n    swapextra(L);\n    return name;\n};\n\nconst lua_setlocal = function(L, ar, n) {\n    let name;\n    swapextra(L);\n    let local = findlocal(L, ar.i_ci, n);\n    if (local) {\n        name = local.name;\n        lobject.setobjs2s(L, local.pos, L.top - 1);\n        delete L.stack[--L.top];  /* pop value */\n    } else {\n        name = null;\n    }\n    swapextra(L);\n    return name;\n};\n\nconst funcinfo = function(ar, cl) {\n    if (cl === null || cl instanceof lobject.CClosure) {\n        ar.source = to_luastring(\"=[JS]\", true);\n        ar.linedefined = -1;\n        ar.lastlinedefined = -1;\n        ar.what = to_luastring(\"J\", true);\n    } else {\n        let p = cl.p;\n        ar.source = p.source ? p.source.getstr() : to_luastring(\"=?\", true);\n        ar.linedefined = p.linedefined;\n        ar.lastlinedefined = p.lastlinedefined;\n        ar.what = ar.linedefined === 0 ? to_luastring(\"main\", true) : to_luastring(\"Lua\", true);\n    }\n\n    ar.short_src = lobject.luaO_chunkid(ar.source, LUA_IDSIZE);\n};\n\nconst collectvalidlines = function(L, f) {\n    if (f === null || f instanceof lobject.CClosure) {\n        L.stack[L.top] = new lobject.TValue(LUA_TNIL, null);\n        lapi.api_incr_top(L);\n    } else {\n        let lineinfo = f.p.lineinfo;\n        let t = ltable.luaH_new(L);\n        L.stack[L.top] = new lobject.TValue(LUA_TTABLE, t);\n        lapi.api_incr_top(L);\n        let v = new lobject.TValue(LUA_TBOOLEAN, true);\n        for (let i = 0; i < lineinfo.length; i++)\n            ltable.luaH_setint(t, lineinfo[i], v);\n    }\n};\n\nconst getfuncname = function(L, ci) {\n    let r = {\n        name: null,\n        funcname: null\n    };\n    if (ci === null)\n        return null;\n    else if (ci.callstatus & lstate.CIST_FIN) {  /* is this a finalizer? */\n        r.name = to_luastring(\"__gc\", true);\n        r.funcname = to_luastring(\"metamethod\", true);  /* report it as such */\n        return r;\n    }\n    /* calling function is a known Lua function? */\n    else if (!(ci.callstatus & lstate.CIST_TAIL) && ci.previous.callstatus & lstate.CIST_LUA)\n        return funcnamefromcode(L, ci.previous);\n    else return null;  /* no way to find a name */\n};\n\nconst auxgetinfo = function(L, what, ar, f, ci) {\n    let status = 1;\n    for (; what.length > 0; what = what.subarray(1)) {\n        switch (what[0]) {\n            case 83 /* ('S').charCodeAt(0) */: {\n                funcinfo(ar, f);\n                break;\n            }\n            case 108 /* ('l').charCodeAt(0) */: {\n                ar.currentline = ci && ci.callstatus & lstate.CIST_LUA ? currentline(ci) : -1;\n                break;\n            }\n            case 117 /* ('u').charCodeAt(0) */: {\n                ar.nups = f === null ? 0 : f.nupvalues;\n                if (f === null || f instanceof lobject.CClosure) {\n                    ar.isvararg = true;\n                    ar.nparams = 0;\n                } else {\n                    ar.isvararg = f.p.is_vararg;\n                    ar.nparams = f.p.numparams;\n                }\n                break;\n            }\n            case 116 /* ('t').charCodeAt(0) */: {\n                ar.istailcall = ci ? ci.callstatus & lstate.CIST_TAIL : 0;\n                break;\n            }\n            case 110 /* ('n').charCodeAt(0) */: {\n                let r = getfuncname(L, ci);\n                if (r === null) {\n                    ar.namewhat = to_luastring(\"\", true);\n                    ar.name = null;\n                } else {\n                    ar.namewhat = r.funcname;\n                    ar.name = r.name;\n                }\n                break;\n            }\n            case 76 /* ('L').charCodeAt(0) */:\n            case 102 /* ('f').charCodeAt(0) */:  /* handled by lua_getinfo */\n                break;\n            default: status = 0;  /* invalid option */\n        }\n    }\n\n    return status;\n};\n\nconst lua_getinfo = function(L, what, ar) {\n    what = from_userstring(what);\n    let status, cl, ci, func;\n    swapextra(L);\n    if (what[0] === 62 /* ('>').charCodeAt(0) */) {\n        ci = null;\n        func = L.stack[L.top - 1];\n        api_check(L, func.ttisfunction(), \"function expected\");\n        what = what.subarray(1);  /* skip the '>' */\n        L.top--;  /* pop function */\n    } else {\n        ci = ar.i_ci;\n        func = ci.func;\n        lua_assert(ci.func.ttisfunction());\n    }\n\n    cl = func.ttisclosure() ? func.value : null;\n    status = auxgetinfo(L, what, ar, cl, ci);\n    if (luastring_indexOf(what, 102 /* ('f').charCodeAt(0) */) >= 0) {\n        lobject.pushobj2s(L, func);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    }\n\n    swapextra(L);\n    if (luastring_indexOf(what, 76 /* ('L').charCodeAt(0) */) >= 0)\n        collectvalidlines(L, cl);\n\n    return status;\n};\n\nconst kname = function(p, pc, c) {\n    let r = {\n        name: null,\n        funcname: null\n    };\n\n    if (lopcodes.ISK(c)) {  /* is 'c' a constant? */\n        let kvalue = p.k[lopcodes.INDEXK(c)];\n        if (kvalue.ttisstring()) {  /* literal constant? */\n            r.name = kvalue.svalue();  /* it is its own name */\n            return r;\n        }\n        /* else no reasonable name found */\n    } else {  /* 'c' is a register */\n        let what = getobjname(p, pc, c); /* search for 'c' */\n        if (what && what.funcname[0] === 99 /* ('c').charCodeAt(0) */) {  /* found a constant name? */\n            return what;  /* 'name' already filled */\n        }\n        /* else no reasonable name found */\n    }\n    r.name = to_luastring(\"?\", true);\n    return r;  /* no reasonable name found */\n};\n\nconst filterpc = function(pc, jmptarget) {\n    if (pc < jmptarget)  /* is code conditional (inside a jump)? */\n        return -1;  /* cannot know who sets that register */\n    else return pc;  /* current position sets that register */\n};\n\n/*\n** try to find last instruction before 'lastpc' that modified register 'reg'\n*/\nconst findsetreg = function(p, lastpc, reg) {\n    let setreg = -1;  /* keep last instruction that changed 'reg' */\n    let jmptarget = 0;  /* any code before this address is conditional */\n    let OCi = lopcodes.OpCodesI;\n    for (let pc = 0; pc < lastpc; pc++) {\n        let i = p.code[pc];\n        let a = i.A;\n        switch (i.opcode) {\n            case OCi.OP_LOADNIL: {\n                let b = i.B;\n                if (a <= reg && reg <= a + b)  /* set registers from 'a' to 'a+b' */\n                    setreg = filterpc(pc, jmptarget);\n                break;\n            }\n            case OCi.OP_TFORCALL: {\n                if (reg >= a + 2)  /* affect all regs above its base */\n                    setreg = filterpc(pc, jmptarget);\n                break;\n            }\n            case OCi.OP_CALL:\n            case OCi.OP_TAILCALL: {\n                if (reg >= a)  /* affect all registers above base */\n                    setreg = filterpc(pc, jmptarget);\n                break;\n            }\n            case OCi.OP_JMP: {\n                let b = i.sBx;\n                let dest = pc + 1 + b;\n                /* jump is forward and do not skip 'lastpc'? */\n                if (pc < dest && dest <= lastpc) {\n                    if (dest > jmptarget)\n                        jmptarget = dest;  /* update 'jmptarget' */\n                }\n                break;\n            }\n            default:\n                if (lopcodes.testAMode(i.opcode) && reg === a)\n                    setreg = filterpc(pc, jmptarget);\n                break;\n        }\n    }\n\n    return setreg;\n};\n\n\nconst getobjname = function(p, lastpc, reg) {\n    let r = {\n        name: lfunc.luaF_getlocalname(p, reg + 1, lastpc),\n        funcname: null\n    };\n\n    if (r.name) {  /* is a local? */\n        r.funcname = to_luastring(\"local\", true);\n        return r;\n    }\n\n    /* else try symbolic execution */\n    let pc = findsetreg(p, lastpc, reg);\n    let OCi = lopcodes.OpCodesI;\n    if (pc !== -1) {  /* could find instruction? */\n        let i = p.code[pc];\n        switch (i.opcode) {\n            case OCi.OP_MOVE: {\n                let b = i.B;  /* move from 'b' to 'a' */\n                if (b < i.A)\n                    return getobjname(p, pc, b);  /* get name for 'b' */\n                break;\n            }\n            case OCi.OP_GETTABUP:\n            case OCi.OP_GETTABLE: {\n                let k = i.C;  /* key index */\n                let t = i.B;  /* table index */\n                let vn = i.opcode === OCi.OP_GETTABLE ? lfunc.luaF_getlocalname(p, t + 1, pc) : upvalname(p, t);\n                r.name = kname(p, pc, k).name;\n                r.funcname = (vn && luastring_eq(vn, llex.LUA_ENV)) ? to_luastring(\"global\", true) : to_luastring(\"field\", true);\n                return r;\n            }\n            case OCi.OP_GETUPVAL: {\n                r.name = upvalname(p, i.B);\n                r.funcname = to_luastring(\"upvalue\", true);\n                return r;\n            }\n            case OCi.OP_LOADK:\n            case OCi.OP_LOADKX: {\n                let b = i.opcode === OCi.OP_LOADK ? i.Bx : p.code[pc + 1].Ax;\n                if (p.k[b].ttisstring()) {\n                    r.name = p.k[b].svalue();\n                    r.funcname = to_luastring(\"constant\", true);\n                    return r;\n                }\n                break;\n            }\n            case OCi.OP_SELF: {\n                let k = i.C;\n                r.name = kname(p, pc, k).name;\n                r.funcname = to_luastring(\"method\", true);\n                return r;\n            }\n            default: break;\n        }\n    }\n\n    return null;\n};\n\n/*\n** Try to find a name for a function based on the code that called it.\n** (Only works when function was called by a Lua function.)\n** Returns what the name is (e.g., \"for iterator\", \"method\",\n** \"metamethod\") and sets '*name' to point to the name.\n*/\nconst funcnamefromcode = function(L, ci) {\n    let r = {\n        name: null,\n        funcname: null\n    };\n\n    let tm = 0;  /* (initial value avoids warnings) */\n    let p = ci.func.value.p;  /* calling function */\n    let pc = currentpc(ci);  /* calling instruction index */\n    let i = p.code[pc];  /* calling instruction */\n    let OCi = lopcodes.OpCodesI;\n\n    if (ci.callstatus & lstate.CIST_HOOKED) {\n        r.name = to_luastring(\"?\", true);\n        r.funcname = to_luastring(\"hook\", true);\n        return r;\n    }\n\n    switch (i.opcode) {\n        case OCi.OP_CALL:\n        case OCi.OP_TAILCALL:\n            return getobjname(p, pc, i.A);  /* get function name */\n        case OCi.OP_TFORCALL:\n            r.name = to_luastring(\"for iterator\", true);\n            r.funcname = to_luastring(\"for iterator\", true);\n            return r;\n        /* other instructions can do calls through metamethods */\n        case OCi.OP_SELF:\n        case OCi.OP_GETTABUP:\n        case OCi.OP_GETTABLE:\n            tm = ltm.TMS.TM_INDEX;\n            break;\n        case OCi.OP_SETTABUP:\n        case OCi.OP_SETTABLE:\n            tm = ltm.TMS.TM_NEWINDEX;\n            break;\n        case OCi.OP_ADD:    tm = ltm.TMS.TM_ADD;    break;\n        case OCi.OP_SUB:    tm = ltm.TMS.TM_SUB;    break;\n        case OCi.OP_MUL:    tm = ltm.TMS.TM_MUL;    break;\n        case OCi.OP_MOD:    tm = ltm.TMS.TM_MOD;    break;\n        case OCi.OP_POW:    tm = ltm.TMS.TM_POW;    break;\n        case OCi.OP_DIV:    tm = ltm.TMS.TM_DIV;    break;\n        case OCi.OP_IDIV:   tm = ltm.TMS.TM_IDIV;   break;\n        case OCi.OP_BAND:   tm = ltm.TMS.TM_BAND;   break;\n        case OCi.OP_BOR:    tm = ltm.TMS.TM_BOR;    break;\n        case OCi.OP_BXOR:   tm = ltm.TMS.TM_BXOR;   break;\n        case OCi.OP_SHL:    tm = ltm.TMS.TM_SHL;    break;\n        case OCi.OP_SHR:    tm = ltm.TMS.TM_SHR;    break;\n        case OCi.OP_UNM:    tm = ltm.TMS.TM_UNM;    break;\n        case OCi.OP_BNOT:   tm = ltm.TMS.TM_BNOT;   break;\n        case OCi.OP_LEN:    tm = ltm.TMS.TM_LEN;    break;\n        case OCi.OP_CONCAT: tm = ltm.TMS.TM_CONCAT; break;\n        case OCi.OP_EQ:     tm = ltm.TMS.TM_EQ;     break;\n        case OCi.OP_LT:     tm = ltm.TMS.TM_LT;     break;\n        case OCi.OP_LE:     tm = ltm.TMS.TM_LE;     break;\n        default:\n            return null;  /* cannot find a reasonable name */\n    }\n\n    r.name = L.l_G.tmname[tm].getstr();\n    r.funcname = to_luastring(\"metamethod\", true);\n    return r;\n};\n\nconst isinstack = function(L, ci, o) {\n    for (let i = ci.l_base; i < ci.top; i++) {\n        if (L.stack[i] === o)\n            return i;\n    }\n\n    return false;\n};\n\n/*\n** Checks whether value 'o' came from an upvalue. (That can only happen\n** with instructions OP_GETTABUP/OP_SETTABUP, which operate directly on\n** upvalues.)\n*/\nconst getupvalname = function(L, ci, o) {\n    let c = ci.func.value;\n    for (let i = 0; i < c.nupvalues; i++) {\n        if (c.upvals[i] === o) {\n            return {\n                name: upvalname(c.p, i),\n                funcname: to_luastring('upvalue', true)\n            };\n        }\n    }\n\n    return null;\n};\n\nconst varinfo = function(L, o) {\n    let ci = L.ci;\n    let kind = null;\n    if (ci.callstatus & lstate.CIST_LUA) {\n        kind = getupvalname(L, ci, o);  /* check whether 'o' is an upvalue */\n        let stkid = isinstack(L, ci, o);\n        if (!kind && stkid)  /* no? try a register */\n            kind = getobjname(ci.func.value.p, currentpc(ci), stkid - ci.l_base);\n    }\n\n    return kind ? lobject.luaO_pushfstring(L, to_luastring(\" (%s '%s')\", true), kind.funcname, kind.name) : to_luastring(\"\", true);\n};\n\nconst luaG_typeerror = function(L, o, op) {\n    let t = ltm.luaT_objtypename(L, o);\n    luaG_runerror(L, to_luastring(\"attempt to %s a %s value%s\", true), op, t, varinfo(L, o));\n};\n\nconst luaG_concaterror = function(L, p1, p2) {\n    if (p1.ttisstring() || lvm.cvt2str(p1)) p1 = p2;\n    luaG_typeerror(L, p1, to_luastring('concatenate', true));\n};\n\n/*\n** Error when both values are convertible to numbers, but not to integers\n*/\nconst luaG_opinterror = function(L, p1, p2, msg) {\n    if (lvm.tonumber(p1) === false)\n        p2 = p1;\n    luaG_typeerror(L, p2, msg);\n};\n\nconst luaG_ordererror = function(L, p1, p2) {\n    let t1 = ltm.luaT_objtypename(L, p1);\n    let t2 = ltm.luaT_objtypename(L, p2);\n    if (luastring_eq(t1, t2))\n        luaG_runerror(L, to_luastring(\"attempt to compare two %s values\", true), t1);\n    else\n        luaG_runerror(L, to_luastring(\"attempt to compare %s with %s\", true), t1, t2);\n};\n\n/* add src:line information to 'msg' */\nconst luaG_addinfo = function(L, msg, src, line) {\n    let buff;\n    if (src)\n        buff = lobject.luaO_chunkid(src.getstr(), LUA_IDSIZE);\n    else\n        buff = to_luastring(\"?\", true);\n\n    return lobject.luaO_pushfstring(L, to_luastring(\"%s:%d: %s\", true), buff, line, msg);\n};\n\nconst luaG_runerror = function(L, fmt, ...argp) {\n    let ci = L.ci;\n    let msg = lobject.luaO_pushvfstring(L, fmt, argp);\n    if (ci.callstatus & lstate.CIST_LUA)  /* if Lua function, add source:line information */\n        luaG_addinfo(L, msg, ci.func.value.p.source, currentline(ci));\n    luaG_errormsg(L);\n};\n\nconst luaG_errormsg = function(L) {\n    if (L.errfunc !== 0) {  /* is there an error handling function? */\n        let errfunc = L.errfunc;\n        lobject.pushobj2s(L, L.stack[L.top - 1]); /* move argument */\n        lobject.setobjs2s(L, L.top - 2, errfunc); /* push function */\n        ldo.luaD_callnoyield(L, L.top - 2, 1);\n    }\n\n    ldo.luaD_throw(L, LUA_ERRRUN);\n};\n\n/*\n** Error when both values are convertible to numbers, but not to integers\n*/\nconst luaG_tointerror = function(L, p1, p2) {\n    let temp = lvm.tointeger(p1);\n    if (temp === false)\n        p2 = p1;\n    luaG_runerror(L, to_luastring(\"number%s has no integer representation\", true), varinfo(L, p2));\n};\n\nconst luaG_traceexec = function(L) {\n    let ci = L.ci;\n    let mask = L.hookmask;\n    let counthook = (--L.hookcount === 0 && (mask & LUA_MASKCOUNT));\n    if (counthook)\n        L.hookcount = L.basehookcount;  /* reset count */\n    else if (!(mask & LUA_MASKLINE))\n        return;  /* no line hook and count != 0; nothing to be done */\n    if (ci.callstatus & lstate.CIST_HOOKYIELD) {  /* called hook last time? */\n        ci.callstatus &= ~lstate.CIST_HOOKYIELD;  /* erase mark */\n        return;  /* do not call hook again (VM yielded, so it did not move) */\n    }\n    if (counthook)\n        ldo.luaD_hook(L, LUA_HOOKCOUNT, -1);  /* call count hook */\n    if (mask & LUA_MASKLINE) {\n        let p = ci.func.value.p;\n        let npc = ci.l_savedpc - 1; // pcRel(ci.u.l.savedpc, p);\n        let newline = p.lineinfo.length !== 0 ? p.lineinfo[npc] : -1;\n        if (npc === 0 ||  /* call linehook when enter a new function, */\n            ci.l_savedpc <= L.oldpc ||  /* when jump back (loop), or when */\n            newline !== (p.lineinfo.length !== 0 ? p.lineinfo[L.oldpc - 1] : -1))  /* enter a new line */\n            ldo.luaD_hook(L, LUA_HOOKLINE, newline);  /* call line hook */\n    }\n    L.oldpc = ci.l_savedpc;\n    if (L.status === LUA_YIELD) {  /* did hook yield? */\n        if (counthook)\n            L.hookcount = 1;  /* undo decrement to zero */\n        ci.l_savedpc--;  /* undo increment (resume will increment it again) */\n        ci.callstatus |= lstate.CIST_HOOKYIELD;  /* mark that it yielded */\n        ci.funcOff = L.top - 1;  /* protect stack below results */\n        ci.func = L.stack[ci.funcOff];\n        ldo.luaD_throw(L, LUA_YIELD);\n    }\n};\n\nmodule.exports.luaG_addinfo     = luaG_addinfo;\nmodule.exports.luaG_concaterror = luaG_concaterror;\nmodule.exports.luaG_errormsg    = luaG_errormsg;\nmodule.exports.luaG_opinterror  = luaG_opinterror;\nmodule.exports.luaG_ordererror  = luaG_ordererror;\nmodule.exports.luaG_runerror    = luaG_runerror;\nmodule.exports.luaG_tointerror  = luaG_tointerror;\nmodule.exports.luaG_traceexec   = luaG_traceexec;\nmodule.exports.luaG_typeerror   = luaG_typeerror;\nmodule.exports.lua_gethook      = lua_gethook;\nmodule.exports.lua_gethookcount = lua_gethookcount;\nmodule.exports.lua_gethookmask  = lua_gethookmask;\nmodule.exports.lua_getinfo      = lua_getinfo;\nmodule.exports.lua_getlocal     = lua_getlocal;\nmodule.exports.lua_getstack     = lua_getstack;\nmodule.exports.lua_sethook      = lua_sethook;\nmodule.exports.lua_setlocal     = lua_setlocal;\n","\"use strict\";\n\nconst {\n    LUA_HOOKCALL,\n    LUA_HOOKRET,\n    LUA_HOOKTAILCALL,\n    LUA_MASKCALL,\n    LUA_MASKLINE,\n    LUA_MASKRET,\n    LUA_MINSTACK,\n    LUA_MULTRET,\n    LUA_SIGNATURE,\n    constant_types: {\n        LUA_TCCL,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TNIL\n    },\n    thread_status: {\n        LUA_ERRMEM,\n        LUA_ERRERR,\n        LUA_ERRRUN,\n        LUA_ERRSYNTAX,\n        LUA_OK,\n        LUA_YIELD\n    },\n    lua_Debug,\n    luastring_indexOf,\n    to_luastring\n} = require('./defs.js');\nconst lapi     = require('./lapi.js');\nconst ldebug   = require('./ldebug.js');\nconst lfunc    = require('./lfunc.js');\nconst {\n    api_check,\n    lua_assert,\n    LUAI_MAXCCALLS\n} = require('./llimits.js');\nconst lobject  = require('./lobject.js');\nconst lopcodes = require('./lopcodes.js');\nconst lparser  = require('./lparser.js');\nconst lstate   = require('./lstate.js');\nconst { luaS_newliteral } = require('./lstring.js');\nconst ltm      = require('./ltm.js');\nconst { LUAI_MAXSTACK } = require('./luaconf.js');\nconst lundump  = require('./lundump.js');\nconst lvm      = require('./lvm.js');\nconst { MBuffer } = require('./lzio.js');\n\nconst adjust_top = function(L, newtop) {\n    if (L.top < newtop) {\n        while (L.top < newtop)\n            L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n    } else {\n        while (L.top > newtop)\n            delete L.stack[--L.top];\n    }\n};\n\nconst seterrorobj = function(L, errcode, oldtop) {\n    let current_top = L.top;\n\n    /* extend stack so that L.stack[oldtop] is sure to exist */\n    while (L.top < oldtop + 1)\n        L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n\n    switch (errcode) {\n        case LUA_ERRMEM: {\n            lobject.setsvalue2s(L, oldtop, luaS_newliteral(L, \"not enough memory\"));\n            break;\n        }\n        case LUA_ERRERR: {\n            lobject.setsvalue2s(L, oldtop, luaS_newliteral(L, \"error in error handling\"));\n            break;\n        }\n        default: {\n            lobject.setobjs2s(L, oldtop, current_top - 1);\n        }\n    }\n\n    while (L.top > oldtop + 1)\n        delete L.stack[--L.top];\n};\n\nconst ERRORSTACKSIZE = LUAI_MAXSTACK + 200;\n\nconst luaD_reallocstack = function(L, newsize) {\n    lua_assert(newsize <= LUAI_MAXSTACK || newsize == ERRORSTACKSIZE);\n    lua_assert(L.stack_last == L.stack.length - lstate.EXTRA_STACK);\n    L.stack.length = newsize;\n    L.stack_last = newsize - lstate.EXTRA_STACK;\n};\n\nconst luaD_growstack = function(L, n) {\n    let size = L.stack.length;\n    if (size > LUAI_MAXSTACK)\n        luaD_throw(L, LUA_ERRERR);\n    else {\n        let needed = L.top + n + lstate.EXTRA_STACK;\n        let newsize = 2 * size;\n        if (newsize > LUAI_MAXSTACK) newsize = LUAI_MAXSTACK;\n        if (newsize < needed) newsize = needed;\n        if (newsize > LUAI_MAXSTACK) {  /* stack overflow? */\n            luaD_reallocstack(L, ERRORSTACKSIZE);\n            ldebug.luaG_runerror(L, to_luastring(\"stack overflow\", true));\n        }\n        else\n            luaD_reallocstack(L, newsize);\n    }\n};\n\nconst luaD_checkstack = function(L, n) {\n    if (L.stack_last - L.top <= n)\n        luaD_growstack(L, n);\n};\n\nconst stackinuse = function(L) {\n    let lim = L.top;\n    for (let ci = L.ci; ci !== null; ci = ci.previous) {\n        if (lim < ci.top) lim = ci.top;\n    }\n    lua_assert(lim <= L.stack_last);\n    return lim + 1; /* part of stack in use */\n};\n\nconst luaD_shrinkstack = function(L) {\n    let inuse = stackinuse(L);\n    let goodsize = inuse + Math.floor(inuse / 8) + 2*lstate.EXTRA_STACK;\n    if (goodsize > LUAI_MAXSTACK)\n        goodsize = LUAI_MAXSTACK;  /* respect stack limit */\n    if (L.stack.length > LUAI_MAXSTACK)  /* had been handling stack overflow? */\n        lstate.luaE_freeCI(L);  /* free all CIs (list grew because of an error) */\n    /* if thread is currently not handling a stack overflow and its\n     good size is smaller than current size, shrink its stack */\n    if (inuse <= (LUAI_MAXSTACK - lstate.EXTRA_STACK) && goodsize < L.stack.length)\n        luaD_reallocstack(L, goodsize);\n};\n\nconst luaD_inctop = function(L) {\n    luaD_checkstack(L, 1);\n    L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n};\n\n/*\n** Prepares a function call: checks the stack, creates a new CallInfo\n** entry, fills in the relevant information, calls hook if needed.\n** If function is a JS function, does the call, too. (Otherwise, leave\n** the execution ('luaV_execute') to the caller, to allow stackless\n** calls.) Returns true iff function has been executed (JS function).\n*/\nconst luaD_precall = function(L, off, nresults) {\n    let func = L.stack[off];\n\n    switch(func.type) {\n        case LUA_TCCL:\n        case LUA_TLCF: {\n            let f = func.type === LUA_TCCL ? func.value.f : func.value;\n\n            luaD_checkstack(L, LUA_MINSTACK);\n            let ci = lstate.luaE_extendCI(L);\n            ci.funcOff = off;\n            ci.nresults = nresults;\n            ci.func = func;\n            ci.top = L.top + LUA_MINSTACK;\n            lua_assert(ci.top <= L.stack_last);\n            ci.callstatus = 0;\n            if (L.hookmask & LUA_MASKCALL)\n                luaD_hook(L, LUA_HOOKCALL, -1);\n            let n = f(L); /* do the actual call */\n            if (typeof n !== \"number\" || n < 0 || (n|0) !== n)\n                throw Error(\"invalid return value from JS function (expected integer)\");\n            lapi.api_checknelems(L, n);\n\n            luaD_poscall(L, ci, L.top - n, n);\n\n            return true;\n        }\n        case LUA_TLCL: {\n            let base;\n            let p = func.value.p;\n            let n = L.top - off - 1;\n            let fsize = p.maxstacksize;\n            luaD_checkstack(L, fsize);\n            if (p.is_vararg) {\n                base = adjust_varargs(L, p, n);\n            } else {\n                for (; n < p.numparams; n++)\n                    L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null); // complete missing arguments\n                base = off + 1;\n            }\n\n            let ci = lstate.luaE_extendCI(L);\n            ci.funcOff = off;\n            ci.nresults = nresults;\n            ci.func = func;\n            ci.l_base = base;\n            ci.top = base + fsize;\n            adjust_top(L, ci.top);\n            ci.l_code = p.code;\n            ci.l_savedpc = 0;\n            ci.callstatus = lstate.CIST_LUA;\n            if (L.hookmask & LUA_MASKCALL)\n                callhook(L, ci);\n            return false;\n        }\n        default:\n            luaD_checkstack(L, 1);\n            tryfuncTM(L, off, func);\n            return luaD_precall(L, off, nresults);\n    }\n};\n\nconst luaD_poscall = function(L, ci, firstResult, nres) {\n    let wanted = ci.nresults;\n\n    if (L.hookmask & (LUA_MASKRET | LUA_MASKLINE)) {\n        if (L.hookmask & LUA_MASKRET)\n            luaD_hook(L, LUA_HOOKRET, -1);\n        L.oldpc = ci.previous.l_savedpc;  /* 'oldpc' for caller function */\n    }\n\n    let res = ci.funcOff;\n    L.ci = ci.previous;\n    L.ci.next = null;\n    return moveresults(L, firstResult, res, nres, wanted);\n};\n\nconst moveresults = function(L, firstResult, res, nres, wanted) {\n    switch (wanted) {\n        case 0:\n            break;\n        case 1: {\n            if (nres === 0)\n                L.stack[res].setnilvalue();\n            else {\n                lobject.setobjs2s(L, res, firstResult); /* move it to proper place */\n            }\n            break;\n        }\n        case LUA_MULTRET: {\n            for (let i = 0; i < nres; i++)\n                lobject.setobjs2s(L, res + i, firstResult + i);\n            for (let i=L.top; i>=(res + nres); i--)\n                delete L.stack[i];\n            L.top = res + nres;\n            return false;\n        }\n        default: {\n            let i;\n            if (wanted <= nres) {\n                for (i = 0; i < wanted; i++)\n                    lobject.setobjs2s(L, res + i, firstResult + i);\n            } else {\n                for (i = 0; i < nres; i++)\n                    lobject.setobjs2s(L, res + i, firstResult + i);\n                for (; i < wanted; i++) {\n                    if (res+i >= L.top)\n                        L.stack[res + i] = new lobject.TValue(LUA_TNIL, null);\n                    else\n                        L.stack[res + i].setnilvalue();\n                }\n            }\n            break;\n        }\n    }\n    let newtop = res + wanted; /* top points after the last result */\n    for (let i=L.top; i>=newtop; i--)\n        delete L.stack[i];\n    L.top = newtop;\n    return true;\n};\n\n/*\n** Call a hook for the given event. Make sure there is a hook to be\n** called. (Both 'L->hook' and 'L->hookmask', which triggers this\n** function, can be changed asynchronously by signals.)\n*/\nconst luaD_hook = function(L, event, line) {\n    let hook = L.hook;\n    if (hook && L.allowhook) {  /* make sure there is a hook */\n        let ci = L.ci;\n        let top = L.top;\n        let ci_top = ci.top;\n        let ar = new lua_Debug();\n        ar.event = event;\n        ar.currentline = line;\n        ar.i_ci = ci;\n        luaD_checkstack(L, LUA_MINSTACK);  /* ensure minimum stack size */\n        ci.top = L.top + LUA_MINSTACK;\n        lua_assert(ci.top <= L.stack_last);\n        L.allowhook = 0;  /* cannot call hooks inside a hook */\n        ci.callstatus |= lstate.CIST_HOOKED;\n        hook(L, ar);\n        lua_assert(!L.allowhook);\n        L.allowhook = 1;\n        ci.top = ci_top;\n        adjust_top(L, top);\n        ci.callstatus &= ~lstate.CIST_HOOKED;\n    }\n};\n\nconst callhook = function(L, ci) {\n    let hook = LUA_HOOKCALL;\n    ci.l_savedpc++;  /* hooks assume 'pc' is already incremented */\n    if ((ci.previous.callstatus & lstate.CIST_LUA) &&\n      ci.previous.l_code[ci.previous.l_savedpc - 1].opcode == lopcodes.OpCodesI.OP_TAILCALL) {\n        ci.callstatus |= lstate.CIST_TAIL;\n        hook = LUA_HOOKTAILCALL;\n    }\n    luaD_hook(L, hook, -1);\n    ci.l_savedpc--;  /* correct 'pc' */\n};\n\nconst adjust_varargs = function(L, p, actual) {\n    let nfixargs = p.numparams;\n    /* move fixed parameters to final position */\n    let fixed = L.top - actual; /* first fixed argument */\n    let base = L.top; /* final position of first argument */\n\n    let i;\n    for (i = 0; i < nfixargs && i < actual; i++) {\n        lobject.pushobj2s(L, L.stack[fixed + i]);\n        L.stack[fixed + i].setnilvalue();\n    }\n\n    for (; i < nfixargs; i++)\n        L.stack[L.top++] = new lobject.TValue(LUA_TNIL, null);\n\n    return base;\n};\n\nconst tryfuncTM = function(L, off, func) {\n    let tm = ltm.luaT_gettmbyobj(L, func, ltm.TMS.TM_CALL);\n    if (!tm.ttisfunction(tm))\n        ldebug.luaG_typeerror(L, func, to_luastring(\"call\", true));\n    /* Open a hole inside the stack at 'func' */\n    lobject.pushobj2s(L, L.stack[L.top-1]); /* push top of stack again */\n    for (let p = L.top-2; p > off; p--)\n        lobject.setobjs2s(L, p, p-1); /* move other items up one */\n    lobject.setobj2s(L, off, tm); /* tag method is the new function to be called */\n};\n\n/*\n** Check appropriate error for stack overflow (\"regular\" overflow or\n** overflow while handling stack overflow). If 'nCalls' is larger than\n** LUAI_MAXCCALLS (which means it is handling a \"regular\" overflow) but\n** smaller than 9/8 of LUAI_MAXCCALLS, does not report an error (to\n** allow overflow handling to work)\n*/\nconst stackerror = function(L) {\n    if (L.nCcalls === LUAI_MAXCCALLS)\n        ldebug.luaG_runerror(L, to_luastring(\"JS stack overflow\", true));\n    else if (L.nCcalls >= LUAI_MAXCCALLS + (LUAI_MAXCCALLS >> 3))\n        luaD_throw(L, LUA_ERRERR);  /* error while handing stack error */\n};\n\n/*\n** Call a function (JS or Lua). The function to be called is at func.\n** The arguments are on the stack, right after the function.\n** When returns, all the results are on the stack, starting at the original\n** function position.\n*/\nconst luaD_call = function(L, off, nResults) {\n    if (++L.nCcalls >= LUAI_MAXCCALLS)\n        stackerror(L);\n    if (!luaD_precall(L, off, nResults))\n        lvm.luaV_execute(L);\n    L.nCcalls--;\n};\n\nconst luaD_throw = function(L, errcode) {\n    if (L.errorJmp) {  /* thread has an error handler? */\n        L.errorJmp.status = errcode;  /* set status */\n        throw L.errorJmp;\n    } else {  /* thread has no error handler */\n        let g = L.l_G;\n        L.status = errcode;  /* mark it as dead */\n        if (g.mainthread.errorJmp) {  /* main thread has a handler? */\n            g.mainthread.stack[g.mainthread.top++] = L.stack[L.top - 1];  /* copy error obj. */\n            luaD_throw(g.mainthread, errcode);  /* re-throw in main thread */\n        } else {  /* no handler at all; abort */\n            let panic = g.panic;\n            if (panic) {  /* panic function? */\n                seterrorobj(L, errcode, L.top);  /* assume EXTRA_STACK */\n                if (L.ci.top < L.top)\n                    L.ci.top = L.top;  /* pushing msg. can break this invariant */\n                panic(L);  /* call panic function (last chance to jump out) */\n            }\n            throw new Error(`Aborted ${errcode}`);\n        }\n    }\n};\n\nconst luaD_rawrunprotected = function(L, f, ud) {\n    let oldnCcalls = L.nCcalls;\n    let lj = {\n        status: LUA_OK,\n        previous: L.errorJmp /* chain new error handler */\n    };\n    L.errorJmp = lj;\n\n    try {\n        f(L, ud);\n    } catch (e) {\n        if (lj.status === LUA_OK) {\n            /* error was not thrown via luaD_throw, i.e. it is a JS error */\n            /* run user error handler (if it exists) */\n            let atnativeerror = L.l_G.atnativeerror;\n            if (atnativeerror) {\n                try {\n                    lj.status = LUA_OK;\n\n                    lapi.lua_pushcfunction(L, atnativeerror);\n                    lapi.lua_pushlightuserdata(L, e);\n                    luaD_callnoyield(L, L.top - 2, 1);\n\n                    /* Now run the message handler (if it exists) */\n                    /* copy of luaG_errormsg without the throw */\n                    if (L.errfunc !== 0) {  /* is there an error handling function? */\n                        let errfunc = L.errfunc;\n                        lobject.pushobj2s(L, L.stack[L.top - 1]); /* move argument */\n                        lobject.setobjs2s(L, L.top - 2, errfunc); /* push function */\n                        luaD_callnoyield(L, L.top - 2, 1);\n                    }\n\n                    lj.status = LUA_ERRRUN;\n                } catch(e2) {\n                    if (lj.status === LUA_OK) {\n                        /* also failed */\n                        lj.status = -1;\n                    }\n                }\n            } else {\n                lj.status = -1;\n            }\n        }\n    }\n\n    L.errorJmp = lj.previous;\n    L.nCcalls = oldnCcalls;\n\n    return lj.status;\n\n};\n\n/*\n** Completes the execution of an interrupted C function, calling its\n** continuation function.\n*/\nconst finishCcall = function(L, status) {\n    let ci = L.ci;\n\n    /* must have a continuation and must be able to call it */\n    lua_assert(ci.c_k !== null && L.nny === 0);\n    /* error status can only happen in a protected call */\n    lua_assert(ci.callstatus & lstate.CIST_YPCALL || status === LUA_YIELD);\n\n    if (ci.callstatus & lstate.CIST_YPCALL) {  /* was inside a pcall? */\n        ci.callstatus &= ~lstate.CIST_YPCALL;  /* continuation is also inside it */\n        L.errfunc = ci.c_old_errfunc;  /* with the same error function */\n    }\n\n    /* finish 'lua_callk'/'lua_pcall'; CIST_YPCALL and 'errfunc' already\n       handled */\n    if (ci.nresults === LUA_MULTRET && L.ci.top < L.top) L.ci.top = L.top;\n    let c_k = ci.c_k; /* don't want to call as method */\n    let n = c_k(L, status, ci.c_ctx);  /* call continuation function */\n    lapi.api_checknelems(L, n);\n    luaD_poscall(L, ci, L.top - n, n);  /* finish 'luaD_precall' */\n};\n\n/*\n** Executes \"full continuation\" (everything in the stack) of a\n** previously interrupted coroutine until the stack is empty (or another\n** interruption long-jumps out of the loop). If the coroutine is\n** recovering from an error, 'ud' points to the error status, which must\n** be passed to the first continuation function (otherwise the default\n** status is LUA_YIELD).\n*/\nconst unroll = function(L, ud) {\n    if (ud !== null)  /* error status? */\n        finishCcall(L, ud);  /* finish 'lua_pcallk' callee */\n\n    while (L.ci !== L.base_ci) {  /* something in the stack */\n        if (!(L.ci.callstatus & lstate.CIST_LUA))  /* C function? */\n            finishCcall(L, LUA_YIELD);  /* complete its execution */\n        else {  /* Lua function */\n            lvm.luaV_finishOp(L);  /* finish interrupted instruction */\n            lvm.luaV_execute(L);  /* execute down to higher C 'boundary' */\n        }\n    }\n};\n\n/*\n** Try to find a suspended protected call (a \"recover point\") for the\n** given thread.\n*/\nconst findpcall = function(L) {\n    for (let ci = L.ci; ci !== null; ci = ci.previous) {  /* search for a pcall */\n        if (ci.callstatus & lstate.CIST_YPCALL)\n            return ci;\n    }\n\n    return null;  /* no pending pcall */\n};\n\n/*\n** Recovers from an error in a coroutine. Finds a recover point (if\n** there is one) and completes the execution of the interrupted\n** 'luaD_pcall'. If there is no recover point, returns zero.\n*/\nconst recover = function(L, status) {\n    let ci = findpcall(L);\n    if (ci === null) return 0;  /* no recovery point */\n    /* \"finish\" luaD_pcall */\n    let oldtop = ci.extra;\n    lfunc.luaF_close(L, oldtop);\n    seterrorobj(L, status, oldtop);\n    L.ci = ci;\n    L.allowhook = ci.callstatus & lstate.CIST_OAH;  /* restore original 'allowhook' */\n    L.nny = 0;  /* should be zero to be yieldable */\n    luaD_shrinkstack(L);\n    L.errfunc = ci.c_old_errfunc;\n    return 1;  /* continue running the coroutine */\n};\n\n/*\n** Signal an error in the call to 'lua_resume', not in the execution\n** of the coroutine itself. (Such errors should not be handled by any\n** coroutine error handler and should not kill the coroutine.)\n*/\nconst resume_error = function(L, msg, narg) {\n    let ts = luaS_newliteral(L, msg);\n    if (narg === 0) {\n        lobject.pushsvalue2s(L, ts);\n        api_check(L, L.top <= L.ci.top, \"stack overflow\");\n    } else {\n        /* remove args from the stack */\n        for (let i=1; i<narg; i++)\n            delete L.stack[--L.top];\n        lobject.setsvalue2s(L, L.top-1, ts);  /* push error message */\n    }\n    return LUA_ERRRUN;\n};\n\n/*\n** Do the work for 'lua_resume' in protected mode. Most of the work\n** depends on the status of the coroutine: initial state, suspended\n** inside a hook, or regularly suspended (optionally with a continuation\n** function), plus erroneous cases: non-suspended coroutine or dead\n** coroutine.\n*/\nconst resume = function(L, n) {\n    let firstArg = L.top - n;  /* first argument */\n    let ci = L.ci;\n    if (L.status === LUA_OK) {  /* starting a coroutine? */\n        if (!luaD_precall(L, firstArg - 1, LUA_MULTRET))  /* Lua function? */\n            lvm.luaV_execute(L);  /* call it */\n    } else {  /* resuming from previous yield */\n        lua_assert(L.status === LUA_YIELD);\n        L.status = LUA_OK;  /* mark that it is running (again) */\n        ci.funcOff = ci.extra;\n        ci.func = L.stack[ci.funcOff];\n\n        if (ci.callstatus & lstate.CIST_LUA)  /* yielded inside a hook? */\n            lvm.luaV_execute(L);  /* just continue running Lua code */\n        else {  /* 'common' yield */\n            if (ci.c_k !== null) {  /* does it have a continuation function? */\n                n = ci.c_k(L, LUA_YIELD, ci.c_ctx); /* call continuation */\n                lapi.api_checknelems(L, n);\n                firstArg = L.top - n;  /* yield results come from continuation */\n            }\n\n            luaD_poscall(L, ci, firstArg, n);  /* finish 'luaD_precall' */\n        }\n\n        unroll(L, null);  /* run continuation */\n    }\n};\n\nconst lua_resume = function(L, from, nargs) {\n    let oldnny = L.nny;  /* save \"number of non-yieldable\" calls */\n\n    if (L.status === LUA_OK) {  /* may be starting a coroutine */\n        if (L.ci !== L.base_ci)  /* not in base level? */\n            return resume_error(L, \"cannot resume non-suspended coroutine\", nargs);\n    } else if (L.status !== LUA_YIELD)\n        return resume_error(L, \"cannot resume dead coroutine\", nargs);\n\n    L.nCcalls = from ? from.nCcalls + 1 : 1;\n    if (L.nCcalls >= LUAI_MAXCCALLS)\n        return resume_error(L, \"JS stack overflow\", nargs);\n\n    L.nny = 0;  /* allow yields */\n\n    lapi.api_checknelems(L, L.status === LUA_OK ? nargs + 1: nargs);\n\n    let status = luaD_rawrunprotected(L, resume, nargs);\n    if (status === -1)  /* error calling 'lua_resume'? */\n        status = LUA_ERRRUN;\n    else {  /* continue running after recoverable errors */\n        while (status > LUA_YIELD && recover(L, status)) {\n            /* unroll continuation */\n            status = luaD_rawrunprotected(L, unroll, status);\n        }\n\n        if (status > LUA_YIELD) {  /* unrecoverable error? */\n            L.status = status;  /* mark thread as 'dead' */\n            seterrorobj(L, status, L.top);  /* push error message */\n            L.ci.top = L.top;\n        } else\n            lua_assert(status === L.status);  /* normal end or yield */\n    }\n\n    L.nny = oldnny;  /* restore 'nny' */\n    L.nCcalls--;\n    lua_assert(L.nCcalls === (from ? from.nCcalls : 0));\n    return status;\n};\n\nconst lua_isyieldable = function(L) {\n    return L.nny === 0;\n};\n\nconst lua_yieldk = function(L, nresults, ctx, k) {\n    let ci = L.ci;\n    lapi.api_checknelems(L, nresults);\n\n    if (L.nny > 0) {\n        if (L !== L.l_G.mainthread)\n            ldebug.luaG_runerror(L, to_luastring(\"attempt to yield across a JS-call boundary\", true));\n        else\n            ldebug.luaG_runerror(L, to_luastring(\"attempt to yield from outside a coroutine\", true));\n    }\n\n    L.status = LUA_YIELD;\n    ci.extra = ci.funcOff;  /* save current 'func' */\n    if (ci.callstatus & lstate.CIST_LUA)  /* inside a hook? */\n        api_check(L, k === null, \"hooks cannot continue after yielding\");\n    else {\n        ci.c_k = k;\n        if (k !== null)  /* is there a continuation? */\n            ci.c_ctx = ctx;  /* save context */\n        ci.funcOff = L.top - nresults - 1;  /* protect stack below results */\n        ci.func = L.stack[ci.funcOff];\n        luaD_throw(L, LUA_YIELD);\n    }\n\n    lua_assert(ci.callstatus & lstate.CIST_HOOKED);  /* must be inside a hook */\n    return 0;  /* return to 'luaD_hook' */\n};\n\nconst lua_yield = function(L, n) {\n    lua_yieldk(L, n, 0, null);\n};\n\nconst luaD_pcall = function(L, func, u, old_top, ef) {\n    let old_ci = L.ci;\n    let old_allowhooks = L.allowhook;\n    let old_nny = L.nny;\n    let old_errfunc = L.errfunc;\n    L.errfunc = ef;\n\n    let status = luaD_rawrunprotected(L, func, u);\n\n    if (status !== LUA_OK) {\n        lfunc.luaF_close(L, old_top);\n        seterrorobj(L, status, old_top);\n        L.ci = old_ci;\n        L.allowhook = old_allowhooks;\n        L.nny = old_nny;\n        luaD_shrinkstack(L);\n    }\n\n    L.errfunc = old_errfunc;\n\n    return status;\n};\n\n/*\n** Similar to 'luaD_call', but does not allow yields during the call\n*/\nconst luaD_callnoyield = function(L, off, nResults) {\n    L.nny++;\n    luaD_call(L, off, nResults);\n    L.nny--;\n};\n\n/*\n** Execute a protected parser.\n*/\nclass SParser {\n    constructor(z, name, mode) {  /* data to 'f_parser' */\n        this.z = z;\n        this.buff = new MBuffer();  /* dynamic structure used by the scanner */\n        this.dyd = new lparser.Dyndata();  /* dynamic structures used by the parser */\n        this.mode = mode;\n        this.name = name;\n    }\n}\n\nconst checkmode = function(L, mode, x) {\n    if (mode && luastring_indexOf(mode, x[0]) === -1) {\n        lobject.luaO_pushfstring(L,\n            to_luastring(\"attempt to load a %s chunk (mode is '%s')\"), x, mode);\n        luaD_throw(L, LUA_ERRSYNTAX);\n    }\n};\n\nconst f_parser = function(L, p) {\n    let cl;\n    let c = p.z.zgetc();  /* read first character */\n    if (c === LUA_SIGNATURE[0]) {\n        checkmode(L, p.mode, to_luastring(\"binary\", true));\n        cl = lundump.luaU_undump(L, p.z, p.name);\n    } else {\n        checkmode(L, p.mode, to_luastring(\"text\", true));\n        cl = lparser.luaY_parser(L, p.z, p.buff, p.dyd, p.name, c);\n    }\n\n    lua_assert(cl.nupvalues === cl.p.upvalues.length);\n    lfunc.luaF_initupvals(L, cl);\n};\n\nconst luaD_protectedparser = function(L, z, name, mode) {\n    let p = new SParser(z, name, mode);\n    L.nny++;  /* cannot yield during parsing */\n    let status = luaD_pcall(L, f_parser, p, L.top, L.errfunc);\n    L.nny--;\n    return status;\n};\n\nmodule.exports.adjust_top           = adjust_top;\nmodule.exports.luaD_call            = luaD_call;\nmodule.exports.luaD_callnoyield     = luaD_callnoyield;\nmodule.exports.luaD_checkstack      = luaD_checkstack;\nmodule.exports.luaD_growstack       = luaD_growstack;\nmodule.exports.luaD_hook            = luaD_hook;\nmodule.exports.luaD_inctop          = luaD_inctop;\nmodule.exports.luaD_pcall           = luaD_pcall;\nmodule.exports.luaD_poscall         = luaD_poscall;\nmodule.exports.luaD_precall         = luaD_precall;\nmodule.exports.luaD_protectedparser = luaD_protectedparser;\nmodule.exports.luaD_rawrunprotected = luaD_rawrunprotected;\nmodule.exports.luaD_reallocstack    = luaD_reallocstack;\nmodule.exports.luaD_throw           = luaD_throw;\nmodule.exports.lua_isyieldable      = lua_isyieldable;\nmodule.exports.lua_resume           = lua_resume;\nmodule.exports.lua_yield            = lua_yield;\nmodule.exports.lua_yieldk           = lua_yieldk;\n","\"use strict\";\n\nconst {\n    LUA_SIGNATURE,\n    LUA_VERSION_MAJOR,\n    LUA_VERSION_MINOR,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR\n    },\n    luastring_of\n} = require('./defs.js');\n\nconst LUAC_DATA    = luastring_of(25, 147, 13, 10, 26, 10);\nconst LUAC_INT     = 0x5678;\nconst LUAC_NUM     = 370.5;\nconst LUAC_VERSION = Number(LUA_VERSION_MAJOR) * 16 + Number(LUA_VERSION_MINOR);\nconst LUAC_FORMAT  = 0;   /* this is the official format */\n\nclass DumpState {\n    constructor() {\n        this.L = null;\n        this.write = null;\n        this.data = null;\n        this.strip = NaN;\n        this.status = NaN;\n    }\n}\n\nconst DumpBlock = function(b, size, D) {\n    if (D.status === 0 && size > 0)\n        D.status = D.writer(D.L, b, size, D.data);\n};\n\nconst DumpByte = function(y, D) {\n    DumpBlock(luastring_of(y), 1, D);\n};\n\nconst DumpInt = function(x, D) {\n    let ab = new ArrayBuffer(4);\n    let dv = new DataView(ab);\n    dv.setInt32(0, x, true);\n    let t = new Uint8Array(ab);\n    DumpBlock(t, 4, D);\n};\n\nconst DumpInteger = function(x, D) {\n    let ab = new ArrayBuffer(4);\n    let dv = new DataView(ab);\n    dv.setInt32(0, x, true);\n    let t = new Uint8Array(ab);\n    DumpBlock(t, 4, D);\n};\n\nconst DumpNumber = function(x, D) {\n    let ab = new ArrayBuffer(8);\n    let dv = new DataView(ab);\n    dv.setFloat64(0, x, true);\n    let t = new Uint8Array(ab);\n    DumpBlock(t, 8, D);\n};\n\nconst DumpString = function(s, D) {\n    if (s === null)\n        DumpByte(0, D);\n    else {\n        let size = s.tsslen() + 1;\n        let str = s.getstr();\n        if (size < 0xFF)\n            DumpByte(size, D);\n        else {\n            DumpByte(0xFF, D);\n            DumpInteger(size, D);\n        }\n        DumpBlock(str, size - 1, D);  /* no need to save '\\0' */\n    }\n};\n\nconst DumpCode = function(f, D) {\n    let s = f.code.map(e => e.code);\n    DumpInt(s.length, D);\n\n    for (let i = 0; i < s.length; i++)\n        DumpInt(s[i], D);\n};\n\nconst DumpConstants = function(f, D) {\n    let n = f.k.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++) {\n        let o = f.k[i];\n        DumpByte(o.ttype(), D);\n        switch (o.ttype()) {\n            case LUA_TNIL:\n                break;\n            case LUA_TBOOLEAN:\n                DumpByte(o.value ? 1 : 0, D);\n                break;\n            case LUA_TNUMFLT:\n                DumpNumber(o.value, D);\n                break;\n            case LUA_TNUMINT:\n                DumpInteger(o.value, D);\n                break;\n            case LUA_TSHRSTR:\n            case LUA_TLNGSTR:\n                DumpString(o.tsvalue(), D);\n                break;\n        }\n    }\n};\n\nconst DumpProtos = function(f, D) {\n    let n = f.p.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++)\n        DumpFunction(f.p[i], f.source, D);\n};\n\nconst DumpUpvalues = function(f, D) {\n    let n = f.upvalues.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++) {\n        DumpByte(f.upvalues[i].instack ? 1 : 0, D);\n        DumpByte(f.upvalues[i].idx, D);\n    }\n};\n\nconst DumpDebug = function(f, D) {\n    let n = D.strip ? 0 : f.lineinfo.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++)\n        DumpInt(f.lineinfo[i], D);\n    n = D.strip ? 0 : f.locvars.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++) {\n        DumpString(f.locvars[i].varname, D);\n        DumpInt(f.locvars[i].startpc, D);\n        DumpInt(f.locvars[i].endpc, D);\n    }\n    n = D.strip ? 0 : f.upvalues.length;\n    DumpInt(n, D);\n    for (let i = 0; i < n; i++)\n        DumpString(f.upvalues[i].name, D);\n};\n\nconst DumpFunction = function(f, psource, D) {\n    if (D.strip || f.source === psource)\n        DumpString(null, D);  /* no debug info or same source as its parent */\n    else\n        DumpString(f.source, D);\n    DumpInt(f.linedefined, D);\n    DumpInt(f.lastlinedefined, D);\n    DumpByte(f.numparams, D);\n    DumpByte(f.is_vararg?1:0, D);\n    DumpByte(f.maxstacksize, D);\n    DumpCode(f, D);\n    DumpConstants(f, D);\n    DumpUpvalues(f, D);\n    DumpProtos(f, D);\n    DumpDebug(f, D);\n};\n\nconst DumpHeader = function(D) {\n    DumpBlock(LUA_SIGNATURE, LUA_SIGNATURE.length, D);\n    DumpByte(LUAC_VERSION, D);\n    DumpByte(LUAC_FORMAT, D);\n    DumpBlock(LUAC_DATA, LUAC_DATA.length, D);\n    DumpByte(4, D); // intSize\n    DumpByte(4, D); // size_tSize\n    DumpByte(4, D); // instructionSize\n    DumpByte(4, D); // integerSize\n    DumpByte(8, D); // numberSize\n    DumpInteger(LUAC_INT, D);\n    DumpNumber(LUAC_NUM, D);\n};\n\n/*\n** dump Lua function as precompiled chunk\n*/\nconst luaU_dump = function(L, f, w, data, strip) {\n    let D = new DumpState();\n    D.L = L;\n    D.writer = w;\n    D.data = data;\n    D.strip = strip;\n    D.status = 0;\n    DumpHeader(D);\n    DumpByte(f.upvalues.length, D);\n    DumpFunction(f, null, D);\n    return D.status;\n};\n\nmodule.exports.luaU_dump = luaU_dump;\n","\"use strict\";\n\nconst { constant_types: { LUA_TNIL } } = require('./defs.js');\nconst lobject = require('./lobject.js');\n\nclass Proto {\n    constructor(L) {\n        this.id = L.l_G.id_counter++;\n        this.k = [];              // constants used by the function\n        this.p = [];              // functions defined inside the function\n        this.code = [];           // opcodes\n        this.cache = null;        // last-created closure with this prototype\n        this.lineinfo = [];       // map from opcodes to source lines (debug information)\n        this.upvalues = [];       // upvalue information\n        this.numparams = 0;       // number of fixed parameters\n        this.is_vararg = false;\n        this.maxstacksize = 0;    // number of registers needed by this function\n        this.locvars = [];        // information about local variables (debug information)\n        this.linedefined = 0;     // debug information\n        this.lastlinedefined = 0; // debug information\n        this.source = null;       // used for debug information\n    }\n}\n\nconst luaF_newLclosure = function(L, n) {\n    return new lobject.LClosure(L, n);\n};\n\n\nconst luaF_findupval = function(L, level) {\n    return L.stack[level];\n};\n\nconst luaF_close = function(L, level) {\n    /* Create new TValues on stack;\n     * any closures will keep referencing old TValues */\n    for (let i=level; i<L.top; i++) {\n        let old = L.stack[i];\n        L.stack[i] = new lobject.TValue(old.type, old.value);\n    }\n};\n\n/*\n** fill a closure with new upvalues\n*/\nconst luaF_initupvals = function(L, cl) {\n    for (let i = 0; i < cl.nupvalues; i++)\n        cl.upvals[i] = new lobject.TValue(LUA_TNIL, null);\n};\n\n/*\n** Look for n-th local variable at line 'line' in function 'func'.\n** Returns null if not found.\n*/\nconst luaF_getlocalname = function(f, local_number, pc) {\n    for (let i = 0; i < f.locvars.length && f.locvars[i].startpc <= pc; i++) {\n        if (pc < f.locvars[i].endpc) {  /* is variable active? */\n            local_number--;\n            if (local_number === 0)\n                return f.locvars[i].varname.getstr();\n        }\n    }\n    return null;  /* not found */\n};\n\nmodule.exports.MAXUPVAL          = 255;\nmodule.exports.Proto             = Proto;\nmodule.exports.luaF_findupval    = luaF_findupval;\nmodule.exports.luaF_close        = luaF_close;\nmodule.exports.luaF_getlocalname = luaF_getlocalname;\nmodule.exports.luaF_initupvals   = luaF_initupvals;\nmodule.exports.luaF_newLclosure  = luaF_newLclosure;\n","\"use strict\";\n\nconst { lua_pop } = require('./lua.js');\nconst { luaL_requiref } = require('./lauxlib.js');\nconst { to_luastring } = require(\"./fengaricore.js\");\n\nconst loadedlibs = {};\n\n/* export before requiring lualib.js */\nconst luaL_openlibs = function(L) {\n    /* \"require\" functions from 'loadedlibs' and set results to global table */\n    for (let lib in loadedlibs) {\n        luaL_requiref(L, to_luastring(lib), loadedlibs[lib], 1);\n        lua_pop(L, 1); /* remove lib */\n    }\n};\nmodule.exports.luaL_openlibs = luaL_openlibs;\n\nconst lualib = require('./lualib.js');\nconst { luaopen_base }      = require('./lbaselib.js');\nconst { luaopen_coroutine } = require('./lcorolib.js');\nconst { luaopen_debug }     = require('./ldblib.js');\nconst { luaopen_math }      = require('./lmathlib.js');\nconst { luaopen_package }   = require('./loadlib.js');\nconst { luaopen_os }        = require('./loslib.js');\nconst { luaopen_string }    = require('./lstrlib.js');\nconst { luaopen_table }     = require('./ltablib.js');\nconst { luaopen_utf8 }      = require('./lutf8lib.js');\n\nloadedlibs[\"_G\"] = luaopen_base,\nloadedlibs[lualib.LUA_LOADLIBNAME] = luaopen_package;\nloadedlibs[lualib.LUA_COLIBNAME] = luaopen_coroutine;\nloadedlibs[lualib.LUA_TABLIBNAME] = luaopen_table;\nloadedlibs[lualib.LUA_OSLIBNAME] = luaopen_os;\nloadedlibs[lualib.LUA_STRLIBNAME] = luaopen_string;\nloadedlibs[lualib.LUA_MATHLIBNAME] = luaopen_math;\nloadedlibs[lualib.LUA_UTF8LIBNAME] = luaopen_utf8;\nloadedlibs[lualib.LUA_DBLIBNAME] = luaopen_debug;\nif (typeof process !== \"undefined\")\n    loadedlibs[lualib.LUA_IOLIBNAME] = require('./liolib.js').luaopen_io;\n\n/* Extension: fengari library */\nconst { luaopen_fengari } = require('./fengarilib.js');\nloadedlibs[lualib.LUA_FENGARILIBNAME] = luaopen_fengari;\n","\"use strict\";\n\nconst { luastring_of } = require('./defs.js');\n\nconst luai_ctype_ = luastring_of(\n    0x00,  /* EOZ */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 0. */\n    0x00,  0x08,  0x08,  0x08,  0x08,  0x08,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 1. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x0c,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,        /* 2. */\n    0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,\n    0x16,  0x16,  0x16,  0x16,  0x16,  0x16,  0x16,  0x16,        /* 3. */\n    0x16,  0x16,  0x04,  0x04,  0x04,  0x04,  0x04,  0x04,\n    0x04,  0x15,  0x15,  0x15,  0x15,  0x15,  0x15,  0x05,        /* 4. */\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,        /* 5. */\n    0x05,  0x05,  0x05,  0x04,  0x04,  0x04,  0x04,  0x05,\n    0x04,  0x15,  0x15,  0x15,  0x15,  0x15,  0x15,  0x05,        /* 6. */\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,\n    0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,  0x05,        /* 7. */\n    0x05,  0x05,  0x05,  0x04,  0x04,  0x04,  0x04,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 8. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* 9. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* a. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* b. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* c. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* d. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* e. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,        /* f. */\n    0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00,  0x00\n);\n\nconst ALPHABIT = 0;\nconst DIGITBIT = 1;\nconst PRINTBIT = 2;\nconst SPACEBIT = 3;\nconst XDIGITBIT = 4;\n\nconst lisdigit = function(c) {\n    return (luai_ctype_[c+1] & (1<<DIGITBIT)) !== 0;\n};\n\nconst lisxdigit = function(c) {\n    return (luai_ctype_[c+1] & (1<<XDIGITBIT)) !== 0;\n};\n\nconst lisprint = function(c) {\n    return (luai_ctype_[c+1] & (1<<PRINTBIT)) !== 0;\n};\n\nconst lisspace = function(c) {\n    return (luai_ctype_[c+1] & (1<<SPACEBIT)) !== 0;\n};\n\nconst lislalpha = function(c) {\n    return (luai_ctype_[c+1] & (1<<ALPHABIT)) !== 0;\n};\n\nconst lislalnum = function(c) {\n    return (luai_ctype_[c+1] & ((1<<ALPHABIT)|(1<<DIGITBIT))) !== 0;\n};\n\nmodule.exports.lisdigit   = lisdigit;\nmodule.exports.lislalnum  = lislalnum;\nmodule.exports.lislalpha  = lislalpha;\nmodule.exports.lisprint   = lisprint;\nmodule.exports.lisspace   = lisspace;\nmodule.exports.lisxdigit  = lisxdigit;\n","\"use strict\";\n\nconst {\n    constant_types: { LUA_TBOOLEAN, LUA_TLNGSTR },\n    thread_status: { LUA_ERRSYNTAX },\n    to_luastring\n} = require('./defs.js');\nconst {\n    LUA_MINBUFFER,\n    MAX_INT,\n    lua_assert\n} = require('./llimits.js');\nconst ldebug   = require('./ldebug.js');\nconst ldo      = require('./ldo.js');\nconst {\n    lisdigit,\n    lislalnum,\n    lislalpha,\n    lisspace,\n    lisxdigit\n} = require('./ljstype.js');\nconst lobject  = require('./lobject.js');\nconst {\n    luaS_bless,\n    luaS_hash,\n    luaS_hashlongstr,\n    luaS_new\n} = require('./lstring.js');\nconst ltable   = require('./ltable.js');\nconst {\n    EOZ,\n    luaZ_buffer,\n    luaZ_buffremove,\n    luaZ_resetbuffer,\n    luaZ_resizebuffer\n} = require('./lzio.js');\n\nconst FIRST_RESERVED = 257;\n\nconst LUA_ENV = to_luastring(\"_ENV\", true);\n\n/* terminal symbols denoted by reserved words */\nconst TK_AND      = FIRST_RESERVED;\nconst TK_BREAK    = FIRST_RESERVED + 1;\nconst TK_DO       = FIRST_RESERVED + 2;\nconst TK_ELSE     = FIRST_RESERVED + 3;\nconst TK_ELSEIF   = FIRST_RESERVED + 4;\nconst TK_END      = FIRST_RESERVED + 5;\nconst TK_FALSE    = FIRST_RESERVED + 6;\nconst TK_FOR      = FIRST_RESERVED + 7;\nconst TK_FUNCTION = FIRST_RESERVED + 8;\nconst TK_GOTO     = FIRST_RESERVED + 9;\nconst TK_IF       = FIRST_RESERVED + 10;\nconst TK_IN       = FIRST_RESERVED + 11;\nconst TK_LOCAL    = FIRST_RESERVED + 12;\nconst TK_NIL      = FIRST_RESERVED + 13;\nconst TK_NOT      = FIRST_RESERVED + 14;\nconst TK_OR       = FIRST_RESERVED + 15;\nconst TK_REPEAT   = FIRST_RESERVED + 16;\nconst TK_RETURN   = FIRST_RESERVED + 17;\nconst TK_THEN     = FIRST_RESERVED + 18;\nconst TK_TRUE     = FIRST_RESERVED + 19;\nconst TK_UNTIL    = FIRST_RESERVED + 20;\nconst TK_WHILE    = FIRST_RESERVED + 21;\n/* other terminal symbols */\nconst TK_IDIV     = FIRST_RESERVED + 22;\nconst TK_CONCAT   = FIRST_RESERVED + 23;\nconst TK_DOTS     = FIRST_RESERVED + 24;\nconst TK_EQ       = FIRST_RESERVED + 25;\nconst TK_GE       = FIRST_RESERVED + 26;\nconst TK_LE       = FIRST_RESERVED + 27;\nconst TK_NE       = FIRST_RESERVED + 28;\nconst TK_SHL      = FIRST_RESERVED + 29;\nconst TK_SHR      = FIRST_RESERVED + 30;\nconst TK_DBCOLON  = FIRST_RESERVED + 31;\nconst TK_EOS      = FIRST_RESERVED + 32;\nconst TK_FLT      = FIRST_RESERVED + 33;\nconst TK_INT      = FIRST_RESERVED + 34;\nconst TK_NAME     = FIRST_RESERVED + 35;\nconst TK_STRING   = FIRST_RESERVED + 36;\n\nconst RESERVED = {\n    \"TK_AND\":      TK_AND,\n    \"TK_BREAK\":    TK_BREAK,\n    \"TK_DO\":       TK_DO,\n    \"TK_ELSE\":     TK_ELSE,\n    \"TK_ELSEIF\":   TK_ELSEIF,\n    \"TK_END\":      TK_END,\n    \"TK_FALSE\":    TK_FALSE,\n    \"TK_FOR\":      TK_FOR,\n    \"TK_FUNCTION\": TK_FUNCTION,\n    \"TK_GOTO\":     TK_GOTO,\n    \"TK_IF\":       TK_IF,\n    \"TK_IN\":       TK_IN,\n    \"TK_LOCAL\":    TK_LOCAL,\n    \"TK_NIL\":      TK_NIL,\n    \"TK_NOT\":      TK_NOT,\n    \"TK_OR\":       TK_OR,\n    \"TK_REPEAT\":   TK_REPEAT,\n    \"TK_RETURN\":   TK_RETURN,\n    \"TK_THEN\":     TK_THEN,\n    \"TK_TRUE\":     TK_TRUE,\n    \"TK_UNTIL\":    TK_UNTIL,\n    \"TK_WHILE\":    TK_WHILE,\n    \"TK_IDIV\":     TK_IDIV,\n    \"TK_CONCAT\":   TK_CONCAT,\n    \"TK_DOTS\":     TK_DOTS,\n    \"TK_EQ\":       TK_EQ,\n    \"TK_GE\":       TK_GE,\n    \"TK_LE\":       TK_LE,\n    \"TK_NE\":       TK_NE,\n    \"TK_SHL\":      TK_SHL,\n    \"TK_SHR\":      TK_SHR,\n    \"TK_DBCOLON\":  TK_DBCOLON,\n    \"TK_EOS\":      TK_EOS,\n    \"TK_FLT\":      TK_FLT,\n    \"TK_INT\":      TK_INT,\n    \"TK_NAME\":     TK_NAME,\n    \"TK_STRING\":   TK_STRING\n};\n\nconst luaX_tokens = [\n    \"and\", \"break\", \"do\", \"else\", \"elseif\",\n    \"end\", \"false\", \"for\", \"function\", \"goto\", \"if\",\n    \"in\", \"local\", \"nil\", \"not\", \"or\", \"repeat\",\n    \"return\", \"then\", \"true\", \"until\", \"while\",\n    \"//\", \"..\", \"...\", \"==\", \">=\", \"<=\", \"~=\",\n    \"<<\", \">>\", \"::\", \"<eof>\",\n    \"<number>\", \"<integer>\", \"<name>\", \"<string>\"\n].map((e, i)=>to_luastring(e));\n\nclass SemInfo {\n    constructor() {\n        this.r = NaN;\n        this.i = NaN;\n        this.ts = null;\n    }\n}\n\nclass Token {\n    constructor() {\n        this.token = NaN;\n        this.seminfo = new SemInfo();\n    }\n}\n\n/* state of the lexer plus state of the parser when shared by all\n   functions */\nclass LexState {\n    constructor() {\n        this.current = NaN;  /* current character (charint) */\n        this.linenumber = NaN;  /* input line counter */\n        this.lastline = NaN;  /* line of last token 'consumed' */\n        this.t = new Token();  /* current token */\n        this.lookahead = new Token();  /* look ahead token */\n        this.fs = null;  /* current function (parser) */\n        this.L = null;\n        this.z = null; /* input stream */\n        this.buff = null;  /* buffer for tokens */\n        this.h = null;  /* to reuse strings */\n        this.dyd = null;  /* dynamic structures used by the parser */\n        this.source = null;  /* current source name */\n        this.envn = null;  /* environment variable name */\n    }\n}\n\nconst save = function(ls, c) {\n    let b = ls.buff;\n    if (b.n + 1 > b.buffer.length) {\n        if (b.buffer.length >= MAX_INT/2)\n            lexerror(ls, to_luastring(\"lexical element too long\", true), 0);\n        let newsize = b.buffer.length*2;\n        luaZ_resizebuffer(ls.L, b, newsize);\n    }\n    b.buffer[b.n++] = c < 0 ? 255 + c + 1 : c;\n};\n\nconst luaX_token2str = function(ls, token) {\n    if (token < FIRST_RESERVED) {  /* single-byte symbols? */\n        return lobject.luaO_pushfstring(ls.L, to_luastring(\"'%c'\", true), token);\n    } else {\n        let s = luaX_tokens[token - FIRST_RESERVED];\n        if (token < TK_EOS)  /* fixed format (symbols and reserved words)? */\n            return lobject.luaO_pushfstring(ls.L, to_luastring(\"'%s'\", true), s);\n        else  /* names, strings, and numerals */\n            return s;\n    }\n};\n\nconst currIsNewline = function(ls) {\n    return ls.current === 10 /* ('\\n').charCodeAt(0) */ || ls.current === 13 /* ('\\r').charCodeAt(0) */;\n};\n\nconst next = function(ls) {\n    ls.current = ls.z.zgetc();\n};\n\nconst save_and_next = function(ls) {\n    save(ls, ls.current);\n    next(ls);\n};\n\n/*\n** creates a new string and anchors it in scanner's table so that\n** it will not be collected until the end of the compilation\n** (by that time it should be anchored somewhere)\n*/\nconst TVtrue = new lobject.TValue(LUA_TBOOLEAN, true);\nconst luaX_newstring = function(ls, str) {\n    let L = ls.L;\n    let ts = luaS_new(L, str);\n    /* HACK: Workaround lack of ltable 'keyfromval' */\n    let tpair = ls.h.strong.get(luaS_hashlongstr(ts));\n    if (!tpair) { /* not in use yet? */\n        let key = new lobject.TValue(LUA_TLNGSTR, ts);\n        ltable.luaH_setfrom(L, ls.h, key, TVtrue);\n    } else { /* string already present */\n        ts = tpair.key.tsvalue(); /* re-use value previously stored */\n    }\n    return ts;\n};\n\n/*\n** increment line number and skips newline sequence (any of\n** \\n, \\r, \\n\\r, or \\r\\n)\n*/\nconst inclinenumber = function(ls) {\n    let old = ls.current;\n    lua_assert(currIsNewline(ls));\n    next(ls);  /* skip '\\n' or '\\r' */\n    if (currIsNewline(ls) && ls.current !== old)\n        next(ls);  /* skip '\\n\\r' or '\\r\\n' */\n    if (++ls.linenumber >= MAX_INT)\n        lexerror(ls, to_luastring(\"chunk has too many lines\", true), 0);\n};\n\nconst luaX_setinput = function(L, ls, z, source, firstchar) {\n    ls.t = {\n        token: 0,\n        seminfo: new SemInfo()\n    };\n    ls.L = L;\n    ls.current = firstchar;\n    ls.lookahead = {\n        token: TK_EOS,\n        seminfo: new SemInfo()\n    };\n    ls.z = z;\n    ls.fs = null;\n    ls.linenumber = 1;\n    ls.lastline = 1;\n    ls.source = source;\n    ls.envn = luaS_bless(L, LUA_ENV);\n    luaZ_resizebuffer(L, ls.buff, LUA_MINBUFFER);  /* initialize buffer */\n};\n\nconst check_next1 = function(ls, c) {\n    if (ls.current === c) {\n        next(ls);\n        return true;\n    }\n\n    return false;\n};\n\n/*\n** Check whether current char is in set 'set' (with two chars) and\n** saves it\n*/\nconst check_next2 = function(ls, set) {\n    if (ls.current === set[0].charCodeAt(0) || ls.current === set[1].charCodeAt(0)) {\n        save_and_next(ls);\n        return true;\n    }\n\n    return false;\n};\n\nconst read_numeral = function(ls, seminfo) {\n    let expo = \"Ee\";\n    let first = ls.current;\n    lua_assert(lisdigit(ls.current));\n    save_and_next(ls);\n    if (first === 48 /* ('0').charCodeAt(0) */ && check_next2(ls, \"xX\"))  /* hexadecimal? */\n        expo = \"Pp\";\n\n    for (;;) {\n        if (check_next2(ls, expo))  /* exponent part? */\n            check_next2(ls, \"-+\");  /* optional exponent sign */\n        if (lisxdigit(ls.current))\n            save_and_next(ls);\n        else if (ls.current === 46 /* ('.').charCodeAt(0) */)\n            save_and_next(ls);\n        else break;\n    }\n\n    // save(ls, 0);\n\n    let obj = new lobject.TValue();\n    if (lobject.luaO_str2num(luaZ_buffer(ls.buff), obj) === 0)  /* format error? */\n        lexerror(ls, to_luastring(\"malformed number\", true), TK_FLT);\n    if (obj.ttisinteger()) {\n        seminfo.i = obj.value;\n        return TK_INT;\n    } else {\n        lua_assert(obj.ttisfloat());\n        seminfo.r = obj.value;\n        return TK_FLT;\n    }\n};\n\nconst txtToken = function(ls, token) {\n    switch (token) {\n        case TK_NAME: case TK_STRING:\n        case TK_FLT: case TK_INT:\n            // save(ls, 0);\n            return lobject.luaO_pushfstring(ls.L, to_luastring(\"'%s'\", true), luaZ_buffer(ls.buff));\n        default:\n            return luaX_token2str(ls, token);\n    }\n};\n\nconst lexerror = function(ls, msg, token) {\n    msg = ldebug.luaG_addinfo(ls.L, msg, ls.source, ls.linenumber);\n    if (token)\n        lobject.luaO_pushfstring(ls.L, to_luastring(\"%s near %s\"), msg, txtToken(ls, token));\n    ldo.luaD_throw(ls.L, LUA_ERRSYNTAX);\n};\n\nconst luaX_syntaxerror = function(ls, msg) {\n    lexerror(ls, msg, ls.t.token);\n};\n\n/*\n** skip a sequence '[=*[' or ']=*]'; if sequence is well formed, return\n** its number of '='s; otherwise, return a negative number (-1 iff there\n** are no '='s after initial bracket)\n*/\nconst skip_sep = function(ls) {\n    let count = 0;\n    let s = ls.current;\n    lua_assert(s === 91 /* ('[').charCodeAt(0) */ || s === 93 /* (']').charCodeAt(0) */);\n    save_and_next(ls);\n    while (ls.current === 61 /* ('=').charCodeAt(0) */) {\n        save_and_next(ls);\n        count++;\n    }\n    return ls.current === s ? count : (-count) - 1;\n};\n\nconst read_long_string = function(ls, seminfo, sep) {\n    let line = ls.linenumber;  /* initial line (for error message) */\n    save_and_next(ls);  /* skip 2nd '[' */\n\n    if (currIsNewline(ls))  /* string starts with a newline? */\n        inclinenumber(ls);  /* skip it */\n\n    let skip = false;\n    for (; !skip ;) {\n        switch (ls.current) {\n            case EOZ: {  /* error */\n                let what = seminfo ? \"string\" : \"comment\";\n                let msg = `unfinished long ${what} (starting at line ${line})`;\n                lexerror(ls, to_luastring(msg), TK_EOS);\n                break;\n            }\n            case 93 /* (']').charCodeAt(0) */: {\n                if (skip_sep(ls) === sep) {\n                    save_and_next(ls);  /* skip 2nd ']' */\n                    skip = true;\n                }\n                break;\n            }\n            case 10 /* ('\\n').charCodeAt(0) */:\n            case 13 /* ('\\r').charCodeAt(0) */: {\n                save(ls, 10 /* ('\\n').charCodeAt(0) */);\n                inclinenumber(ls);\n                if (!seminfo) luaZ_resetbuffer(ls.buff);\n                break;\n            }\n            default: {\n                if (seminfo) save_and_next(ls);\n                else next(ls);\n            }\n        }\n    }\n\n    if (seminfo)\n        seminfo.ts = luaX_newstring(ls, ls.buff.buffer.subarray(2 + sep, ls.buff.n - (2 + sep)));\n};\n\nconst esccheck = function(ls, c, msg) {\n    if (!c) {\n        if (ls.current !== EOZ)\n            save_and_next(ls);  /* add current to buffer for error message */\n        lexerror(ls, msg, TK_STRING);\n    }\n};\n\nconst gethexa = function(ls) {\n    save_and_next(ls);\n    esccheck(ls, lisxdigit(ls.current), to_luastring(\"hexadecimal digit expected\", true));\n    return lobject.luaO_hexavalue(ls.current);\n};\n\nconst readhexaesc = function(ls) {\n    let r = gethexa(ls);\n    r = (r << 4) + gethexa(ls);\n    luaZ_buffremove(ls.buff, 2);  /* remove saved chars from buffer */\n    return r;\n};\n\nconst readutf8desc = function(ls) {\n    let i = 4;  /* chars to be removed: '\\', 'u', '{', and first digit */\n    save_and_next(ls);  /* skip 'u' */\n    esccheck(ls, ls.current === 123 /* ('{').charCodeAt(0) */, to_luastring(\"missing '{'\", true));\n    let r = gethexa(ls);  /* must have at least one digit */\n\n    save_and_next(ls);\n    while (lisxdigit(ls.current)) {\n        i++;\n        r = (r << 4) + lobject.luaO_hexavalue(ls.current);\n        esccheck(ls, r <= 0x10FFFF, to_luastring(\"UTF-8 value too large\", true));\n        save_and_next(ls);\n    }\n    esccheck(ls, ls.current === 125 /* ('}').charCodeAt(0) */, to_luastring(\"missing '}'\", true));\n    next(ls);  /* skip '}' */\n    luaZ_buffremove(ls.buff, i);  /* remove saved chars from buffer */\n    return r;\n};\n\nconst utf8esc = function(ls) {\n    let buff = new Uint8Array(lobject.UTF8BUFFSZ);\n    let n = lobject.luaO_utf8esc(buff, readutf8desc(ls));\n    for (; n > 0; n--)  /* add 'buff' to string */\n        save(ls, buff[lobject.UTF8BUFFSZ - n]);\n};\n\nconst readdecesc = function(ls) {\n    let r = 0;  /* result accumulator */\n    let i;\n    for (i = 0; i < 3 && lisdigit(ls.current); i++) {  /* read up to 3 digits */\n        r = 10 * r + ls.current - 48 /* ('0').charCodeAt(0) */;\n        save_and_next(ls);\n    }\n    esccheck(ls, r <= 255, to_luastring(\"decimal escape too large\", true));\n    luaZ_buffremove(ls.buff, i);  /* remove read digits from buffer */\n    return r;\n};\n\nconst read_string = function(ls, del, seminfo) {\n    save_and_next(ls);  /* keep delimiter (for error messages) */\n\n    while (ls.current !== del) {\n        switch (ls.current) {\n            case EOZ:\n                lexerror(ls, to_luastring(\"unfinished string\", true), TK_EOS);\n                break;\n            case 10 /* ('\\n').charCodeAt(0) */:\n            case 13 /* ('\\r').charCodeAt(0) */:\n                lexerror(ls, to_luastring(\"unfinished string\", true), TK_STRING);\n                break;\n            case 92 /* ('\\\\').charCodeAt(0) */: {  /* escape sequences */\n                save_and_next(ls);  /* keep '\\\\' for error messages */\n                let will;\n                let c;\n                switch(ls.current) {\n                    case 97 /* ('a').charCodeAt(0) */: c = 7 /* \\a isn't valid JS */; will = 'read_save'; break;\n                    case 98 /* ('b').charCodeAt(0) */: c = 8 /* ('\\b').charCodeAt(0) */; will = 'read_save'; break;\n                    case 102 /* ('f').charCodeAt(0) */: c = 12 /* ('\\f').charCodeAt(0) */; will = 'read_save'; break;\n                    case 110 /* ('n').charCodeAt(0) */: c = 10 /* ('\\n').charCodeAt(0) */; will = 'read_save'; break;\n                    case 114 /* ('r').charCodeAt(0) */: c = 13 /* ('\\r').charCodeAt(0) */; will = 'read_save'; break;\n                    case 116 /* ('t').charCodeAt(0) */: c = 9 /* ('\\t').charCodeAt(0) */; will = 'read_save'; break;\n                    case 118 /* ('v').charCodeAt(0) */: c = 11 /* ('\\v').charCodeAt(0) */; will = 'read_save'; break;\n                    case 120 /* ('x').charCodeAt(0) */: c = readhexaesc(ls); will = 'read_save'; break;\n                    case 117 /* ('u').charCodeAt(0) */: utf8esc(ls); will = 'no_save'; break;\n                    case 10 /* ('\\n').charCodeAt(0) */:\n                    case 13 /* ('\\r').charCodeAt(0) */:\n                        inclinenumber(ls); c = 10 /* ('\\n').charCodeAt(0) */; will = 'only_save'; break;\n                    case 92 /* ('\\\\').charCodeAt(0) */:\n                    case 34 /* ('\"').charCodeAt(0) */:\n                    case 39 /* ('\\'').charCodeAt(0) */:\n                        c = ls.current; will = 'read_save'; break;\n                    case EOZ: will = 'no_save'; break;  /* will raise an error next loop */\n                    case 122 /* ('z').charCodeAt(0) */: {  /* zap following span of spaces */\n                        luaZ_buffremove(ls.buff, 1);  /* remove '\\\\' */\n                        next(ls);  /* skip the 'z' */\n                        while (lisspace(ls.current)) {\n                            if (currIsNewline(ls)) inclinenumber(ls);\n                            else next(ls);\n                        }\n                        will = 'no_save'; break;\n                    }\n                    default: {\n                        esccheck(ls, lisdigit(ls.current), to_luastring(\"invalid escape sequence\", true));\n                        c = readdecesc(ls);  /* digital escape '\\ddd' */\n                        will = 'only_save'; break;\n                    }\n                }\n\n                if (will === 'read_save')\n                    next(ls);\n\n                if (will === 'read_save' || will === 'only_save') {\n                    luaZ_buffremove(ls.buff, 1);  /* remove '\\\\' */\n                    save(ls, c);\n                }\n\n                break;\n            }\n            default:\n                save_and_next(ls);\n        }\n    }\n    save_and_next(ls);  /* skip delimiter */\n\n    seminfo.ts = luaX_newstring(ls, ls.buff.buffer.subarray(1, ls.buff.n-1));\n};\n\nconst token_to_index = Object.create(null); /* don't want to return true for e.g. 'hasOwnProperty' */\nluaX_tokens.forEach((e, i)=>token_to_index[luaS_hash(e)] = i);\n\nconst isreserved = function(w) {\n    let kidx = token_to_index[luaS_hashlongstr(w)];\n    return kidx !== void 0 && kidx <= 22;\n};\n\nconst llex = function(ls, seminfo) {\n    luaZ_resetbuffer(ls.buff);\n    for (;;) {\n        lua_assert(typeof ls.current == \"number\"); /* fengari addition */\n        switch (ls.current) {\n            case 10 /* ('\\n').charCodeAt(0) */:\n            case 13 /* ('\\r').charCodeAt(0) */: {  /* line breaks */\n                inclinenumber(ls);\n                break;\n            }\n            case 32 /* (' ').charCodeAt(0) */:\n            case 12 /* ('\\f').charCodeAt(0) */:\n            case 9 /* ('\\t').charCodeAt(0) */:\n            case 11 /* ('\\v').charCodeAt(0) */: {  /* spaces */\n                next(ls);\n                break;\n            }\n            case 45 /* ('-').charCodeAt(0) */: {  /* '-' or '--' (comment) */\n                next(ls);\n                if (ls.current !== 45 /* ('-').charCodeAt(0) */) return 45 /* ('-').charCodeAt(0) */;\n                /* else is a comment */\n                next(ls);\n                if (ls.current === 91 /* ('[').charCodeAt(0) */) {  /* long comment? */\n                    let sep = skip_sep(ls);\n                    luaZ_resetbuffer(ls.buff);  /* 'skip_sep' may dirty the buffer */\n                    if (sep >= 0) {\n                        read_long_string(ls, null, sep);  /* skip long comment */\n                        luaZ_resetbuffer(ls.buff);  /* previous call may dirty the buff. */\n                        break;\n                    }\n                }\n\n                /* else short comment */\n                while (!currIsNewline(ls) && ls.current !== EOZ)\n                    next(ls);  /* skip until end of line (or end of file) */\n                break;\n            }\n            case 91 /* ('[').charCodeAt(0) */: {  /* long string or simply '[' */\n                let sep = skip_sep(ls);\n                if (sep >= 0) {\n                    read_long_string(ls, seminfo, sep);\n                    return TK_STRING;\n                } else if (sep !== -1)  /* '[=...' missing second bracket */\n                    lexerror(ls, to_luastring(\"invalid long string delimiter\", true), TK_STRING);\n                return 91 /* ('[').charCodeAt(0) */;\n            }\n            case 61 /* ('=').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_EQ;\n                else return 61 /* ('=').charCodeAt(0) */;\n            }\n            case 60 /* ('<').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_LE;\n                else if (check_next1(ls, 60 /* ('<').charCodeAt(0) */)) return TK_SHL;\n                else return 60 /* ('<').charCodeAt(0) */;\n            }\n            case 62 /* ('>').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_GE;\n                else if (check_next1(ls, 62 /* ('>').charCodeAt(0) */)) return TK_SHR;\n                else return 62 /* ('>').charCodeAt(0) */;\n            }\n            case 47 /* ('/').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 47 /* ('/').charCodeAt(0) */)) return TK_IDIV;\n                else return 47 /* ('/').charCodeAt(0) */;\n            }\n            case 126 /* ('~').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 61 /* ('=').charCodeAt(0) */)) return TK_NE;\n                else return 126 /* ('~').charCodeAt(0) */;\n            }\n            case 58 /* (':').charCodeAt(0) */: {\n                next(ls);\n                if (check_next1(ls, 58 /* (':').charCodeAt(0) */)) return TK_DBCOLON;\n                else return 58 /* (':').charCodeAt(0) */;\n            }\n            case 34 /* ('\"').charCodeAt(0) */:\n            case 39 /* ('\\'').charCodeAt(0) */: {  /* short literal strings */\n                read_string(ls, ls.current, seminfo);\n                return TK_STRING;\n            }\n            case 46 /* ('.').charCodeAt(0) */: {  /* '.', '..', '...', or number */\n                save_and_next(ls);\n                if (check_next1(ls, 46 /* ('.').charCodeAt(0) */)) {\n                    if (check_next1(ls, 46 /* ('.').charCodeAt(0) */))\n                        return TK_DOTS;   /* '...' */\n                    else return TK_CONCAT;   /* '..' */\n                }\n                else if (!lisdigit(ls.current)) return 46 /* ('.').charCodeAt(0) */;\n                else return read_numeral(ls, seminfo);\n            }\n            case 48 /* ('0').charCodeAt(0) */: case 49 /* ('1').charCodeAt(0) */: case 50 /* ('2').charCodeAt(0) */: case 51 /* ('3').charCodeAt(0) */: case 52 /* ('4').charCodeAt(0) */:\n            case 53 /* ('5').charCodeAt(0) */: case 54 /* ('6').charCodeAt(0) */: case 55 /* ('7').charCodeAt(0) */: case 56 /* ('8').charCodeAt(0) */: case 57 /* ('9').charCodeAt(0) */: {\n                return read_numeral(ls, seminfo);\n            }\n            case EOZ: {\n                return TK_EOS;\n            }\n            default: {\n                if (lislalpha(ls.current)) {  /* identifier or reserved word? */\n                    do {\n                        save_and_next(ls);\n                    } while (lislalnum(ls.current));\n                    let ts = luaX_newstring(ls, luaZ_buffer(ls.buff));\n                    seminfo.ts = ts;\n                    let kidx = token_to_index[luaS_hashlongstr(ts)];\n                    if (kidx !== void 0 && kidx <= 22)  /* reserved word? */\n                        return kidx + FIRST_RESERVED;\n                    else\n                        return TK_NAME;\n                } else {  /* single-char tokens (+ - / ...) */\n                    let c = ls.current;\n                    next(ls);\n                    return c;\n                }\n            }\n        }\n    }\n};\n\nconst luaX_next = function(ls) {\n    ls.lastline = ls.linenumber;\n    if (ls.lookahead.token !== TK_EOS) {  /* is there a look-ahead token? */\n        ls.t.token = ls.lookahead.token;  /* use this one */\n        ls.t.seminfo.i = ls.lookahead.seminfo.i;\n        ls.t.seminfo.r = ls.lookahead.seminfo.r;\n        ls.t.seminfo.ts = ls.lookahead.seminfo.ts;\n        ls.lookahead.token = TK_EOS;  /* and discharge it */\n    } else\n        ls.t.token = llex(ls, ls.t.seminfo);  /* read next token */\n};\n\nconst luaX_lookahead = function(ls) {\n    lua_assert(ls.lookahead.token === TK_EOS);\n    ls.lookahead.token = llex(ls, ls.lookahead.seminfo);\n    return ls.lookahead.token;\n};\n\nmodule.exports.FIRST_RESERVED   = FIRST_RESERVED;\nmodule.exports.LUA_ENV          = LUA_ENV;\nmodule.exports.LexState         = LexState;\nmodule.exports.RESERVED         = RESERVED;\nmodule.exports.isreserved       = isreserved;\nmodule.exports.luaX_lookahead   = luaX_lookahead;\nmodule.exports.luaX_newstring   = luaX_newstring;\nmodule.exports.luaX_next        = luaX_next;\nmodule.exports.luaX_setinput    = luaX_setinput;\nmodule.exports.luaX_syntaxerror = luaX_syntaxerror;\nmodule.exports.luaX_token2str   = luaX_token2str;\nmodule.exports.luaX_tokens      = luaX_tokens;\n","\"use strict\";\n\nconst { luai_apicheck } = require(\"./luaconf.js\");\n\nconst lua_assert = function(c) {\n    if (!c) throw Error(\"assertion failed\");\n};\nmodule.exports.lua_assert = lua_assert;\n\nmodule.exports.luai_apicheck = luai_apicheck || function(l, e) { return lua_assert(e); };\n\nconst api_check = function(l, e, msg) {\n    return luai_apicheck(l, e && msg);\n};\nmodule.exports.api_check = api_check;\n\nconst LUAI_MAXCCALLS = 200;\nmodule.exports.LUAI_MAXCCALLS = LUAI_MAXCCALLS;\n\n/* minimum size for string buffer */\nconst LUA_MINBUFFER = 32;\nmodule.exports.LUA_MINBUFFER = LUA_MINBUFFER;\n\nconst luai_nummod = function(L, a, b) {\n    let m = a % b;\n    if ((m*b) < 0)\n        m += b;\n    return m;\n};\nmodule.exports.luai_nummod = luai_nummod;\n\n// If later integers are more than 32bit, LUA_MAXINTEGER will then be != MAX_INT\nconst MAX_INT = 2147483647;\nmodule.exports.MAX_INT = MAX_INT;\nconst MIN_INT = -2147483648;\nmodule.exports.MIN_INT = MIN_INT;\n","\"use strict\";\n\nconst {\n    LUA_OPLT,\n    LUA_TNUMBER,\n    lua_compare,\n    lua_gettop,\n    lua_isinteger,\n    lua_isnoneornil,\n    lua_pushboolean,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushnumber,\n    lua_pushvalue,\n    lua_setfield,\n    lua_settop,\n    lua_tointeger,\n    lua_tointegerx,\n    lua_type\n} = require('./lua.js');\nconst {\n    luaL_argcheck,\n    luaL_argerror,\n    luaL_checkany,\n    luaL_checkinteger,\n    luaL_checknumber,\n    luaL_error,\n    luaL_newlib,\n    luaL_optnumber\n} = require('./lauxlib.js');\nconst {\n    LUA_MAXINTEGER,\n    LUA_MININTEGER,\n    lua_numbertointeger\n} = require('./luaconf.js');\nconst { to_luastring } = require(\"./fengaricore.js\");\n\nlet rand_state;\n/* use same parameters as glibc LCG */\nconst l_rand = function() {\n    rand_state = (1103515245 * rand_state + 12345) & 0x7fffffff;\n    return rand_state;\n};\nconst l_srand = function(x) {\n    rand_state = x|0;\n    if (rand_state === 0)\n        rand_state = 1;\n};\n\nconst math_random = function(L) {\n    let low, up;\n    /* use Math.random until randomseed is called */\n    let r = (rand_state === void 0)?Math.random():(l_rand() / 0x80000000);\n    switch (lua_gettop(L)) {  /* check number of arguments */\n        case 0:\n            lua_pushnumber(L, r);  /* Number between 0 and 1 */\n            return 1;\n        case 1: {\n            low = 1;\n            up = luaL_checkinteger(L, 1);\n            break;\n        }\n        case 2: {\n            low = luaL_checkinteger(L, 1);\n            up = luaL_checkinteger(L, 2);\n            break;\n        }\n        default: return luaL_error(L, \"wrong number of arguments\");\n    }\n\n    /* random integer in the interval [low, up] */\n    luaL_argcheck(L, low <= up, 1, \"interval is empty\");\n    luaL_argcheck(L, low >= 0 || up <= LUA_MAXINTEGER + low, 1,\n        \"interval too large\");\n\n    r *= (up - low) + 1;\n    lua_pushinteger(L, Math.floor(r) + low);\n    return 1;\n};\n\nconst math_randomseed = function(L) {\n    l_srand(luaL_checknumber(L, 1));\n    l_rand(); /* discard first value to avoid undesirable correlations */\n    return 0;\n};\n\nconst math_abs = function(L) {\n    if (lua_isinteger(L, 1)) {\n        let n = lua_tointeger(L, 1);\n        if (n < 0) n = (-n)|0;\n        lua_pushinteger(L, n);\n    }\n    else\n        lua_pushnumber(L, Math.abs(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_sin = function(L) {\n    lua_pushnumber(L, Math.sin(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_cos = function(L) {\n    lua_pushnumber(L, Math.cos(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_tan = function(L) {\n    lua_pushnumber(L, Math.tan(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_asin = function(L) {\n    lua_pushnumber(L, Math.asin(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_acos = function(L) {\n    lua_pushnumber(L, Math.acos(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_atan = function(L) {\n    let y = luaL_checknumber(L, 1);\n    let x = luaL_optnumber(L, 2, 1);\n    lua_pushnumber(L, Math.atan2(y, x));\n    return 1;\n};\n\nconst math_toint = function(L) {\n    let n = lua_tointegerx(L, 1);\n    if (n !== false)\n        lua_pushinteger(L, n);\n    else {\n        luaL_checkany(L, 1);\n        lua_pushnil(L);  /* value is not convertible to integer */\n    }\n    return 1;\n};\n\nconst pushnumint = function(L, d) {\n    let n = lua_numbertointeger(d);\n    if (n !== false)  /* does 'd' fit in an integer? */\n        lua_pushinteger(L, n);  /* result is integer */\n    else\n        lua_pushnumber(L, d);  /* result is float */\n};\n\nconst math_floor = function(L) {\n    if (lua_isinteger(L, 1))\n        lua_settop(L, 1);\n    else\n        pushnumint(L, Math.floor(luaL_checknumber(L, 1)));\n\n    return 1;\n};\n\nconst math_ceil = function(L) {\n    if (lua_isinteger(L, 1))\n        lua_settop(L, 1);\n    else\n        pushnumint(L, Math.ceil(luaL_checknumber(L, 1)));\n\n    return 1;\n};\n\nconst math_sqrt = function(L) {\n    lua_pushnumber(L, Math.sqrt(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_ult = function(L) {\n    let a = luaL_checkinteger(L, 1);\n    let b = luaL_checkinteger(L, 2);\n    lua_pushboolean(L, (a >= 0)?(b<0 || a<b):(b<0 && a<b));\n    return 1;\n};\n\nconst math_log = function(L) {\n    let x = luaL_checknumber(L, 1);\n    let res;\n    if (lua_isnoneornil(L, 2))\n        res = Math.log(x);\n    else {\n        let base = luaL_checknumber(L, 2);\n        if (base === 2)\n            res = Math.log2(x);\n        else if (base === 10)\n            res = Math.log10(x);\n        else\n            res = Math.log(x)/Math.log(base);\n    }\n    lua_pushnumber(L, res);\n    return 1;\n};\n\nconst math_exp = function(L) {\n    lua_pushnumber(L, Math.exp(luaL_checknumber(L, 1)));\n    return 1;\n};\n\nconst math_deg = function(L) {\n    lua_pushnumber(L, luaL_checknumber(L, 1) * (180 / Math.PI));\n    return 1;\n};\n\nconst math_rad = function(L) {\n    lua_pushnumber(L, luaL_checknumber(L, 1) * (Math.PI / 180));\n    return 1;\n};\n\nconst math_min = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    let imin = 1;  /* index of current minimum value */\n    luaL_argcheck(L, n >= 1, 1, \"value expected\");\n    for (let i = 2; i <= n; i++){\n        if (lua_compare(L, i, imin, LUA_OPLT))\n            imin = i;\n    }\n    lua_pushvalue(L, imin);\n    return 1;\n};\n\nconst math_max = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    let imax = 1;  /* index of current minimum value */\n    luaL_argcheck(L, n >= 1, 1, \"value expected\");\n    for (let i = 2; i <= n; i++){\n        if (lua_compare(L, imax, i, LUA_OPLT))\n            imax = i;\n    }\n    lua_pushvalue(L, imax);\n    return 1;\n};\n\nconst math_type = function(L) {\n    if (lua_type(L, 1) === LUA_TNUMBER) {\n        if (lua_isinteger(L, 1))\n            lua_pushliteral(L, \"integer\");\n        else\n            lua_pushliteral(L, \"float\");\n    } else {\n        luaL_checkany(L, 1);\n        lua_pushnil(L);\n    }\n    return 1;\n};\n\nconst math_fmod = function(L) {\n    if (lua_isinteger(L, 1) && lua_isinteger(L, 2)) {\n        let d = lua_tointeger(L, 2);\n        /* no special case needed for -1 in javascript */\n        if (d === 0) {\n            luaL_argerror(L, 2, \"zero\");\n        } else\n            lua_pushinteger(L, (lua_tointeger(L, 1) % d)|0);\n    } else {\n        let a = luaL_checknumber(L, 1);\n        let b = luaL_checknumber(L, 2);\n        lua_pushnumber(L, a%b);\n    }\n    return 1;\n};\n\nconst math_modf = function(L) {\n    if (lua_isinteger(L, 1)) {\n        lua_settop(L, 1);  /* number is its own integer part */\n        lua_pushnumber(L, 0);  /* no fractional part */\n    } else {\n        let n = luaL_checknumber(L, 1);\n        let ip = n < 0 ? Math.ceil(n) : Math.floor(n);\n        pushnumint(L, ip);\n        lua_pushnumber(L, n === ip ? 0 : n - ip);\n    }\n    return 2;\n};\n\nconst mathlib = {\n    \"abs\":        math_abs,\n    \"acos\":       math_acos,\n    \"asin\":       math_asin,\n    \"atan\":       math_atan,\n    \"ceil\":       math_ceil,\n    \"cos\":        math_cos,\n    \"deg\":        math_deg,\n    \"exp\":        math_exp,\n    \"floor\":      math_floor,\n    \"fmod\":       math_fmod,\n    \"log\":        math_log,\n    \"max\":        math_max,\n    \"min\":        math_min,\n    \"modf\":       math_modf,\n    \"rad\":        math_rad,\n    \"random\":     math_random,\n    \"randomseed\": math_randomseed,\n    \"sin\":        math_sin,\n    \"sqrt\":       math_sqrt,\n    \"tan\":        math_tan,\n    \"tointeger\":  math_toint,\n    \"type\":       math_type,\n    \"ult\":        math_ult\n};\n\nconst luaopen_math = function(L) {\n    luaL_newlib(L, mathlib);\n    lua_pushnumber(L, Math.PI);\n    lua_setfield(L, -2, to_luastring(\"pi\", true));\n    lua_pushnumber(L, Infinity);\n    lua_setfield(L, -2, to_luastring(\"huge\", true));\n    lua_pushinteger(L, LUA_MAXINTEGER);\n    lua_setfield(L, -2, to_luastring(\"maxinteger\", true));\n    lua_pushinteger(L, LUA_MININTEGER);\n    lua_setfield(L, -2, to_luastring(\"mininteger\", true));\n    return 1;\n};\n\nmodule.exports.luaopen_math = luaopen_math;\n","\"use strict\";\n\nconst {\n    LUA_DIRSEP,\n    LUA_EXEC_DIR,\n    LUA_JSPATH_DEFAULT,\n    LUA_PATH_DEFAULT,\n    LUA_PATH_MARK,\n    LUA_PATH_SEP\n} = require('./luaconf.js');\nconst {\n    LUA_OK,\n    LUA_REGISTRYINDEX,\n    LUA_TNIL,\n    LUA_TTABLE,\n    lua_callk,\n    lua_createtable,\n    lua_getfield,\n    lua_insert,\n    lua_isfunction,\n    lua_isnil,\n    lua_isstring,\n    lua_newtable,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushcclosure,\n    lua_pushcfunction,\n    lua_pushfstring,\n    lua_pushglobaltable,\n    lua_pushlightuserdata,\n    lua_pushliteral,\n    lua_pushlstring,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawgeti,\n    lua_rawgetp,\n    lua_rawseti,\n    lua_rawsetp,\n    lua_remove,\n    lua_setfield,\n    lua_setmetatable,\n    lua_settop,\n    lua_toboolean,\n    lua_tostring,\n    lua_touserdata,\n    lua_upvalueindex\n} = require('./lua.js');\nconst {\n    LUA_LOADED_TABLE,\n    LUA_PRELOAD_TABLE,\n    luaL_Buffer,\n    luaL_addvalue,\n    luaL_buffinit,\n    luaL_checkstring,\n    luaL_error,\n    luaL_getsubtable,\n    luaL_gsub,\n    luaL_len,\n    luaL_loadfile,\n    luaL_newlib,\n    luaL_optstring,\n    luaL_pushresult,\n    luaL_setfuncs\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst {\n    luastring_indexOf,\n    to_jsstring,\n    to_luastring,\n    to_uristring\n} = require(\"./fengaricore.js\");\nconst fengari  = require('./fengari.js');\n\nconst global_env = (function() {\n    if (typeof process !== \"undefined\") {\n        /* node */\n        return global;\n    } else if (typeof window !== \"undefined\") {\n        /* browser window */\n        return window;\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n        /* web worker */\n        return self;\n    } else {\n        /* unknown global env */\n        return (0, eval)('this'); /* use non-strict mode to get global env */\n    }\n})();\n\nconst JSLIBS = to_luastring(\"__JSLIBS__\");\nconst LUA_PATH_VAR = \"LUA_PATH\";\nconst LUA_JSPATH_VAR = \"LUA_JSPATH\";\n\nconst LUA_IGMARK = \"-\";\n\n/*\n** LUA_CSUBSEP is the character that replaces dots in submodule names\n** when searching for a JS loader.\n** LUA_LSUBSEP is the character that replaces dots in submodule names\n** when searching for a Lua loader.\n*/\nconst LUA_CSUBSEP = LUA_DIRSEP;\nconst LUA_LSUBSEP = LUA_DIRSEP;\n\n/* prefix for open functions in JS libraries */\nconst LUA_POF = to_luastring(\"luaopen_\");\n\n/* separator for open functions in JS libraries */\nconst LUA_OFSEP = to_luastring(\"_\");\nconst LIB_FAIL = \"open\";\n\nconst AUXMARK = to_luastring(\"\\x01\");\n\n\n/*\n** load JS library in file 'path'. If 'seeglb', load with all names in\n** the library global.\n** Returns the library; in case of error, returns NULL plus an\n** error string in the stack.\n*/\nlet lsys_load;\nif (typeof process === \"undefined\") {\n    lsys_load = function(L, path, seeglb) {\n        path = to_uristring(path);\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", path, false);\n        xhr.send();\n\n        if (xhr.status < 200 || xhr.status >= 300) {\n            lua_pushstring(L, to_luastring(`${xhr.status}: ${xhr.statusText}`));\n            return null;\n        }\n\n        let code = xhr.response;\n        /* Add sourceURL comment to get path in debugger+tracebacks */\n        if (!/\\/\\/[#@] sourceURL=/.test(code))\n            code += \" //# sourceURL=\" + path;\n        let func;\n        try {\n            func = Function(\"fengari\", code);\n        } catch (e) {\n            lua_pushstring(L, to_luastring(`${e.name}: ${e.message}`));\n            return null;\n        }\n        let res = func(fengari);\n        if (typeof res === \"function\" || (typeof res === \"object\" && res !== null)) {\n            return res;\n        } else if (res === void 0) { /* assume library added symbols to global environment */\n            return global_env;\n        } else {\n            lua_pushstring(L, to_luastring(`library returned unexpected type (${typeof res})`));\n            return null;\n        }\n    };\n} else {\n    const pathlib = require('path');\n    lsys_load = function(L, path, seeglb) {\n        path = to_jsstring(path);\n        /* relative paths should be relative to cwd, not this js file */\n        path = pathlib.resolve(process.cwd(), path);\n        try {\n            return require(path);\n        } catch (e) {\n            lua_pushstring(L, to_luastring(e.message));\n            return null;\n        }\n    };\n}\n\n/*\n** Try to find a function named 'sym' in library 'lib'.\n** Returns the function; in case of error, returns NULL plus an\n** error string in the stack.\n*/\nconst lsys_sym = function(L, lib, sym) {\n    let f = lib[to_jsstring(sym)];\n\n    if (f && typeof f === 'function')\n        return f;\n    else {\n        lua_pushfstring(L, to_luastring(\"undefined symbol: %s\"), sym);\n        return null;\n    }\n};\n\n/*\n** return registry.LUA_NOENV as a boolean\n*/\nconst noenv = function(L) {\n    lua_getfield(L, LUA_REGISTRYINDEX, to_luastring(\"LUA_NOENV\"));\n    let b = lua_toboolean(L, -1);\n    lua_pop(L, 1);  /* remove value */\n    return b;\n};\n\nlet readable;\nif (typeof process !== \"undefined\") { // Only with Node\n    const fs = require('fs');\n\n    readable = function(filename) {\n        try {\n            let fd = fs.openSync(filename, 'r');\n            fs.closeSync(fd);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    };\n} else {\n    readable = function(path) {\n        path = to_uristring(path);\n        let xhr = new XMLHttpRequest();\n        /* Following GET request done by searcher_Web will be cached */\n        xhr.open(\"GET\", path, false);\n        xhr.send();\n\n        return xhr.status >= 200 && xhr.status <= 299;\n    };\n}\n\n\n/* error codes for 'lookforfunc' */\nconst ERRLIB  = 1;\nconst ERRFUNC = 2;\n\n/*\n** Look for a C function named 'sym' in a dynamically loaded library\n** 'path'.\n** First, check whether the library is already loaded; if not, try\n** to load it.\n** Then, if 'sym' is '*', return true (as library has been loaded).\n** Otherwise, look for symbol 'sym' in the library and push a\n** C function with that symbol.\n** Return 0 and 'true' or a function in the stack; in case of\n** errors, return an error code and an error message in the stack.\n*/\nconst lookforfunc = function(L, path, sym) {\n    let reg = checkjslib(L, path);  /* check loaded JS libraries */\n    if (reg === null) {  /* must load library? */\n        reg = lsys_load(L, path, sym[0] === '*'.charCodeAt(0));  /* a global symbols if 'sym'=='*' */\n        if (reg === null) return ERRLIB;  /* unable to load library */\n        addtojslib(L, path, reg);\n    }\n    if (sym[0] === '*'.charCodeAt(0)) {  /* loading only library (no function)? */\n        lua_pushboolean(L, 1);  /* return 'true' */\n        return 0;  /* no errors */\n    }\n    else {\n        let f = lsys_sym(L, reg, sym);\n        if (f === null)\n            return ERRFUNC;  /* unable to find function */\n        lua_pushcfunction(L, f);  /* else create new function */\n        return 0;  /* no errors */\n    }\n};\n\nconst ll_loadlib = function(L) {\n    let path = luaL_checkstring(L, 1);\n    let init = luaL_checkstring(L, 2);\n    let stat = lookforfunc(L, path, init);\n    if (stat === 0)  /* no errors? */\n        return 1;  /* return the loaded function */\n    else {  /* error; error message is on stack top */\n        lua_pushnil(L);\n        lua_insert(L, -2);\n        lua_pushliteral(L, (stat === ERRLIB) ? LIB_FAIL : \"init\");\n        return 3;  /* return nil, error message, and where */\n    }\n};\n\nconst env = (function() {\n    if (typeof process !== \"undefined\") {\n        /* node */\n        return process.env;\n    } else {\n        return global_env;\n    }\n})();\n\n/*\n** Set a path\n*/\nconst setpath = function(L, fieldname, envname, dft) {\n    let nver = `${envname}${lualib.LUA_VERSUFFIX}`;\n    lua_pushstring(L, to_luastring(nver));\n    let path = env[nver];  /* use versioned name */\n    if (path === undefined)  /* no environment variable? */\n        path = env[envname];  /* try unversioned name */\n    if (path === undefined || noenv(L))  /* no environment variable? */\n        lua_pushstring(L, dft);  /* use default */\n    else {\n        /* replace \";;\" by \";AUXMARK;\" and then AUXMARK by default path */\n        path = luaL_gsub(\n            L,\n            to_luastring(path),\n            to_luastring(LUA_PATH_SEP + LUA_PATH_SEP, true),\n            to_luastring(LUA_PATH_SEP + to_jsstring(AUXMARK) + LUA_PATH_SEP, true)\n        );\n        luaL_gsub(L, path, AUXMARK, dft);\n        lua_remove(L, -2); /* remove result from 1st 'gsub' */\n    }\n    lua_setfield(L, -3, fieldname);  /* package[fieldname] = path value */\n    lua_pop(L, 1);  /* pop versioned variable name */\n};\n\n/*\n** return registry.JSLIBS[path]\n*/\nconst checkjslib = function(L, path) {\n    lua_rawgetp(L, LUA_REGISTRYINDEX, JSLIBS);\n    lua_getfield(L, -1, path);\n    let plib = lua_touserdata(L, -1);  /* plib = JSLIBS[path] */\n    lua_pop(L, 2);  /* pop JSLIBS table and 'plib' */\n    return plib;\n};\n\n/*\n** registry.JSLIBS[path] = plib        -- for queries\n** registry.JSLIBS[#JSLIBS + 1] = plib  -- also keep a list of all libraries\n*/\nconst addtojslib = function(L, path, plib) {\n    lua_rawgetp(L, LUA_REGISTRYINDEX, JSLIBS);\n    lua_pushlightuserdata(L, plib);\n    lua_pushvalue(L, -1);\n    lua_setfield(L, -3, path);  /* JSLIBS[path] = plib */\n    lua_rawseti(L, -2, luaL_len(L, -2) + 1);  /* JSLIBS[#JSLIBS + 1] = plib */\n    lua_pop(L, 1);  /* pop JSLIBS table */\n};\n\nconst pushnexttemplate = function(L, path) {\n    while (path[0] === LUA_PATH_SEP.charCodeAt(0)) path = path.subarray(1);  /* skip separators */\n    if (path.length === 0) return null;  /* no more templates */\n    let l = luastring_indexOf(path, LUA_PATH_SEP.charCodeAt(0));  /* find next separator */\n    if (l < 0) l = path.length;\n    lua_pushlstring(L, path, l);  /* template */\n    return path.subarray(l);\n};\n\nconst searchpath = function(L, name, path, sep, dirsep) {\n    let msg = new luaL_Buffer();  /* to build error message */\n    luaL_buffinit(L, msg);\n    if (sep[0] !== 0)  /* non-empty separator? */\n        name = luaL_gsub(L, name, sep, dirsep);  /* replace it by 'dirsep' */\n    while ((path = pushnexttemplate(L, path)) !== null) {\n        let filename = luaL_gsub(L, lua_tostring(L, -1), to_luastring(LUA_PATH_MARK, true), name);\n        lua_remove(L, -2);  /* remove path template */\n        if (readable(filename))  /* does file exist and is readable? */\n            return filename;  /* return that file name */\n        lua_pushfstring(L, to_luastring(\"\\n\\tno file '%s'\"), filename);\n        lua_remove(L, -2);  /* remove file name */\n        luaL_addvalue(msg);\n    }\n    luaL_pushresult(msg);  /* create error message */\n    return null;  /* not found */\n};\n\nconst ll_searchpath = function(L) {\n    let f = searchpath(\n        L,\n        luaL_checkstring(L, 1),\n        luaL_checkstring(L, 2),\n        luaL_optstring(L, 3, \".\"),\n        luaL_optstring(L, 4, LUA_DIRSEP)\n    );\n    if (f !== null) return 1;\n    else {  /* error message is on top of the stack */\n        lua_pushnil(L);\n        lua_insert(L, -2);\n        return 2;  /* return nil + error message */\n    }\n};\n\nconst findfile = function(L, name, pname, dirsep) {\n    lua_getfield(L, lua_upvalueindex(1), pname);\n    let path = lua_tostring(L, -1);\n    if (path === null)\n        luaL_error(L, to_luastring(\"'package.%s' must be a string\"), pname);\n    return searchpath(L, name, path, to_luastring(\".\"), dirsep);\n};\n\nconst checkload = function(L, stat, filename) {\n    if (stat) {  /* module loaded successfully? */\n        lua_pushstring(L, filename);  /* will be 2nd argument to module */\n        return 2;  /* return open function and file name */\n    } else\n        return luaL_error(L, to_luastring(\"error loading module '%s' from file '%s':\\n\\t%s\"),\n            lua_tostring(L, 1), filename, lua_tostring(L, -1));\n};\n\nconst searcher_Lua = function(L) {\n    let name = luaL_checkstring(L, 1);\n    let filename = findfile(L, name, to_luastring(\"path\", true), to_luastring(LUA_LSUBSEP, true));\n    if (filename === null) return 1;  /* module not found in this path */\n    return checkload(L, luaL_loadfile(L, filename) === LUA_OK, filename);\n};\n\n/*\n** Try to find a load function for module 'modname' at file 'filename'.\n** First, change '.' to '_' in 'modname'; then, if 'modname' has\n** the form X-Y (that is, it has an \"ignore mark\"), build a function\n** name \"luaopen_X\" and look for it. (For compatibility, if that\n** fails, it also tries \"luaopen_Y\".) If there is no ignore mark,\n** look for a function named \"luaopen_modname\".\n*/\nconst loadfunc = function(L, filename, modname) {\n    let openfunc;\n    modname = luaL_gsub(L, modname, to_luastring(\".\"), LUA_OFSEP);\n    let mark = luastring_indexOf(modname, LUA_IGMARK.charCodeAt(0));\n    if (mark >= 0) {\n        openfunc = lua_pushlstring(L, modname, mark);\n        openfunc = lua_pushfstring(L, to_luastring(\"%s%s\"), LUA_POF, openfunc);\n        let stat = lookforfunc(L, filename, openfunc);\n        if (stat !== ERRFUNC) return stat;\n        modname = mark + 1;  /* else go ahead and try old-style name */\n    }\n    openfunc = lua_pushfstring(L, to_luastring(\"%s%s\"), LUA_POF, modname);\n    return lookforfunc(L, filename, openfunc);\n};\n\nconst searcher_C = function(L) {\n    let name = luaL_checkstring(L, 1);\n    let filename = findfile(L, name, to_luastring(\"jspath\", true), to_luastring(LUA_CSUBSEP, true));\n    if (filename === null) return 1;  /* module not found in this path */\n    return checkload(L, (loadfunc(L, filename, name) === 0), filename);\n};\n\nconst searcher_Croot = function(L) {\n    let name = luaL_checkstring(L, 1);\n    let p = luastring_indexOf(name, '.'.charCodeAt(0));\n    let stat;\n    if (p < 0) return 0;  /* is root */\n    lua_pushlstring(L, name, p);\n    let filename = findfile(L, lua_tostring(L, -1), to_luastring(\"jspath\", true), to_luastring(LUA_CSUBSEP, true));\n    if (filename === null) return 1;  /* root not found */\n    if ((stat = loadfunc(L, filename, name)) !== 0) {\n        if (stat != ERRFUNC)\n            return checkload(L, 0, filename);  /* real error */\n        else {  /* open function not found */\n            lua_pushstring(L, to_luastring(\"\\n\\tno module '%s' in file '%s'\"), name, filename);\n            return 1;\n        }\n    }\n    lua_pushstring(L, filename);  /* will be 2nd argument to module */\n    return 2;\n};\n\nconst searcher_preload = function(L) {\n    let name = luaL_checkstring(L, 1);\n    lua_getfield(L, LUA_REGISTRYINDEX, LUA_PRELOAD_TABLE);\n    if (lua_getfield(L, -1, name) === LUA_TNIL)  /* not found? */\n        lua_pushfstring(L, to_luastring(\"\\n\\tno field package.preload['%s']\"), name);\n    return 1;\n};\n\nconst findloader = function(L, name, ctx, k) {\n    let msg = new luaL_Buffer();  /* to build error message */\n    luaL_buffinit(L, msg);\n    /* push 'package.searchers' to index 3 in the stack */\n    if (lua_getfield(L, lua_upvalueindex(1), to_luastring(\"searchers\", true)) !== LUA_TTABLE)\n        luaL_error(L, to_luastring(\"'package.searchers' must be a table\"));\n    let ctx2 = {name: name, i: 1, msg: msg, ctx: ctx, k: k};\n    return findloader_cont(L, LUA_OK, ctx2);\n};\n\nconst findloader_cont = function(L, status, ctx) {\n    /*  iterate over available searchers to find a loader */\n    for (; ; ctx.i++) {\n        if (status === LUA_OK) {\n            if (lua_rawgeti(L, 3, ctx.i) === LUA_TNIL) {  /* no more searchers? */\n                lua_pop(L, 1);  /* remove nil */\n                luaL_pushresult(ctx.msg);  /* create error message */\n                luaL_error(L, to_luastring(\"module '%s' not found:%s\"), ctx.name, lua_tostring(L, -1));\n            }\n            lua_pushstring(L, ctx.name);\n            lua_callk(L, 1, 2, ctx, findloader_cont);  /* call it */\n        } else {\n            status = LUA_OK;\n        }\n        if (lua_isfunction(L, -2))  /* did it find a loader? */\n            break;  /* module loader found */\n        else if (lua_isstring(L, -2)) {  /* searcher returned error message? */\n            lua_pop(L, 1);  /* remove extra return */\n            luaL_addvalue(ctx.msg);  /* concatenate error message */\n        }\n        else\n            lua_pop(L, 2);  /* remove both returns */\n    }\n    return ctx.k(L, LUA_OK, ctx.ctx);\n};\n\nconst ll_require = function(L) {\n    let name = luaL_checkstring(L, 1);\n    lua_settop(L, 1);  /* LOADED table will be at index 2 */\n    lua_getfield(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    lua_getfield(L, 2, name);  /* LOADED[name] */\n    if (lua_toboolean(L, -1))  /* is it there? */\n        return 1;  /* package is already loaded */\n    /* else must load package */\n    lua_pop(L, 1);  /* remove 'getfield' result */\n    let ctx = name;\n    return findloader(L, name, ctx, ll_require_cont);\n};\n\nconst ll_require_cont = function(L, status, ctx) {\n    let name = ctx;\n    lua_pushstring(L, name);  /* pass name as argument to module loader */\n    lua_insert(L, -2);  /* name is 1st argument (before search data) */\n    lua_callk(L, 2, 1, ctx, ll_require_cont2);\n    return ll_require_cont2(L, LUA_OK, ctx);  /* run loader to load module */\n};\n\nconst ll_require_cont2 = function(L, status, ctx) {\n    let name = ctx;\n    if (!lua_isnil(L, -1))  /* non-nil return? */\n        lua_setfield(L, 2, name);  /* LOADED[name] = returned value */\n    if (lua_getfield(L, 2, name) == LUA_TNIL) {   /* module set no value? */\n        lua_pushboolean(L, 1);  /* use true as result */\n        lua_pushvalue(L, -1);  /* extra copy to be returned */\n        lua_setfield(L, 2, name);  /* LOADED[name] = true */\n    }\n    return 1;\n};\n\nconst pk_funcs = {\n    \"loadlib\": ll_loadlib,\n    \"searchpath\": ll_searchpath\n};\n\nconst ll_funcs = {\n    \"require\": ll_require\n};\n\nconst createsearcherstable = function(L) {\n    let searchers = [searcher_preload, searcher_Lua, searcher_C, searcher_Croot, null];\n    /* create 'searchers' table */\n    lua_createtable(L);\n    /* fill it with predefined searchers */\n    for (let i = 0; searchers[i]; i++) {\n        lua_pushvalue(L, -2);  /* set 'package' as upvalue for all searchers */\n        lua_pushcclosure(L, searchers[i], 1);\n        lua_rawseti(L, -2, i+1);\n    }\n    lua_setfield(L, -2, to_luastring(\"searchers\", true));  /* put it in field 'searchers' */\n};\n\n/*\n** create table JSLIBS to keep track of loaded JS libraries,\n** setting a finalizer to close all libraries when closing state.\n*/\nconst createjslibstable = function(L) {\n    lua_newtable(L);  /* create JSLIBS table */\n    lua_createtable(L, 0, 1);  /* create metatable for JSLIBS */\n    lua_setmetatable(L, -2);\n    lua_rawsetp(L, LUA_REGISTRYINDEX, JSLIBS);  /* set JSLIBS table in registry */\n};\n\nconst luaopen_package = function(L) {\n    createjslibstable(L);\n    luaL_newlib(L, pk_funcs);  /* create 'package' table */\n    createsearcherstable(L);\n    /* set paths */\n    setpath(L, to_luastring(\"path\", true), LUA_PATH_VAR, LUA_PATH_DEFAULT);\n    setpath(L, to_luastring(\"jspath\", true), LUA_JSPATH_VAR, LUA_JSPATH_DEFAULT);\n    /* store config information */\n    lua_pushliteral(L, LUA_DIRSEP + \"\\n\" + LUA_PATH_SEP + \"\\n\" + LUA_PATH_MARK + \"\\n\" +\n                        LUA_EXEC_DIR + \"\\n\" + LUA_IGMARK + \"\\n\");\n    lua_setfield(L, -2, to_luastring(\"config\", true));\n    /* set field 'loaded' */\n    luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);\n    lua_setfield(L, -2, to_luastring(\"loaded\", true));\n    /* set field 'preload' */\n    luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_PRELOAD_TABLE);\n    lua_setfield(L, -2, to_luastring(\"preload\", true));\n    lua_pushglobaltable(L);\n    lua_pushvalue(L, -2);  /* set 'package' as upvalue for next lib */\n    luaL_setfuncs(L, ll_funcs, 1);  /* open lib into global table */\n    lua_pop(L, 1);  /* pop global table */\n    return 1;  /* return 'package' table */\n};\n\nmodule.exports.luaopen_package = luaopen_package;\n","\"use strict\";\n\nconst {\n    LUA_OPADD,\n    LUA_OPBAND,\n    LUA_OPBNOT,\n    LUA_OPBOR,\n    LUA_OPBXOR,\n    LUA_OPDIV,\n    LUA_OPIDIV,\n    LUA_OPMOD,\n    LUA_OPMUL,\n    LUA_OPPOW,\n    LUA_OPSHL,\n    LUA_OPSHR,\n    LUA_OPSUB,\n    LUA_OPUNM,\n    constant_types: {\n        LUA_NUMTAGS,\n        LUA_TBOOLEAN,\n        LUA_TCCL,\n        LUA_TFUNCTION,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMBER,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TSTRING,\n        LUA_TTABLE,\n        LUA_TTHREAD,\n        LUA_TUSERDATA\n    },\n    from_userstring,\n    luastring_indexOf,\n    luastring_of,\n    to_jsstring,\n    to_luastring\n} = require('./defs.js');\nconst {\n    lisdigit,\n    lisprint,\n    lisspace,\n    lisxdigit\n} = require('./ljstype.js');\nconst ldebug  = require('./ldebug.js');\nconst ldo     = require('./ldo.js');\nconst lstate  = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_new\n} = require('./lstring.js');\nconst ltable  = require('./ltable.js');\nconst {\n    LUA_COMPAT_FLOATSTRING,\n    ldexp,\n    lua_integer2str,\n    lua_number2str\n} = require('./luaconf.js');\nconst lvm     = require('./lvm.js');\nconst {\n    MAX_INT,\n    luai_nummod,\n    lua_assert\n} = require(\"./llimits.js\");\nconst ltm     = require('./ltm.js');\n\nconst LUA_TPROTO = LUA_NUMTAGS;\nconst LUA_TDEADKEY = LUA_NUMTAGS+1;\n\nclass TValue {\n\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n\n    /* type tag of a TValue (bits 0-3 for tags + variant bits 4-5) */\n    ttype() {\n        return this.type & 0x3F;\n    }\n\n    /* type tag of a TValue with no variants (bits 0-3) */\n    ttnov() {\n        return this.type & 0x0F;\n    }\n\n    checktag(t) {\n        return this.type === t;\n    }\n\n    checktype(t) {\n        return this.ttnov() === t;\n    }\n\n    ttisnumber() {\n        return this.checktype(LUA_TNUMBER);\n    }\n\n    ttisfloat() {\n        return this.checktag(LUA_TNUMFLT);\n    }\n\n    ttisinteger() {\n        return this.checktag(LUA_TNUMINT);\n    }\n\n    ttisnil() {\n        return this.checktag(LUA_TNIL);\n    }\n\n    ttisboolean() {\n        return this.checktag(LUA_TBOOLEAN);\n    }\n\n    ttislightuserdata() {\n        return this.checktag(LUA_TLIGHTUSERDATA);\n    }\n\n    ttisstring() {\n        return this.checktype(LUA_TSTRING);\n    }\n\n    ttisshrstring() {\n        return this.checktag(LUA_TSHRSTR);\n    }\n\n    ttislngstring() {\n        return this.checktag(LUA_TLNGSTR);\n    }\n\n    ttistable() {\n        return this.checktag(LUA_TTABLE);\n    }\n\n    ttisfunction() {\n        return this.checktype(LUA_TFUNCTION);\n    }\n\n    ttisclosure() {\n        return (this.type & 0x1F) === LUA_TFUNCTION;\n    }\n\n    ttisCclosure() {\n        return this.checktag(LUA_TCCL);\n    }\n\n    ttisLclosure() {\n        return this.checktag(LUA_TLCL);\n    }\n\n    ttislcf() {\n        return this.checktag(LUA_TLCF);\n    }\n\n    ttisfulluserdata() {\n        return this.checktag(LUA_TUSERDATA);\n    }\n\n    ttisthread() {\n        return this.checktag(LUA_TTHREAD);\n    }\n\n    ttisdeadkey() {\n        return this.checktag(LUA_TDEADKEY);\n    }\n\n    l_isfalse() {\n        return this.ttisnil() || (this.ttisboolean() && this.value === false);\n    }\n\n    setfltvalue(x) {\n        this.type = LUA_TNUMFLT;\n        this.value = x;\n    }\n\n    chgfltvalue(x) {\n        lua_assert(this.type == LUA_TNUMFLT);\n        this.value = x;\n    }\n\n    setivalue(x) {\n        this.type = LUA_TNUMINT;\n        this.value = x;\n    }\n\n    chgivalue(x) {\n        lua_assert(this.type == LUA_TNUMINT);\n        this.value = x;\n    }\n\n    setnilvalue() {\n        this.type = LUA_TNIL;\n        this.value = null;\n    }\n\n    setfvalue(x) {\n        this.type = LUA_TLCF;\n        this.value = x;\n    }\n\n    setpvalue(x) {\n        this.type = LUA_TLIGHTUSERDATA;\n        this.value = x;\n    }\n\n    setbvalue(x) {\n        this.type = LUA_TBOOLEAN;\n        this.value = x;\n    }\n\n    setsvalue(x) {\n        this.type = LUA_TLNGSTR; /* LUA_TSHRSTR? */\n        this.value = x;\n    }\n\n    setuvalue(x) {\n        this.type = LUA_TUSERDATA;\n        this.value = x;\n    }\n\n    setthvalue(x) {\n        this.type = LUA_TTHREAD;\n        this.value = x;\n    }\n\n    setclLvalue(x) {\n        this.type = LUA_TLCL;\n        this.value = x;\n    }\n\n    setclCvalue(x) {\n        this.type = LUA_TCCL;\n        this.value = x;\n    }\n\n    sethvalue(x) {\n        this.type = LUA_TTABLE;\n        this.value = x;\n    }\n\n    setdeadvalue() {\n        this.type = LUA_TDEADKEY;\n        this.value = null;\n    }\n\n    setfrom(tv) { /* in lua C source setobj2t is often used for this */\n        this.type = tv.type;\n        this.value = tv.value;\n    }\n\n    tsvalue() {\n        lua_assert(this.ttisstring());\n        return this.value;\n    }\n\n    svalue() {\n        return this.tsvalue().getstr();\n    }\n\n    vslen() {\n        return this.tsvalue().tsslen();\n    }\n\n    jsstring(from, to) {\n        return to_jsstring(this.svalue(), from, to, true);\n    }\n}\n\nconst pushobj2s = function(L, tv) {\n    L.stack[L.top++] = new TValue(tv.type, tv.value);\n};\nconst pushsvalue2s = function(L, ts) {\n    L.stack[L.top++] = new TValue(LUA_TLNGSTR, ts);\n};\n/* from stack to (same) stack */\nconst setobjs2s = function(L, newidx, oldidx) {\n    L.stack[newidx].setfrom(L.stack[oldidx]);\n};\n/* to stack (not from same stack) */\nconst setobj2s = function(L, newidx, oldtv) {\n    L.stack[newidx].setfrom(oldtv);\n};\nconst setsvalue2s = function(L, newidx, ts) {\n    L.stack[newidx].setsvalue(ts);\n};\n\nconst luaO_nilobject = new TValue(LUA_TNIL, null);\nObject.freeze(luaO_nilobject);\nmodule.exports.luaO_nilobject = luaO_nilobject;\n\nclass LClosure {\n\n    constructor(L, n) {\n        this.id = L.l_G.id_counter++;\n\n        this.p = null;\n        this.nupvalues = n;\n        this.upvals = new Array(n); /* list of upvalues. initialised in luaF_initupvals */\n    }\n\n}\n\nclass CClosure {\n\n    constructor(L, f, n) {\n        this.id = L.l_G.id_counter++;\n\n        this.f = f;\n        this.nupvalues = n;\n        this.upvalue = new Array(n); /* list of upvalues as TValues */\n        while (n--) {\n            this.upvalue[n] = new TValue(LUA_TNIL, null);\n        }\n    }\n\n}\n\nclass Udata {\n\n    constructor(L, size) {\n        this.id = L.l_G.id_counter++;\n\n        this.metatable = null;\n        this.uservalue = new TValue(LUA_TNIL, null);\n        this.len = size;\n        this.data = Object.create(null); // ignores size argument\n    }\n\n}\n\n/*\n** Description of a local variable for function prototypes\n** (used for debug information)\n*/\nclass LocVar {\n    constructor() {\n        this.varname = null;\n        this.startpc = NaN;  /* first point where variable is active */\n        this.endpc = NaN;    /* first point where variable is dead */\n    }\n}\n\nconst RETS = to_luastring(\"...\");\nconst PRE  = to_luastring(\"[string \\\"\");\nconst POS  = to_luastring(\"\\\"]\");\n\nconst luaO_chunkid = function(source, bufflen) {\n    let l = source.length;\n    let out;\n    if (source[0] === 61 /* ('=').charCodeAt(0) */) {  /* 'literal' source */\n        if (l < bufflen) {  /* small enough? */\n            out = new Uint8Array(l-1);\n            out.set(source.subarray(1));\n        } else {  /* truncate it */\n            out = new Uint8Array(bufflen);\n            out.set(source.subarray(1, bufflen+1));\n        }\n    } else if (source[0] === 64 /* ('@').charCodeAt(0) */) {  /* file name */\n        if (l <= bufflen) {  /* small enough? */\n            out = new Uint8Array(l-1);\n            out.set(source.subarray(1));\n        } else {  /* add '...' before rest of name */\n            out = new Uint8Array(bufflen);\n            out.set(RETS);\n            bufflen -= RETS.length;\n            out.set(source.subarray(l - bufflen), RETS.length);\n        }\n    } else {  /* string; format as [string \"source\"] */\n        out = new Uint8Array(bufflen);\n        let nli = luastring_indexOf(source, 10 /* ('\\n').charCodeAt(0) */);  /* find first new line (if any) */\n        out.set(PRE);  /* add prefix */\n        let out_i = PRE.length;\n        bufflen -= PRE.length + RETS.length + POS.length;  /* save space for prefix+suffix */\n        if (l < bufflen && nli === -1) {  /* small one-line source? */\n            out.set(source, out_i);  /* keep it */\n            out_i += source.length;\n        } else {\n            if (nli !== -1) l = nli;  /* stop at first newline */\n            if (l > bufflen) l = bufflen;\n            out.set(source.subarray(0, l), out_i);\n            out_i += l;\n            out.set(RETS, out_i);\n            out_i += RETS.length;\n        }\n        out.set(POS, out_i);\n        out_i += POS.length;\n        out = out.subarray(0, out_i);\n    }\n    return out;\n};\n\nconst luaO_hexavalue = function(c) {\n    if (lisdigit(c)) return c - 48;\n    else return (c & 0xdf) - 55;\n};\n\nconst UTF8BUFFSZ = 8;\n\nconst luaO_utf8esc = function(buff, x) {\n    let n = 1;  /* number of bytes put in buffer (backwards) */\n    lua_assert(x <= 0x10FFFF);\n    if (x < 0x80)  /* ascii? */\n        buff[UTF8BUFFSZ - 1] = x;\n    else {  /* need continuation bytes */\n        let mfb = 0x3f;  /* maximum that fits in first byte */\n        do {\n            buff[UTF8BUFFSZ - (n++)] = 0x80 | (x & 0x3f);\n            x >>= 6;  /* remove added bits */\n            mfb >>= 1;  /* now there is one less bit available in first byte */\n        } while (x > mfb);  /* still needs continuation byte? */\n        buff[UTF8BUFFSZ - n] = (~mfb << 1) | x;  /* add first byte */\n    }\n    return n;\n};\n\n/* maximum number of significant digits to read (to avoid overflows\n   even with single floats) */\nconst MAXSIGDIG = 30;\n\n/*\n** convert an hexadecimal numeric string to a number, following\n** C99 specification for 'strtod'\n*/\nconst lua_strx2number = function(s) {\n    let i = 0;\n    let r = 0.0;  /* result (accumulator) */\n    let sigdig = 0;  /* number of significant digits */\n    let nosigdig = 0;  /* number of non-significant digits */\n    let e = 0;  /* exponent correction */\n    let neg;  /* 1 if number is negative */\n    let hasdot = false;  /* true after seen a dot */\n    while (lisspace(s[i])) i++;  /* skip initial spaces */\n    if ((neg = (s[i] === 45 /* ('-').charCodeAt(0) */))) i++;  /* check signal */\n    else if (s[i] === 43 /* ('+').charCodeAt(0) */) i++;\n    if (!(s[i] === 48 /* ('0').charCodeAt(0) */ && (s[i+1] === 120 /* ('x').charCodeAt(0) */ || s[i+1] === 88 /* ('X').charCodeAt(0) */)))  /* check '0x' */\n        return null;  /* invalid format (no '0x') */\n    for (i += 2; ; i++) {  /* skip '0x' and read numeral */\n        if (s[i] === 46 /* ('.').charCodeAt(0) i.e. dot/lua_getlocaledecpoint(); */) {\n            if (hasdot) break;  /* second dot? stop loop */\n            else hasdot = true;\n        } else if (lisxdigit(s[i])) {\n            if (sigdig === 0 && s[i] === 48 /* ('0').charCodeAt(0) */)  /* non-significant digit (zero)? */\n                nosigdig++;\n            else if (++sigdig <= MAXSIGDIG)  /* can read it without overflow? */\n                r = (r * 16) + luaO_hexavalue(s[i]);\n            else e++; /* too many digits; ignore, but still count for exponent */\n            if (hasdot) e--;  /* decimal digit? correct exponent */\n        } else break;  /* neither a dot nor a digit */\n    }\n\n    if (nosigdig + sigdig === 0)  /* no digits? */\n        return null;  /* invalid format */\n    e *= 4;  /* each digit multiplies/divides value by 2^4 */\n    if (s[i] === 112 /* ('p').charCodeAt(0) */ || s[i] === 80 /* ('P').charCodeAt(0) */) {  /* exponent part? */\n        let exp1 = 0;  /* exponent value */\n        let neg1;  /* exponent signal */\n        i++;  /* skip 'p' */\n        if ((neg1 = (s[i] === 45 /* ('-').charCodeAt(0) */))) i++;  /* signal */\n        else if (s[i] === 43 /* ('+').charCodeAt(0) */) i++;\n        if (!lisdigit(s[i]))\n            return null;  /* invalid; must have at least one digit */\n        while (lisdigit(s[i]))  /* read exponent */\n            exp1 = exp1 * 10 + s[i++] - 48 /* ('0').charCodeAt(0) */;\n        if (neg1) exp1 = -exp1;\n        e += exp1;\n    }\n    if (neg) r = -r;\n    return {\n        n: ldexp(r, e),\n        i: i\n    };\n};\n\nconst lua_str2number = function(s) {\n    try {\n        s = to_jsstring(s);\n    } catch (e) {\n        return null;\n    }\n    /* use a regex to validate number and also to get length\n       parseFloat ignores trailing junk */\n    let r = /^[\\t\\v\\f \\n\\r]*[+-]?(?:[0-9]+\\.?[0-9]*|\\.[0-9]*)(?:[eE][+-]?[0-9]+)?/.exec(s);\n    if (!r)\n        return null;\n    let flt = parseFloat(r[0]);\n    return !isNaN(flt) ? { n: flt, i: r[0].length } : null;\n};\n\nconst l_str2dloc = function(s, mode) {\n    let result = mode === 'x' ? lua_strx2number(s) : lua_str2number(s); /* try to convert */\n    if (result === null) return null;\n    while (lisspace(s[result.i])) result.i++;  /* skip trailing spaces */\n    return (result.i === s.length || s[result.i] === 0) ? result : null;  /* OK if no trailing characters */\n};\n\nconst SIGILS = [\n    46  /* (\".\").charCodeAt(0) */,\n    120 /* (\"x\").charCodeAt(0) */,\n    88  /* (\"X\").charCodeAt(0) */,\n    110 /* (\"n\").charCodeAt(0) */,\n    78  /* (\"N\").charCodeAt(0) */\n];\nconst modes = {\n    [ 46]: \".\",\n    [120]: \"x\",\n    [ 88]: \"x\",\n    [110]: \"n\",\n    [ 78]: \"n\"\n};\nconst l_str2d = function(s) {\n    let l = s.length;\n    let pmode = 0;\n    for (let i=0; i<l; i++) {\n        let v = s[i];\n        if (SIGILS.indexOf(v) !== -1) {\n            pmode = v;\n            break;\n        }\n    }\n    let mode = modes[pmode];\n    if (mode === 'n')  /* reject 'inf' and 'nan' */\n        return null;\n    let end = l_str2dloc(s, mode);  /* try to convert */\n    // if (end === null) {   /* failed? may be a different locale */\n    //     throw new Error(\"Locale not available to handle number\"); // TODO\n    // }\n    return end;\n};\n\nconst MAXBY10  = Math.floor(MAX_INT / 10);\nconst MAXLASTD = MAX_INT % 10;\n\nconst l_str2int = function(s) {\n    let i = 0;\n    let a = 0;\n    let empty = true;\n    let neg;\n\n    while (lisspace(s[i])) i++;  /* skip initial spaces */\n    if ((neg = (s[i] === 45 /* ('-').charCodeAt(0) */))) i++;\n    else if (s[i] === 43 /* ('+').charCodeAt(0) */) i++;\n    if (s[i] === 48 /* ('0').charCodeAt(0) */ && (s[i+1] === 120 /* ('x').charCodeAt(0) */ || s[i+1] === 88 /* ('X').charCodeAt(0) */)) {  /* hex? */\n        i += 2;  /* skip '0x' */\n        for (; i < s.length && lisxdigit(s[i]); i++) {\n            a = (a * 16 + luaO_hexavalue(s[i]))|0;\n            empty = false;\n        }\n    } else {  /* decimal */\n        for (; i < s.length && lisdigit(s[i]); i++) {\n            let d = s[i] - 48 /* ('0').charCodeAt(0) */;\n            if (a >= MAXBY10 && (a > MAXBY10 || d > MAXLASTD + neg))  /* overflow? */\n                return null;  /* do not accept it (as integer) */\n            a = (a * 10 + d)|0;\n            empty = false;\n        }\n    }\n    while (i < s.length && lisspace(s[i])) i++;  /* skip trailing spaces */\n    if (empty || (i !== s.length && s[i] !== 0)) return null;  /* something wrong in the numeral */\n    else {\n        return {\n            n: (neg ? -a : a)|0,\n            i: i\n        };\n    }\n};\n\nconst luaO_str2num = function(s, o) {\n    let s2i = l_str2int(s);\n    if (s2i !== null) {   /* try as an integer */\n        o.setivalue(s2i.n);\n        return s2i.i+1;\n    } else {   /* else try as a float */\n        s2i = l_str2d(s);\n        if (s2i !== null) {\n            o.setfltvalue(s2i.n);\n            return s2i.i+1;\n        } else\n            return 0;  /* conversion failed */\n    }\n};\n\nconst luaO_tostring = function(L, obj) {\n    let buff;\n    if (obj.ttisinteger())\n        buff = to_luastring(lua_integer2str(obj.value));\n    else {\n        let str = lua_number2str(obj.value);\n        if (!LUA_COMPAT_FLOATSTRING && /^[-0123456789]+$/.test(str)) {  /* looks like an int? */\n            str += '.0'; /* adds '.0' to result: lua_getlocaledecpoint removed as optimisation */\n        }\n        buff = to_luastring(str);\n    }\n    obj.setsvalue(luaS_bless(L, buff));\n};\n\nconst pushstr = function(L, str) {\n    ldo.luaD_inctop(L);\n    setsvalue2s(L, L.top-1, luaS_new(L, str));\n};\n\nconst luaO_pushvfstring = function(L, fmt, argp) {\n    let n = 0;\n    let i = 0;\n    let a = 0;\n    let e;\n    for (;;) {\n        e = luastring_indexOf(fmt, 37 /* ('%').charCodeAt(0) */, i);\n        if (e == -1) break;\n        pushstr(L, fmt.subarray(i, e));\n        switch(fmt[e+1]) {\n            case 115 /* ('s').charCodeAt(0) */: {\n                let s = argp[a++];\n                if (s === null) s = to_luastring(\"(null)\", true);\n                else {\n                    s = from_userstring(s);\n                    /* respect null terminator */\n                    let i = luastring_indexOf(s, 0);\n                    if (i !== -1)\n                        s = s.subarray(0, i);\n                }\n                pushstr(L, s);\n                break;\n            }\n            case 99 /* ('c').charCodeAt(0) */: {\n                let buff = argp[a++];\n                if (lisprint(buff))\n                    pushstr(L, luastring_of(buff));\n                else\n                    luaO_pushfstring(L, to_luastring(\"<\\\\%d>\", true), buff);\n                break;\n            }\n            case 100 /* ('d').charCodeAt(0) */:\n            case 73 /* ('I').charCodeAt(0) */:\n                ldo.luaD_inctop(L);\n                L.stack[L.top-1].setivalue(argp[a++]);\n                luaO_tostring(L, L.stack[L.top-1]);\n                break;\n            case 102 /* ('f').charCodeAt(0) */:\n                ldo.luaD_inctop(L);\n                L.stack[L.top-1].setfltvalue(argp[a++]);\n                luaO_tostring(L, L.stack[L.top-1]);\n                break;\n            case 112 /* ('p').charCodeAt(0) */: {\n                let v = argp[a++];\n                if (v instanceof lstate.lua_State ||\n                    v instanceof ltable.Table ||\n                    v instanceof Udata ||\n                    v instanceof LClosure ||\n                    v instanceof CClosure) {\n                    pushstr(L, to_luastring(\"0x\"+v.id.toString(16)));\n                } else {\n                    switch(typeof v) {\n                        case \"undefined\":\n                            pushstr(L, to_luastring(\"undefined\"));\n                            break;\n                        case \"number\":  /* before check object as null is an object */\n                            pushstr(L, to_luastring(\"Number(\"+v+\")\"));\n                            break;\n                        case \"string\":  /* before check object as null is an object */\n                            pushstr(L, to_luastring(\"String(\"+JSON.stringify(v)+\")\"));\n                            break;\n                        case \"boolean\":  /* before check object as null is an object */\n                            pushstr(L, to_luastring(v?\"Boolean(true)\":\"Boolean(false)\"));\n                            break;\n                        case \"object\":\n                            if (v === null) { /* null is special */\n                                pushstr(L, to_luastring(\"null\"));\n                                break;\n                            }\n                            /* fall through */\n                        case \"function\": {\n                            let id = L.l_G.ids.get(v);\n                            if (!id) {\n                                id = L.l_G.id_counter++;\n                                L.l_G.ids.set(v, id);\n                            }\n                            pushstr(L, to_luastring(\"0x\"+id.toString(16)));\n                            break;\n                        }\n                        default:\n                            /* user provided object. no id available */\n                            pushstr(L, to_luastring(\"<id NYI>\"));\n                    }\n                }\n                break;\n            }\n            case 85 /* ('U').charCodeAt(0) */: {\n                let buff = new Uint8Array(UTF8BUFFSZ);\n                let l = luaO_utf8esc(buff, argp[a++]);\n                pushstr(L, buff.subarray(UTF8BUFFSZ - l));\n                break;\n            }\n            case 37 /* ('%').charCodeAt(0) */:\n                pushstr(L, to_luastring(\"%\", true));\n                break;\n            default:\n                ldebug.luaG_runerror(L, to_luastring(\"invalid option '%%%c' to 'lua_pushfstring'\"), fmt[e + 1]);\n        }\n        n += 2;\n        i = e + 2;\n    }\n    ldo.luaD_checkstack(L, 1);\n    pushstr(L, fmt.subarray(i));\n    if (n > 0) lvm.luaV_concat(L, n+1);\n    return L.stack[L.top-1].svalue();\n};\n\nconst luaO_pushfstring = function(L, fmt, ...argp) {\n    return luaO_pushvfstring(L, fmt, argp);\n};\n\n\n/*\n** converts an integer to a \"floating point byte\", represented as\n** (eeeeexxx), where the real value is (1xxx) * 2^(eeeee - 1) if\n** eeeee !== 0 and (xxx) otherwise.\n*/\nconst luaO_int2fb = function(x) {\n    let e = 0;  /* exponent */\n    if (x < 8) return x;\n    while (x >= (8 << 4)) {  /* coarse steps */\n        x = (x + 0xf) >> 4;  /* x = ceil(x / 16) */\n        e += 4;\n    }\n    while (x >= (8 << 1)) {  /* fine steps */\n        x = (x + 1) >> 1;  /* x = ceil(x / 2) */\n        e++;\n    }\n    return ((e+1) << 3) | (x - 8);\n};\n\nconst intarith = function(L, op, v1, v2) {\n    switch (op) {\n        case LUA_OPADD:  return (v1 + v2)|0;\n        case LUA_OPSUB:  return (v1 - v2)|0;\n        case LUA_OPMUL:  return lvm.luaV_imul(v1, v2);\n        case LUA_OPMOD:  return lvm.luaV_mod(L, v1, v2);\n        case LUA_OPIDIV: return lvm.luaV_div(L, v1, v2);\n        case LUA_OPBAND: return (v1 & v2);\n        case LUA_OPBOR:  return (v1 | v2);\n        case LUA_OPBXOR: return (v1 ^ v2);\n        case LUA_OPSHL:  return lvm.luaV_shiftl(v1, v2);\n        case LUA_OPSHR:  return lvm.luaV_shiftl(v1, -v2);\n        case LUA_OPUNM:  return (0 - v1)|0;\n        case LUA_OPBNOT: return (~0 ^ v1);\n        default: lua_assert(0);\n    }\n};\n\n\nconst numarith = function(L, op, v1, v2) {\n    switch (op) {\n        case LUA_OPADD:  return v1 + v2;\n        case LUA_OPSUB:  return v1 - v2;\n        case LUA_OPMUL:  return v1 * v2;\n        case LUA_OPDIV:  return v1 / v2;\n        case LUA_OPPOW:  return Math.pow(v1, v2);\n        case LUA_OPIDIV: return Math.floor(v1 / v2);\n        case LUA_OPUNM:  return -v1;\n        case LUA_OPMOD:  return luai_nummod(L, v1, v2);\n        default: lua_assert(0);\n    }\n};\n\nconst luaO_arith = function(L, op, p1, p2, p3) {\n    let res = (typeof p3 === \"number\") ? L.stack[p3] : p3;  /* FIXME */\n\n    switch (op) {\n        case LUA_OPBAND: case LUA_OPBOR: case LUA_OPBXOR:\n        case LUA_OPSHL: case LUA_OPSHR:\n        case LUA_OPBNOT: {  /* operate only on integers */\n            let i1, i2;\n            if ((i1 = lvm.tointeger(p1)) !== false && (i2 = lvm.tointeger(p2)) !== false) {\n                res.setivalue(intarith(L, op, i1, i2));\n                return;\n            }\n            else break;  /* go to the end */\n        }\n        case LUA_OPDIV: case LUA_OPPOW: {  /* operate only on floats */\n            let n1, n2;\n            if ((n1 = lvm.tonumber(p1)) !== false && (n2 = lvm.tonumber(p2)) !== false) {\n                res.setfltvalue(numarith(L, op, n1, n2));\n                return;\n            }\n            else break;  /* go to the end */\n        }\n        default: {  /* other operations */\n            let n1, n2;\n            if (p1.ttisinteger() && p2.ttisinteger()) {\n                res.setivalue(intarith(L, op, p1.value, p2.value));\n                return;\n            }\n            else if ((n1 = lvm.tonumber(p1)) !== false && (n2 = lvm.tonumber(p2)) !== false) {\n                res.setfltvalue(numarith(L, op, n1, n2));\n                return;\n            }\n            else break;  /* go to the end */\n        }\n    }\n    /* could not perform raw operation; try metamethod */\n    lua_assert(L !== null);  /* should not fail when folding (compile time) */\n    ltm.luaT_trybinTM(L, p1, p2, p3, (op - LUA_OPADD) + ltm.TMS.TM_ADD);\n};\n\n\nmodule.exports.CClosure          = CClosure;\nmodule.exports.LClosure          = LClosure;\nmodule.exports.LUA_TDEADKEY      = LUA_TDEADKEY;\nmodule.exports.LUA_TPROTO        = LUA_TPROTO;\nmodule.exports.LocVar            = LocVar;\nmodule.exports.TValue            = TValue;\nmodule.exports.Udata             = Udata;\nmodule.exports.UTF8BUFFSZ        = UTF8BUFFSZ;\nmodule.exports.luaO_arith        = luaO_arith;\nmodule.exports.luaO_chunkid      = luaO_chunkid;\nmodule.exports.luaO_hexavalue    = luaO_hexavalue;\nmodule.exports.luaO_int2fb       = luaO_int2fb;\nmodule.exports.luaO_pushfstring  = luaO_pushfstring;\nmodule.exports.luaO_pushvfstring = luaO_pushvfstring;\nmodule.exports.luaO_str2num      = luaO_str2num;\nmodule.exports.luaO_tostring     = luaO_tostring;\nmodule.exports.luaO_utf8esc      = luaO_utf8esc;\nmodule.exports.numarith          = numarith;\nmodule.exports.pushobj2s         = pushobj2s;\nmodule.exports.pushsvalue2s      = pushsvalue2s;\nmodule.exports.setobjs2s         = setobjs2s;\nmodule.exports.setobj2s          = setobj2s;\nmodule.exports.setsvalue2s       = setsvalue2s;\n","\"use strict\";\n\nconst OpCodes = [\n    \"MOVE\",\n    \"LOADK\",\n    \"LOADKX\",\n    \"LOADBOOL\",\n    \"LOADNIL\",\n    \"GETUPVAL\",\n    \"GETTABUP\",\n    \"GETTABLE\",\n    \"SETTABUP\",\n    \"SETUPVAL\",\n    \"SETTABLE\",\n    \"NEWTABLE\",\n    \"SELF\",\n    \"ADD\",\n    \"SUB\",\n    \"MUL\",\n    \"MOD\",\n    \"POW\",\n    \"DIV\",\n    \"IDIV\",\n    \"BAND\",\n    \"BOR\",\n    \"BXOR\",\n    \"SHL\",\n    \"SHR\",\n    \"UNM\",\n    \"BNOT\",\n    \"NOT\",\n    \"LEN\",\n    \"CONCAT\",\n    \"JMP\",\n    \"EQ\",\n    \"LT\",\n    \"LE\",\n    \"TEST\",\n    \"TESTSET\",\n    \"CALL\",\n    \"TAILCALL\",\n    \"RETURN\",\n    \"FORLOOP\",\n    \"FORPREP\",\n    \"TFORCALL\",\n    \"TFORLOOP\",\n    \"SETLIST\",\n    \"CLOSURE\",\n    \"VARARG\",\n    \"EXTRAARG\"\n];\n\nconst OpCodesI = {\n    OP_MOVE:     0,\n    OP_LOADK:    1,\n    OP_LOADKX:   2,\n    OP_LOADBOOL: 3,\n    OP_LOADNIL:  4,\n    OP_GETUPVAL: 5,\n    OP_GETTABUP: 6,\n    OP_GETTABLE: 7,\n    OP_SETTABUP: 8,\n    OP_SETUPVAL: 9,\n    OP_SETTABLE: 10,\n    OP_NEWTABLE: 11,\n    OP_SELF:     12,\n    OP_ADD:      13,\n    OP_SUB:      14,\n    OP_MUL:      15,\n    OP_MOD:      16,\n    OP_POW:      17,\n    OP_DIV:      18,\n    OP_IDIV:     19,\n    OP_BAND:     20,\n    OP_BOR:      21,\n    OP_BXOR:     22,\n    OP_SHL:      23,\n    OP_SHR:      24,\n    OP_UNM:      25,\n    OP_BNOT:     26,\n    OP_NOT:      27,\n    OP_LEN:      28,\n    OP_CONCAT:   29,\n    OP_JMP:      30,\n    OP_EQ:       31,\n    OP_LT:       32,\n    OP_LE:       33,\n    OP_TEST:     34,\n    OP_TESTSET:  35,\n    OP_CALL:     36,\n    OP_TAILCALL: 37,\n    OP_RETURN:   38,\n    OP_FORLOOP:  39,\n    OP_FORPREP:  40,\n    OP_TFORCALL: 41,\n    OP_TFORLOOP: 42,\n    OP_SETLIST:  43,\n    OP_CLOSURE:  44,\n    OP_VARARG:   45,\n    OP_EXTRAARG: 46\n};\n\n/*\n** masks for instruction properties. The format is:\n** bits 0-1: op mode\n** bits 2-3: C arg mode\n** bits 4-5: B arg mode\n** bit 6: instruction set register A\n** bit 7: operator is a test (next instruction must be a jump)\n*/\nconst OpArgN = 0;  /* argument is not used */\nconst OpArgU = 1;  /* argument is used */\nconst OpArgR = 2;  /* argument is a register or a jump offset */\nconst OpArgK = 3;  /* argument is a constant or register/constant */\n\n/* basic instruction format */\nconst iABC  = 0;\nconst iABx  = 1;\nconst iAsBx = 2;\nconst iAx   = 3;\n\nconst luaP_opmodes = [\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_MOVE */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgN << 2 | iABx,   /* OP_LOADK */\n    0 << 7 | 1 << 6 | OpArgN << 4 | OpArgN << 2 | iABx,   /* OP_LOADKX */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_LOADBOOL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_LOADNIL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_GETUPVAL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgK << 2 | iABC,   /* OP_GETTABUP */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgK << 2 | iABC,   /* OP_GETTABLE */\n    0 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SETTABUP */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_SETUPVAL */\n    0 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SETTABLE */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_NEWTABLE */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgK << 2 | iABC,   /* OP_SELF */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_ADD */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SUB */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_MUL */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_MOD */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_POW */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_DIV */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_IDIV */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_BAND */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_BOR */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_BXOR */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SHL */\n    0 << 7 | 1 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_SHR */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_UNM */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_BNOT */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_NOT */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iABC,   /* OP_LEN */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgR << 2 | iABC,   /* OP_CONCAT */\n    0 << 7 | 0 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_JMP */\n    1 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_EQ */\n    1 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_LT */\n    1 << 7 | 0 << 6 | OpArgK << 4 | OpArgK << 2 | iABC,   /* OP_LE */\n    1 << 7 | 0 << 6 | OpArgN << 4 | OpArgU << 2 | iABC,   /* OP_TEST */\n    1 << 7 | 1 << 6 | OpArgR << 4 | OpArgU << 2 | iABC,   /* OP_TESTSET */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_CALL */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_TAILCALL */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_RETURN */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_FORLOOP */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_FORPREP */\n    0 << 7 | 0 << 6 | OpArgN << 4 | OpArgU << 2 | iABC,   /* OP_TFORCALL */\n    0 << 7 | 1 << 6 | OpArgR << 4 | OpArgN << 2 | iAsBx,  /* OP_TFORLOOP */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgU << 2 | iABC,   /* OP_SETLIST */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABx,   /* OP_CLOSURE */\n    0 << 7 | 1 << 6 | OpArgU << 4 | OpArgN << 2 | iABC,   /* OP_VARARG */\n    0 << 7 | 0 << 6 | OpArgU << 4 | OpArgU << 2 | iAx     /* OP_EXTRAARG */\n];\n\nconst getOpMode = function(m) {\n    return luaP_opmodes[m] & 3;\n};\n\nconst getBMode = function(m) {\n    return (luaP_opmodes[m] >> 4) & 3;\n};\n\nconst getCMode = function(m) {\n    return (luaP_opmodes[m] >> 2) & 3;\n};\n\nconst testAMode = function(m) {\n    return luaP_opmodes[m] & (1 << 6);\n};\n\nconst testTMode = function(m) {\n    return luaP_opmodes[m] & (1 << 7);\n};\n\nconst SIZE_C     = 9;\nconst SIZE_B     = 9;\nconst SIZE_Bx    = (SIZE_C + SIZE_B);\nconst SIZE_A     = 8;\nconst SIZE_Ax    = (SIZE_C + SIZE_B + SIZE_A);\nconst SIZE_OP    = 6;\nconst POS_OP     = 0;\nconst POS_A      = (POS_OP + SIZE_OP);\nconst POS_C      = (POS_A + SIZE_A);\nconst POS_B      = (POS_C + SIZE_C);\nconst POS_Bx     = POS_C;\nconst POS_Ax     = POS_A;\nconst MAXARG_Bx  = ((1 << SIZE_Bx) - 1);\nconst MAXARG_sBx = (MAXARG_Bx >> 1); /* 'sBx' is signed */\nconst MAXARG_Ax  = ((1<<SIZE_Ax)-1);\nconst MAXARG_A   = ((1 << SIZE_A) - 1);\nconst MAXARG_B   = ((1 << SIZE_B) - 1);\nconst MAXARG_C   = ((1 << SIZE_C) - 1);\n\n/* this bit 1 means constant (0 means register) */\nconst BITRK      = (1 << (SIZE_B - 1));\n\nconst MAXINDEXRK = (BITRK - 1);\n\n/*\n** invalid register that fits in 8 bits\n*/\nconst NO_REG     = MAXARG_A;\n\n/* test whether value is a constant */\nconst ISK = function (x) {\n    return x & BITRK;\n};\n\n/* gets the index of the constant */\nconst INDEXK = function (r) {\n    return r & ~BITRK;\n};\n\n/* code a constant index as a RK value */\nconst RKASK = function(x) {\n    return x | BITRK;\n};\n\n\n/* creates a mask with 'n' 1 bits at position 'p' */\nconst MASK1 = function(n, p) {\n    return ((~((~0)<<(n)))<<(p));\n};\n\n/* creates a mask with 'n' 0 bits at position 'p' */\nconst MASK0 = function(n, p) {\n    return (~MASK1(n, p));\n};\n\nconst GET_OPCODE = function(i) {\n    return i.opcode;\n};\n\nconst SET_OPCODE = function(i, o) {\n    i.code = (i.code & MASK0(SIZE_OP, POS_OP)) | ((o << POS_OP) & MASK1(SIZE_OP, POS_OP));\n    return fullins(i);\n};\n\nconst setarg = function(i, v, pos, size) {\n    i.code = (i.code & MASK0(size, pos)) | ((v << pos) & MASK1(size, pos));\n    return fullins(i);\n};\n\nconst GETARG_A = function(i) {\n    return i.A;\n};\n\nconst SETARG_A = function(i,v) {\n    return setarg(i, v, POS_A, SIZE_A);\n};\n\nconst GETARG_B = function(i) {\n    return i.B;\n};\n\nconst SETARG_B = function(i,v) {\n    return setarg(i, v, POS_B, SIZE_B);\n};\n\nconst GETARG_C = function(i) {\n    return i.C;\n};\n\nconst SETARG_C = function(i,v) {\n    return setarg(i, v, POS_C, SIZE_C);\n};\n\nconst GETARG_Bx = function(i) {\n    return i.Bx;\n};\n\nconst SETARG_Bx = function(i,v) {\n    return setarg(i, v, POS_Bx, SIZE_Bx);\n};\n\nconst GETARG_Ax = function(i) {\n    return i.Ax;\n};\n\nconst SETARG_Ax = function(i,v) {\n    return setarg(i, v, POS_Ax, SIZE_Ax);\n};\n\nconst GETARG_sBx = function(i) {\n    return i.sBx;\n};\n\nconst SETARG_sBx = function(i, b) {\n    return SETARG_Bx(i, b + MAXARG_sBx);\n};\n\n/*\n** Pre-calculate all possible part of the instruction\n*/\nconst fullins = function(ins) {\n    if (typeof ins === \"number\") {\n        return {\n            code:   ins,\n            opcode: (ins >> POS_OP) & MASK1(SIZE_OP, 0),\n            A:      (ins >> POS_A)  & MASK1(SIZE_A,  0),\n            B:      (ins >> POS_B)  & MASK1(SIZE_B,  0),\n            C:      (ins >> POS_C)  & MASK1(SIZE_C,  0),\n            Bx:     (ins >> POS_Bx) & MASK1(SIZE_Bx, 0),\n            Ax:     (ins >> POS_Ax) & MASK1(SIZE_Ax, 0),\n            sBx:    ((ins >> POS_Bx) & MASK1(SIZE_Bx, 0)) - MAXARG_sBx\n        };\n    } else {\n        let i = ins.code;\n        ins.opcode = (i >> POS_OP) & MASK1(SIZE_OP, 0);\n        ins.A      = (i >> POS_A)  & MASK1(SIZE_A,  0);\n        ins.B      = (i >> POS_B)  & MASK1(SIZE_B,  0);\n        ins.C      = (i >> POS_C)  & MASK1(SIZE_C,  0);\n        ins.Bx     = (i >> POS_Bx) & MASK1(SIZE_Bx, 0);\n        ins.Ax     = (i >> POS_Ax) & MASK1(SIZE_Ax, 0);\n        ins.sBx    = ((i >> POS_Bx) & MASK1(SIZE_Bx, 0)) - MAXARG_sBx;\n        return ins;\n    }\n};\n\nconst CREATE_ABC = function(o, a, b, c) {\n    return fullins(o << POS_OP | a << POS_A | b << POS_B | c << POS_C);\n};\n\nconst CREATE_ABx = function(o, a, bc) {\n    return fullins(o << POS_OP | a << POS_A | bc << POS_Bx);\n};\n\nconst CREATE_Ax = function(o, a) {\n    return fullins(o << POS_OP | a << POS_Ax);\n};\n\n/* number of list items to accumulate before a SETLIST instruction */\nconst LFIELDS_PER_FLUSH = 50;\n\nmodule.exports.BITRK               = BITRK;\nmodule.exports.CREATE_ABC          = CREATE_ABC;\nmodule.exports.CREATE_ABx          = CREATE_ABx;\nmodule.exports.CREATE_Ax           = CREATE_Ax;\nmodule.exports.GET_OPCODE          = GET_OPCODE;\nmodule.exports.GETARG_A            = GETARG_A;\nmodule.exports.GETARG_B            = GETARG_B;\nmodule.exports.GETARG_C            = GETARG_C;\nmodule.exports.GETARG_Bx           = GETARG_Bx;\nmodule.exports.GETARG_Ax           = GETARG_Ax;\nmodule.exports.GETARG_sBx          = GETARG_sBx;\nmodule.exports.INDEXK              = INDEXK;\nmodule.exports.ISK                 = ISK;\nmodule.exports.LFIELDS_PER_FLUSH   = LFIELDS_PER_FLUSH;\nmodule.exports.MAXARG_A            = MAXARG_A;\nmodule.exports.MAXARG_Ax           = MAXARG_Ax;\nmodule.exports.MAXARG_B            = MAXARG_B;\nmodule.exports.MAXARG_Bx           = MAXARG_Bx;\nmodule.exports.MAXARG_C            = MAXARG_C;\nmodule.exports.MAXARG_sBx          = MAXARG_sBx;\nmodule.exports.MAXINDEXRK          = MAXINDEXRK;\nmodule.exports.NO_REG              = NO_REG;\nmodule.exports.OpArgK              = OpArgK;\nmodule.exports.OpArgN              = OpArgN;\nmodule.exports.OpArgR              = OpArgR;\nmodule.exports.OpArgU              = OpArgU;\nmodule.exports.OpCodes             = OpCodes;\nmodule.exports.OpCodesI            = OpCodesI;\nmodule.exports.POS_A               = POS_A;\nmodule.exports.POS_Ax              = POS_Ax;\nmodule.exports.POS_B               = POS_B;\nmodule.exports.POS_Bx              = POS_Bx;\nmodule.exports.POS_C               = POS_C;\nmodule.exports.POS_OP              = POS_OP;\nmodule.exports.RKASK               = RKASK;\nmodule.exports.SETARG_A            = SETARG_A;\nmodule.exports.SETARG_Ax           = SETARG_Ax;\nmodule.exports.SETARG_B            = SETARG_B;\nmodule.exports.SETARG_Bx           = SETARG_Bx;\nmodule.exports.SETARG_C            = SETARG_C;\nmodule.exports.SETARG_sBx          = SETARG_sBx;\nmodule.exports.SET_OPCODE          = SET_OPCODE;\nmodule.exports.SIZE_A              = SIZE_A;\nmodule.exports.SIZE_Ax             = SIZE_Ax;\nmodule.exports.SIZE_B              = SIZE_B;\nmodule.exports.SIZE_Bx             = SIZE_Bx;\nmodule.exports.SIZE_C              = SIZE_C;\nmodule.exports.SIZE_OP             = SIZE_OP;\nmodule.exports.fullins             = fullins;\nmodule.exports.getBMode            = getBMode;\nmodule.exports.getCMode            = getCMode;\nmodule.exports.getOpMode           = getOpMode;\nmodule.exports.iABC                = iABC;\nmodule.exports.iABx                = iABx;\nmodule.exports.iAsBx               = iAsBx;\nmodule.exports.iAx                 = iAx;\nmodule.exports.testAMode           = testAMode;\nmodule.exports.testTMode           = testTMode;\n","\"use strict\";\n\nconst {\n    LUA_TNIL,\n    LUA_TTABLE,\n    lua_close,\n    lua_createtable,\n    lua_getfield,\n    lua_isboolean,\n    lua_isnoneornil,\n    lua_pop,\n    lua_pushboolean,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushliteral,\n    lua_pushnil,\n    lua_pushnumber,\n    lua_pushstring,\n    lua_setfield,\n    lua_settop,\n    lua_toboolean,\n    lua_tointegerx\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addchar,\n    luaL_addstring,\n    // luaL_argcheck,\n    luaL_argerror,\n    luaL_buffinit,\n    luaL_checkinteger,\n    luaL_checkstring,\n    luaL_checktype,\n    luaL_error,\n    luaL_execresult,\n    luaL_fileresult,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_optlstring,\n    luaL_optstring,\n    luaL_pushresult\n} = require('./lauxlib.js');\nconst {\n    luastring_eq,\n    to_jsstring,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\n/* options for ANSI C 89 (only 1-char options) */\n// const L_STRFTIMEC89 = to_luastring(\"aAbBcdHIjmMpSUwWxXyYZ%\");\n// const LUA_STRFTIMEOPTIONS = L_STRFTIMEC89;\n\n/* options for ISO C 99 and POSIX */\n// const L_STRFTIMEC99 = to_luastring(\"aAbBcCdDeFgGhHIjmMnprRStTuUVwWxXyYzZ%||EcECExEXEyEYOdOeOHOIOmOMOSOuOUOVOwOWOy\");  /* two-char options */\n// const LUA_STRFTIMEOPTIONS = L_STRFTIMEC99;\n\n/* options for Windows */\n// const L_STRFTIMEWIN = to_luastring(\"aAbBcdHIjmMpSUwWxXyYzZ%||#c#x#d#H#I#j#m#M#S#U#w#W#y#Y\");  /* two-char options */\n// const LUA_STRFTIMEOPTIONS = L_STRFTIMEWIN;\n\n/* options for our own strftime implementation\n  - should be superset of C89 options for compat\n  - missing from C99:\n      - ISO 8601 week specifiers: gGV\n      - > single char specifiers\n  - beyond C99:\n      - %k: TZ extension: space-padded 24-hour\n      - %l: TZ extension: space-padded 12-hour\n      - %P: GNU extension: lower-case am/pm\n*/\nconst LUA_STRFTIMEOPTIONS = to_luastring(\"aAbBcCdDeFhHIjklmMnpPrRStTuUwWxXyYzZ%\");\n\n\nconst setfield = function(L, key, value) {\n    lua_pushinteger(L, value);\n    lua_setfield(L, -2, to_luastring(key, true));\n};\n\nconst setallfields = function(L, time, utc) {\n    setfield(L, \"sec\",   utc ? time.getUTCSeconds()  : time.getSeconds());\n    setfield(L, \"min\",   utc ? time.getUTCMinutes()  : time.getMinutes());\n    setfield(L, \"hour\",  utc ? time.getUTCHours()    : time.getHours());\n    setfield(L, \"day\",   utc ? time.getUTCDate()     : time.getDate());\n    setfield(L, \"month\", (utc ? time.getUTCMonth()   : time.getMonth()) + 1);\n    setfield(L, \"year\",  utc ? time.getUTCFullYear() : time.getFullYear());\n    setfield(L, \"wday\",  (utc ? time.getUTCDay()     : time.getDay()) + 1);\n    setfield(L, \"yday\", Math.floor((time - (new Date(time.getFullYear(), 0, 0 /* shortcut to correct day by one */))) / 86400000));\n    // setboolfield(L, \"isdst\", time.get);\n};\n\nconst L_MAXDATEFIELD = (Number.MAX_SAFE_INTEGER / 2);\n\nconst getfield = function(L, key, d, delta) {\n    let t = lua_getfield(L, -1, to_luastring(key, true));  /* get field and its type */\n    let res = lua_tointegerx(L, -1);\n    if (res === false) {  /* field is not an integer? */\n        if (t !== LUA_TNIL)  /* some other value? */\n            return luaL_error(L, to_luastring(\"field '%s' is not an integer\"), key);\n        else if (d < 0)  /* absent field; no default? */\n            return luaL_error(L, to_luastring(\"field '%s' missing in date table\"), key);\n        res = d;\n    }\n    else {\n        if (!(-L_MAXDATEFIELD <= res && res <= L_MAXDATEFIELD))\n            return luaL_error(L, to_luastring(\"field '%s' is out-of-bound\"), key);\n        res -= delta;\n    }\n    lua_pop(L, 1);\n    return res;\n};\n\n\nconst locale = {\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ].map((s) => to_luastring(s)),\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"].map((s) => to_luastring(s)),\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].map((s) => to_luastring(s)),\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"].map((s) => to_luastring(s)),\n    AM: to_luastring(\"AM\"),\n    PM: to_luastring(\"PM\"),\n    am: to_luastring(\"am\"),\n    pm: to_luastring(\"pm\"),\n    formats: {\n        c: to_luastring(\"%a %b %e %H:%M:%S %Y\"),\n        D: to_luastring(\"%m/%d/%y\"),\n        F: to_luastring(\"%Y-%m-%d\"),\n        R: to_luastring(\"%H:%M\"),\n        r: to_luastring(\"%I:%M:%S %p\"),\n        T: to_luastring(\"%H:%M:%S\"),\n        X: to_luastring(\"%T\"),\n        x: to_luastring(\"%D\")\n    }\n};\n\nconst week_number = function(date, start_of_week) {\n    // This works by shifting the weekday back by one day if we\n    // are treating Monday as the first day of the week.\n    let weekday = date.getDay();\n    if (start_of_week === 'monday') {\n        if (weekday === 0) // Sunday\n            weekday = 6;\n        else\n            weekday--;\n    }\n    let yday = (date - new Date(date.getFullYear(), 0, 1)) / 86400000;\n    return Math.floor((yday + 7 - weekday) / 7);\n};\n\nconst push_pad_2 = function(b, n, pad) {\n    if (n < 10)\n        luaL_addchar(b, pad);\n    luaL_addstring(b, to_luastring(String(n)));\n};\n\nconst strftime = function(L, b, s, date) {\n    let i = 0;\n    while (i < s.length) {\n        if (s[i] !== 37 /* % */) {  /* not a conversion specifier? */\n            luaL_addchar(b, s[i++]);\n        } else {\n            i++;  /* skip '%' */\n            let len = checkoption(L, s, i);\n            /* each `case` has an example output above it for the UTC epoch */\n            switch(s[i]) {\n                // '%'\n                case 37 /* % */:\n                    luaL_addchar(b, 37);\n                    break;\n\n                // 'Thursday'\n                case 65 /* A */:\n                    luaL_addstring(b, locale.days[date.getDay()]);\n                    break;\n\n                // 'January'\n                case 66 /* B */:\n                    luaL_addstring(b, locale.months[date.getMonth()]);\n                    break;\n\n                // '19'\n                case 67 /* C */:\n                    push_pad_2(b, Math.floor(date.getFullYear() / 100), 48 /* 0 */);\n                    break;\n\n                // '01/01/70'\n                case 68 /* D */:\n                    strftime(L, b, locale.formats.D, date);\n                    break;\n\n                // '1970-01-01'\n                case 70 /* F */:\n                    strftime(L, b, locale.formats.F, date);\n                    break;\n\n                // '00'\n                case 72 /* H */:\n                    push_pad_2(b, date.getHours(), 48 /* 0 */);\n                    break;\n\n                // '12'\n                case 73 /* I */:\n                    push_pad_2(b, (date.getHours() + 11) % 12 + 1, 48 /* 0 */);\n                    break;\n\n                // '00'\n                case 77 /* M */:\n                    push_pad_2(b, date.getMinutes(), 48 /* 0 */);\n                    break;\n\n                // 'am'\n                case 80 /* P */:\n                    luaL_addstring(b, date.getHours() < 12 ? locale.am : locale.pm);\n                    break;\n\n                // '00:00'\n                case 82 /* R */:\n                    strftime(L, b, locale.formats.R, date);\n                    break;\n\n                // '00'\n                case 83 /* S */:\n                    push_pad_2(b, date.getSeconds(), 48 /* 0 */);\n                    break;\n\n                // '00:00:00'\n                case 84 /* T */:\n                    strftime(L, b, locale.formats.T, date);\n                    break;\n\n                // '00'\n                case 85 /* U */:\n                    push_pad_2(b, week_number(date, \"sunday\"), 48 /* 0 */);\n                    break;\n\n                // '00'\n                case 87 /* W */:\n                    push_pad_2(b, week_number(date, \"monday\"), 48 /* 0 */);\n                    break;\n\n                // '16:00:00'\n                case 88 /* X */:\n                    strftime(L, b, locale.formats.X, date);\n                    break;\n\n                // '1970'\n                case 89 /* Y */:\n                    luaL_addstring(b, to_luastring(String(date.getFullYear())));\n                    break;\n\n                // 'GMT'\n                case 90 /* Z */: {\n                    let tzString = date.toString().match(/\\(([\\w\\s]+)\\)/);\n                    if (tzString)\n                        luaL_addstring(b, to_luastring(tzString[1]));\n                    break;\n                }\n\n                // 'Thu'\n                case 97 /* a */:\n                    luaL_addstring(b, locale.shortDays[date.getDay()]);\n                    break;\n\n                // 'Jan'\n                case 98 /* b */:\n                case 104 /* h */:\n                    luaL_addstring(b, locale.shortMonths[date.getMonth()]);\n                    break;\n\n                // ''\n                case 99 /* c */:\n                    strftime(L, b, locale.formats.c, date);\n                    break;\n\n                // '01'\n                case 100 /* d */:\n                    push_pad_2(b, date.getDate(), 48 /* 0 */);\n                    break;\n\n                // ' 1'\n                case 101 /* e */:\n                    push_pad_2(b, date.getDate(), 32 /* space */);\n                    break;\n\n                // '000'\n                case 106 /* j */: {\n                    let yday = Math.floor((date - new Date(date.getFullYear(), 0, 1)) / 86400000);\n                    if (yday < 100) {\n                        if (yday < 10)\n                            luaL_addchar(b, 48 /* 0 */);\n                        luaL_addchar(b, 48 /* 0 */);\n                    }\n                    luaL_addstring(b, to_luastring(String(yday)));\n                    break;\n                }\n\n                // ' 0'\n                case 107 /* k */:\n                    push_pad_2(b, date.getHours(), 32 /* space */);\n                    break;\n\n                // '12'\n                case 108 /* l */:\n                    push_pad_2(b, (date.getHours() + 11) % 12 + 1, 32 /* space */);\n                    break;\n\n                // '01'\n                case 109 /* m */:\n                    push_pad_2(b, date.getMonth() + 1, 48 /* 0 */);\n                    break;\n\n                // '\\n'\n                case 110 /* n */:\n                    luaL_addchar(b, 10);\n                    break;\n\n                // 'AM'\n                case 112 /* p */:\n                    luaL_addstring(b, date.getHours() < 12 ? locale.AM : locale.PM);\n                    break;\n\n                // '12:00:00 AM'\n                case 114 /* r */:\n                    strftime(L, b, locale.formats.r, date);\n                    break;\n\n                // '0'\n                case 115 /* s */:\n                    luaL_addstring(b, to_luastring(String(Math.floor(date / 1000))));\n                    break;\n\n                // '\\t'\n                case 116 /* t */:\n                    luaL_addchar(b, 8);\n                    break;\n\n                // '4'\n                case 117 /* u */: {\n                    let day = date.getDay();\n                    luaL_addstring(b, to_luastring(String(day === 0 ? 7 : day)));\n                    break;\n                }\n\n                // '4'\n                case 119 /* w */:\n                    luaL_addstring(b, to_luastring(String(date.getDay())));\n                    break;\n\n                // '12/31/69'\n                case 120 /* x */:\n                    strftime(L, b, locale.formats.x, date);\n                    break;\n\n                // '70'\n                case 121 /* y */:\n                    push_pad_2(b, date.getFullYear() % 100, 48 /* 0 */);\n                    break;\n\n                // '+0000'\n                case 122 /* z */: {\n                    let off = date.getTimezoneOffset();\n                    if (off > 0) {\n                        luaL_addchar(b, 45 /* - */);\n                    } else {\n                        off = -off;\n                        luaL_addchar(b, 43 /* + */);\n                    }\n                    push_pad_2(b, Math.floor(off/60), 48 /* 0 */);\n                    push_pad_2(b, off % 60, 48 /* 0 */);\n                    break;\n                }\n            }\n            i += len;\n        }\n    }\n};\n\n\nconst checkoption = function(L, conv, i) {\n    let option = LUA_STRFTIMEOPTIONS;\n    let o = 0;\n    let oplen = 1;  /* length of options being checked */\n    for (; o < option.length && oplen <= (conv.length - i); o += oplen) {\n        if (option[o] === '|'.charCodeAt(0))  /* next block? */\n            oplen++;  /* will check options with next length (+1) */\n        else if (luastring_eq(conv.subarray(i, i+oplen), option.subarray(o, o+oplen))) {  /* match? */\n            return oplen;  /* return length */\n        }\n    }\n    luaL_argerror(L, 1,\n        lua_pushfstring(L, to_luastring(\"invalid conversion specifier '%%%s'\"), conv));\n};\n\n/* maximum size for an individual 'strftime' item */\n// const SIZETIMEFMT = 250;\n\n\nconst os_date = function(L) {\n    let s = luaL_optlstring(L, 1, \"%c\");\n    let stm = lua_isnoneornil(L, 2) ? new Date() : new Date(l_checktime(L, 2) * 1000);\n    let utc = false;\n    let i = 0;\n    if (s[i] === '!'.charCodeAt(0)) {  /* UTC? */\n        utc = true;\n        i++;  /* skip '!' */\n    }\n    if (s[i] === \"*\".charCodeAt(0) && s[i+1] === \"t\".charCodeAt(0)) {\n        lua_createtable(L, 0, 9);  /* 9 = number of fields */\n        setallfields(L, stm, utc);\n    } else {\n        let cc = new Uint8Array(4);\n        cc[0] = \"%\".charCodeAt(0);\n        let b = new luaL_Buffer();\n        luaL_buffinit(L, b);\n        strftime(L, b, s, stm);\n        luaL_pushresult(b);\n    }\n    return 1;\n};\n\nconst os_time = function(L) {\n    let t;\n    if (lua_isnoneornil(L, 1))  /* called without args? */\n        t = new Date();  /* get current time */\n    else {\n        luaL_checktype(L, 1, LUA_TTABLE);\n        lua_settop(L, 1);  /* make sure table is at the top */\n        t = new Date(\n            getfield(L, \"year\", -1, 0),\n            getfield(L, \"month\", -1, 1),\n            getfield(L, \"day\", -1, 0),\n            getfield(L, \"hour\", 12, 0),\n            getfield(L, \"min\", 0, 0),\n            getfield(L, \"sec\", 0, 0)\n        );\n        setallfields(L, t);\n    }\n\n    lua_pushinteger(L, Math.floor(t / 1000));\n    return 1;\n};\n\nconst l_checktime = function(L, arg) {\n    let t = luaL_checkinteger(L, arg);\n    // luaL_argcheck(L, t, arg, \"time out-of-bounds\");\n    return t;\n};\n\nconst os_difftime = function(L) {\n    let t1 = l_checktime(L, 1);\n    let t2 = l_checktime(L, 2);\n    lua_pushnumber(L, t1 - t2);\n    return 1;\n};\n\nconst syslib = {\n    \"date\": os_date,\n    \"difftime\": os_difftime,\n    \"time\": os_time\n};\n\nif (typeof process === \"undefined\") {\n    syslib.clock = function(L) {\n        lua_pushnumber(L, performance.now()/1000);\n        return 1;\n    };\n} else {\n    /* Only with Node */\n    const fs = require('fs');\n    const tmp = require('tmp');\n    const child_process = require('child_process');\n\n    syslib.exit = function(L) {\n        let status;\n        if (lua_isboolean(L, 1))\n            status = (lua_toboolean(L, 1) ? 0 : 1);\n        else\n            status = luaL_optinteger(L, 1, 0);\n        if (lua_toboolean(L, 2))\n            lua_close(L);\n        if (L) process.exit(status);  /* 'if' to avoid warnings for unreachable 'return' */\n        return 0;\n    };\n\n    syslib.getenv = function(L) {\n        let key = luaL_checkstring(L, 1);\n        key = to_jsstring(key); /* https://github.com/nodejs/node/issues/16961 */\n        if (Object.prototype.hasOwnProperty.call(process.env, key)) {\n            lua_pushliteral(L, process.env[key]);\n        } else {\n            lua_pushnil(L);\n        }\n        return 1;\n    };\n\n    syslib.clock = function(L) {\n        lua_pushnumber(L, process.uptime());\n        return 1;\n    };\n\n    const lua_tmpname = function() {\n        return tmp.tmpNameSync();\n    };\n\n    syslib.remove = function(L) {\n        let filename = luaL_checkstring(L, 1);\n        try {\n            fs.unlinkSync(filename);\n        } catch (e) {\n            if (e.code === 'EISDIR') {\n                try {\n                    fs.rmdirSync(filename);\n                } catch (e) {\n                    return luaL_fileresult(L, false, filename, e);\n                }\n            } else {\n                return luaL_fileresult(L, false, filename, e);\n            }\n        }\n        return luaL_fileresult(L, true);\n    };\n\n    syslib.rename = function(L) {\n        let fromname = luaL_checkstring(L, 1);\n        let toname = luaL_checkstring(L, 2);\n        try {\n            fs.renameSync(fromname, toname);\n        } catch (e) {\n            return luaL_fileresult(L, false, false, e);\n        }\n        return luaL_fileresult(L, true);\n    };\n\n    syslib.tmpname = function(L) {\n        let name = lua_tmpname();\n        if (!name)\n            return luaL_error(L, to_luastring(\"unable to generate a unique filename\"));\n        lua_pushstring(L, to_luastring(name));\n        return 1;\n    };\n\n    syslib.execute = function(L) {\n        let cmd = luaL_optstring(L, 1, null);\n        if (cmd !== null) {\n            try {\n                child_process.execSync(\n                    cmd,\n                    {\n                        stdio: [process.stdin, process.stdout, process.stderr]\n                    }\n                );\n            } catch (e) {\n                return luaL_execresult(L, e);\n            }\n\n            return luaL_execresult(L, null);\n        } else {\n            /* Assume a shell is available.\n               If it's good enough for musl it's good enough for us.\n               http://git.musl-libc.org/cgit/musl/tree/src/process/system.c?id=ac45692a53a1b8d2ede329d91652d43c1fb5dc8d#n22\n            */\n            lua_pushboolean(L, 1);\n            return 1;\n        }\n    };\n}\n\nconst luaopen_os = function(L) {\n    luaL_newlib(L, syslib);\n    return 1;\n};\n\nmodule.exports.luaopen_os = luaopen_os;\n","\"use strict\";\n\nconst {\n    LUA_MULTRET,\n    to_luastring\n} = require('./defs.js');\nconst {\n    BinOpr: {\n        OPR_ADD,\n        OPR_AND,\n        OPR_BAND,\n        OPR_BOR,\n        OPR_BXOR,\n        OPR_CONCAT,\n        OPR_DIV,\n        OPR_EQ,\n        OPR_GE,\n        OPR_GT,\n        OPR_IDIV,\n        OPR_LE,\n        OPR_LT,\n        OPR_MOD,\n        OPR_MUL,\n        OPR_NE,\n        OPR_NOBINOPR,\n        OPR_OR,\n        OPR_POW,\n        OPR_SHL,\n        OPR_SHR,\n        OPR_SUB\n    },\n    UnOpr: {\n        OPR_BNOT,\n        OPR_LEN,\n        OPR_MINUS,\n        OPR_NOT,\n        OPR_NOUNOPR\n    },\n    NO_JUMP,\n    getinstruction,\n    luaK_checkstack,\n    luaK_codeABC,\n    luaK_codeABx,\n    luaK_codeAsBx,\n    luaK_codek,\n    luaK_concat,\n    luaK_dischargevars,\n    luaK_exp2RK,\n    luaK_exp2anyreg,\n    luaK_exp2anyregup,\n    luaK_exp2nextreg,\n    luaK_exp2val,\n    luaK_fixline,\n    luaK_getlabel,\n    luaK_goiffalse,\n    luaK_goiftrue,\n    luaK_indexed,\n    luaK_infix,\n    luaK_intK,\n    luaK_jump,\n    luaK_jumpto,\n    luaK_nil,\n    luaK_patchclose,\n    luaK_patchlist,\n    luaK_patchtohere,\n    luaK_posfix,\n    luaK_prefix,\n    luaK_reserveregs,\n    luaK_ret,\n    luaK_self,\n    luaK_setlist,\n    luaK_setmultret,\n    luaK_setoneret,\n    luaK_setreturns,\n    luaK_storevar,\n    luaK_stringK\n} = require('./lcode.js');\nconst ldo      = require('./ldo.js');\nconst lfunc    = require('./lfunc.js');\nconst llex     = require('./llex.js');\nconst {\n    LUAI_MAXCCALLS,\n    MAX_INT,\n    lua_assert\n}  = require('./llimits.js');\nconst lobject  = require('./lobject.js');\nconst {\n    OpCodesI: {\n        OP_CALL,\n        OP_CLOSURE,\n        OP_FORLOOP,\n        OP_FORPREP,\n        OP_GETUPVAL,\n        OP_MOVE,\n        OP_NEWTABLE,\n        OP_SETTABLE,\n        OP_TAILCALL,\n        OP_TFORCALL,\n        OP_TFORLOOP,\n        OP_VARARG\n    },\n    LFIELDS_PER_FLUSH,\n    SETARG_B,\n    SETARG_C,\n    SET_OPCODE\n} = require('./lopcodes.js');\nconst {\n    luaS_eqlngstr,\n    luaS_new,\n    luaS_newliteral\n} = require('./lstring.js');\nconst ltable   = require('./ltable.js');\nconst Proto    = lfunc.Proto;\nconst R        = llex.RESERVED;\n\nconst MAXVARS = 200;\n\nconst hasmultret = function(k) {\n    return k === expkind.VCALL || k === expkind.VVARARG;\n};\n\nconst eqstr = function(a, b) {\n    /* TODO: use plain equality as strings are cached */\n    return luaS_eqlngstr(a, b);\n};\n\nclass BlockCnt {\n    constructor() {\n        this.previous = null;  /* chain */\n        this.firstlabel = NaN; /* index of first label in this block */\n        this.firstgoto = NaN;  /* index of first pending goto in this block */\n        this.nactvar = NaN;    /* # active locals outside the block */\n        this.upval = NaN;      /* true if some variable in the block is an upvalue */\n        this.isloop = NaN;     /* true if 'block' is a loop */\n    }\n}\n\nconst expkind = {\n    VVOID: 0,        /* when 'expdesc' describes the last expression a list,\n                        this kind means an empty list (so, no expression) */\n    VNIL: 1,         /* constant nil */\n    VTRUE: 2,        /* constant true */\n    VFALSE: 3,       /* constant false */\n    VK: 4,           /* constant in 'k'; info = index of constant in 'k' */\n    VKFLT: 5,        /* floating constant; nval = numerical float value */\n    VKINT: 6,        /* integer constant; nval = numerical integer value */\n    VNONRELOC: 7,    /* expression has its value in a fixed register;\n                        info = result register */\n    VLOCAL: 8,       /* local variable; info = local register */\n    VUPVAL: 9,       /* upvalue variable; info = index of upvalue in 'upvalues' */\n    VINDEXED: 10,    /* indexed variable;\n                        ind.vt = whether 't' is register or upvalue;\n                        ind.t = table register or upvalue;\n                        ind.idx = key's R/K index */\n    VJMP: 11,        /* expression is a test/comparison;\n                        info = pc of corresponding jump instruction */\n    VRELOCABLE: 12,  /* expression can put result in any register;\n                        info = instruction pc */\n    VCALL: 13,       /* expression is a function call; info = instruction pc */\n    VVARARG: 14      /* vararg expression; info = instruction pc */\n};\n\nconst vkisvar = function(k) {\n    return expkind.VLOCAL <= k && k <= expkind.VINDEXED;\n};\n\nconst vkisinreg = function(k) {\n    return k === expkind.VNONRELOC || k === expkind.VLOCAL;\n};\n\nclass expdesc {\n    constructor() {\n        this.k = NaN;\n        this.u = {\n            ival: NaN,    /* for VKINT */\n            nval: NaN,    /* for VKFLT */\n            info: NaN,    /* for generic use */\n            ind: {        /* for indexed variables (VINDEXED) */\n                idx: NaN, /* index (R/K) */\n                t: NaN,   /* table (register or upvalue) */\n                vt: NaN   /* whether 't' is register (VLOCAL) or upvalue (VUPVAL) */\n            }\n        };\n        this.t = NaN;     /* patch list of 'exit when true' */\n        this.f = NaN;     /* patch list of 'exit when false' */\n    }\n\n    to(e) { // Copy e content to this, cf. luaK_posfix\n        this.k = e.k;\n        this.u = e.u;\n        this.t = e.t;\n        this.f = e.f;\n    }\n}\n\nclass FuncState {\n    constructor() {\n        this.f = null;         /* current function header */\n        this.prev = null;      /* enclosing function */\n        this.ls = null;        /* lexical state */\n        this.bl = null;        /* chain of current blocks */\n        this.pc = NaN;         /* next position to code (equivalent to 'ncode') */\n        this.lasttarget = NaN; /* 'label' of last 'jump label' */\n        this.jpc = NaN;        /* list of pending jumps to 'pc' */\n        this.nk = NaN;         /* number of elements in 'k' */\n        this.np = NaN;         /* number of elements in 'p' */\n        this.firstlocal = NaN; /* index of first local var (in Dyndata array) */\n        this.nlocvars = NaN;   /* number of elements in 'f->locvars' */\n        this.nactvar = NaN;    /* number of active local variables */\n        this.nups = NaN;       /* number of upvalues */\n        this.freereg = NaN;    /* first free register */\n    }\n}\n\n/* description of active local variable */\nclass Vardesc {\n    constructor() {\n        this.idx = NaN;  /* variable index in stack */\n    }\n}\n\n\n/* description of pending goto statements and label statements */\nclass Labeldesc {\n    constructor() {\n        this.name = null;  /* label identifier */\n        this.pc = NaN;  /* position in code */\n        this.line = NaN;  /* line where it appeared */\n        this.nactvar = NaN;  /* local level where it appears in current block */\n    }\n}\n\n\n/* list of labels or gotos */\nclass Labellist {\n    constructor() {\n        this.arr = []; /* array */\n        this.n = NaN;  /* number of entries in use */\n        this.size = NaN;  /* array size */\n    }\n}\n\n/* dynamic structures used by the parser */\nclass Dyndata {\n    constructor() {\n        this.actvar = {  /* list of active local variables */\n            arr: [],\n            n: NaN,\n            size: NaN\n        };\n        this.gt = new Labellist();\n        this.label = new Labellist();\n    }\n}\n\nconst semerror = function(ls, msg) {\n    ls.t.token = 0;  /* remove \"near <token>\" from final message */\n    llex.luaX_syntaxerror(ls, msg);\n};\n\nconst error_expected = function(ls, token) {\n    llex.luaX_syntaxerror(ls, lobject.luaO_pushfstring(ls.L, to_luastring(\"%s expected\", true), llex.luaX_token2str(ls, token)));\n};\n\nconst errorlimit = function(fs, limit, what) {\n    let L = fs.ls.L;\n    let line = fs.f.linedefined;\n    let where = (line === 0)\n        ? to_luastring(\"main function\", true)\n        : lobject.luaO_pushfstring(L, to_luastring(\"function at line %d\", true), line);\n    let msg = lobject.luaO_pushfstring(L, to_luastring(\"too many %s (limit is %d) in %s\", true),\n        what, limit, where);\n    llex.luaX_syntaxerror(fs.ls, msg);\n};\n\nconst checklimit = function(fs, v, l, what) {\n    if (v > l) errorlimit(fs, l, what);\n};\n\nconst testnext = function(ls, c) {\n    if (ls.t.token === c) {\n        llex.luaX_next(ls);\n        return true;\n    }\n\n    return false;\n};\n\nconst check = function(ls, c) {\n    if (ls.t.token !== c)\n        error_expected(ls, c);\n};\n\nconst checknext = function(ls, c) {\n    check(ls, c);\n    llex.luaX_next(ls);\n};\n\nconst check_condition = function(ls, c, msg) {\n    if (!c)\n        llex.luaX_syntaxerror(ls, msg);\n};\n\nconst check_match = function(ls, what, who, where) {\n    if (!testnext(ls, what)) {\n        if (where === ls.linenumber)\n            error_expected(ls, what);\n        else\n            llex.luaX_syntaxerror(ls, lobject.luaO_pushfstring(ls.L,\n                to_luastring(\"%s expected (to close %s at line %d)\"),\n                llex.luaX_token2str(ls, what), llex.luaX_token2str(ls, who), where));\n    }\n};\n\nconst str_checkname = function(ls) {\n    check(ls, R.TK_NAME);\n    let ts = ls.t.seminfo.ts;\n    llex.luaX_next(ls);\n    return ts;\n};\n\nconst init_exp = function(e, k, i) {\n    e.f = e.t = NO_JUMP;\n    e.k = k;\n    e.u.info = i;\n};\n\nconst codestring = function(ls, e, s) {\n    init_exp(e, expkind.VK, luaK_stringK(ls.fs, s));\n};\n\nconst checkname = function(ls, e) {\n    codestring(ls, e, str_checkname(ls));\n};\n\nconst registerlocalvar = function(ls, varname) {\n    let fs = ls.fs;\n    let f = fs.f;\n    f.locvars[fs.nlocvars] = new lobject.LocVar();\n    f.locvars[fs.nlocvars].varname = varname;\n    return fs.nlocvars++;\n};\n\nconst new_localvar = function(ls, name) {\n    let fs = ls.fs;\n    let dyd = ls.dyd;\n    let reg = registerlocalvar(ls, name);\n    checklimit(fs, dyd.actvar.n + 1 - fs.firstlocal, MAXVARS, to_luastring(\"local variables\", true));\n    dyd.actvar.arr[dyd.actvar.n] = new Vardesc();\n    dyd.actvar.arr[dyd.actvar.n].idx = reg;\n    dyd.actvar.n++;\n};\n\nconst new_localvarliteral = function(ls, name) {\n    new_localvar(ls, llex.luaX_newstring(ls, to_luastring(name, true)));\n};\n\nconst getlocvar = function(fs, i) {\n    let idx = fs.ls.dyd.actvar.arr[fs.firstlocal + i].idx;\n    lua_assert(idx < fs.nlocvars);\n    return fs.f.locvars[idx];\n};\n\nconst adjustlocalvars = function(ls, nvars) {\n    let fs = ls.fs;\n    fs.nactvar = fs.nactvar + nvars;\n    for (; nvars; nvars--)\n        getlocvar(fs, fs.nactvar - nvars).startpc = fs.pc;\n};\n\nconst removevars = function(fs, tolevel) {\n    fs.ls.dyd.actvar.n -= fs.nactvar - tolevel;\n    while (fs.nactvar > tolevel)\n        getlocvar(fs, --fs.nactvar).endpc = fs.pc;\n};\n\nconst searchupvalue = function(fs, name) {\n    let up = fs.f.upvalues;\n    for (let i = 0; i < fs.nups; i++) {\n        if (eqstr(up[i].name, name))\n            return i;\n    }\n    return -1;  /* not found */\n};\n\nconst newupvalue = function(fs, name, v) {\n    let f = fs.f;\n    checklimit(fs, fs.nups + 1, lfunc.MAXUPVAL, to_luastring(\"upvalues\", true));\n    f.upvalues[fs.nups] = {\n        instack: v.k === expkind.VLOCAL,\n        idx: v.u.info,\n        name: name\n    };\n    return fs.nups++;\n};\n\nconst searchvar = function(fs, n) {\n    for (let i = fs.nactvar - 1; i >= 0; i--) {\n        if (eqstr(n, getlocvar(fs, i).varname))\n            return i;\n    }\n\n    return -1;\n};\n\n/*\n** Mark block where variable at given level was defined\n** (to emit close instructions later).\n*/\nconst markupval = function(fs, level) {\n    let bl = fs.bl;\n    while (bl.nactvar > level)\n        bl = bl.previous;\n    bl.upval = 1;\n};\n\n/*\n** Find variable with given name 'n'. If it is an upvalue, add this\n** upvalue into all intermediate functions.\n*/\nconst singlevaraux = function(fs, n, vr, base) {\n    if (fs === null)  /* no more levels? */\n        init_exp(vr, expkind.VVOID, 0);  /* default is global */\n    else {\n        let v = searchvar(fs, n);  /* look up locals at current level */\n        if (v >= 0) {  /* found? */\n            init_exp(vr, expkind.VLOCAL, v);  /* variable is local */\n            if (!base)\n                markupval(fs, v);  /* local will be used as an upval */\n        } else {  /* not found as local at current level; try upvalues */\n            let idx = searchupvalue(fs, n);  /* try existing upvalues */\n            if (idx < 0) {  /* not found? */\n                singlevaraux(fs.prev, n, vr, 0);  /* try upper levels */\n                if (vr.k === expkind.VVOID)  /* not found? */\n                    return;  /* it is a global */\n                /* else was LOCAL or UPVAL */\n                idx = newupvalue(fs, n, vr);  /* will be a new upvalue */\n            }\n            init_exp(vr, expkind.VUPVAL, idx);  /* new or old upvalue */\n        }\n    }\n};\n\nconst singlevar = function(ls, vr) {\n    let varname = str_checkname(ls);\n    let fs = ls.fs;\n    singlevaraux(fs, varname, vr, 1);\n    if (vr.k === expkind.VVOID) {  /* is global name? */\n        let key = new expdesc();\n        singlevaraux(fs, ls.envn, vr, 1);  /* get environment variable */\n        lua_assert(vr.k !== expkind.VVOID);  /* this one must exist */\n        codestring(ls, key, varname);  /* key is variable name */\n        luaK_indexed(fs, vr, key);  /* env[varname] */\n    }\n};\n\nconst adjust_assign = function(ls, nvars, nexps, e) {\n    let fs = ls.fs;\n    let extra = nvars - nexps;\n    if (hasmultret(e.k)) {\n        extra++;  /* includes call itself */\n        if (extra < 0) extra = 0;\n        luaK_setreturns(fs, e, extra);  /* last exp. provides the difference */\n        if (extra > 1) luaK_reserveregs(fs, extra - 1);\n    } else {\n        if (e.k !== expkind.VVOID) luaK_exp2nextreg(fs, e);  /* close last expression */\n        if (extra > 0) {\n            let reg = fs.freereg;\n            luaK_reserveregs(fs, extra);\n            luaK_nil(fs, reg, extra);\n        }\n    }\n    if (nexps > nvars)\n        ls.fs.freereg -= nexps - nvars;  /* remove extra values */\n};\n\nconst enterlevel = function(ls) {\n    let L = ls.L;\n    ++L.nCcalls;\n    checklimit(ls.fs, L.nCcalls, LUAI_MAXCCALLS, to_luastring(\"JS levels\", true));\n};\n\nconst leavelevel = function(ls) {\n    return ls.L.nCcalls--;\n};\n\nconst closegoto = function(ls, g, label) {\n    let fs = ls.fs;\n    let gl = ls.dyd.gt;\n    let gt = gl.arr[g];\n    lua_assert(eqstr(gt.name, label.name));\n    if (gt.nactvar < label.nactvar) {\n        let vname = getlocvar(fs, gt.nactvar).varname;\n        let msg = lobject.luaO_pushfstring(ls.L,\n            to_luastring(\"<goto %s> at line %d jumps into the scope of local '%s'\"),\n            gt.name.getstr(), gt.line, vname.getstr());\n        semerror(ls, msg);\n    }\n    luaK_patchlist(fs, gt.pc, label.pc);\n    /* remove goto from pending list */\n    for (let i = g; i < gl.n - 1; i++)\n        gl.arr[i] = gl.arr[i + 1];\n    gl.n--;\n};\n\n/*\n** try to close a goto with existing labels; this solves backward jumps\n*/\nconst findlabel = function(ls, g) {\n    let bl = ls.fs.bl;\n    let dyd = ls.dyd;\n    let gt = dyd.gt.arr[g];\n    /* check labels in current block for a match */\n    for (let i = bl.firstlabel; i < dyd.label.n; i++) {\n        let lb = dyd.label.arr[i];\n        if (eqstr(lb.name, gt.name)) {  /* correct label? */\n            if (gt.nactvar > lb.nactvar && (bl.upval || dyd.label.n > bl.firstlabel))\n                luaK_patchclose(ls.fs, gt.pc, lb.nactvar);\n            closegoto(ls, g, lb);  /* close it */\n            return true;\n        }\n    }\n    return false;  /* label not found; cannot close goto */\n};\n\nconst newlabelentry = function(ls, l, name, line, pc) {\n    let n = l.n;\n    l.arr[n] = new Labeldesc();\n    l.arr[n].name = name;\n    l.arr[n].line = line;\n    l.arr[n].nactvar = ls.fs.nactvar;\n    l.arr[n].pc = pc;\n    l.n = n + 1;\n    return n;\n};\n\n/*\n** check whether new label 'lb' matches any pending gotos in current\n** block; solves forward jumps\n*/\nconst findgotos = function(ls, lb) {\n    let gl = ls.dyd.gt;\n    let i = ls.fs.bl.firstgoto;\n    while (i < gl.n) {\n        if (eqstr(gl.arr[i].name, lb.name))\n            closegoto(ls, i, lb);\n        else\n            i++;\n    }\n};\n\n/*\n** export pending gotos to outer level, to check them against\n** outer labels; if the block being exited has upvalues, and\n** the goto exits the scope of any variable (which can be the\n** upvalue), close those variables being exited.\n*/\nconst movegotosout = function(fs, bl) {\n    let i = bl.firstgoto;\n    let gl = fs.ls.dyd.gt;\n    /* correct pending gotos to current block and try to close it\n       with visible labels */\n    while (i < gl.n) {\n        let gt = gl.arr[i];\n        if (gt.nactvar > bl.nactvar) {\n            if (bl.upval)\n                luaK_patchclose(fs, gt.pc, bl.nactvar);\n            gt.nactvar = bl.nactvar;\n        }\n        if (!findlabel(fs.ls, i))\n            i++;  /* move to next one */\n    }\n};\n\nconst enterblock = function(fs, bl, isloop) {\n    bl.isloop = isloop;\n    bl.nactvar = fs.nactvar;\n    bl.firstlabel = fs.ls.dyd.label.n;\n    bl.firstgoto = fs.ls.dyd.gt.n;\n    bl.upval = 0;\n    bl.previous = fs.bl;\n    fs.bl = bl;\n    lua_assert(fs.freereg === fs.nactvar);\n};\n\n/*\n** create a label named 'break' to resolve break statements\n*/\nconst breaklabel = function(ls) {\n    let n = luaS_newliteral(ls.L, \"break\");\n    let l = newlabelentry(ls, ls.dyd.label, n, 0, ls.fs.pc);\n    findgotos(ls, ls.dyd.label.arr[l]);\n};\n\n/*\n** generates an error for an undefined 'goto'; choose appropriate\n** message when label name is a reserved word (which can only be 'break')\n*/\nconst undefgoto = function(ls, gt) {\n    let msg = llex.isreserved(gt.name)\n        ? \"<%s> at line %d not inside a loop\"\n        : \"no visible label '%s' for <goto> at line %d\";\n    msg = lobject.luaO_pushfstring(ls.L, to_luastring(msg), gt.name.getstr(), gt.line);\n    semerror(ls, msg);\n};\n\n/*\n** adds a new prototype into list of prototypes\n*/\nconst addprototype = function(ls) {\n    let L = ls.L;\n    let clp = new Proto(L);\n    let fs = ls.fs;\n    let f = fs.f;  /* prototype of current function */\n    f.p[fs.np++] = clp;\n    return clp;\n};\n\n/*\n** codes instruction to create new closure in parent function.\n*/\nconst codeclosure = function(ls, v) {\n    let fs = ls.fs.prev;\n    init_exp(v, expkind.VRELOCABLE, luaK_codeABx(fs, OP_CLOSURE, 0, fs.np -1));\n    luaK_exp2nextreg(fs, v);  /* fix it at the last register */\n};\n\nconst open_func = function(ls, fs, bl) {\n    fs.prev = ls.fs;  /* linked list of funcstates */\n    fs.ls = ls;\n    ls.fs = fs;\n    fs.pc = 0;\n    fs.lasttarget = 0;\n    fs.jpc = NO_JUMP;\n    fs.freereg = 0;\n    fs.nk = 0;\n    fs.np = 0;\n    fs.nups = 0;\n    fs.nlocvars = 0;\n    fs.nactvar = 0;\n    fs.firstlocal = ls.dyd.actvar.n;\n    fs.bl = null;\n    let f = fs.f;\n    f.source = ls.source;\n    f.maxstacksize = 2;  /* registers 0/1 are always valid */\n    enterblock(fs, bl, false);\n};\n\nconst leaveblock = function(fs) {\n    let bl = fs.bl;\n    let ls = fs.ls;\n    if (bl.previous && bl.upval) {\n        /* create a 'jump to here' to close upvalues */\n        let j = luaK_jump(fs);\n        luaK_patchclose(fs, j , bl.nactvar);\n        luaK_patchtohere(fs, j);\n    }\n\n    if (bl.isloop)\n        breaklabel(ls);  /* close pending breaks */\n\n    fs.bl = bl.previous;\n    removevars(fs, bl.nactvar);\n    lua_assert(bl.nactvar === fs.nactvar);\n    fs.freereg = fs.nactvar;  /* free registers */\n    ls.dyd.label.n = bl.firstlabel;  /* remove local labels */\n    if (bl.previous)  /* inner block? */\n        movegotosout(fs, bl);  /* update pending gotos to outer block */\n    else if (bl.firstgoto < ls.dyd.gt.n)  /* pending gotos in outer block? */\n        undefgoto(ls, ls.dyd.gt.arr[bl.firstgoto]);  /* error */\n};\n\nconst close_func = function(ls) {\n    let fs = ls.fs;\n    luaK_ret(fs, 0, 0);  /* final return */\n    leaveblock(fs);\n    lua_assert(fs.bl === null);\n    ls.fs = fs.prev;\n};\n\n/*============================================================*/\n/* GRAMMAR RULES */\n/*============================================================*/\n\nconst block_follow = function(ls, withuntil) {\n    switch (ls.t.token) {\n        case R.TK_ELSE: case R.TK_ELSEIF:\n        case R.TK_END: case R.TK_EOS:\n            return true;\n        case R.TK_UNTIL: return withuntil;\n        default: return false;\n    }\n};\n\nconst statlist = function(ls) {\n    /* statlist -> { stat [';'] } */\n    while (!block_follow(ls, 1)) {\n        if (ls.t.token === R.TK_RETURN) {\n            statement(ls);\n            return;  /* 'return' must be last statement */\n        }\n        statement(ls);\n    }\n};\n\nconst fieldsel = function(ls, v) {\n    /* fieldsel -> ['.' | ':'] NAME */\n    let fs = ls.fs;\n    let key = new expdesc();\n    luaK_exp2anyregup(fs, v);\n    llex.luaX_next(ls);  /* skip the dot or colon */\n    checkname(ls, key);\n    luaK_indexed(fs, v, key);\n};\n\nconst yindex = function(ls, v) {\n    /* index -> '[' expr ']' */\n    llex.luaX_next(ls);  /* skip the '[' */\n    expr(ls, v);\n    luaK_exp2val(ls.fs, v);\n    checknext(ls, 93 /* (']').charCodeAt(0) */);\n};\n\n/*\n** {======================================================================\n** Rules for Constructors\n** =======================================================================\n*/\n\nclass ConsControl {\n    constructor() {\n        this.v = new expdesc(); /* last list item read */\n        this.t = new expdesc(); /* table descriptor */\n        this.nh = NaN;          /* total number of 'record' elements */\n        this.na = NaN;          /* total number of array elements */\n        this.tostore = NaN;     /* number of array elements pending to be stored */\n    }\n}\n\nconst recfield = function(ls, cc) {\n    /* recfield -> (NAME | '['exp1']') = exp1 */\n    let fs = ls.fs;\n    let reg = ls.fs.freereg;\n    let key = new expdesc();\n    let val = new expdesc();\n\n    if (ls.t.token === R.TK_NAME) {\n        checklimit(fs, cc.nh, MAX_INT, to_luastring(\"items in a constructor\", true));\n        checkname(ls, key);\n    } else  /* ls->t.token === '[' */\n        yindex(ls, key);\n    cc.nh++;\n    checknext(ls, 61 /* ('=').charCodeAt(0) */);\n    let rkkey = luaK_exp2RK(fs, key);\n    expr(ls, val);\n    luaK_codeABC(fs, OP_SETTABLE, cc.t.u.info, rkkey, luaK_exp2RK(fs, val));\n    fs.freereg = reg;  /* free registers */\n};\n\nconst closelistfield = function(fs, cc) {\n    if (cc.v.k === expkind.VVOID) return;  /* there is no list item */\n    luaK_exp2nextreg(fs, cc.v);\n    cc.v.k = expkind.VVOID;\n    if (cc.tostore === LFIELDS_PER_FLUSH) {\n        luaK_setlist(fs, cc.t.u.info, cc.na, cc.tostore);  /* flush */\n        cc.tostore = 0;  /* no more items pending */\n    }\n};\n\nconst lastlistfield = function(fs, cc) {\n    if (cc.tostore === 0) return;\n    if (hasmultret(cc.v.k)) {\n        luaK_setmultret(fs, cc.v);\n        luaK_setlist(fs, cc.t.u.info, cc.na, LUA_MULTRET);\n        cc.na--;  /* do not count last expression (unknown number of elements) */\n    } else {\n        if (cc.v.k !== expkind.VVOID)\n            luaK_exp2nextreg(fs, cc.v);\n        luaK_setlist(fs, cc.t.u.info, cc.na, cc.tostore);\n    }\n};\n\nconst listfield = function(ls, cc) {\n    /* listfield -> exp */\n    expr(ls, cc.v);\n    checklimit(ls.fs, cc.na, MAX_INT, to_luastring(\"items in a constructor\", true));\n    cc.na++;\n    cc.tostore++;\n};\n\nconst field = function(ls, cc) {\n    /* field -> listfield | recfield */\n    switch (ls.t.token) {\n        case R.TK_NAME: {  /* may be 'listfield' or 'recfield' */\n            if (llex.luaX_lookahead(ls) !== 61 /* ('=').charCodeAt(0) */)  /* expression? */\n                listfield(ls, cc);\n            else\n                recfield(ls, cc);\n            break;\n        }\n        case 91 /* ('[').charCodeAt(0) */: {\n            recfield(ls, cc);\n            break;\n        }\n        default: {\n            listfield(ls, cc);\n            break;\n        }\n    }\n};\n\nconst constructor = function(ls, t) {\n    /* constructor -> '{' [ field { sep field } [sep] ] '}'\n       sep -> ',' | ';' */\n    let fs = ls.fs;\n    let line = ls.linenumber;\n    let pc = luaK_codeABC(fs, OP_NEWTABLE, 0, 0, 0);\n    let cc = new ConsControl();\n    cc.na = cc.nh = cc.tostore = 0;\n    cc.t = t;\n    init_exp(t, expkind.VRELOCABLE, pc);\n    init_exp(cc.v, expkind.VVOID, 0);  /* no value (yet) */\n    luaK_exp2nextreg(ls.fs, t);  /* fix it at stack top */\n    checknext(ls, 123 /* ('{').charCodeAt(0) */);\n    do {\n        lua_assert(cc.v.k === expkind.VVOID || cc.tostore > 0);\n        if (ls.t.token === 125 /* ('}').charCodeAt(0) */) break;\n        closelistfield(fs, cc);\n        field(ls, cc);\n    } while (testnext(ls, 44 /* (',').charCodeAt(0) */) || testnext(ls, 59 /* (';').charCodeAt(0) */));\n    check_match(ls, 125 /* ('}').charCodeAt(0) */, 123 /* ('{').charCodeAt(0) */, line);\n    lastlistfield(fs, cc);\n    SETARG_B(fs.f.code[pc], lobject.luaO_int2fb(cc.na));  /* set initial array size */\n    SETARG_C(fs.f.code[pc], lobject.luaO_int2fb(cc.nh));  /* set initial table size */\n};\n\n/* }====================================================================== */\n\nconst parlist = function(ls) {\n    /* parlist -> [ param { ',' param } ] */\n    let fs = ls.fs;\n    let f = fs.f;\n    let nparams = 0;\n    f.is_vararg = false;\n    if (ls.t.token !== 41 /* (')').charCodeAt(0) */) {  /* is 'parlist' not empty? */\n        do {\n            switch (ls.t.token) {\n                case R.TK_NAME: {  /* param -> NAME */\n                    new_localvar(ls, str_checkname(ls));\n                    nparams++;\n                    break;\n                }\n                case R.TK_DOTS: {  /* param -> '...' */\n                    llex.luaX_next(ls);\n                    f.is_vararg = true;  /* declared vararg */\n                    break;\n                }\n                default: llex.luaX_syntaxerror(ls, to_luastring(\"<name> or '...' expected\", true));\n            }\n        } while(!f.is_vararg && testnext(ls, 44 /* (',').charCodeAt(0) */));\n    }\n    adjustlocalvars(ls, nparams);\n    f.numparams = fs.nactvar;\n    luaK_reserveregs(fs, fs.nactvar);  /* reserve register for parameters */\n};\n\nconst body = function(ls, e, ismethod, line) {\n    /* body ->  '(' parlist ')' block END */\n    let new_fs = new FuncState();\n    let bl = new BlockCnt();\n    new_fs.f = addprototype(ls);\n    new_fs.f.linedefined = line;\n    open_func(ls, new_fs, bl);\n    checknext(ls, 40 /* ('(').charCodeAt(0) */);\n    if (ismethod) {\n        new_localvarliteral(ls, \"self\");  /* create 'self' parameter */\n        adjustlocalvars(ls, 1);\n    }\n    parlist(ls);\n    checknext(ls, 41 /* (')').charCodeAt(0) */);\n    statlist(ls);\n    new_fs.f.lastlinedefined = ls.linenumber;\n    check_match(ls, R.TK_END, R.TK_FUNCTION, line);\n    codeclosure(ls, e);\n    close_func(ls);\n};\n\nconst explist = function(ls, v) {\n    /* explist -> expr { ',' expr } */\n    let n = 1;  /* at least one expression */\n    expr(ls, v);\n    while (testnext(ls, 44 /* (',').charCodeAt(0) */)) {\n        luaK_exp2nextreg(ls.fs, v);\n        expr(ls, v);\n        n++;\n    }\n    return n;\n};\n\nconst funcargs = function(ls, f, line) {\n    let fs = ls.fs;\n    let args = new expdesc();\n    switch (ls.t.token) {\n        case 40 /* ('(').charCodeAt(0) */: {  /* funcargs -> '(' [ explist ] ')' */\n            llex.luaX_next(ls);\n            if (ls.t.token === 41 /* (')').charCodeAt(0) */)  /* arg list is empty? */\n                args.k = expkind.VVOID;\n            else {\n                explist(ls, args);\n                luaK_setmultret(fs, args);\n            }\n            check_match(ls, 41 /* (')').charCodeAt(0) */, 40 /* ('(').charCodeAt(0) */, line);\n            break;\n        }\n        case 123 /* ('{').charCodeAt(0) */: {  /* funcargs -> constructor */\n            constructor(ls, args);\n            break;\n        }\n        case R.TK_STRING: {  /* funcargs -> STRING */\n            codestring(ls, args, ls.t.seminfo.ts);\n            llex.luaX_next(ls);  /* must use 'seminfo' before 'next' */\n            break;\n        }\n        default: {\n            llex.luaX_syntaxerror(ls, to_luastring(\"function arguments expected\", true));\n        }\n    }\n    lua_assert(f.k === expkind.VNONRELOC);\n    let nparams;\n    let base = f.u.info;  /* base register for call */\n    if (hasmultret(args.k))\n        nparams = LUA_MULTRET;  /* open call */\n    else {\n        if (args.k !== expkind.VVOID)\n            luaK_exp2nextreg(fs, args);  /* close last argument */\n        nparams = fs.freereg - (base+1);\n    }\n    init_exp(f, expkind.VCALL, luaK_codeABC(fs, OP_CALL, base, nparams+1, 2));\n    luaK_fixline(fs, line);\n    fs.freereg = base + 1; /* call remove function and arguments and leaves (unless changed) one result */\n};\n\n/*\n** {======================================================================\n** Expression parsing\n** =======================================================================\n*/\n\nconst primaryexp = function(ls, v) {\n    /* primaryexp -> NAME | '(' expr ')' */\n    switch (ls.t.token) {\n        case 40 /* ('(').charCodeAt(0) */: {\n            let line = ls.linenumber;\n            llex.luaX_next(ls);\n            expr(ls, v);\n            check_match(ls, 41 /* (')').charCodeAt(0) */, 40 /* ('(').charCodeAt(0) */, line);\n            luaK_dischargevars(ls.fs, v);\n            return;\n        }\n        case R.TK_NAME: {\n            singlevar(ls, v);\n            return;\n        }\n        default: {\n            llex.luaX_syntaxerror(ls, to_luastring(\"unexpected symbol\", true));\n        }\n    }\n};\n\nconst suffixedexp = function(ls, v) {\n    /* suffixedexp ->\n       primaryexp { '.' NAME | '[' exp ']' | ':' NAME funcargs | funcargs } */\n    let fs = ls.fs;\n    let line = ls.linenumber;\n    primaryexp(ls, v);\n    for (;;) {\n        switch (ls.t.token) {\n            case 46 /* ('.').charCodeAt(0) */: {  /* fieldsel */\n                fieldsel(ls, v);\n                break;\n            }\n            case 91 /* ('[').charCodeAt(0) */: {  /* '[' exp1 ']' */\n                let key = new expdesc();\n                luaK_exp2anyregup(fs, v);\n                yindex(ls, key);\n                luaK_indexed(fs, v, key);\n                break;\n            }\n            case 58 /* (':').charCodeAt(0) */: {  /* ':' NAME funcargs */\n                let key = new expdesc();\n                llex.luaX_next(ls);\n                checkname(ls, key);\n                luaK_self(fs, v, key);\n                funcargs(ls, v, line);\n                break;\n            }\n            case 40 /* ('(').charCodeAt(0) */: case R.TK_STRING: case 123 /* ('{').charCodeAt(0) */: {  /* funcargs */\n                luaK_exp2nextreg(fs, v);\n                funcargs(ls, v, line);\n                break;\n            }\n            default: return;\n        }\n    }\n};\n\nconst simpleexp = function(ls, v) {\n    /* simpleexp -> FLT | INT | STRING | NIL | TRUE | FALSE | ... |\n       constructor | FUNCTION body | suffixedexp */\n    switch (ls.t.token) {\n        case R.TK_FLT: {\n            init_exp(v, expkind.VKFLT, 0);\n            v.u.nval = ls.t.seminfo.r;\n            break;\n        }\n        case R.TK_INT: {\n            init_exp(v, expkind.VKINT, 0);\n            v.u.ival = ls.t.seminfo.i;\n            break;\n        }\n        case R.TK_STRING: {\n            codestring(ls, v, ls.t.seminfo.ts);\n            break;\n        }\n        case R.TK_NIL: {\n            init_exp(v, expkind.VNIL, 0);\n            break;\n        }\n        case R.TK_TRUE: {\n            init_exp(v, expkind.VTRUE, 0);\n            break;\n        }\n        case R.TK_FALSE: {\n            init_exp(v, expkind.VFALSE, 0);\n            break;\n        }\n        case R.TK_DOTS: {  /* vararg */\n            let fs = ls.fs;\n            check_condition(ls, fs.f.is_vararg, to_luastring(\"cannot use '...' outside a vararg function\", true));\n            init_exp(v, expkind.VVARARG, luaK_codeABC(fs, OP_VARARG, 0, 1, 0));\n            break;\n        }\n        case 123 /* ('{').charCodeAt(0) */: {  /* constructor */\n            constructor(ls, v);\n            return;\n        }\n        case R.TK_FUNCTION: {\n            llex.luaX_next(ls);\n            body(ls, v, 0, ls.linenumber);\n            return;\n        }\n        default: {\n            suffixedexp(ls, v);\n            return;\n        }\n    }\n    llex.luaX_next(ls);\n};\n\nconst getunopr = function(op) {\n    switch (op) {\n        case R.TK_NOT: return OPR_NOT;\n        case 45 /* ('-').charCodeAt(0) */: return OPR_MINUS;\n        case 126 /* ('~').charCodeAt(0) */: return OPR_BNOT;\n        case 35 /* ('#').charCodeAt(0) */: return OPR_LEN;\n        default: return OPR_NOUNOPR;\n    }\n};\n\nconst getbinopr = function(op) {\n    switch (op) {\n        case 43 /* ('+').charCodeAt(0) */: return OPR_ADD;\n        case 45 /* ('-').charCodeAt(0) */: return OPR_SUB;\n        case 42 /* ('*').charCodeAt(0) */: return OPR_MUL;\n        case 37 /* ('%').charCodeAt(0) */: return OPR_MOD;\n        case 94 /* ('^').charCodeAt(0) */: return OPR_POW;\n        case 47 /* ('/').charCodeAt(0) */: return OPR_DIV;\n        case R.TK_IDIV:   return OPR_IDIV;\n        case 38 /* ('&').charCodeAt(0) */: return OPR_BAND;\n        case 124 /* ('|').charCodeAt(0) */: return OPR_BOR;\n        case 126 /* ('~').charCodeAt(0) */: return OPR_BXOR;\n        case R.TK_SHL:    return OPR_SHL;\n        case R.TK_SHR:    return OPR_SHR;\n        case R.TK_CONCAT: return OPR_CONCAT;\n        case R.TK_NE:     return OPR_NE;\n        case R.TK_EQ:     return OPR_EQ;\n        case 60 /* ('<').charCodeAt(0) */: return OPR_LT;\n        case R.TK_LE:     return OPR_LE;\n        case 62 /* ('>').charCodeAt(0) */: return OPR_GT;\n        case R.TK_GE:     return OPR_GE;\n        case R.TK_AND:    return OPR_AND;\n        case R.TK_OR:     return OPR_OR;\n        default:          return OPR_NOBINOPR;\n    }\n};\n\nconst priority = [  /* ORDER OPR */\n    {left: 10, right: 10}, {left: 10, right: 10},     /* '+' '-' */\n    {left: 11, right: 11}, {left: 11, right: 11},     /* '*' '%' */\n    {left: 14, right: 13},               /* '^' (right associative) */\n    {left: 11, right: 11}, {left: 11, right: 11},     /* '/' '//' */\n    {left: 6, right: 6}, {left: 4, right: 4}, {left: 5, right: 5}, /* '&' '|' '~' */\n    {left: 7, right: 7}, {left: 7, right: 7},         /* '<<' '>>' */\n    {left: 9, right: 8},                 /* '..' (right associative) */\n    {left: 3, right: 3}, {left: 3, right: 3}, {left: 3, right: 3}, /* ==, <, <= */\n    {left: 3, right: 3}, {left: 3, right: 3}, {left: 3, right: 3}, /* ~=, >, >= */\n    {left: 2, right: 2}, {left: 1, right: 1}          /* and, or */\n];\n\nconst UNARY_PRIORITY = 12;\n\n/*\n** subexpr -> (simpleexp | unop subexpr) { binop subexpr }\n** where 'binop' is any binary operator with a priority higher than 'limit'\n*/\nconst subexpr = function(ls, v, limit) {\n    enterlevel(ls);\n    let uop = getunopr(ls.t.token);\n    if (uop !== OPR_NOUNOPR) {\n        let line = ls.linenumber;\n        llex.luaX_next(ls);\n        subexpr(ls, v, UNARY_PRIORITY);\n        luaK_prefix(ls.fs, uop, v, line);\n    } else\n        simpleexp(ls, v);\n    /* expand while operators have priorities higher than 'limit' */\n    let op = getbinopr(ls.t.token);\n    while (op !== OPR_NOBINOPR && priority[op].left > limit) {\n        let v2 = new expdesc();\n        let line = ls.linenumber;\n        llex.luaX_next(ls);\n        luaK_infix(ls.fs, op, v);\n        /* read sub-expression with higher priority */\n        let nextop = subexpr(ls, v2, priority[op].right);\n        luaK_posfix(ls.fs, op, v, v2, line);\n        op = nextop;\n    }\n    leavelevel(ls);\n    return op;  /* return first untreated operator */\n};\n\nconst expr = function(ls, v) {\n    subexpr(ls, v, 0);\n};\n\n/* }==================================================================== */\n\n\n\n/*\n** {======================================================================\n** Rules for Statements\n** =======================================================================\n*/\n\nconst block = function(ls) {\n    /* block -> statlist */\n    let fs = ls.fs;\n    let bl = new BlockCnt();\n    enterblock(fs, bl, 0);\n    statlist(ls);\n    leaveblock(fs);\n};\n\n/*\n** structure to chain all variables in the left-hand side of an\n** assignment\n*/\nclass LHS_assign {\n    constructor() {\n        this.prev = null;\n        this.v = new expdesc();  /* variable (global, local, upvalue, or indexed) */\n    }\n}\n\n/*\n** check whether, in an assignment to an upvalue/local variable, the\n** upvalue/local variable is begin used in a previous assignment to a\n** table. If so, save original upvalue/local value in a safe place and\n** use this safe copy in the previous assignment.\n*/\nconst check_conflict = function(ls, lh, v) {\n    let fs = ls.fs;\n    let extra = fs.freereg;  /* eventual position to save local variable */\n    let conflict = false;\n    for (; lh; lh = lh.prev) {  /* check all previous assignments */\n        if (lh.v.k === expkind.VINDEXED) {  /* assigning to a table? */\n            /* table is the upvalue/local being assigned now? */\n            if (lh.v.u.ind.vt === v.k && lh.v.u.ind.t === v.u.info) {\n                conflict = true;\n                lh.v.u.ind.vt = expkind.VLOCAL;\n                lh.v.u.ind.t = extra;  /* previous assignment will use safe copy */\n            }\n            /* index is the local being assigned? (index cannot be upvalue) */\n            if (v.k === expkind.VLOCAL && lh.v.u.ind.idx === v.u.info) {\n                conflict = true;\n                lh.v.u.ind.idx = extra;  /* previous assignment will use safe copy */\n            }\n        }\n    }\n    if (conflict) {\n        /* copy upvalue/local value to a temporary (in position 'extra') */\n        let op = v.k === expkind.VLOCAL ? OP_MOVE : OP_GETUPVAL;\n        luaK_codeABC(fs, op, extra, v.u.info, 0);\n        luaK_reserveregs(fs, 1);\n    }\n};\n\nconst assignment = function(ls, lh, nvars) {\n    let e = new expdesc();\n    check_condition(ls, vkisvar(lh.v.k), to_luastring(\"syntax error\", true));\n    if (testnext(ls, 44 /* (',').charCodeAt(0) */)) {  /* assignment -> ',' suffixedexp assignment */\n        let nv = new LHS_assign();\n        nv.prev = lh;\n        suffixedexp(ls, nv.v);\n        if (nv.v.k !== expkind.VINDEXED)\n            check_conflict(ls, lh, nv.v);\n        checklimit(ls.fs, nvars + ls.L.nCcalls, LUAI_MAXCCALLS, to_luastring(\"JS levels\", true));\n        assignment(ls, nv, nvars + 1);\n    } else {  /* assignment -> '=' explist */\n        checknext(ls, 61 /* ('=').charCodeAt(0) */);\n        let nexps = explist(ls, e);\n        if (nexps !== nvars)\n            adjust_assign(ls, nvars, nexps, e);\n        else {\n            luaK_setoneret(ls.fs, e);  /* close last expression */\n            luaK_storevar(ls.fs, lh.v, e);\n            return;  /* avoid default */\n        }\n    }\n    init_exp(e, expkind.VNONRELOC, ls.fs.freereg-1);  /* default assignment */\n    luaK_storevar(ls.fs, lh.v, e);\n};\n\nconst cond = function(ls) {\n    /* cond -> exp */\n    let v = new expdesc();\n    expr(ls, v);  /* read condition */\n    if (v.k === expkind.VNIL) v.k = expkind.VFALSE;  /* 'falses' are all equal here */\n    luaK_goiftrue(ls.fs, v);\n    return v.f;\n};\n\nconst gotostat = function(ls, pc) {\n    let line = ls.linenumber;\n    let label;\n    if (testnext(ls, R.TK_GOTO))\n        label = str_checkname(ls);\n    else {\n        llex.luaX_next(ls);  /* skip break */\n        label = luaS_newliteral(ls.L, \"break\");\n    }\n    let g = newlabelentry(ls, ls.dyd.gt, label, line, pc);\n    findlabel(ls, g);  /* close it if label already defined */\n};\n\n/* check for repeated labels on the same block */\nconst checkrepeated = function(fs, ll, label) {\n    for (let i = fs.bl.firstlabel; i < ll.n; i++) {\n        if (eqstr(label, ll.arr[i].name)) {\n            let msg = lobject.luaO_pushfstring(fs.ls.L,\n                to_luastring(\"label '%s' already defined on line %d\", true),\n                label.getstr(), ll.arr[i].line);\n            semerror(fs.ls, msg);\n        }\n    }\n};\n\n/* skip no-op statements */\nconst skipnoopstat = function(ls) {\n    while (ls.t.token === 59 /* (';').charCodeAt(0) */ || ls.t.token === R.TK_DBCOLON)\n        statement(ls);\n};\n\nconst labelstat = function(ls, label, line) {\n    /* label -> '::' NAME '::' */\n    let fs = ls.fs;\n    let ll = ls.dyd.label;\n    let l;  /* index of new label being created */\n    checkrepeated(fs, ll, label);  /* check for repeated labels */\n    checknext(ls, R.TK_DBCOLON);  /* skip double colon */\n    /* create new entry for this label */\n    l = newlabelentry(ls, ll, label, line, luaK_getlabel(fs));\n    skipnoopstat(ls);  /* skip other no-op statements */\n    if (block_follow(ls, 0)) {  /* label is last no-op statement in the block? */\n        /* assume that locals are already out of scope */\n        ll.arr[l].nactvar = fs.bl.nactvar;\n    }\n    findgotos(ls, ll.arr[l]);\n};\n\nconst whilestat = function(ls, line) {\n    /* whilestat -> WHILE cond DO block END */\n    let fs = ls.fs;\n    let bl = new BlockCnt();\n    llex.luaX_next(ls);  /* skip WHILE */\n    let whileinit = luaK_getlabel(fs);\n    let condexit = cond(ls);\n    enterblock(fs, bl, 1);\n    checknext(ls, R.TK_DO);\n    block(ls);\n    luaK_jumpto(fs, whileinit);\n    check_match(ls, R.TK_END, R.TK_WHILE, line);\n    leaveblock(fs);\n    luaK_patchtohere(fs, condexit);  /* false conditions finish the loop */\n};\n\nconst repeatstat = function(ls, line) {\n    /* repeatstat -> REPEAT block UNTIL cond */\n    let fs = ls.fs;\n    let repeat_init = luaK_getlabel(fs);\n    let bl1 = new BlockCnt();\n    let bl2 = new BlockCnt();\n    enterblock(fs, bl1, 1);  /* loop block */\n    enterblock(fs, bl2, 0);  /* scope block */\n    llex.luaX_next(ls);  /* skip REPEAT */\n    statlist(ls);\n    check_match(ls, R.TK_UNTIL, R.TK_REPEAT, line);\n    let condexit = cond(ls);  /* read condition (inside scope block) */\n    if (bl2.upval)  /* upvalues? */\n        luaK_patchclose(fs, condexit, bl2.nactvar);\n    leaveblock(fs);  /* finish scope */\n    luaK_patchlist(fs, condexit, repeat_init);  /* close the loop */\n    leaveblock(fs);  /* finish loop */\n};\n\nconst exp1 = function(ls) {\n    let e = new expdesc();\n    expr(ls, e);\n    luaK_exp2nextreg(ls.fs, e);\n    lua_assert(e.k === expkind.VNONRELOC);\n    let reg = e.u.info;\n    return reg;\n};\n\nconst forbody = function(ls, base, line, nvars, isnum) {\n    /* forbody -> DO block */\n    let bl = new BlockCnt();\n    let fs = ls.fs;\n    let endfor;\n    adjustlocalvars(ls, 3);  /* control variables */\n    checknext(ls, R.TK_DO);\n    let prep = isnum ? luaK_codeAsBx(fs, OP_FORPREP, base, NO_JUMP) : luaK_jump(fs);\n    enterblock(fs, bl, 0);  /* scope for declared variables */\n    adjustlocalvars(ls, nvars);\n    luaK_reserveregs(fs, nvars);\n    block(ls);\n    leaveblock(fs);  /* end of scope for declared variables */\n    luaK_patchtohere(fs, prep);\n    if (isnum)  /* end of scope for declared variables */\n        endfor = luaK_codeAsBx(fs, OP_FORLOOP, base, NO_JUMP);\n    else {  /* generic for */\n        luaK_codeABC(fs, OP_TFORCALL, base, 0, nvars);\n        luaK_fixline(fs, line);\n        endfor = luaK_codeAsBx(fs, OP_TFORLOOP, base + 2, NO_JUMP);\n    }\n    luaK_patchlist(fs, endfor, prep + 1);\n    luaK_fixline(fs, line);\n};\n\nconst fornum = function(ls, varname, line) {\n    /* fornum -> NAME = exp1,exp1[,exp1] forbody */\n    let fs = ls.fs;\n    let base = fs.freereg;\n    new_localvarliteral(ls, \"(for index)\");\n    new_localvarliteral(ls, \"(for limit)\");\n    new_localvarliteral(ls, \"(for step)\");\n    new_localvar(ls, varname);\n    checknext(ls, 61 /* ('=').charCodeAt(0) */);\n    exp1(ls);  /* initial value */\n    checknext(ls, 44 /* (',').charCodeAt(0) */);\n    exp1(ls);  /* limit */\n    if (testnext(ls, 44 /* (',').charCodeAt(0) */))\n        exp1(ls);  /* optional step */\n    else {  /* default step = 1 */\n        luaK_codek(fs, fs.freereg, luaK_intK(fs, 1));\n        luaK_reserveregs(fs, 1);\n    }\n    forbody(ls, base, line, 1, 1);\n};\n\nconst forlist = function(ls, indexname) {\n    /* forlist -> NAME {,NAME} IN explist forbody */\n    let fs = ls.fs;\n    let e = new expdesc();\n    let nvars = 4;  /* gen, state, control, plus at least one declared var */\n    let base = fs.freereg;\n    /* create control variables */\n    new_localvarliteral(ls, \"(for generator)\");\n    new_localvarliteral(ls, \"(for state)\");\n    new_localvarliteral(ls, \"(for control)\");\n    /* create declared variables */\n    new_localvar(ls, indexname);\n    while (testnext(ls, 44 /* (',').charCodeAt(0) */)) {\n        new_localvar(ls, str_checkname(ls));\n        nvars++;\n    }\n    checknext(ls, R.TK_IN);\n    let line = ls.linenumber;\n    adjust_assign(ls, 3, explist(ls, e), e);\n    luaK_checkstack(fs, 3);  /* extra space to call generator */\n    forbody(ls, base, line, nvars - 3, 0);\n};\n\nconst forstat = function(ls, line) {\n    /* forstat -> FOR (fornum | forlist) END */\n    let fs = ls.fs;\n    let bl = new BlockCnt();\n    enterblock(fs, bl, 1);  /* scope for loop and control variables */\n    llex.luaX_next(ls);  /* skip 'for' */\n    let varname = str_checkname(ls);  /* first variable name */\n    switch (ls.t.token) {\n        case 61 /* ('=').charCodeAt(0) */: fornum(ls, varname, line); break;\n        case 44 /* (',').charCodeAt(0) */: case R.TK_IN: forlist(ls, varname); break;\n        default: llex.luaX_syntaxerror(ls, to_luastring(\"'=' or 'in' expected\", true));\n    }\n    check_match(ls, R.TK_END, R.TK_FOR, line);\n    leaveblock(fs);  /* loop scope ('break' jumps to this point) */\n};\n\nconst test_then_block = function(ls, escapelist) {\n    /* test_then_block -> [IF | ELSEIF] cond THEN block */\n    let bl = new BlockCnt();\n    let fs = ls.fs;\n    let v = new expdesc();\n    let jf;  /* instruction to skip 'then' code (if condition is false) */\n\n    llex.luaX_next(ls);  /* skip IF or ELSEIF */\n    expr(ls, v);  /* read condition */\n    checknext(ls, R.TK_THEN);\n\n    if (ls.t.token === R.TK_GOTO || ls.t.token === R.TK_BREAK) {\n        luaK_goiffalse(ls.fs, v);  /* will jump to label if condition is true */\n        enterblock(fs, bl, false);  /* must enter block before 'goto' */\n        gotostat(ls, v.t);   /* handle goto/break */\n        while (testnext(ls, 59 /* (';').charCodeAt(0) */));  /* skip colons */\n        if (block_follow(ls, 0)) {  /* 'goto' is the entire block? */\n            leaveblock(fs);\n            return escapelist;  /* and that is it */\n        } else  /* must skip over 'then' part if condition is false */\n            jf = luaK_jump(fs);\n    } else {  /* regular case (not goto/break) */\n        luaK_goiftrue(ls.fs, v);  /* skip over block if condition is false */\n        enterblock(fs, bl, false);\n        jf = v.f;\n    }\n\n    statlist(ls);  /* 'then' part */\n    leaveblock(fs);\n    if (ls.t.token === R.TK_ELSE || ls.t.token === R.TK_ELSEIF)  /* followed by 'else'/'elseif'? */\n        escapelist = luaK_concat(fs, escapelist, luaK_jump(fs));  /* must jump over it */\n    luaK_patchtohere(fs, jf);\n\n    return escapelist;\n};\n\nconst ifstat = function(ls, line) {\n    /* ifstat -> IF cond THEN block {ELSEIF cond THEN block} [ELSE block] END */\n    let fs = ls.fs;\n    let escapelist = NO_JUMP;  /* exit list for finished parts */\n    escapelist = test_then_block(ls, escapelist);  /* IF cond THEN block */\n    while (ls.t.token === R.TK_ELSEIF)\n        escapelist = test_then_block(ls, escapelist);  /* ELSEIF cond THEN block */\n    if (testnext(ls, R.TK_ELSE))\n        block(ls);  /* 'else' part */\n    check_match(ls, R.TK_END, R.TK_IF, line);\n    luaK_patchtohere(fs, escapelist);  /* patch escape list to 'if' end */\n};\n\nconst localfunc = function(ls) {\n    let b = new expdesc();\n    let fs = ls.fs;\n    new_localvar(ls, str_checkname(ls));  /* new local variable */\n    adjustlocalvars(ls, 1);  /* enter its scope */\n    body(ls, b, 0, ls.linenumber);  /* function created in next register */\n    /* debug information will only see the variable after this point! */\n    getlocvar(fs, b.u.info).startpc = fs.pc;\n};\n\nconst localstat = function(ls) {\n    /* stat -> LOCAL NAME {',' NAME} ['=' explist] */\n    let nvars = 0;\n    let nexps;\n    let e = new expdesc();\n    do {\n        new_localvar(ls, str_checkname(ls));\n        nvars++;\n    } while (testnext(ls, 44 /* (',').charCodeAt(0) */));\n    if (testnext(ls, 61 /* ('=').charCodeAt(0) */))\n        nexps = explist(ls, e);\n    else {\n        e.k = expkind.VVOID;\n        nexps = 0;\n    }\n    adjust_assign(ls, nvars, nexps, e);\n    adjustlocalvars(ls, nvars);\n};\n\nconst funcname = function(ls, v) {\n    /* funcname -> NAME {fieldsel} [':' NAME] */\n    let ismethod = 0;\n    singlevar(ls, v);\n    while (ls.t.token === 46 /* ('.').charCodeAt(0) */)\n        fieldsel(ls, v);\n    if (ls.t.token === 58 /* (':').charCodeAt(0) */) {\n        ismethod = 1;\n        fieldsel(ls, v);\n    }\n    return ismethod;\n};\n\nconst funcstat = function(ls, line) {\n    /* funcstat -> FUNCTION funcname body */\n    let v = new expdesc();\n    let b = new expdesc();\n    llex.luaX_next(ls);  /* skip FUNCTION */\n    let ismethod = funcname(ls, v);\n    body(ls, b, ismethod, line);\n    luaK_storevar(ls.fs, v, b);\n    luaK_fixline(ls.fs, line);  /* definition \"happens\" in the first line */\n};\n\nconst exprstat= function(ls) {\n    /* stat -> func | assignment */\n    let fs = ls.fs;\n    let v = new LHS_assign();\n    suffixedexp(ls, v.v);\n    if (ls.t.token === 61 /* ('=').charCodeAt(0) */ || ls.t.token === 44 /* (',').charCodeAt(0) */) { /* stat . assignment ? */\n        v.prev = null;\n        assignment(ls, v, 1);\n    }\n    else {  /* stat -> func */\n        check_condition(ls, v.v.k === expkind.VCALL, to_luastring(\"syntax error\", true));\n        SETARG_C(getinstruction(fs, v.v), 1);  /* call statement uses no results */\n    }\n};\n\nconst retstat = function(ls) {\n    /* stat -> RETURN [explist] [';'] */\n    let fs = ls.fs;\n    let e = new expdesc();\n    let first, nret;  /* registers with returned values */\n    if (block_follow(ls, 1) || ls.t.token === 59 /* (';').charCodeAt(0) */)\n        first = nret = 0;  /* return no values */\n    else {\n        nret = explist(ls, e);  /* optional return values */\n        if (hasmultret(e.k)) {\n            luaK_setmultret(fs, e);\n            if (e.k === expkind.VCALL && nret === 1) {  /* tail call? */\n                SET_OPCODE(getinstruction(fs, e), OP_TAILCALL);\n                lua_assert(getinstruction(fs, e).A === fs.nactvar);\n            }\n            first = fs.nactvar;\n            nret = LUA_MULTRET;  /* return all values */\n        } else {\n            if (nret === 1)  /* only one single value? */\n                first = luaK_exp2anyreg(fs, e);\n            else {\n                luaK_exp2nextreg(fs, e);  /* values must go to the stack */\n                first = fs.nactvar;  /* return all active values */\n                lua_assert(nret === fs.freereg - first);\n            }\n        }\n    }\n    luaK_ret(fs, first, nret);\n    testnext(ls, 59 /* (';').charCodeAt(0) */);  /* skip optional semicolon */\n};\n\nconst statement = function(ls) {\n    let line = ls.linenumber;  /* may be needed for error messages */\n    enterlevel(ls);\n    switch(ls.t.token) {\n        case 59 /* (';').charCodeAt(0) */: {  /* stat -> ';' (empty statement) */\n            llex.luaX_next(ls);  /* skip ';' */\n            break;\n        }\n        case R.TK_IF: {  /* stat -> ifstat */\n            ifstat(ls, line);\n            break;\n        }\n        case R.TK_WHILE: {  /* stat -> whilestat */\n            whilestat(ls, line);\n            break;\n        }\n        case R.TK_DO: {  /* stat -> DO block END */\n            llex.luaX_next(ls);  /* skip DO */\n            block(ls);\n            check_match(ls, R.TK_END, R.TK_DO, line);\n            break;\n        }\n        case R.TK_FOR: {  /* stat -> forstat */\n            forstat(ls, line);\n            break;\n        }\n        case R.TK_REPEAT: {  /* stat -> repeatstat */\n            repeatstat(ls, line);\n            break;\n        }\n        case R.TK_FUNCTION: {  /* stat -> funcstat */\n            funcstat(ls, line);\n            break;\n        }\n        case R.TK_LOCAL: {  /* stat -> localstat */\n            llex.luaX_next(ls);  /* skip LOCAL */\n            if (testnext(ls, R.TK_FUNCTION))  /* local function? */\n                localfunc(ls);\n            else\n                localstat(ls);\n            break;\n        }\n        case R.TK_DBCOLON: {  /* stat -> label */\n            llex.luaX_next(ls);  /* skip double colon */\n            labelstat(ls, str_checkname(ls), line);\n            break;\n        }\n        case R.TK_RETURN: {  /* skip double colon */\n            llex.luaX_next(ls);  /* skip RETURN */\n            retstat(ls);\n            break;\n        }\n        case R.TK_BREAK:   /* stat -> breakstat */\n        case R.TK_GOTO: {  /* stat -> 'goto' NAME */\n            gotostat(ls, luaK_jump(ls.fs));\n            break;\n        }\n        default: {  /* stat -> func | assignment */\n            exprstat(ls);\n            break;\n        }\n    }\n    lua_assert(ls.fs.f.maxstacksize >= ls.fs.freereg && ls.fs.freereg >= ls.fs.nactvar);\n    ls.fs.freereg = ls.fs.nactvar;  /* free registers */\n    leavelevel(ls);\n};\n\n/*\n** compiles the main function, which is a regular vararg function with an\n** upvalue named LUA_ENV\n*/\nconst mainfunc = function(ls, fs) {\n    let bl = new BlockCnt();\n    let v = new expdesc();\n    open_func(ls, fs, bl);\n    fs.f.is_vararg = true;  /* main function is always declared vararg */\n    init_exp(v, expkind.VLOCAL, 0);  /* create and... */\n    newupvalue(fs, ls.envn, v);  /* ...set environment upvalue */\n    llex.luaX_next(ls);  /* read first token */\n    statlist(ls);  /* parse main body */\n    check(ls, R.TK_EOS);\n    close_func(ls);\n};\n\nconst luaY_parser = function(L, z, buff, dyd, name, firstchar) {\n    let lexstate = new llex.LexState();\n    let funcstate = new FuncState();\n    let cl = lfunc.luaF_newLclosure(L, 1);  /* create main closure */\n    ldo.luaD_inctop(L);\n    L.stack[L.top-1].setclLvalue(cl);\n    lexstate.h = ltable.luaH_new(L);  /* create table for scanner */\n    ldo.luaD_inctop(L);\n    L.stack[L.top-1].sethvalue(lexstate.h);\n    funcstate.f = cl.p = new Proto(L);\n    funcstate.f.source = luaS_new(L, name);\n    lexstate.buff = buff;\n    lexstate.dyd = dyd;\n    dyd.actvar.n = dyd.gt.n = dyd.label.n = 0;\n    llex.luaX_setinput(L, lexstate, z, funcstate.f.source, firstchar);\n    mainfunc(lexstate, funcstate);\n    lua_assert(!funcstate.prev && funcstate.nups === 1 && !lexstate.fs);\n    /* all scopes should be correctly finished */\n    lua_assert(dyd.actvar.n === 0 && dyd.gt.n === 0 && dyd.label.n === 0);\n    delete L.stack[--L.top];  /* remove scanner's table */\n    return cl;  /* closure is on the stack, too */\n};\n\n\nmodule.exports.Dyndata     = Dyndata;\nmodule.exports.expkind     = expkind;\nmodule.exports.expdesc     = expdesc;\nmodule.exports.luaY_parser = luaY_parser;\nmodule.exports.vkisinreg   = vkisinreg;\n","\"use strict\";\n\nconst {\n    LUA_MINSTACK,\n    LUA_RIDX_GLOBALS,\n    LUA_RIDX_MAINTHREAD,\n    constant_types: {\n        LUA_NUMTAGS,\n        LUA_TNIL,\n        LUA_TTABLE,\n        LUA_TTHREAD\n    },\n    thread_status: {\n        LUA_OK\n    }\n} = require('./defs.js');\nconst lobject              = require('./lobject.js');\nconst ldo                  = require('./ldo.js');\nconst lapi                 = require('./lapi.js');\nconst ltable               = require('./ltable.js');\nconst ltm                  = require('./ltm.js');\n\nconst EXTRA_STACK = 5;\n\nconst BASIC_STACK_SIZE = 2 * LUA_MINSTACK;\n\nclass CallInfo {\n\n    constructor() {\n        this.func = null;\n        this.funcOff = NaN;\n        this.top = NaN;\n        this.previous = null;\n        this.next = null;\n\n        /* only for Lua functions */\n        this.l_base = NaN; /* base for this function */\n        this.l_code = null; /* reference to this.func.p.code */\n        this.l_savedpc = NaN; /* offset into l_code */\n        /* only for JS functions */\n        this.c_k = null;  /* continuation in case of yields */\n        this.c_old_errfunc = null;\n        this.c_ctx = null;  /* context info. in case of yields */\n\n        this.nresults = NaN;\n        this.callstatus = NaN;\n    }\n\n}\n\nclass lua_State {\n\n    constructor(g) {\n        this.id = g.id_counter++;\n\n        this.base_ci = new CallInfo(); /* CallInfo for first level (C calling Lua) */\n        this.top = NaN; /* first free slot in the stack */\n        this.stack_last = NaN; /* last free slot in the stack */\n        this.oldpc = NaN; /* last pc traced */\n\n        /* preinit_thread */\n        this.l_G = g;\n        this.stack = null;\n        this.ci = null;\n        this.errorJmp = null;\n        this.nCcalls = 0;\n        this.hook = null;\n        this.hookmask = 0;\n        this.basehookcount = 0;\n        this.allowhook = 1;\n        this.hookcount = this.basehookcount;\n        this.nny = 1;\n        this.status = LUA_OK;\n        this.errfunc = 0;\n    }\n\n}\n\nclass global_State {\n\n    constructor() {\n        this.id_counter = 1; /* used to give objects unique ids */\n        this.ids = new WeakMap();\n\n        this.mainthread = null;\n        this.l_registry = new lobject.TValue(LUA_TNIL, null);\n        this.panic = null;\n        this.atnativeerror = null;\n        this.version = null;\n        this.tmname = new Array(ltm.TMS.TM_N);\n        this.mt = new Array(LUA_NUMTAGS);\n    }\n\n}\n\nconst luaE_extendCI = function(L) {\n    let ci = new CallInfo();\n    L.ci.next = ci;\n    ci.previous = L.ci;\n    ci.next = null;\n    L.ci = ci;\n    return ci;\n};\n\nconst luaE_freeCI = function(L) {\n    let ci = L.ci;\n    ci.next = null;\n};\n\nconst stack_init = function(L1, L) {\n    L1.stack = new Array(BASIC_STACK_SIZE);\n    L1.top = 0;\n    L1.stack_last = BASIC_STACK_SIZE - EXTRA_STACK;\n    /* initialize first ci */\n    let ci = L1.base_ci;\n    ci.next = ci.previous = null;\n    ci.callstatus = 0;\n    ci.funcOff = L1.top;\n    ci.func = L1.stack[L1.top];\n    L1.stack[L1.top++] = new lobject.TValue(LUA_TNIL, null);\n    ci.top = L1.top + LUA_MINSTACK;\n    L1.ci = ci;\n};\n\nconst freestack = function(L) {\n    L.ci = L.base_ci;\n    luaE_freeCI(L);\n    L.stack = null;\n};\n\n/*\n** Create registry table and its predefined values\n*/\nconst init_registry = function(L, g) {\n    let registry = ltable.luaH_new(L);\n    g.l_registry.sethvalue(registry);\n    ltable.luaH_setint(registry, LUA_RIDX_MAINTHREAD, new lobject.TValue(LUA_TTHREAD, L));\n    ltable.luaH_setint(registry, LUA_RIDX_GLOBALS, new lobject.TValue(LUA_TTABLE, ltable.luaH_new(L)));\n};\n\n/*\n** open parts of the state that may cause memory-allocation errors.\n** ('g->version' !== NULL flags that the state was completely build)\n*/\nconst f_luaopen = function(L) {\n    let g = L.l_G;\n    stack_init(L, L);\n    init_registry(L, g);\n    ltm.luaT_init(L);\n    g.version = lapi.lua_version(null);\n};\n\nconst lua_newthread = function(L) {\n    let g = L.l_G;\n    let L1 = new lua_State(g);\n    L.stack[L.top] = new lobject.TValue(LUA_TTHREAD, L1);\n    lapi.api_incr_top(L);\n    L1.hookmask = L.hookmask;\n    L1.basehookcount = L.basehookcount;\n    L1.hook = L.hook;\n    L1.hookcount = L1.basehookcount;\n    stack_init(L1, L);\n    return L1;\n};\n\nconst luaE_freethread = function(L, L1) {\n    freestack(L1);\n};\n\nconst lua_newstate = function() {\n    let g = new global_State();\n    let L = new lua_State(g);\n    g.mainthread = L;\n\n    if (ldo.luaD_rawrunprotected(L, f_luaopen, null) !== LUA_OK) {\n        L = null;\n    }\n\n    return L;\n};\n\nconst close_state = function(L) {\n    freestack(L);\n};\n\nconst lua_close = function(L) {\n    L = L.l_G.mainthread;  /* only the main thread can be closed */\n    close_state(L);\n};\n\nmodule.exports.lua_State       = lua_State;\nmodule.exports.CallInfo        = CallInfo;\nmodule.exports.CIST_OAH        = (1<<0);  /* original value of 'allowhook' */\nmodule.exports.CIST_LUA        = (1<<1);  /* call is running a Lua function */\nmodule.exports.CIST_HOOKED     = (1<<2);  /* call is running a debug hook */\nmodule.exports.CIST_FRESH      = (1<<3);  /* call is running on a fresh invocation of luaV_execute */\nmodule.exports.CIST_YPCALL     = (1<<4);  /* call is a yieldable protected call */\nmodule.exports.CIST_TAIL       = (1<<5);  /* call was tail called */\nmodule.exports.CIST_HOOKYIELD  = (1<<6);  /* last hook called yielded */\nmodule.exports.CIST_LEQ        = (1<<7);  /* using __lt for __le */\nmodule.exports.CIST_FIN        = (1<<8);   /* call is running a finalizer */\nmodule.exports.EXTRA_STACK     = EXTRA_STACK;\nmodule.exports.lua_close       = lua_close;\nmodule.exports.lua_newstate    = lua_newstate;\nmodule.exports.lua_newthread   = lua_newthread;\nmodule.exports.luaE_extendCI   = luaE_extendCI;\nmodule.exports.luaE_freeCI     = luaE_freeCI;\nmodule.exports.luaE_freethread = luaE_freethread;\n","\"use strict\";\n\nconst {\n    is_luastring,\n    luastring_eq,\n    luastring_from,\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require(\"./llimits.js\");\n\nclass TString {\n\n    constructor(L, str) {\n        this.hash = null;\n        this.realstring = str;\n    }\n\n    getstr() {\n        return this.realstring;\n    }\n\n    tsslen() {\n        return this.realstring.length;\n    }\n\n}\n\nconst luaS_eqlngstr = function(a, b) {\n    lua_assert(a instanceof TString);\n    lua_assert(b instanceof TString);\n    return a == b || luastring_eq(a.realstring, b.realstring);\n};\n\n/* converts strings (arrays) to a consistent map key\n   make sure this doesn't conflict with any of the anti-collision strategies in ltable */\nconst luaS_hash = function(str) {\n    lua_assert(is_luastring(str));\n    let len = str.length;\n    let s = \"|\";\n    for (let i=0; i<len; i++)\n        s += str[i].toString(16);\n    return s;\n};\n\nconst luaS_hashlongstr = function(ts) {\n    lua_assert(ts instanceof TString);\n    if(ts.hash === null) {\n        ts.hash = luaS_hash(ts.getstr());\n    }\n    return ts.hash;\n};\n\n/* variant that takes ownership of array */\nconst luaS_bless = function(L, str) {\n    lua_assert(str instanceof Uint8Array);\n    return new TString(L, str);\n};\n\n/* makes a copy */\nconst luaS_new = function(L, str) {\n    return luaS_bless(L, luastring_from(str));\n};\n\n/* takes a js string */\nconst luaS_newliteral = function(L, str) {\n    return luaS_bless(L, to_luastring(str));\n};\n\nmodule.exports.luaS_eqlngstr    = luaS_eqlngstr;\nmodule.exports.luaS_hash        = luaS_hash;\nmodule.exports.luaS_hashlongstr = luaS_hashlongstr;\nmodule.exports.luaS_bless       = luaS_bless;\nmodule.exports.luaS_new         = luaS_new;\nmodule.exports.luaS_newliteral  = luaS_newliteral;\nmodule.exports.TString          = TString;\n","\"use strict\";\n\nconst { sprintf } = require('sprintf-js');\n\nconst {\n    LUA_INTEGER_FMT,\n    LUA_INTEGER_FRMLEN,\n    LUA_MININTEGER,\n    LUA_NUMBER_FMT,\n    LUA_NUMBER_FRMLEN,\n    frexp,\n    lua_getlocaledecpoint\n} = require('./luaconf.js');\nconst {\n    LUA_TBOOLEAN,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TNUMBER,\n    LUA_TSTRING,\n    LUA_TTABLE,\n    lua_call,\n    lua_createtable,\n    lua_dump,\n    lua_gettable,\n    lua_gettop,\n    lua_isinteger,\n    lua_isstring,\n    lua_pop,\n    lua_pushcclosure,\n    lua_pushinteger,\n    lua_pushlightuserdata,\n    lua_pushliteral,\n    lua_pushlstring,\n    lua_pushnil,\n    lua_pushnumber,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_remove,\n    lua_setfield,\n    lua_setmetatable,\n    lua_settop,\n    lua_toboolean,\n    lua_tointeger,\n    lua_tonumber,\n    lua_tostring,\n    lua_touserdata,\n    lua_type,\n    lua_upvalueindex\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addchar,\n    luaL_addlstring,\n    luaL_addsize,\n    luaL_addstring,\n    luaL_addvalue,\n    luaL_argcheck,\n    luaL_argerror,\n    luaL_buffinit,\n    luaL_buffinitsize,\n    luaL_checkinteger,\n    luaL_checknumber,\n    luaL_checkstack,\n    luaL_checkstring,\n    luaL_checktype,\n    luaL_error,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_optstring,\n    luaL_prepbuffsize,\n    luaL_pushresult,\n    luaL_pushresultsize,\n    luaL_tolstring,\n    luaL_typename\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst {\n    luastring_eq,\n    luastring_indexOf,\n    to_jsstring,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nconst sL_ESC  = '%';\nconst L_ESC   = sL_ESC.charCodeAt(0);\n\n/*\n** maximum number of captures that a pattern can do during\n** pattern-matching. This limit is arbitrary, but must fit in\n** an unsigned char.\n*/\nconst LUA_MAXCAPTURES = 32;\n\n// (sizeof(size_t) < sizeof(int) ? MAX_SIZET : (size_t)(INT_MAX))\nconst MAXSIZE = 2147483647;\n\n/* Give natural (i.e. strings end at the first \\0) length of a string represented by an array of bytes */\nconst strlen = function(s) {\n    let len = luastring_indexOf(s, 0);\n    return len > -1 ? len : s.length;\n};\n\n/* translate a relative string position: negative means back from end */\nconst posrelat = function(pos, len) {\n    if (pos >= 0) return pos;\n    else if (0 - pos > len) return 0;\n    else return len + pos + 1;\n};\n\nconst str_sub = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let start = posrelat(luaL_checkinteger(L, 2), l);\n    let end = posrelat(luaL_optinteger(L, 3, -1), l);\n    if (start < 1) start = 1;\n    if (end > l) end = l;\n    if (start <= end)\n        lua_pushstring(L, s.subarray(start - 1, (start - 1) + (end - start + 1)));\n    else lua_pushliteral(L, \"\");\n    return 1;\n};\n\nconst str_len = function(L) {\n    lua_pushinteger(L, luaL_checkstring(L, 1).length);\n    return 1;\n};\n\nconst str_char = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    let b = new luaL_Buffer();\n    let p = luaL_buffinitsize(L, b, n);\n    for (let i = 1; i <= n; i++) {\n        let c = luaL_checkinteger(L, i);\n        luaL_argcheck(L, c >= 0 && c <= 255, \"value out of range\"); // Strings are 8-bit clean\n        p[i-1] = c;\n    }\n    luaL_pushresultsize(b, n);\n    return 1;\n};\n\nconst writer = function(L, b, size, B) {\n    luaL_addlstring(B, b, size);\n    return 0;\n};\n\nconst str_dump = function(L) {\n    let b = new luaL_Buffer();\n    let strip = lua_toboolean(L, 2);\n    luaL_checktype(L, 1, LUA_TFUNCTION);\n    lua_settop(L, 1);\n    luaL_buffinit(L, b);\n    if (lua_dump(L, writer, b, strip) !== 0)\n        return luaL_error(L, to_luastring(\"unable to dump given function\"));\n    luaL_pushresult(b);\n    return 1;\n};\n\nconst SIZELENMOD = LUA_NUMBER_FRMLEN.length + 1;\n\nconst L_NBFD = 1;\n\nconst num2straux = function(x) {\n    /* if 'inf' or 'NaN', format it like '%g' */\n    if (Object.is(x, Infinity))\n        return to_luastring('inf');\n    else if (Object.is(x, -Infinity))\n        return to_luastring('-inf');\n    else if (Number.isNaN(x))\n        return to_luastring('nan');\n    else if (x === 0) {  /* can be -0... */\n        /* create \"0\" or \"-0\" followed by exponent */\n        let zero = sprintf(LUA_NUMBER_FMT + \"x0p+0\", x);\n        if (Object.is(x, -0))\n            zero = \"-\" + zero;\n        return to_luastring(zero);\n    } else {\n        let buff = \"\";\n        let fe = frexp(x);  /* 'x' fraction and exponent */\n        let m = fe[0];\n        let e = fe[1];\n        if (m < 0) {  /* is number negative? */\n            buff += '-';  /* add signal */\n            m = -m;  /* make it positive */\n        }\n        buff += \"0x\";  /* add \"0x\" */\n        buff += (m * (1<<L_NBFD)).toString(16);\n        e -= L_NBFD;  /* this digit goes before the radix point */\n        buff += sprintf(\"p%+d\", e);  /* add exponent */\n        return to_luastring(buff);\n    }\n};\n\nconst lua_number2strx = function(L, fmt, x) {\n    let buff = num2straux(x);\n    if (fmt[SIZELENMOD] === 65 /* 'A'.charCodeAt(0) */) {\n        for (let i = 0; i < buff.length; i++) {\n            let c = buff[i];\n            if (c >= 97) /* toupper */\n                buff[i] = c & 0xdf;\n        }\n    } else if (fmt[SIZELENMOD] !== 97 /* 'a'.charCodeAt(0) */)\n        luaL_error(L, to_luastring(\"modifiers for format '%%a'/'%%A' not implemented\"));\n    return buff;\n};\n\n/*\n** Maximum size of each formatted item. This maximum size is produced\n** by format('%.99f', -maxfloat), and is equal to 99 + 3 ('-', '.',\n** and '\\0') + number of decimal digits to represent maxfloat (which\n** is maximum exponent + 1). (99+3+1 then rounded to 120 for \"extra\n** expenses\", such as locale-dependent stuff)\n*/\n// const MAX_ITEM   = 120;// TODO: + l_mathlim(MAX_10_EXP);\n\n\n/* valid flags in a format specification */\nconst FLAGS = to_luastring(\"-+ #0\");\n\n/*\n** maximum size of each format specification (such as \"%-099.99d\")\n*/\n// const MAX_FORMAT = 32;\n\nconst isalpha = e => (97 <= e && e <= 122) || (65 <= e && e <= 90);\nconst isdigit = e => 48 <= e && e <= 57;\nconst iscntrl = e => (0x00 <= e && e <= 0x1f) || e === 0x7f;\nconst isgraph = e => 33 <= e && e <= 126;\nconst islower = e => 97 <= e && e <= 122;\nconst isupper = e => 65 <= e && e <= 90;\nconst isalnum = e => (97 <= e && e <= 122) || (65 <= e && e <= 90) || (48 <= e && e <= 57);\nconst ispunct = e => isgraph(e) && !isalnum(e);\nconst isspace = e => e === 32 || (e >= 9 && e <= 13);\nconst isxdigit = e => (48 <= e && e <= 57) || (65 <= e && e <= 70) || (97 <= e && e <= 102);\n\nconst addquoted = function(b, s, len) {\n    luaL_addchar(b, 34 /* '\"'.charCodeAt(0) */);\n    let i = 0;\n    while (len--) {\n        if (s[i] === 34 /* '\"'.charCodeAt(0) */ ||\n            s[i] === 92 /* '\\\\'.charCodeAt(0) */ ||\n            s[i] === 10 /* '\\n'.charCodeAt(0) */) {\n            luaL_addchar(b, 92 /* '\\\\'.charCodeAt(0) */);\n            luaL_addchar(b, s[i]);\n        } else if (iscntrl(s[i])) {\n            let buff = ''+s[i];\n            if (isdigit(s[i+1]))\n                buff = '0'.repeat(3-buff.length) + buff; /* pad to 3 '0's */\n            luaL_addstring(b, to_luastring(\"\\\\\" + buff));\n        } else\n            luaL_addchar(b, s[i]);\n        i++;\n    }\n    luaL_addchar(b, 34 /* '\"'.charCodeAt(0) */);\n};\n\n/*\n** Ensures the 'buff' string uses a dot as the radix character.\n*/\nconst checkdp = function(buff) {\n    if (luastring_indexOf(buff, 46 /* ('.').charCodeAt(0) */) < 0) {  /* no dot? */\n        let point = lua_getlocaledecpoint();  /* try locale point */\n        let ppoint = luastring_indexOf(buff, point);\n        if (ppoint) buff[ppoint] = 46 /* ('.').charCodeAt(0) */;  /* change it to a dot */\n    }\n};\n\nconst addliteral = function(L, b, arg) {\n    switch(lua_type(L, arg)) {\n        case LUA_TSTRING: {\n            let s = lua_tostring(L, arg);\n            addquoted(b, s, s.length);\n            break;\n        }\n        case LUA_TNUMBER: {\n            let buff;\n            if (!lua_isinteger(L, arg)) {  /* float? */\n                let n = lua_tonumber(L, arg);  /* write as hexa ('%a') */\n                buff = lua_number2strx(L, to_luastring(`%${LUA_INTEGER_FRMLEN}a`), n);\n                checkdp(buff);  /* ensure it uses a dot */\n            } else {  /* integers */\n                let n = lua_tointeger(L, arg);\n                let format = (n === LUA_MININTEGER)  /* corner case? */\n                    ? \"0x%\" + LUA_INTEGER_FRMLEN + \"x\"  /* use hexa */\n                    : LUA_INTEGER_FMT;  /* else use default format */\n                buff = to_luastring(sprintf(format, n));\n            }\n            luaL_addstring(b, buff);\n            break;\n        }\n        case LUA_TNIL: case LUA_TBOOLEAN: {\n            luaL_tolstring(L, arg);\n            luaL_addvalue(b);\n            break;\n        }\n        default: {\n            luaL_argerror(L, arg, to_luastring(\"value has no literal form\"));\n        }\n    }\n};\n\nconst scanformat = function(L, strfrmt, i, form) {\n    let p = i;\n    while (strfrmt[p] !== 0 && luastring_indexOf(FLAGS, strfrmt[p]) >= 0) p++;  /* skip flags */\n    if (p - i >= FLAGS.length)\n        luaL_error(L, to_luastring(\"invalid format (repeated flags)\"));\n    if (isdigit(strfrmt[p])) p++;  /* skip width */\n    if (isdigit(strfrmt[p])) p++;  /* (2 digits at most) */\n    if (strfrmt[p] === 46 /* '.'.charCodeAt(0) */) {\n        p++;\n        if (isdigit(strfrmt[p])) p++;  /* skip precision */\n        if (isdigit(strfrmt[p])) p++;  /* (2 digits at most) */\n    }\n    if (isdigit(strfrmt[p]))\n        luaL_error(L, to_luastring(\"invalid format (width or precision too long)\"));\n    form[0] = 37 /* \"%\".charCodeAt(0) */;\n    for (let j = 0; j < p - i + 1; j++)\n        form[j+1] = strfrmt[i+j];\n    return p;\n};\n\n/*\n** add length modifier into formats\n*/\nconst addlenmod = function(form, lenmod) {\n    let l = form.length;\n    let lm = lenmod.length;\n    let spec = form[l - 1];\n    for (let i = 0; i < lm; i++)\n        form[i + l - 1] = lenmod[i];\n    form[l + lm - 1] = spec;\n    // form[l + lm] = 0;\n};\n\nconst str_format = function(L) {\n    let top = lua_gettop(L);\n    let arg = 1;\n    let strfrmt = luaL_checkstring(L, arg);\n    let i = 0;\n    let b = new luaL_Buffer();\n    luaL_buffinit(L, b);\n    while (i < strfrmt.length) {\n        if (strfrmt[i] !== L_ESC) {\n            luaL_addchar(b, strfrmt[i++]);\n        } else if (strfrmt[++i] === L_ESC) {\n            luaL_addchar(b, strfrmt[i++]); /* %% */\n        } else { /* format item */\n            let form = [];  /* to store the format ('%...') */\n            if (++arg > top)\n                luaL_argerror(L, arg, to_luastring(\"no value\"));\n            i = scanformat(L, strfrmt, i, form);\n            switch (String.fromCharCode(strfrmt[i++])) {\n                case 'c': {\n                    // sprintf(String.fromCharCode(...form), luaL_checkinteger(L, arg));\n                    luaL_addchar(b, luaL_checkinteger(L, arg));\n                    break;\n                }\n                case 'd': case 'i':\n                case 'o': case 'u': case 'x': case 'X': {\n                    let n = luaL_checkinteger(L, arg);\n                    addlenmod(form, to_luastring(LUA_INTEGER_FRMLEN, true));\n                    luaL_addstring(b, to_luastring(sprintf(String.fromCharCode(...form), n)));\n                    break;\n                }\n                case 'a': case 'A': {\n                    addlenmod(form, to_luastring(LUA_INTEGER_FRMLEN, true));\n                    luaL_addstring(b, lua_number2strx(L, form, luaL_checknumber(L, arg)));\n                    break;\n                }\n                case 'e': case 'E': case 'f':\n                case 'g': case 'G': {\n                    let n = luaL_checknumber(L, arg);\n                    addlenmod(form, to_luastring(LUA_INTEGER_FRMLEN, true));\n                    luaL_addstring(b, to_luastring(sprintf(String.fromCharCode(...form), n)));\n                    break;\n                }\n                case 'q': {\n                    addliteral(L, b, arg);\n                    break;\n                }\n                case 's': {\n                    let s = luaL_tolstring(L, arg);\n                    if (form.length <= 2 || form[2] === 0) {  /* no modifiers? */\n                        luaL_addvalue(b);  /* keep entire string */\n                    } else {\n                        luaL_argcheck(L, s.length === strlen(s), arg, \"string contains zeros\");\n                        if (luastring_indexOf(form, 46 /* '.'.charCodeAt(0) */) < 0 && s.length >= 100) {\n                            /* no precision and string is too long to be formatted */\n                            luaL_addvalue(b);  /* keep entire string */\n                        } else {  /* format the string into 'buff' */\n                            // TODO: will fail if s is not valid UTF-8\n                            luaL_addstring(b, to_luastring(sprintf(String.fromCharCode(...form), to_jsstring(s))));\n                            lua_pop(L, 1);  /* remove result from 'luaL_tolstring' */\n                        }\n                    }\n                    break;\n                }\n                default: {  /* also treat cases 'pnLlh' */\n                    return luaL_error(L, to_luastring(\"invalid option '%%%c' to 'format'\"), strfrmt[i-1]);\n                }\n            }\n        }\n    }\n    luaL_pushresult(b);\n    return 1;\n};\n\n/* value used for padding */\nconst LUAL_PACKPADBYTE = 0x00;\n\n/* maximum size for the binary representation of an integer */\nconst MAXINTSIZE = 16;\n\nconst SZINT = 4; // Size of lua_Integer\n\n/* number of bits in a character */\nconst NB = 8;\n\n/* mask for one character (NB 1's) */\nconst MC = ((1 << NB) - 1);\n\nconst MAXALIGN = 8;\n\n/*\n** information to pack/unpack stuff\n*/\nclass Header {\n    constructor(L) {\n        this.L = L;\n        this.islittle = true;\n        this.maxalign = 1;\n    }\n}\n\n/*\n** options for pack/unpack\n*/\nconst Kint       = 0; /* signed integers */\nconst Kuint      = 1; /* unsigned integers */\nconst Kfloat     = 2; /* floating-point numbers */\nconst Kchar      = 3; /* fixed-length strings */\nconst Kstring    = 4; /* strings with prefixed length */\nconst Kzstr      = 5; /* zero-terminated strings */\nconst Kpadding   = 6; /* padding */\nconst Kpaddalign = 7; /* padding for alignment */\nconst Knop       = 8; /* no-op (configuration or spaces) */\n\nconst digit = isdigit;\n\nconst getnum = function(fmt, df) {\n    if (fmt.off >= fmt.s.length || !digit(fmt.s[fmt.off]))  /* no number? */\n        return df;  /* return default value */\n    else {\n        let a = 0;\n        do {\n            a = a * 10 + (fmt.s[fmt.off++] - 48 /* '0'.charCodeAt(0) */);\n        } while (fmt.off < fmt.s.length && digit(fmt.s[fmt.off]) && a <= (MAXSIZE - 9)/10);\n        return a;\n    }\n};\n\n/*\n** Read an integer numeral and raises an error if it is larger\n** than the maximum size for integers.\n*/\nconst getnumlimit = function(h, fmt, df) {\n    let sz = getnum(fmt, df);\n    if (sz > MAXINTSIZE || sz <= 0)\n        luaL_error(h.L, to_luastring(\"integral size (%d) out of limits [1,%d]\"), sz, MAXINTSIZE);\n    return sz;\n};\n\n/*\n** Read and classify next option. 'size' is filled with option's size.\n*/\nconst getoption = function(h, fmt) {\n    let r = {\n        opt: fmt.s[fmt.off++],\n        size: 0  /* default */\n    };\n    switch (r.opt) {\n        case 98  /*'b'*/: r.size = 1; r.opt = Kint;   return r; // sizeof(char): 1\n        case 66  /*'B'*/: r.size = 1; r.opt = Kuint;  return r;\n        case 104 /*'h'*/: r.size = 2; r.opt = Kint;   return r; // sizeof(short): 2\n        case 72  /*'H'*/: r.size = 2; r.opt = Kuint;  return r;\n        case 108 /*'l'*/: r.size = 4; r.opt = Kint;   return r; // sizeof(long): 4\n        case 76  /*'L'*/: r.size = 4; r.opt = Kuint;  return r;\n        case 106 /*'j'*/: r.size = 4; r.opt = Kint;   return r; // sizeof(lua_Integer): 4\n        case 74  /*'J'*/: r.size = 4; r.opt = Kuint;  return r;\n        case 84  /*'T'*/: r.size = 4; r.opt = Kuint;  return r; // sizeof(size_t): 4\n        case 102 /*'f'*/: r.size = 4; r.opt = Kfloat; return r; // sizeof(float): 4\n        case 100 /*'d'*/: r.size = 8; r.opt = Kfloat; return r; // sizeof(double): 8\n        case 110 /*'n'*/: r.size = 8; r.opt = Kfloat; return r; // sizeof(lua_Number): 8\n        case 105 /*'i'*/: r.size = getnumlimit(h, fmt, 4); r.opt = Kint;    return r; // sizeof(int): 4\n        case 73  /*'I'*/: r.size = getnumlimit(h, fmt, 4); r.opt = Kuint;   return r;\n        case 115 /*'s'*/: r.size = getnumlimit(h, fmt, 4); r.opt = Kstring; return r;\n        case 99  /*'c'*/: {\n            r.size = getnum(fmt, -1);\n            if (r.size === -1)\n                luaL_error(h.L, to_luastring(\"missing size for format option 'c'\"));\n            r.opt = Kchar;\n            return r;\n        }\n        case 122 /*'z'*/:             r.opt = Kzstr;      return r;\n        case 120 /*'x'*/: r.size = 1; r.opt = Kpadding;   return r;\n        case 88  /*'X'*/:             r.opt = Kpaddalign; return r;\n        case 32  /*' '*/: break;\n        case 60  /*'<'*/: h.islittle = true; break;\n        case 62  /*'>'*/: h.islittle = false; break;\n        case 61  /*'='*/: h.islittle = true; break;\n        case 33  /*'!'*/: h.maxalign = getnumlimit(h, fmt, MAXALIGN); break;\n        default: luaL_error(h.L, to_luastring(\"invalid format option '%c'\"), r.opt);\n    }\n    r.opt = Knop;\n    return r;\n};\n\n/*\n** Read, classify, and fill other details about the next option.\n** 'psize' is filled with option's size, 'notoalign' with its\n** alignment requirements.\n** Local variable 'size' gets the size to be aligned. (Kpadal option\n** always gets its full alignment, other options are limited by\n** the maximum alignment ('maxalign'). Kchar option needs no alignment\n** despite its size.\n*/\nconst getdetails = function(h, totalsize, fmt) {\n    let r = {\n        opt: NaN,\n        size: NaN,\n        ntoalign: NaN\n    };\n\n    let opt = getoption(h, fmt);\n    r.size = opt.size;\n    r.opt = opt.opt;\n    let align = r.size;  /* usually, alignment follows size */\n    if (r.opt === Kpaddalign) {  /* 'X' gets alignment from following option */\n        if (fmt.off >= fmt.s.length || fmt.s[fmt.off] === 0)\n            luaL_argerror(h.L, 1, to_luastring(\"invalid next option for option 'X'\"));\n        else {\n            let o = getoption(h, fmt);\n            align = o.size;\n            o = o.opt;\n            if (o === Kchar || align === 0)\n                luaL_argerror(h.L, 1, to_luastring(\"invalid next option for option 'X'\"));\n        }\n    }\n    if (align <= 1 || r.opt === Kchar)  /* need no alignment? */\n        r.ntoalign = 0;\n    else {\n        if (align > h.maxalign)  /* enforce maximum alignment */\n            align = h.maxalign;\n        if ((align & (align -1)) !== 0)  /* is 'align' not a power of 2? */\n            luaL_argerror(h.L, 1, to_luastring(\"format asks for alignment not power of 2\"));\n        r.ntoalign = (align - (totalsize & (align - 1))) & (align - 1);\n    }\n    return r;\n};\n\n/*\n** Pack integer 'n' with 'size' bytes and 'islittle' endianness.\n** The final 'if' handles the case when 'size' is larger than\n** the size of a Lua integer, correcting the extra sign-extension\n** bytes if necessary (by default they would be zeros).\n*/\nconst packint = function(b, n, islittle, size, neg) {\n    let buff = luaL_prepbuffsize(b, size);\n    buff[islittle ? 0 : size - 1] = n & MC;  /* first byte */\n    for (let i = 1; i < size; i++) {\n        n >>= NB;\n        buff[islittle ? i : size - 1 - i] = n & MC;\n    }\n    if (neg && size > SZINT) {  /* negative number need sign extension? */\n        for (let i = SZINT; i < size; i++)  /* correct extra bytes */\n            buff[islittle ? i : size - 1 - i] = MC;\n    }\n    luaL_addsize(b, size);  /* add result to buffer */\n};\n\nconst str_pack = function(L) {\n    let b = new luaL_Buffer();\n    let h = new Header(L);\n    let fmt = {\n        s: luaL_checkstring(L, 1),  /* format string */\n        off: 0\n    };\n    let arg = 1;  /* current argument to pack */\n    let totalsize = 0;  /* accumulate total size of result */\n    lua_pushnil(L);  /* mark to separate arguments from string buffer */\n    luaL_buffinit(L, b);\n    while (fmt.off < fmt.s.length) {\n        let details = getdetails(h, totalsize, fmt);\n        let opt = details.opt;\n        let size = details.size;\n        let ntoalign = details.ntoalign;\n        totalsize += ntoalign + size;\n        while (ntoalign-- > 0)\n            luaL_addchar(b, LUAL_PACKPADBYTE);  /* fill alignment */\n        arg++;\n        switch (opt) {\n            case Kint: {  /* signed integers */\n                let n = luaL_checkinteger(L, arg);\n                if (size < SZINT) {  /* need overflow check? */\n                    let lim = 1 << (size * 8) - 1;\n                    luaL_argcheck(L, -lim <= n && n < lim, arg, \"integer overflow\");\n                }\n                packint(b, n, h.islittle, size, n < 0);\n                break;\n            }\n            case Kuint: {  /* unsigned integers */\n                let n = luaL_checkinteger(L, arg);\n                if (size < SZINT)\n                    luaL_argcheck(L, (n>>>0) < (1 << (size * NB)), arg, \"unsigned overflow\");\n                packint(b, n>>>0, h.islittle, size, false);\n                break;\n            }\n            case Kfloat: {  /* floating-point options */\n                let buff = luaL_prepbuffsize(b, size);\n                let n = luaL_checknumber(L, arg);  /* get argument */\n                let dv = new DataView(buff.buffer, buff.byteOffset, buff.byteLength);\n                if (size === 4) dv.setFloat32(0, n, h.islittle);\n                else dv.setFloat64(0, n, h.islittle);\n                luaL_addsize(b, size);\n                break;\n            }\n            case Kchar: {  /* fixed-size string */\n                let s = luaL_checkstring(L, arg);\n                let len = s.length;\n                luaL_argcheck(L, len <= size, arg, \"string longer than given size\");\n                luaL_addlstring(b, s, len);  /* add string */\n                while (len++ < size)  /* pad extra space */\n                    luaL_addchar(b, LUAL_PACKPADBYTE);\n                break;\n            }\n            case Kstring: {  /* strings with length count */\n                let s = luaL_checkstring(L, arg);\n                let len = s.length;\n                luaL_argcheck(L,\n                    size >= 4 /* sizeof(size_t) */ || len < (1 << (size * NB)),\n                    arg, \"string length does not fit in given size\");\n                packint(b, len, h.islittle, size, 0);  /* pack length */\n                luaL_addlstring(b, s, len);\n                totalsize += len;\n                break;\n            }\n            case Kzstr: {  /* zero-terminated string */\n                let s = luaL_checkstring(L, arg);\n                let len = s.length;\n                luaL_argcheck(L, luastring_indexOf(s, 0) < 0, arg, \"strings contains zeros\");\n                luaL_addlstring(b, s, len);\n                luaL_addchar(b, 0);  /* add zero at the end */\n                totalsize += len + 1;\n                break;\n            }\n            case Kpadding: luaL_addchar(b, LUAL_PACKPADBYTE); /* fall through */\n            case Kpaddalign: case Knop:\n                arg--;  /* undo increment */\n                break;\n        }\n    }\n    luaL_pushresult(b);\n    return 1;\n};\n\nconst str_reverse = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let r = new Uint8Array(l);\n    for (let i=0; i<l; i++)\n        r[i] = s[l-1-i];\n    lua_pushstring(L, r);\n    return 1;\n};\n\nconst str_lower = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let r = new Uint8Array(l);\n    for (let i=0; i<l; i++) {\n        let c = s[i];\n        if (isupper(c))\n            c = c | 0x20;\n        r[i] = c;\n    }\n    lua_pushstring(L, r);\n    return 1;\n};\n\nconst str_upper = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let r = new Uint8Array(l);\n    for (let i=0; i<l; i++) {\n        let c = s[i];\n        if (islower(c))\n            c = c & 0xdf;\n        r[i] = c;\n    }\n    lua_pushstring(L, r);\n    return 1;\n};\n\nconst str_rep = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let n = luaL_checkinteger(L, 2);\n    let sep = luaL_optstring(L, 3, \"\");\n    let lsep = sep.length;\n    if (n <= 0) lua_pushliteral(L, \"\");\n    else if (l + lsep < l || l + lsep > MAXSIZE / n)  /* may overflow? */\n        return luaL_error(L, to_luastring(\"resulting string too large\"));\n    else {\n        let totallen = n * l + (n - 1) * lsep;\n        let b = new luaL_Buffer();\n        let p = luaL_buffinitsize(L, b, totallen);\n        let pi = 0;\n        while (n-- > 1) {  /* first n-1 copies (followed by separator) */\n            p.set(s, pi);\n            pi += l;\n            if (lsep > 0) {  /* empty 'memcpy' is not that cheap */\n                p.set(sep, pi);\n                pi += lsep;\n            }\n        }\n        p.set(s, pi);  /* last copy (not followed by separator) */\n        luaL_pushresultsize(b, totallen);\n    }\n    return 1;\n};\n\nconst str_byte = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let l = s.length;\n    let posi = posrelat(luaL_optinteger(L, 2, 1), l);\n    let pose = posrelat(luaL_optinteger(L, 3, posi), l);\n\n    if (posi < 1) posi = 1;\n    if (pose > l) pose = l;\n    if (posi > pose) return 0;  /* empty interval; return no values */\n    if (pose - posi >= Number.MAX_SAFE_INTEGER)  /* arithmetic overflow? */\n        return luaL_error(L, \"string slice too long\");\n\n    let n = (pose - posi) + 1;\n    luaL_checkstack(L, n, \"string slice too long\");\n    for (let i = 0; i < n; i++)\n        lua_pushinteger(L, s[posi + i - 1]);\n    return n;\n};\n\nconst str_packsize = function(L) {\n    let h = new Header(L);\n    let fmt = {\n        s: luaL_checkstring(L, 1),\n        off: 0\n    };\n    let totalsize = 0;  /* accumulate total size of result */\n    while (fmt.off < fmt.s.length) {\n        let details = getdetails(h, totalsize, fmt);\n        let opt = details.opt;\n        let size = details.size;\n        let ntoalign = details.ntoalign;\n        size += ntoalign;  /* total space used by option */\n        luaL_argcheck(L, totalsize <= MAXSIZE - size, 1, \"format result too large\");\n        totalsize += size;\n        switch (opt) {\n            case Kstring:  /* strings with length count */\n            case Kzstr:    /* zero-terminated string */\n                luaL_argerror(L, 1, \"variable-length format\");\n                /* call never return, but to avoid warnings: *//* fall through */\n            default:  break;\n        }\n    }\n    lua_pushinteger(L, totalsize);\n    return 1;\n};\n\n/*\n** Unpack an integer with 'size' bytes and 'islittle' endianness.\n** If size is smaller than the size of a Lua integer and integer\n** is signed, must do sign extension (propagating the sign to the\n** higher bits); if size is larger than the size of a Lua integer,\n** it must check the unread bytes to see whether they do not cause an\n** overflow.\n*/\nconst unpackint = function(L, str, islittle, size, issigned) {\n    let res = 0;\n    let limit = size <= SZINT ? size : SZINT;\n    for (let i = limit - 1; i >= 0; i--) {\n        res <<= NB;\n        res |= str[islittle ? i : size - 1 - i];\n    }\n    if (size < SZINT) {  /* real size smaller than lua_Integer? */\n        if (issigned) {  /* needs sign extension? */\n            let mask = 1 << (size * NB - 1);\n            res = ((res ^ mask) - mask);  /* do sign extension */\n        }\n    } else if (size > SZINT) {  /* must check unread bytes */\n        let mask = !issigned || res >= 0 ? 0 : MC;\n        for (let i = limit; i < size; i++) {\n            if (str[islittle ? i : size - 1 - i] !== mask)\n                luaL_error(L, to_luastring(\"%d-byte integer does not fit into Lua Integer\"), size);\n        }\n    }\n    return res;\n};\n\nconst unpacknum = function(L, b, islittle, size) {\n    lualib.lua_assert(b.length >= size);\n\n    let dv = new DataView(new ArrayBuffer(size));\n    for (let i = 0; i < size; i++)\n        dv.setUint8(i, b[i], islittle);\n\n    if (size == 4) return dv.getFloat32(0, islittle);\n    else return dv.getFloat64(0, islittle);\n};\n\nconst str_unpack = function(L) {\n    let h = new Header(L);\n    let fmt = {\n        s: luaL_checkstring(L, 1),\n        off: 0\n    };\n    let data = luaL_checkstring(L, 2);\n    let ld = data.length;\n    let pos = posrelat(luaL_optinteger(L, 3, 1), ld) - 1;\n    let n = 0;  /* number of results */\n    luaL_argcheck(L, pos <= ld && pos >= 0, 3, \"initial position out of string\");\n    while (fmt.off < fmt.s.length) {\n        let details = getdetails(h, pos, fmt);\n        let opt = details.opt;\n        let size = details.size;\n        let ntoalign = details.ntoalign;\n        if (/*ntoalign + size > ~pos ||*/ pos + ntoalign + size > ld)\n            luaL_argerror(L, 2, to_luastring(\"data string too short\"));\n        pos += ntoalign;  /* skip alignment */\n        /* stack space for item + next position */\n        luaL_checkstack(L, 2, \"too many results\");\n        n++;\n        switch (opt) {\n            case Kint:\n            case Kuint: {\n                let res = unpackint(L, data.subarray(pos), h.islittle, size, opt === Kint);\n                lua_pushinteger(L, res);\n                break;\n            }\n            case Kfloat: {\n                let res = unpacknum(L, data.subarray(pos), h.islittle, size);\n                lua_pushnumber(L, res);\n                break;\n            }\n            case Kchar: {\n                lua_pushstring(L, data.subarray(pos, pos + size));\n                break;\n            }\n            case Kstring: {\n                let len = unpackint(L, data.subarray(pos), h.islittle, size, 0);\n                luaL_argcheck(L, pos + len + size <= ld, 2, \"data string too short\");\n                lua_pushstring(L, data.subarray(pos + size, pos + size + len));\n                pos += len;  /* skip string */\n                break;\n            }\n            case Kzstr: {\n                let e = luastring_indexOf(data, 0, pos);\n                if (e === -1) e = data.length - pos;\n                lua_pushstring(L, data.subarray(pos, e));\n                pos = e + 1;  /* skip string plus final '\\0' */\n                break;\n            }\n            case Kpaddalign: case Kpadding: case Knop:\n                n--;  /* undo increment */\n                break;\n        }\n        pos += size;\n    }\n    lua_pushinteger(L, pos + 1);  /* next position */\n    return n + 1;\n};\n\nconst CAP_UNFINISHED = -1;\nconst CAP_POSITION   = -2;\nconst MAXCCALLS      = 200;\nconst SPECIALS       = to_luastring(\"^$*+?.([%-\");\n\nclass MatchState {\n    constructor(L) {\n        this.src = null;  /* unmodified source string */\n        this.src_init = null;  /* init of source string */\n        this.src_end = null;  /* end ('\\0') of source string */\n        this.p = null;  /* unmodified pattern string */\n        this.p_end = null;  /* end ('\\0') of pattern */\n        this.L = L;\n        this.matchdepth = NaN;  /* control for recursive depth */\n        this.level = NaN;  /* total number of captures (finished or unfinished) */\n        this.capture = [];\n    }\n}\n\nconst check_capture = function(ms, l) {\n    l = l - 49 /* '1'.charCodeAt(0) */;\n    if (l < 0 || l >= ms.level || ms.capture[l].len === CAP_UNFINISHED)\n        return luaL_error(ms.L, to_luastring(\"invalid capture index %%%d\"), l + 1);\n    return l;\n};\n\nconst capture_to_close = function(ms) {\n    let level = ms.level;\n    for (level--; level >= 0; level--)\n        if (ms.capture[level].len === CAP_UNFINISHED) return level;\n    return luaL_error(ms.L, to_luastring(\"invalid pattern capture\"));\n};\n\nconst classend = function(ms, p) {\n    switch(ms.p[p++]) {\n        case L_ESC: {\n            if (p === ms.p_end)\n                luaL_error(ms.L, to_luastring(\"malformed pattern (ends with '%%')\"));\n            return p + 1;\n        }\n        case 91 /* '['.charCodeAt(0) */: {\n            if (ms.p[p] === 94 /* '^'.charCodeAt(0) */) p++;\n            do {  /* look for a ']' */\n                if (p === ms.p_end)\n                    luaL_error(ms.L, to_luastring(\"malformed pattern (missing ']')\"));\n                if (ms.p[p++] === L_ESC && p < ms.p_end)\n                    p++;  /* skip escapes (e.g. '%]') */\n            } while (ms.p[p] !== 93 /* ']'.charCodeAt(0) */);\n            return p + 1;\n        }\n        default: {\n            return p;\n        }\n    }\n};\n\nconst match_class = function(c, cl) {\n    switch (cl) {\n        case 97  /* 'a'.charCodeAt(0) */: return  isalpha(c);\n        case 65  /* 'A'.charCodeAt(0) */: return !isalpha(c);\n        case 99  /* 'c'.charCodeAt(0) */: return  iscntrl(c);\n        case 67  /* 'C'.charCodeAt(0) */: return !iscntrl(c);\n        case 100 /* 'd'.charCodeAt(0) */: return  isdigit(c);\n        case 68  /* 'D'.charCodeAt(0) */: return !isdigit(c);\n        case 103 /* 'g'.charCodeAt(0) */: return  isgraph(c);\n        case 71  /* 'G'.charCodeAt(0) */: return !isgraph(c);\n        case 108 /* 'l'.charCodeAt(0) */: return  islower(c);\n        case 76  /* 'L'.charCodeAt(0) */: return !islower(c);\n        case 112 /* 'p'.charCodeAt(0) */: return  ispunct(c);\n        case 80  /* 'P'.charCodeAt(0) */: return !ispunct(c);\n        case 115 /* 's'.charCodeAt(0) */: return  isspace(c);\n        case 83  /* 'S'.charCodeAt(0) */: return !isspace(c);\n        case 117 /* 'u'.charCodeAt(0) */: return  isupper(c);\n        case 85  /* 'U'.charCodeAt(0) */: return !isupper(c);\n        case 119 /* 'w'.charCodeAt(0) */: return  isalnum(c);\n        case 87  /* 'W'.charCodeAt(0) */: return !isalnum(c);\n        case 120 /* 'x'.charCodeAt(0) */: return  isxdigit(c);\n        case 88  /* 'X'.charCodeAt(0) */: return !isxdigit(c);\n        case 122 /* 'z'.charCodeAt(0) */: return (c === 0);  /* deprecated option */\n        case 90  /* 'z'.charCodeAt(0) */: return (c !== 0);  /* deprecated option */\n        default: return (cl === c);\n    }\n};\n\nconst matchbracketclass = function(ms, c, p, ec) {\n    let sig = true;\n    if (ms.p[p + 1] === 94 /* '^'.charCodeAt(0) */) {\n        sig = false;\n        p++;  /* skip the '^' */\n    }\n    while (++p < ec) {\n        if (ms.p[p] === L_ESC) {\n            p++;\n            if (match_class(c, ms.p[p]))\n                return sig;\n        } else if (ms.p[p + 1] === 45 /* '-'.charCodeAt(0) */ && p + 2 < ec) {\n            p += 2;\n            if (ms.p[p - 2] <= c && c <= ms.p[p])\n                return sig;\n        } else if (ms.p[p] === c) return sig;\n    }\n    return !sig;\n};\n\nconst singlematch = function(ms, s, p, ep) {\n    if (s >= ms.src_end)\n        return false;\n    else {\n        let c = ms.src[s];\n        switch (ms.p[p]) {\n            case 46 /* '.'.charCodeAt(0) */: return true;  /* matches any char */\n            case L_ESC: return match_class(c, ms.p[p + 1]);\n            case 91 /* '['.charCodeAt(0) */: return matchbracketclass(ms, c, p, ep - 1);\n            default: return ms.p[p] === c;\n        }\n    }\n};\n\nconst matchbalance = function(ms, s, p) {\n    if (p >= ms.p_end - 1)\n        luaL_error(ms.L, to_luastring(\"malformed pattern (missing arguments to '%%b'\"));\n    if (ms.src[s] !== ms.p[p])\n        return null;\n    else {\n        let b = ms.p[p];\n        let e = ms.p[p + 1];\n        let cont = 1;\n        while (++s < ms.src_end) {\n            if (ms.src[s] === e) {\n                if (--cont === 0) return s + 1;\n            }\n            else if (ms.src[s] === b) cont++;\n        }\n    }\n    return null;  /* string ends out of balance */\n};\n\nconst max_expand = function(ms, s, p, ep) {\n    let i = 0;  /* counts maximum expand for item */\n    while (singlematch(ms, s + i, p, ep))\n        i++;\n    /* keeps trying to match with the maximum repetitions */\n    while (i >= 0) {\n        let res = match(ms, s + i, ep + 1);\n        if (res) return res;\n        i--;  /* else didn't match; reduce 1 repetition to try again */\n    }\n    return null;\n};\n\nconst min_expand = function(ms, s, p, ep) {\n    for (;;) {\n        let res = match(ms, s, ep + 1);\n        if (res !== null)\n            return res;\n        else if (singlematch(ms, s, p, ep))\n            s++;  /* try with one more repetition */\n        else return null;\n    }\n};\n\nconst start_capture = function(ms, s, p, what) {\n    let level = ms.level;\n    if (level >= LUA_MAXCAPTURES) luaL_error(ms.L, to_luastring(\"too many captures\"));\n    ms.capture[level] = ms.capture[level] ? ms.capture[level] : {};\n    ms.capture[level].init = s;\n    ms.capture[level].len = what;\n    ms.level = level + 1;\n    let res;\n    if ((res = match(ms, s, p)) === null)  /* match failed? */\n        ms.level--;  /* undo capture */\n    return res;\n};\n\nconst end_capture = function(ms, s, p) {\n    let l = capture_to_close(ms);\n    ms.capture[l].len = s - ms.capture[l].init;  /* close capture */\n    let res;\n    if ((res = match(ms, s, p)) === null)  /* match failed? */\n        ms.capture[l].len = CAP_UNFINISHED;  /* undo capture */\n    return res;\n};\n\n/* Compare the elements of arrays 'a' and 'b' to see if they contain the same elements */\nconst array_cmp = function(a, ai, b, bi, len) {\n    return luastring_eq(a.subarray(ai, ai+len), b.subarray(bi, bi+len));\n};\n\nconst match_capture = function(ms, s, l) {\n    l = check_capture(ms, l);\n    let len = ms.capture[l].len;\n    if ((ms.src_end-s) >= len && array_cmp(ms.src, ms.capture[l].init, ms.src, s, len))\n        return s+len;\n    else return null;\n};\n\nconst match = function(ms, s, p) {\n    let gotodefault = false;\n    let gotoinit = true;\n\n    if (ms.matchdepth-- === 0)\n        luaL_error(ms.L, to_luastring(\"pattern too complex\"));\n\n    while (gotoinit || gotodefault) {\n        gotoinit = false;\n        if (p !== ms.p_end) {  /* end of pattern? */\n            switch (gotodefault ? void 0 : ms.p[p]) {\n                case 40 /* '('.charCodeAt(0) */: {  /* start capture */\n                    if (ms.p[p + 1] === 41 /* ')'.charCodeAt(0) */)  /* position capture? */\n                        s = start_capture(ms, s, p + 2, CAP_POSITION);\n                    else\n                        s = start_capture(ms, s, p + 1, CAP_UNFINISHED);\n                    break;\n                }\n                case 41 /* ')'.charCodeAt(0) */: {  /* end capture */\n                    s = end_capture(ms, s, p + 1);\n                    break;\n                }\n                case 36 /* '$'.charCodeAt(0) */: {\n                    if (p + 1 !== ms.p_end) {  /* is the '$' the last char in pattern? */\n                        gotodefault = true;  /* no; go to default */\n                        break;\n                    }\n                    s = (ms.src.length - s) === 0 ? s : null;  /* check end of string */\n                    break;\n                }\n                case L_ESC: {  /* escaped sequences not in the format class[*+?-]? */\n                    switch (ms.p[p + 1]) {\n                        case 98 /* 'b'.charCodeAt(0) */: {  /* balanced string? */\n                            s = matchbalance(ms, s, p + 2);\n                            if (s !== null) {\n                                p += 4;\n                                gotoinit = true;\n                            }\n                            break;\n                        }\n                        case 102 /* 'f'.charCodeAt(0) */: {  /* frontier? */\n                            p += 2;\n                            if (ms.p[p] !== 91 /* '['.charCodeAt(0) */)\n                                luaL_error(ms.L, to_luastring(\"missing '[' after '%%f' in pattern\"));\n                            let ep = classend(ms, p);  /* points to what is next */\n                            let previous = s === ms.src_init ? 0 : ms.src[s-1];\n                            if (!matchbracketclass(ms, previous, p, ep - 1) && matchbracketclass(ms, (s===ms.src_end)?0:ms.src[s], p, ep - 1)) {\n                                p = ep; gotoinit = true; break;\n                            }\n                            s = null;  /* match failed */\n                            break;\n                        }\n                        case 48: case 49: case 50: case 51: case 52:\n                        case 53: case 54: case 55: case 56: case 57: {  /* capture results (%0-%9)? */\n                            s = match_capture(ms, s, ms.p[p + 1]);\n                            if (s !== null) {\n                                p += 2; gotoinit = true;\n                            }\n                            break;\n                        }\n                        default: gotodefault = true;\n                    }\n                    break;\n                }\n                default: {  /* pattern class plus optional suffix */\n                    gotodefault = false;\n                    let ep = classend(ms, p);  /* points to optional suffix */\n                    /* does not match at least once? */\n                    if (!singlematch(ms, s, p, ep)) {\n                        if (ms.p[ep] === 42 /* '*'.charCodeAt(0) */ ||\n                            ms.p[ep] === 63 /* '?'.charCodeAt(0) */ ||\n                            ms.p[ep] === 45 /* '-'.charCodeAt(0) */\n                        ) {  /* accept empty? */\n                            p = ep + 1; gotoinit = true; break;\n                        } else  /* '+' or no suffix */\n                            s = null;  /* fail */\n                    } else {  /* matched once */\n                        switch (ms.p[ep]) {  /* handle optional suffix */\n                            case 63 /* '?'.charCodeAt(0) */: {  /* optional */\n                                let res;\n                                if ((res = match(ms, s + 1, ep + 1)) !== null)\n                                    s = res;\n                                else {\n                                    p = ep + 1; gotoinit = true;\n                                }\n                                break;\n                            }\n                            case 43 /* '+'.charCodeAt(0) */:  /* 1 or more repetitions */\n                                s++;  /* 1 match already done */\n                                /* fall through */\n                            case 42 /* '*'.charCodeAt(0) */:  /* 0 or more repetitions */\n                                s = max_expand(ms, s, p, ep);\n                                break;\n                            case 45 /* '-'.charCodeAt(0) */:  /* 0 or more repetitions (minimum) */\n                                s = min_expand(ms, s, p, ep);\n                                break;\n                            default:  /* no suffix */\n                                s++; p = ep; gotoinit = true;\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n    }\n    ms.matchdepth++;\n    return s;\n};\n\nconst push_onecapture = function(ms, i, s, e) {\n    if (i >= ms.level) {\n        if (i === 0)\n            lua_pushlstring(ms.L, ms.src.subarray(s, e), e - s);  /* add whole match */\n        else\n            luaL_error(ms.L, to_luastring(\"invalid capture index %%%d\"), i + 1);\n    } else {\n        let l = ms.capture[i].len;\n        if (l === CAP_UNFINISHED) luaL_error(ms.L, to_luastring(\"unfinished capture\"));\n        if (l === CAP_POSITION)\n            lua_pushinteger(ms.L, ms.capture[i].init - ms.src_init + 1);\n        else\n            lua_pushlstring(ms.L, ms.src.subarray(ms.capture[i].init), l);\n    }\n};\n\nconst push_captures = function(ms, s, e) {\n    let nlevels = ms.level === 0 && ms.src.subarray(s) ? 1 : ms.level;\n    luaL_checkstack(ms.L, nlevels, \"too many captures\");\n    for (let i = 0; i < nlevels; i++)\n        push_onecapture(ms, i, s, e);\n    return nlevels;  /* number of strings pushed */\n};\n\nconst nospecials = function(p, l) {\n    for (let i=0; i<l; i++) {\n        if (luastring_indexOf(SPECIALS, p[i]) !== -1)\n            return false;\n    }\n    return true;\n};\n\nconst prepstate = function(ms, L, s, ls, p, lp) {\n    ms.L = L;\n    ms.matchdepth = MAXCCALLS;\n    ms.src = s;\n    ms.src_init = 0;\n    ms.src_end = ls;\n    ms.p = p;\n    ms.p_end = lp;\n};\n\nconst reprepstate = function(ms) {\n    ms.level = 0;\n    lualib.lua_assert(ms.matchdepth === MAXCCALLS);\n};\n\nconst find_subarray = function(arr, subarr, from_index) {\n    var i = from_index >>> 0,\n        sl = subarr.length;\n\n    if (sl === 0)\n        return i;\n\n    for (; (i = arr.indexOf(subarr[0], i)) !== -1; i++) {\n        if (luastring_eq(arr.subarray(i, i+sl), subarr))\n            return i;\n    }\n\n    return -1;\n};\n\nconst str_find_aux = function(L, find) {\n    let s = luaL_checkstring(L, 1);\n    let p = luaL_checkstring(L, 2);\n    let ls = s.length;\n    let lp = p.length;\n    let init = posrelat(luaL_optinteger(L, 3, 1), ls);\n    if (init < 1) init = 1;\n    else if (init > ls + 1) {  /* start after string's end? */\n        lua_pushnil(L);  /* cannot find anything */\n        return 1;\n    }\n    /* explicit request or no special characters? */\n    if (find && (lua_toboolean(L, 4) || nospecials(p, lp))) {\n        /* do a plain search */\n        let f = find_subarray(s.subarray(init - 1), p, 0);\n        if (f > -1) {\n            lua_pushinteger(L, init + f);\n            lua_pushinteger(L, init + f + lp - 1);\n            return 2;\n        }\n    } else {\n        let ms = new MatchState(L);\n        let s1 = init - 1;\n        let anchor = p[0] === 94 /* '^'.charCodeAt(0) */;\n        if (anchor) {\n            p = p.subarray(1); lp--;  /* skip anchor character */\n        }\n        prepstate(ms, L, s, ls, p, lp);\n        do {\n            let res;\n            reprepstate(ms);\n            if ((res = match(ms, s1, 0)) !== null) {\n                if (find) {\n                    lua_pushinteger(L, s1 + 1);  /* start */\n                    lua_pushinteger(L, res);   /* end */\n                    return push_captures(ms, null, 0) + 2;\n                } else\n                    return push_captures(ms, s1, res);\n            }\n        } while (s1++ < ms.src_end && !anchor);\n    }\n    lua_pushnil(L);  /* not found */\n    return 1;\n};\n\nconst str_find = function(L) {\n    return str_find_aux(L, 1);\n};\n\nconst str_match = function(L) {\n    return str_find_aux(L, 0);\n};\n\n/* state for 'gmatch' */\nclass GMatchState {\n    constructor() {\n        this.src = NaN;  /* current position */\n        this.p = NaN;  /* pattern */\n        this.lastmatch = NaN;  /* end of last match */\n        this.ms = new MatchState();  /* match state */\n    }\n}\n\nconst gmatch_aux = function(L) {\n    let gm = lua_touserdata(L, lua_upvalueindex(3));\n    gm.ms.L = L;\n    for (let src = gm.src; src <= gm.ms.src_end; src++) {\n        reprepstate(gm.ms);\n        let e;\n        if ((e = match(gm.ms, src, gm.p)) !== null && e !== gm.lastmatch) {\n            gm.src = gm.lastmatch = e;\n            return push_captures(gm.ms, src, e);\n        }\n    }\n    return 0;  /* not found */\n};\n\nconst str_gmatch = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let p = luaL_checkstring(L, 2);\n    let ls = s.length;\n    let lp = p.length;\n    lua_settop(L, 2);  /* keep them on closure to avoid being collected */\n    let gm = new GMatchState();\n    lua_pushlightuserdata(L, gm);\n    prepstate(gm.ms, L, s, ls, p, lp);\n    gm.src = 0;\n    gm.p = 0;\n    gm.lastmatch = null;\n    lua_pushcclosure(L, gmatch_aux, 3);\n    return 1;\n};\n\nconst add_s = function(ms, b, s, e) {\n    let L = ms.L;\n    let news = lua_tostring(L, 3);\n    let l = news.length;\n    for (let i = 0; i < l; i++) {\n        if (news[i] !== L_ESC)\n            luaL_addchar(b, news[i]);\n        else {\n            i++;  /* skip ESC */\n            if (!isdigit(news[i])) {\n                if (news[i] !== L_ESC)\n                    luaL_error(L, to_luastring(\"invalid use of '%c' in replacement string\"), L_ESC);\n                luaL_addchar(b, news[i]);\n            } else if (news[i] === 48 /* '0'.charCodeAt(0) */)\n                luaL_addlstring(b, ms.src.subarray(s, e), e - s);\n            else {\n                push_onecapture(ms, news[i] - 49 /* '1'.charCodeAt(0) */, s, e);\n                luaL_tolstring(L, -1);\n                lua_remove(L, -2);  /* remove original value */\n                luaL_addvalue(b);  /* add capture to accumulated result */\n            }\n        }\n    }\n};\n\nconst add_value = function(ms, b, s, e, tr) {\n    let L = ms.L;\n    switch (tr) {\n        case LUA_TFUNCTION: {\n            lua_pushvalue(L, 3);\n            let n = push_captures(ms, s, e);\n            lua_call(L, n, 1);\n            break;\n        }\n        case LUA_TTABLE: {\n            push_onecapture(ms, 0, s, e);\n            lua_gettable(L, 3);\n            break;\n        }\n        default: {  /* LUA_TNUMBER or LUA_TSTRING */\n            add_s(ms, b, s, e);\n            return;\n        }\n    }\n    if (!lua_toboolean(L, -1)) {  /* nil or false? */\n        lua_pop(L, 1);\n        lua_pushlstring(L, ms.src.subarray(s, e), e - s);  /* keep original text */\n    } else if (!lua_isstring(L, -1))\n        luaL_error(L, to_luastring(\"invalid replacement value (a %s)\"), luaL_typename(L, -1));\n    luaL_addvalue(b);  /* add result to accumulator */\n};\n\nconst str_gsub = function(L) {\n    let src = luaL_checkstring(L, 1);  /* subject */\n    let srcl = src.length;\n    let p = luaL_checkstring(L, 2);  /* pattern */\n    let lp = p.length;\n    let lastmatch = null;  /* end of last match */\n    let tr = lua_type(L, 3);  /* replacement type */\n    let max_s = luaL_optinteger(L, 4, srcl + 1);  /* max replacements */\n    let anchor = p[0] === 94 /* '^'.charCodeAt(0) */;\n    let n = 0;  /* replacement count */\n    let ms = new MatchState(L);\n    let b = new luaL_Buffer();\n    luaL_argcheck(L, tr === LUA_TNUMBER || tr === LUA_TSTRING || tr === LUA_TFUNCTION || tr === LUA_TTABLE, 3,\n        \"string/function/table expected\");\n    luaL_buffinit(L, b);\n    if (anchor) {\n        p = p.subarray(1); lp--;  /* skip anchor character */\n    }\n    prepstate(ms, L, src, srcl, p, lp);\n    src = 0; p = 0;\n    while (n < max_s) {\n        let e;\n        reprepstate(ms);\n        if ((e = match(ms, src, p)) !== null && e !== lastmatch) {  /* match? */\n            n++;\n            add_value(ms, b, src, e, tr);  /* add replacement to buffer */\n            src = lastmatch = e;\n        } else if (src < ms.src_end)  /* otherwise, skip one character */\n            luaL_addchar(b, ms.src[src++]);\n        else break;  /* end of subject */\n        if (anchor) break;\n    }\n    luaL_addlstring(b, ms.src.subarray(src, ms.src_end), ms.src_end - src);\n    luaL_pushresult(b);\n    lua_pushinteger(L, n);  /* number of substitutions */\n    return 2;\n};\n\nconst strlib = {\n    \"byte\":     str_byte,\n    \"char\":     str_char,\n    \"dump\":     str_dump,\n    \"find\":     str_find,\n    \"format\":   str_format,\n    \"gmatch\":   str_gmatch,\n    \"gsub\":     str_gsub,\n    \"len\":      str_len,\n    \"lower\":    str_lower,\n    \"match\":    str_match,\n    \"pack\":     str_pack,\n    \"packsize\": str_packsize,\n    \"rep\":      str_rep,\n    \"reverse\":  str_reverse,\n    \"sub\":      str_sub,\n    \"unpack\":   str_unpack,\n    \"upper\":    str_upper\n};\n\nconst createmetatable = function(L) {\n    lua_createtable(L, 0, 1);  /* table to be metatable for strings */\n    lua_pushliteral(L, \"\");  /* dummy string */\n    lua_pushvalue(L, -2);  /* copy table */\n    lua_setmetatable(L, -2);  /* set table as metatable for strings */\n    lua_pop(L, 1);  /* pop dummy string */\n    lua_pushvalue(L, -2);  /* get string library */\n    lua_setfield(L, -2, to_luastring(\"__index\", true));  /* metatable.__index = string */\n    lua_pop(L, 1);  /* pop metatable */\n};\n\nconst luaopen_string = function(L) {\n    luaL_newlib(L, strlib);\n    createmetatable(L);\n    return 1;\n};\n\nmodule.exports.luaopen_string = luaopen_string;\n","\"use strict\";\n\nconst {\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TCCL,\n        LUA_TLCF,\n        LUA_TLCL,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TTABLE,\n        LUA_TTHREAD,\n        LUA_TUSERDATA\n    },\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require('./llimits.js');\nconst ldebug  = require('./ldebug.js');\nconst lobject = require('./lobject.js');\nconst {\n    luaS_hashlongstr,\n    TString\n} = require('./lstring.js');\nconst lstate  = require('./lstate.js');\n\n/* used to prevent conflicts with lightuserdata keys */\nlet lightuserdata_hashes = new WeakMap();\nconst get_lightuserdata_hash = function(v) {\n    let hash = lightuserdata_hashes.get(v);\n    if (!hash) {\n        /* Hash should be something unique that is a valid WeakMap key\n           so that it ends up in dead_weak when removed from a table */\n        hash = {};\n        lightuserdata_hashes.set(v, hash);\n    }\n    return hash;\n};\n\nconst table_hash = function(L, key) {\n    switch(key.type) {\n        case LUA_TNIL:\n            return ldebug.luaG_runerror(L, to_luastring(\"table index is nil\", true));\n        case LUA_TNUMFLT:\n            if (isNaN(key.value))\n                return ldebug.luaG_runerror(L, to_luastring(\"table index is NaN\", true));\n            /* fall through */\n        case LUA_TNUMINT: /* takes advantage of floats and integers being same in JS */\n        case LUA_TBOOLEAN:\n        case LUA_TTABLE:\n        case LUA_TLCL:\n        case LUA_TLCF:\n        case LUA_TCCL:\n        case LUA_TUSERDATA:\n        case LUA_TTHREAD:\n            return key.value;\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR:\n            return luaS_hashlongstr(key.tsvalue());\n        case LUA_TLIGHTUSERDATA: {\n            let v = key.value;\n            switch(typeof v) {\n                case \"string\":\n                    /* possible conflict with LUA_TSTRING.\n                       prefix this string with \"*\" so they don't clash */\n                    return \"*\" + v;\n                case \"number\":\n                    /* possible conflict with LUA_TNUMBER.\n                       turn into string and prefix with \"#\" to avoid clash with other strings */\n                    return \"#\" + v;\n                case \"boolean\":\n                    /* possible conflict with LUA_TBOOLEAN. use strings ?true and ?false instead */\n                    return v?\"?true\":\"?false\";\n                case \"function\":\n                    /* possible conflict with LUA_TLCF.\n                       indirect via a weakmap */\n                    return get_lightuserdata_hash(v);\n                case \"object\":\n                    /* v could be a lua_State, CClosure, LClosure, Table or Userdata from this state as returned by lua_topointer */\n                    if ((v instanceof lstate.lua_State && v.l_G === L.l_G) ||\n                        v instanceof Table ||\n                        v instanceof lobject.Udata ||\n                        v instanceof lobject.LClosure ||\n                        v instanceof lobject.CClosure) {\n                        /* indirect via a weakmap */\n                        return get_lightuserdata_hash(v);\n                    }\n                    /* fall through */\n                default:\n                    return v;\n            }\n        }\n        default:\n            throw new Error(\"unknown key type: \" + key.type);\n    }\n};\n\nclass Table {\n    constructor(L) {\n        this.id = L.l_G.id_counter++;\n        this.strong = new Map();\n        this.dead_strong = new Map();\n        this.dead_weak = void 0; /* initialised when needed */\n        this.f = void 0; /* first entry */\n        this.l = void 0; /* last entry */\n        this.metatable = null;\n        this.flags = ~0;\n    }\n}\n\nconst invalidateTMcache = function(t) {\n    t.flags = 0;\n};\n\nconst add = function(t, hash, key, value) {\n    t.dead_strong.clear();\n    t.dead_weak = void 0;\n    let prev = null;\n    let entry = {\n        key: key,\n        value: value,\n        p: prev = t.l,\n        n: void 0\n    };\n    if (!t.f) t.f = entry;\n    if (prev) prev.n = entry;\n    t.strong.set(hash, entry);\n    t.l = entry;\n};\n\nconst is_valid_weakmap_key = function(k) {\n    return typeof k === 'object' ? k !== null : typeof k === 'function';\n};\n\n/* Move out of 'strong' part and into 'dead' part. */\nconst mark_dead = function(t, hash) {\n    let e = t.strong.get(hash);\n    if (e) {\n        e.key.setdeadvalue();\n        e.value = void 0;\n        let next = e.n;\n        let prev = e.p;\n        e.p = void 0; /* no need to know previous item any more */\n        if(prev) prev.n = next;\n        if(next) next.p = prev;\n        if(t.f === e) t.f = next;\n        if(t.l === e) t.l = prev;\n        t.strong.delete(hash);\n        if (is_valid_weakmap_key(hash)) {\n            if (!t.dead_weak) t.dead_weak = new WeakMap();\n            t.dead_weak.set(hash, e);\n        } else {\n            /* can't be used as key in weakmap */\n            t.dead_strong.set(hash, e);\n        }\n    }\n};\n\nconst luaH_new = function(L) {\n    return new Table(L);\n};\n\nconst getgeneric = function(t, hash) {\n    let v = t.strong.get(hash);\n    return v ? v.value : lobject.luaO_nilobject;\n};\n\nconst luaH_getint = function(t, key) {\n    lua_assert(typeof key == \"number\" && (key|0) === key);\n    return getgeneric(t, key);\n};\n\nconst luaH_getstr = function(t, key) {\n    lua_assert(key instanceof TString);\n    return getgeneric(t, luaS_hashlongstr(key));\n};\n\nconst luaH_get = function(L, t, key) {\n    lua_assert(key instanceof lobject.TValue);\n    if (key.ttisnil() || (key.ttisfloat() && isNaN(key.value)))\n        return lobject.luaO_nilobject;\n    return getgeneric(t, table_hash(L, key));\n};\n\nconst luaH_setint = function(t, key, value) {\n    lua_assert(typeof key == \"number\" && (key|0) === key && value instanceof lobject.TValue);\n    let hash = key; /* table_hash known result */\n    if (value.ttisnil()) {\n        mark_dead(t, hash);\n        return;\n    }\n    let e = t.strong.get(hash);\n    if (e) {\n        let tv = e.value;\n        tv.setfrom(value);\n    } else {\n        let k = new lobject.TValue(LUA_TNUMINT, key);\n        let v = new lobject.TValue(value.type, value.value);\n        add(t, hash, k, v);\n    }\n};\n\nconst luaH_setfrom = function(L, t, key, value) {\n    lua_assert(key instanceof lobject.TValue);\n    let hash = table_hash(L, key);\n    if (value.ttisnil()) { /* delete */\n        mark_dead(t, hash);\n        return;\n    }\n\n    let e = t.strong.get(hash);\n    if (e) {\n        e.value.setfrom(value);\n    } else {\n        let k;\n        let kv = key.value;\n        if ((key.ttisfloat() && (kv|0) === kv)) { /* does index fit in an integer? */\n            /* insert it as an integer */\n            k = new lobject.TValue(LUA_TNUMINT, kv);\n        } else {\n            k = new lobject.TValue(key.type, kv);\n        }\n        let v = new lobject.TValue(value.type, value.value);\n        add(t, hash, k, v);\n    }\n};\n\n/*\n** Try to find a boundary in table 't'. A 'boundary' is an integer index\n** such that t[i] is non-nil and t[i+1] is nil (and 0 if t[1] is nil).\n*/\nconst luaH_getn = function(t) {\n    let i = 0;\n    let j = t.strong.size + 1; /* use known size of Map to bound search */\n    /* now do a binary search between them */\n    while (j - i > 1) {\n        let m = Math.floor((i+j)/2);\n        if (luaH_getint(t, m).ttisnil()) j = m;\n        else i = m;\n    }\n    return i;\n};\n\nconst luaH_next = function(L, table, keyI) {\n    let keyO = L.stack[keyI];\n\n    let entry;\n    if (keyO.type === LUA_TNIL) {\n        entry = table.f;\n        if (!entry)\n            return false;\n    } else {\n        /* First find current key */\n        let hash = table_hash(L, keyO);\n        /* Look in main part of table */\n        entry = table.strong.get(hash);\n        if (entry) {\n            entry = entry.n;\n            if (!entry)\n                return false;\n        } else {\n            /* Try dead keys */\n            entry = (table.dead_weak && table.dead_weak.get(hash)) || table.dead_strong.get(hash);\n            if (!entry)\n                /* item not in table */\n                return ldebug.luaG_runerror(L, to_luastring(\"invalid key to 'next'\"));\n            /* Iterate until either out of keys, or until finding a non-dead key */\n            do {\n                entry = entry.n;\n                if (!entry)\n                    return false;\n            } while (entry.key.ttisdeadkey());\n        }\n    }\n    lobject.setobj2s(L, keyI, entry.key);\n    lobject.setobj2s(L, keyI+1, entry.value);\n    return true;\n};\n\nmodule.exports.invalidateTMcache = invalidateTMcache;\nmodule.exports.luaH_get     = luaH_get;\nmodule.exports.luaH_getint  = luaH_getint;\nmodule.exports.luaH_getn    = luaH_getn;\nmodule.exports.luaH_getstr  = luaH_getstr;\nmodule.exports.luaH_setfrom = luaH_setfrom;\nmodule.exports.luaH_setint  = luaH_setint;\nmodule.exports.luaH_new     = luaH_new;\nmodule.exports.luaH_next    = luaH_next;\nmodule.exports.Table        = Table;\n","\"use strict\";\n\nconst { LUA_MAXINTEGER } = require('./luaconf.js');\nconst {\n    LUA_OPEQ,\n    LUA_OPLT,\n    LUA_TFUNCTION,\n    LUA_TNIL,\n    LUA_TTABLE,\n    lua_call,\n    lua_checkstack,\n    lua_compare,\n    lua_createtable,\n    lua_geti,\n    lua_getmetatable,\n    lua_gettop,\n    lua_insert,\n    lua_isnil,\n    lua_isnoneornil,\n    lua_isstring,\n    lua_pop,\n    lua_pushinteger,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_rawget,\n    lua_setfield,\n    lua_seti,\n    lua_settop,\n    lua_toboolean,\n    lua_type\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addlstring,\n    luaL_addvalue,\n    luaL_argcheck,\n    luaL_buffinit,\n    luaL_checkinteger,\n    luaL_checktype,\n    luaL_error,\n    luaL_len,\n    luaL_newlib,\n    luaL_opt,\n    luaL_optinteger,\n    luaL_optlstring,\n    luaL_pushresult,\n    luaL_typename\n} = require('./lauxlib.js');\nconst lualib = require('./lualib.js');\nconst { to_luastring } = require(\"./fengaricore.js\");\n\n/*\n** Operations that an object must define to mimic a table\n** (some functions only need some of them)\n*/\nconst TAB_R  = 1;               /* read */\nconst TAB_W  = 2;               /* write */\nconst TAB_L  = 4;               /* length */\nconst TAB_RW = (TAB_R | TAB_W); /* read/write */\n\nconst checkfield = function(L, key, n) {\n    lua_pushstring(L, key);\n    return lua_rawget(L, -n) !== LUA_TNIL;\n};\n\n/*\n** Check that 'arg' either is a table or can behave like one (that is,\n** has a metatable with the required metamethods)\n*/\nconst checktab = function(L, arg, what) {\n    if (lua_type(L, arg) !== LUA_TTABLE) {  /* is it not a table? */\n        let n = 1;\n        if (lua_getmetatable(L, arg) &&  /* must have metatable */\n            (!(what & TAB_R) || checkfield(L, to_luastring(\"__index\", true), ++n)) &&\n            (!(what & TAB_W) || checkfield(L, to_luastring(\"__newindex\", true), ++n)) &&\n            (!(what & TAB_L) || checkfield(L, to_luastring(\"__len\", true), ++n))) {\n            lua_pop(L, n);  /* pop metatable and tested metamethods */\n        }\n        else\n            luaL_checktype(L, arg, LUA_TTABLE);  /* force an error */\n    }\n};\n\nconst aux_getn = function(L, n, w) {\n    checktab(L, n, w | TAB_L);\n    return luaL_len(L, n);\n};\n\nconst addfield = function(L, b, i) {\n    lua_geti(L, 1, i);\n    if (!lua_isstring(L, -1))\n        luaL_error(L, to_luastring(\"invalid value (%s) at index %d in table for 'concat'\"),\n            luaL_typename(L, -1), i);\n\n    luaL_addvalue(b);\n};\n\nconst tinsert = function(L) {\n    let e = aux_getn(L, 1, TAB_RW) + 1;  /* first empty element */\n    let pos;\n    switch (lua_gettop(L)) {\n        case 2:\n            pos = e;\n            break;\n        case 3: {\n            pos = luaL_checkinteger(L, 2);  /* 2nd argument is the position */\n            luaL_argcheck(L, 1 <= pos && pos <= e, 2, \"position out of bounds\");\n            for (let i = e; i > pos; i--) {  /* move up elements */\n                lua_geti(L, 1, i - 1);\n                lua_seti(L, 1, i);  /* t[i] = t[i - 1] */\n            }\n            break;\n        }\n        default: {\n            return luaL_error(L, \"wrong number of arguments to 'insert'\");\n        }\n    }\n\n    lua_seti(L, 1, pos);  /* t[pos] = v */\n    return 0;\n};\n\nconst tremove = function(L) {\n    let size = aux_getn(L, 1, TAB_RW);\n    let pos = luaL_optinteger(L, 2, size);\n    if (pos !== size)  /* validate 'pos' if given */\n        luaL_argcheck(L, 1 <= pos && pos <= size + 1, 1, \"position out of bounds\");\n    lua_geti(L, 1, pos);  /* result = t[pos] */\n    for (; pos < size; pos++) {\n        lua_geti(L, 1, pos + 1);\n        lua_seti(L, 1, pos);  /* t[pos] = t[pos + 1] */\n    }\n    lua_pushnil(L);\n    lua_seti(L, 1, pos);  /* t[pos] = nil */\n    return 1;\n};\n\n/*\n** Copy elements (1[f], ..., 1[e]) into (tt[t], tt[t+1], ...). Whenever\n** possible, copy in increasing order, which is better for rehashing.\n** \"possible\" means destination after original range, or smaller\n** than origin, or copying to another table.\n*/\nconst tmove = function(L) {\n    let f = luaL_checkinteger(L, 2);\n    let e = luaL_checkinteger(L, 3);\n    let t = luaL_checkinteger(L, 4);\n    let tt = !lua_isnoneornil(L, 5) ? 5 : 1;  /* destination table */\n    checktab(L, 1, TAB_R);\n    checktab(L, tt, TAB_W);\n    if (e >= f) {  /* otherwise, nothing to move */\n        luaL_argcheck(L, f > 0 || e < LUA_MAXINTEGER + f, 3, \"too many elements to move\");\n        let n = e - f + 1;  /* number of elements to move */\n        luaL_argcheck(L, t <= LUA_MAXINTEGER - n + 1, 4, \"destination wrap around\");\n\n        if (t > e || t <= f || (tt !== 1 && lua_compare(L, 1, tt, LUA_OPEQ) !== 1)) {\n            for (let i = 0; i < n; i++) {\n                lua_geti(L, 1, f + i);\n                lua_seti(L, tt, t + i);\n            }\n        } else {\n            for (let i = n - 1; i >= 0; i--) {\n                lua_geti(L, 1, f + i);\n                lua_seti(L, tt, t + i);\n            }\n        }\n    }\n\n    lua_pushvalue(L, tt);  /* return destination table */\n    return 1;\n};\n\nconst tconcat = function(L) {\n    let last = aux_getn(L, 1, TAB_R);\n    let sep = luaL_optlstring(L, 2, \"\");\n    let lsep = sep.length;\n    let i = luaL_optinteger(L, 3, 1);\n    last = luaL_optinteger(L, 4, last);\n\n    let b = new luaL_Buffer();\n    luaL_buffinit(L, b);\n\n    for (; i < last; i++) {\n        addfield(L, b, i);\n        luaL_addlstring(b, sep, lsep);\n    }\n\n    if (i === last)\n        addfield(L, b, i);\n\n    luaL_pushresult(b);\n\n    return 1;\n};\n\nconst pack = function(L) {\n    let n = lua_gettop(L);  /* number of elements to pack */\n    lua_createtable(L, n, 1);  /* create result table */\n    lua_insert(L, 1);  /* put it at index 1 */\n    for (let i = n; i >= 1; i--)  /* assign elements */\n        lua_seti(L, 1, i);\n    lua_pushinteger(L, n);\n    lua_setfield(L, 1, to_luastring(\"n\"));  /* t.n = number of elements */\n    return 1;  /* return table */\n};\n\nconst unpack = function(L) {\n    let i = luaL_optinteger(L, 2, 1);\n    let e = luaL_opt(L, luaL_checkinteger, 3, luaL_len(L, 1));\n    if (i > e) return 0;  /* empty range */\n    let n = e - i;  /* number of elements minus 1 (avoid overflows) */\n    if (n >= Number.MAX_SAFE_INTEGER || !lua_checkstack(L, ++n))\n        return luaL_error(L, to_luastring(\"too many results to unpack\"));\n    for (; i < e; i++)  /* push arg[i..e - 1] (to avoid overflows) */\n        lua_geti(L, 1, i);\n    lua_geti(L, 1, e);  /* push last element */\n    return n;\n};\n\nconst l_randomizePivot = function() {\n    return Math.floor(Math.random()*0x100000000);\n};\n\nconst RANLIMIT = 100;\n\nconst set2 = function(L, i, j) {\n    lua_seti(L, 1, i);\n    lua_seti(L, 1, j);\n};\n\nconst sort_comp = function(L, a, b) {\n    if (lua_isnil(L, 2))  /* no function? */\n        return lua_compare(L, a, b, LUA_OPLT);  /* a < b */\n    else {  /* function */\n        lua_pushvalue(L, 2);    /* push function */\n        lua_pushvalue(L, a-1);  /* -1 to compensate function */\n        lua_pushvalue(L, b-2);  /* -2 to compensate function and 'a' */\n        lua_call(L, 2, 1);      /* call function */\n        let res = lua_toboolean(L, -1);  /* get result */\n        lua_pop(L, 1);          /* pop result */\n        return res;\n    }\n};\n\nconst partition = function(L, lo, up) {\n    let i = lo;  /* will be incremented before first use */\n    let j = up - 1;  /* will be decremented before first use */\n    /* loop invariant: a[lo .. i] <= P <= a[j .. up] */\n    for (;;) {\n        /* next loop: repeat ++i while a[i] < P */\n        while (lua_geti(L, 1, ++i), sort_comp(L, -1, -2)) {\n            if (i == up - 1)  /* a[i] < P  but a[up - 1] == P  ?? */\n                luaL_error(L, to_luastring(\"invalid order function for sorting\"));\n            lua_pop(L, 1);  /* remove a[i] */\n        }\n        /* after the loop, a[i] >= P and a[lo .. i - 1] < P */\n        /* next loop: repeat --j while P < a[j] */\n        while (lua_geti(L, 1, --j), sort_comp(L, -3, -1)) {\n            if (j < i)  /* j < i  but  a[j] > P ?? */\n                luaL_error(L, to_luastring(\"invalid order function for sorting\"));\n            lua_pop(L, 1);  /* remove a[j] */\n        }\n        /* after the loop, a[j] <= P and a[j + 1 .. up] >= P */\n        if (j < i) {  /* no elements out of place? */\n            /* a[lo .. i - 1] <= P <= a[j + 1 .. i .. up] */\n            lua_pop(L, 1);  /* pop a[j] */\n            /* swap pivot (a[up - 1]) with a[i] to satisfy pos-condition */\n            set2(L, up - 1, i);\n            return i;\n        }\n        /* otherwise, swap a[i] - a[j] to restore invariant and repeat */\n        set2(L, i, j);\n    }\n};\n\nconst choosePivot = function(lo, up, rnd) {\n    let r4 = Math.floor((up - lo) / 4);  /* range/4 */\n    let p = rnd % (r4 * 2) + (lo + r4);\n    lualib.lua_assert(lo + r4 <= p && p <= up - r4);\n    return p;\n};\n\nconst auxsort = function(L, lo, up, rnd) {\n    while (lo < up) {  /* loop for tail recursion */\n        /* sort elements 'lo', 'p', and 'up' */\n        lua_geti(L, 1, lo);\n        lua_geti(L, 1, up);\n        if (sort_comp(L, -1, -2))  /* a[up] < a[lo]? */\n            set2(L, lo, up);  /* swap a[lo] - a[up] */\n        else\n            lua_pop(L, 2);  /* remove both values */\n        if (up - lo == 1)  /* only 2 elements? */\n            return;  /* already sorted */\n        let p;  /* Pivot index */\n        if (up - lo < RANLIMIT || rnd === 0)  /* small interval or no randomize? */\n            p = Math.floor((lo + up)/2);  /* middle element is a good pivot */\n        else  /* for larger intervals, it is worth a random pivot */\n            p = choosePivot(lo, up, rnd);\n        lua_geti(L, 1, p);\n        lua_geti(L, 1, lo);\n        if (sort_comp(L, -2, -1))  /* a[p] < a[lo]? */\n            set2(L, p, lo);  /* swap a[p] - a[lo] */\n        else {\n            lua_pop(L, 1);  /* remove a[lo] */\n            lua_geti(L, 1, up);\n            if (sort_comp(L, -1, -2))  /* a[up] < a[p]? */\n                set2(L, p, up);  /* swap a[up] - a[p] */\n            else\n                lua_pop(L, 2);\n        }\n        if (up - lo == 2)  /* only 3 elements? */\n            return;  /* already sorted */\n        lua_geti(L, 1, p);  /* get middle element (Pivot) */\n        lua_pushvalue(L, -1);  /* push Pivot */\n        lua_geti(L, 1, up - 1);  /* push a[up - 1] */\n        set2(L, p, up - 1);  /* swap Pivot (a[p]) with a[up - 1] */\n        p = partition(L, lo, up);\n        let n;\n        /* a[lo .. p - 1] <= a[p] == P <= a[p + 1 .. up] */\n        if (p - lo < up - p) {  /* lower interval is smaller? */\n            auxsort(L, lo, p - 1, rnd);  /* call recursively for lower interval */\n            n = p - lo;  /* size of smaller interval */\n            lo = p + 1;  /* tail call for [p + 1 .. up] (upper interval) */\n        } else {\n            auxsort(L, p + 1, up, rnd);  /* call recursively for upper interval */\n            n = up - p;  /* size of smaller interval */\n            up = p - 1;  /* tail call for [lo .. p - 1]  (lower interval) */\n        }\n        if ((up - lo) / 128 > n) /* partition too imbalanced? */\n            rnd = l_randomizePivot();  /* try a new randomization */\n    }  /* tail call auxsort(L, lo, up, rnd) */\n};\n\nconst sort = function(L) {\n    let n = aux_getn(L, 1, TAB_RW);\n    if (n > 1) {  /* non-trivial interval? */\n        luaL_argcheck(L, n < LUA_MAXINTEGER, 1, \"array too big\");\n        if (!lua_isnoneornil(L, 2))  /* is there a 2nd argument? */\n            luaL_checktype(L, 2, LUA_TFUNCTION);  /* must be a function */\n        lua_settop(L, 2);  /* make sure there are two arguments */\n        auxsort(L, 1, n, 0);\n    }\n    return 0;\n};\n\nconst tab_funcs = {\n    \"concat\": tconcat,\n    \"insert\": tinsert,\n    \"move\":   tmove,\n    \"pack\":   pack,\n    \"remove\": tremove,\n    \"sort\":   sort,\n    \"unpack\": unpack\n};\n\nconst luaopen_table = function(L) {\n    luaL_newlib(L, tab_funcs);\n    return 1;\n};\n\nmodule.exports.luaopen_table = luaopen_table;\n","\"use strict\";\n\nconst {\n    constant_types: {\n        LUA_TTABLE,\n        LUA_TUSERDATA\n    },\n    to_luastring\n} = require('./defs.js');\nconst { lua_assert } = require('./llimits.js');\nconst lobject = require('./lobject.js');\nconst ldo     = require('./ldo.js');\nconst lstate  = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_new\n} = require('./lstring.js');\nconst ltable  = require('./ltable.js');\nconst ldebug  = require('./ldebug.js');\nconst lvm     = require('./lvm.js');\n\nconst luaT_typenames_ = [\n    \"no value\",\n    \"nil\",\n    \"boolean\",\n    \"userdata\",\n    \"number\",\n    \"string\",\n    \"table\",\n    \"function\",\n    \"userdata\",\n    \"thread\",\n    \"proto\" /* this last case is used for tests only */\n].map(e => to_luastring(e));\n\nconst ttypename = function(t) {\n    return luaT_typenames_[t + 1];\n};\n\n\n/*\n* WARNING: if you change the order of this enumeration,\n* grep \"ORDER TM\" and \"ORDER OP\"\n*/\nconst TMS = {\n    TM_INDEX:    0,\n    TM_NEWINDEX: 1,\n    TM_GC:       2,\n    TM_MODE:     3,\n    TM_LEN:      4,\n    TM_EQ:       5,  /* last tag method with fast access */\n    TM_ADD:      6,\n    TM_SUB:      7,\n    TM_MUL:      8,\n    TM_MOD:      9,\n    TM_POW:     10,\n    TM_DIV:     11,\n    TM_IDIV:    12,\n    TM_BAND:    13 ,\n    TM_BOR:     14,\n    TM_BXOR:    15,\n    TM_SHL:     16,\n    TM_SHR:     17,\n    TM_UNM:     18,\n    TM_BNOT:    19,\n    TM_LT:      20,\n    TM_LE:      21,\n    TM_CONCAT:  22,\n    TM_CALL:    23,\n    TM_N:       24  /* number of elements in the enum */\n};\n\nconst luaT_init = function(L) {\n    L.l_G.tmname[TMS.TM_INDEX]    = new luaS_new(L, to_luastring(\"__index\", true));\n    L.l_G.tmname[TMS.TM_NEWINDEX] = new luaS_new(L, to_luastring(\"__newindex\", true));\n    L.l_G.tmname[TMS.TM_GC]       = new luaS_new(L, to_luastring(\"__gc\", true));\n    L.l_G.tmname[TMS.TM_MODE]     = new luaS_new(L, to_luastring(\"__mode\", true));\n    L.l_G.tmname[TMS.TM_LEN]      = new luaS_new(L, to_luastring(\"__len\", true));\n    L.l_G.tmname[TMS.TM_EQ]       = new luaS_new(L, to_luastring(\"__eq\", true));\n    L.l_G.tmname[TMS.TM_ADD]      = new luaS_new(L, to_luastring(\"__add\", true));\n    L.l_G.tmname[TMS.TM_SUB]      = new luaS_new(L, to_luastring(\"__sub\", true));\n    L.l_G.tmname[TMS.TM_MUL]      = new luaS_new(L, to_luastring(\"__mul\", true));\n    L.l_G.tmname[TMS.TM_MOD]      = new luaS_new(L, to_luastring(\"__mod\", true));\n    L.l_G.tmname[TMS.TM_POW]      = new luaS_new(L, to_luastring(\"__pow\", true));\n    L.l_G.tmname[TMS.TM_DIV]      = new luaS_new(L, to_luastring(\"__div\", true));\n    L.l_G.tmname[TMS.TM_IDIV]     = new luaS_new(L, to_luastring(\"__idiv\", true));\n    L.l_G.tmname[TMS.TM_BAND]     = new luaS_new(L, to_luastring(\"__band\", true));\n    L.l_G.tmname[TMS.TM_BOR]      = new luaS_new(L, to_luastring(\"__bor\", true));\n    L.l_G.tmname[TMS.TM_BXOR]     = new luaS_new(L, to_luastring(\"__bxor\", true));\n    L.l_G.tmname[TMS.TM_SHL]      = new luaS_new(L, to_luastring(\"__shl\", true));\n    L.l_G.tmname[TMS.TM_SHR]      = new luaS_new(L, to_luastring(\"__shr\", true));\n    L.l_G.tmname[TMS.TM_UNM]      = new luaS_new(L, to_luastring(\"__unm\", true));\n    L.l_G.tmname[TMS.TM_BNOT]     = new luaS_new(L, to_luastring(\"__bnot\", true));\n    L.l_G.tmname[TMS.TM_LT]       = new luaS_new(L, to_luastring(\"__lt\", true));\n    L.l_G.tmname[TMS.TM_LE]       = new luaS_new(L, to_luastring(\"__le\", true));\n    L.l_G.tmname[TMS.TM_CONCAT]   = new luaS_new(L, to_luastring(\"__concat\", true));\n    L.l_G.tmname[TMS.TM_CALL]     = new luaS_new(L, to_luastring(\"__call\", true));\n};\n\n/*\n** Return the name of the type of an object. For tables and userdata\n** with metatable, use their '__name' metafield, if present.\n*/\nconst __name = to_luastring('__name', true);\nconst luaT_objtypename = function(L, o) {\n    let mt;\n    if ((o.ttistable() && (mt = o.value.metatable) !== null) ||\n        (o.ttisfulluserdata() && (mt = o.value.metatable) !== null)) {\n        let name = ltable.luaH_getstr(mt, luaS_bless(L, __name));\n        if (name.ttisstring())\n            return name.svalue();\n    }\n    return ttypename(o.ttnov());\n};\n\nconst luaT_callTM = function(L, f, p1, p2, p3, hasres) {\n    let func = L.top;\n\n    lobject.pushobj2s(L, f); /* push function (assume EXTRA_STACK) */\n    lobject.pushobj2s(L, p1); /* 1st argument */\n    lobject.pushobj2s(L, p2); /* 2nd argument */\n\n    if (!hasres)  /* no result? 'p3' is third argument */\n        lobject.pushobj2s(L, p3); /* 3rd argument */\n\n    if (L.ci.callstatus & lstate.CIST_LUA)\n        ldo.luaD_call(L, func, hasres);\n    else\n        ldo.luaD_callnoyield(L, func, hasres);\n\n    if (hasres) {  /* if has result, move it to its place */\n        let tv = L.stack[L.top-1];\n        delete L.stack[--L.top];\n        p3.setfrom(tv);\n    }\n};\n\nconst luaT_callbinTM = function(L, p1, p2, res, event) {\n    let tm = luaT_gettmbyobj(L, p1, event);\n    if (tm.ttisnil())\n        tm = luaT_gettmbyobj(L, p2, event);\n    if (tm.ttisnil()) return false;\n    luaT_callTM(L, tm, p1, p2, res, 1);\n    return true;\n};\n\nconst luaT_trybinTM = function(L, p1, p2, res, event) {\n    if (!luaT_callbinTM(L, p1, p2, res, event)) {\n        switch (event) {\n            case TMS.TM_CONCAT:\n                return ldebug.luaG_concaterror(L, p1, p2);\n            case TMS.TM_BAND: case TMS.TM_BOR: case TMS.TM_BXOR:\n            case TMS.TM_SHL: case TMS.TM_SHR: case TMS.TM_BNOT: {\n                let n1 = lvm.tonumber(p1);\n                let n2 = lvm.tonumber(p2);\n                if (n1 !== false && n2 !== false)\n                    return ldebug.luaG_tointerror(L, p1, p2);\n                else\n                    return ldebug.luaG_opinterror(L, p1, p2, to_luastring(\"perform bitwise operation on\", true));\n            }\n            default:\n                return ldebug.luaG_opinterror(L, p1, p2, to_luastring(\"perform arithmetic on\", true));\n        }\n    }\n};\n\nconst luaT_callorderTM = function(L, p1, p2, event) {\n    let res = new lobject.TValue();\n    if (!luaT_callbinTM(L, p1, p2, res, event))\n        return null;\n    else\n        return !res.l_isfalse();\n};\n\nconst fasttm = function(l, et, e) {\n    return et === null ? null :\n        (et.flags & (1 << e)) ? null : luaT_gettm(et, e, l.l_G.tmname[e]);\n};\n\nconst luaT_gettm = function(events, event, ename) {\n    const tm = ltable.luaH_getstr(events, ename);\n    lua_assert(event <= TMS.TM_EQ);\n    if (tm.ttisnil()) {  /* no tag method? */\n        events.flags |= 1<<event;  /* cache this fact */\n        return null;\n    }\n    else return tm;\n};\n\nconst luaT_gettmbyobj = function(L, o, event) {\n    let mt;\n    switch(o.ttnov()) {\n        case LUA_TTABLE:\n        case LUA_TUSERDATA:\n            mt = o.value.metatable;\n            break;\n        default:\n            mt = L.l_G.mt[o.ttnov()];\n    }\n\n    return mt ? ltable.luaH_getstr(mt, L.l_G.tmname[event]) : lobject.luaO_nilobject;\n};\n\nmodule.exports.fasttm           = fasttm;\nmodule.exports.TMS              = TMS;\nmodule.exports.luaT_callTM      = luaT_callTM;\nmodule.exports.luaT_callbinTM   = luaT_callbinTM;\nmodule.exports.luaT_trybinTM    = luaT_trybinTM;\nmodule.exports.luaT_callorderTM = luaT_callorderTM;\nmodule.exports.luaT_gettm       = luaT_gettm;\nmodule.exports.luaT_gettmbyobj  = luaT_gettmbyobj;\nmodule.exports.luaT_init        = luaT_init;\nmodule.exports.luaT_objtypename = luaT_objtypename;\nmodule.exports.ttypename        = ttypename;\n","\"use strict\";\n\nconst defs   = require(\"./defs.js\");\nconst lapi   = require(\"./lapi.js\");\nconst ldebug = require(\"./ldebug.js\");\nconst ldo    = require(\"./ldo.js\");\nconst lstate = require(\"./lstate.js\");\n\nmodule.exports.LUA_AUTHORS             = defs.LUA_AUTHORS;\nmodule.exports.LUA_COPYRIGHT           = defs.LUA_COPYRIGHT;\nmodule.exports.LUA_ERRERR              = defs.thread_status.LUA_ERRERR;\nmodule.exports.LUA_ERRGCMM             = defs.thread_status.LUA_ERRGCMM;\nmodule.exports.LUA_ERRMEM              = defs.thread_status.LUA_ERRMEM;\nmodule.exports.LUA_ERRRUN              = defs.thread_status.LUA_ERRRUN;\nmodule.exports.LUA_ERRSYNTAX           = defs.thread_status.LUA_ERRSYNTAX;\nmodule.exports.LUA_HOOKCALL            = defs.LUA_HOOKCALL;\nmodule.exports.LUA_HOOKCOUNT           = defs.LUA_HOOKCOUNT;\nmodule.exports.LUA_HOOKLINE            = defs.LUA_HOOKLINE;\nmodule.exports.LUA_HOOKRET             = defs.LUA_HOOKRET;\nmodule.exports.LUA_HOOKTAILCALL        = defs.LUA_HOOKTAILCALL;\nmodule.exports.LUA_MASKCALL            = defs.LUA_MASKCALL;\nmodule.exports.LUA_MASKCOUNT           = defs.LUA_MASKCOUNT;\nmodule.exports.LUA_MASKLINE            = defs.LUA_MASKLINE;\nmodule.exports.LUA_MASKRET             = defs.LUA_MASKRET;\nmodule.exports.LUA_MINSTACK            = defs.LUA_MINSTACK;\nmodule.exports.LUA_MULTRET             = defs.LUA_MULTRET;\nmodule.exports.LUA_NUMTAGS             = defs.constant_types.LUA_NUMTAGS;\nmodule.exports.LUA_OK                  = defs.thread_status.LUA_OK;\nmodule.exports.LUA_OPADD               = defs.LUA_OPADD;\nmodule.exports.LUA_OPBAND              = defs.LUA_OPBAND;\nmodule.exports.LUA_OPBNOT              = defs.LUA_OPBNOT;\nmodule.exports.LUA_OPBOR               = defs.LUA_OPBOR;\nmodule.exports.LUA_OPBXOR              = defs.LUA_OPBXOR;\nmodule.exports.LUA_OPDIV               = defs.LUA_OPDIV;\nmodule.exports.LUA_OPEQ                = defs.LUA_OPEQ;\nmodule.exports.LUA_OPIDIV              = defs.LUA_OPIDIV;\nmodule.exports.LUA_OPLE                = defs.LUA_OPLE;\nmodule.exports.LUA_OPLT                = defs.LUA_OPLT;\nmodule.exports.LUA_OPMOD               = defs.LUA_OPMOD;\nmodule.exports.LUA_OPMUL               = defs.LUA_OPMUL;\nmodule.exports.LUA_OPPOW               = defs.LUA_OPPOW;\nmodule.exports.LUA_OPSHL               = defs.LUA_OPSHL;\nmodule.exports.LUA_OPSHR               = defs.LUA_OPSHR;\nmodule.exports.LUA_OPSUB               = defs.LUA_OPSUB;\nmodule.exports.LUA_OPUNM               = defs.LUA_OPUNM;\nmodule.exports.LUA_REGISTRYINDEX       = defs.LUA_REGISTRYINDEX;\nmodule.exports.LUA_RELEASE             = defs.LUA_RELEASE;\nmodule.exports.LUA_RIDX_GLOBALS        = defs.LUA_RIDX_GLOBALS;\nmodule.exports.LUA_RIDX_LAST           = defs.LUA_RIDX_LAST;\nmodule.exports.LUA_RIDX_MAINTHREAD     = defs.LUA_RIDX_MAINTHREAD;\nmodule.exports.LUA_SIGNATURE           = defs.LUA_SIGNATURE;\nmodule.exports.LUA_TNONE               = defs.constant_types.LUA_TNONE;\nmodule.exports.LUA_TNIL                = defs.constant_types.LUA_TNIL;\nmodule.exports.LUA_TBOOLEAN            = defs.constant_types.LUA_TBOOLEAN;\nmodule.exports.LUA_TLIGHTUSERDATA      = defs.constant_types.LUA_TLIGHTUSERDATA;\nmodule.exports.LUA_TNUMBER             = defs.constant_types.LUA_TNUMBER;\nmodule.exports.LUA_TSTRING             = defs.constant_types.LUA_TSTRING;\nmodule.exports.LUA_TTABLE              = defs.constant_types.LUA_TTABLE;\nmodule.exports.LUA_TFUNCTION           = defs.constant_types.LUA_TFUNCTION;\nmodule.exports.LUA_TUSERDATA           = defs.constant_types.LUA_TUSERDATA;\nmodule.exports.LUA_TTHREAD             = defs.constant_types.LUA_TTHREAD;\nmodule.exports.LUA_VERSION             = defs.LUA_VERSION;\nmodule.exports.LUA_VERSION_MAJOR       = defs.LUA_VERSION_MAJOR;\nmodule.exports.LUA_VERSION_MINOR       = defs.LUA_VERSION_MINOR;\nmodule.exports.LUA_VERSION_NUM         = defs.LUA_VERSION_NUM;\nmodule.exports.LUA_VERSION_RELEASE     = defs.LUA_VERSION_RELEASE;\nmodule.exports.LUA_YIELD               = defs.thread_status.LUA_YIELD;\nmodule.exports.lua_Debug               = defs.lua_Debug;\nmodule.exports.lua_upvalueindex        = defs.lua_upvalueindex;\nmodule.exports.lua_absindex            = lapi.lua_absindex;\nmodule.exports.lua_arith               = lapi.lua_arith;\nmodule.exports.lua_atpanic             = lapi.lua_atpanic;\nmodule.exports.lua_atnativeerror       = lapi.lua_atnativeerror;\nmodule.exports.lua_call                = lapi.lua_call;\nmodule.exports.lua_callk               = lapi.lua_callk;\nmodule.exports.lua_checkstack          = lapi.lua_checkstack;\nmodule.exports.lua_close               = lstate.lua_close;\nmodule.exports.lua_compare             = lapi.lua_compare;\nmodule.exports.lua_concat              = lapi.lua_concat;\nmodule.exports.lua_copy                = lapi.lua_copy;\nmodule.exports.lua_createtable         = lapi.lua_createtable;\nmodule.exports.lua_dump                = lapi.lua_dump;\nmodule.exports.lua_error               = lapi.lua_error;\nmodule.exports.lua_gc                  = lapi.lua_gc;\nmodule.exports.lua_getallocf           = lapi.lua_getallocf;\nmodule.exports.lua_getextraspace       = lapi.lua_getextraspace;\nmodule.exports.lua_getfield            = lapi.lua_getfield;\nmodule.exports.lua_getglobal           = lapi.lua_getglobal;\nmodule.exports.lua_gethook             = ldebug.lua_gethook;\nmodule.exports.lua_gethookcount        = ldebug.lua_gethookcount;\nmodule.exports.lua_gethookmask         = ldebug.lua_gethookmask;\nmodule.exports.lua_geti                = lapi.lua_geti;\nmodule.exports.lua_getinfo             = ldebug.lua_getinfo;\nmodule.exports.lua_getlocal            = ldebug.lua_getlocal;\nmodule.exports.lua_getmetatable        = lapi.lua_getmetatable;\nmodule.exports.lua_getstack            = ldebug.lua_getstack;\nmodule.exports.lua_gettable            = lapi.lua_gettable;\nmodule.exports.lua_gettop              = lapi.lua_gettop;\nmodule.exports.lua_getupvalue          = lapi.lua_getupvalue;\nmodule.exports.lua_getuservalue        = lapi.lua_getuservalue;\nmodule.exports.lua_insert              = lapi.lua_insert;\nmodule.exports.lua_isboolean           = lapi.lua_isboolean;\nmodule.exports.lua_iscfunction         = lapi.lua_iscfunction;\nmodule.exports.lua_isfunction          = lapi.lua_isfunction;\nmodule.exports.lua_isinteger           = lapi.lua_isinteger;\nmodule.exports.lua_islightuserdata     = lapi.lua_islightuserdata;\nmodule.exports.lua_isnil               = lapi.lua_isnil;\nmodule.exports.lua_isnone              = lapi.lua_isnone;\nmodule.exports.lua_isnoneornil         = lapi.lua_isnoneornil;\nmodule.exports.lua_isnumber            = lapi.lua_isnumber;\nmodule.exports.lua_isproxy             = lapi.lua_isproxy;\nmodule.exports.lua_isstring            = lapi.lua_isstring;\nmodule.exports.lua_istable             = lapi.lua_istable;\nmodule.exports.lua_isthread            = lapi.lua_isthread;\nmodule.exports.lua_isuserdata          = lapi.lua_isuserdata;\nmodule.exports.lua_isyieldable         = ldo.lua_isyieldable;\nmodule.exports.lua_len                 = lapi.lua_len;\nmodule.exports.lua_load                = lapi.lua_load;\nmodule.exports.lua_newstate            = lstate.lua_newstate;\nmodule.exports.lua_newtable            = lapi.lua_newtable;\nmodule.exports.lua_newthread           = lstate.lua_newthread;\nmodule.exports.lua_newuserdata         = lapi.lua_newuserdata;\nmodule.exports.lua_next                = lapi.lua_next;\nmodule.exports.lua_pcall               = lapi.lua_pcall;\nmodule.exports.lua_pcallk              = lapi.lua_pcallk;\nmodule.exports.lua_pop                 = lapi.lua_pop;\nmodule.exports.lua_pushboolean         = lapi.lua_pushboolean;\nmodule.exports.lua_pushcclosure        = lapi.lua_pushcclosure;\nmodule.exports.lua_pushcfunction       = lapi.lua_pushcfunction;\nmodule.exports.lua_pushfstring         = lapi.lua_pushfstring;\nmodule.exports.lua_pushglobaltable     = lapi.lua_pushglobaltable;\nmodule.exports.lua_pushinteger         = lapi.lua_pushinteger;\nmodule.exports.lua_pushjsclosure       = lapi.lua_pushjsclosure;\nmodule.exports.lua_pushjsfunction      = lapi.lua_pushjsfunction;\nmodule.exports.lua_pushlightuserdata   = lapi.lua_pushlightuserdata;\nmodule.exports.lua_pushliteral         = lapi.lua_pushliteral;\nmodule.exports.lua_pushlstring         = lapi.lua_pushlstring;\nmodule.exports.lua_pushnil             = lapi.lua_pushnil;\nmodule.exports.lua_pushnumber          = lapi.lua_pushnumber;\nmodule.exports.lua_pushstring          = lapi.lua_pushstring;\nmodule.exports.lua_pushthread          = lapi.lua_pushthread;\nmodule.exports.lua_pushvalue           = lapi.lua_pushvalue;\nmodule.exports.lua_pushvfstring        = lapi.lua_pushvfstring;\nmodule.exports.lua_rawequal            = lapi.lua_rawequal;\nmodule.exports.lua_rawget              = lapi.lua_rawget;\nmodule.exports.lua_rawgeti             = lapi.lua_rawgeti;\nmodule.exports.lua_rawgetp             = lapi.lua_rawgetp;\nmodule.exports.lua_rawlen              = lapi.lua_rawlen;\nmodule.exports.lua_rawset              = lapi.lua_rawset;\nmodule.exports.lua_rawseti             = lapi.lua_rawseti;\nmodule.exports.lua_rawsetp             = lapi.lua_rawsetp;\nmodule.exports.lua_register            = lapi.lua_register;\nmodule.exports.lua_remove              = lapi.lua_remove;\nmodule.exports.lua_replace             = lapi.lua_replace;\nmodule.exports.lua_resume              = ldo.lua_resume;\nmodule.exports.lua_rotate              = lapi.lua_rotate;\nmodule.exports.lua_setallof            = ldo.lua_setallof;\nmodule.exports.lua_setfield            = lapi.lua_setfield;\nmodule.exports.lua_setglobal           = lapi.lua_setglobal;\nmodule.exports.lua_sethook             = ldebug.lua_sethook;\nmodule.exports.lua_seti                = lapi.lua_seti;\nmodule.exports.lua_setlocal            = ldebug.lua_setlocal;\nmodule.exports.lua_setmetatable        = lapi.lua_setmetatable;\nmodule.exports.lua_settable            = lapi.lua_settable;\nmodule.exports.lua_settop              = lapi.lua_settop;\nmodule.exports.lua_setupvalue          = lapi.lua_setupvalue;\nmodule.exports.lua_setuservalue        = lapi.lua_setuservalue;\nmodule.exports.lua_status              = lapi.lua_status;\nmodule.exports.lua_stringtonumber      = lapi.lua_stringtonumber;\nmodule.exports.lua_toboolean           = lapi.lua_toboolean;\nmodule.exports.lua_todataview          = lapi.lua_todataview;\nmodule.exports.lua_tointeger           = lapi.lua_tointeger;\nmodule.exports.lua_tointegerx          = lapi.lua_tointegerx;\nmodule.exports.lua_tojsstring          = lapi.lua_tojsstring;\nmodule.exports.lua_tolstring           = lapi.lua_tolstring;\nmodule.exports.lua_tonumber            = lapi.lua_tonumber;\nmodule.exports.lua_tonumberx           = lapi.lua_tonumberx;\nmodule.exports.lua_topointer           = lapi.lua_topointer;\nmodule.exports.lua_toproxy             = lapi.lua_toproxy;\nmodule.exports.lua_tostring            = lapi.lua_tostring;\nmodule.exports.lua_tothread            = lapi.lua_tothread;\nmodule.exports.lua_touserdata          = lapi.lua_touserdata;\nmodule.exports.lua_type                = lapi.lua_type;\nmodule.exports.lua_typename            = lapi.lua_typename;\nmodule.exports.lua_upvalueid           = lapi.lua_upvalueid;\nmodule.exports.lua_upvaluejoin         = lapi.lua_upvaluejoin;\nmodule.exports.lua_version             = lapi.lua_version;\nmodule.exports.lua_xmove               = lapi.lua_xmove;\nmodule.exports.lua_yield               = ldo.lua_yield;\nmodule.exports.lua_yieldk              = ldo.lua_yieldk;\nmodule.exports.lua_tocfunction         = lapi.lua_tocfunction;\n","\"use strict\";\n\nconst conf = (process.env.FENGARICONF ? JSON.parse(process.env.FENGARICONF) : {});\n\nconst {\n    LUA_VERSION_MAJOR,\n    LUA_VERSION_MINOR,\n    to_luastring\n} = require('./defs.js');\n\n/*\n** LUA_PATH_SEP is the character that separates templates in a path.\n** LUA_PATH_MARK is the string that marks the substitution points in a\n** template.\n** LUA_EXEC_DIR in a Windows path is replaced by the executable's\n** directory.\n*/\nconst LUA_PATH_SEP  = \";\";\nmodule.exports.LUA_PATH_SEP = LUA_PATH_SEP;\n\nconst LUA_PATH_MARK = \"?\";\nmodule.exports.LUA_PATH_MARK = LUA_PATH_MARK;\n\nconst LUA_EXEC_DIR  = \"!\";\nmodule.exports.LUA_EXEC_DIR = LUA_EXEC_DIR;\n\n/*\n@@ LUA_PATH_DEFAULT is the default path that Lua uses to look for\n** Lua libraries.\n@@ LUA_JSPATH_DEFAULT is the default path that Lua uses to look for\n** JS libraries.\n** CHANGE them if your machine has a non-conventional directory\n** hierarchy or if you want to install your libraries in\n** non-conventional directories.\n*/\nconst LUA_VDIR = LUA_VERSION_MAJOR + \".\" + LUA_VERSION_MINOR;\nmodule.exports.LUA_VDIR = LUA_VDIR;\n\nif (typeof process === \"undefined\") {\n    const LUA_DIRSEP = \"/\";\n    module.exports.LUA_DIRSEP = LUA_DIRSEP;\n\n    const LUA_LDIR = \"./lua/\" + LUA_VDIR + \"/\";\n    module.exports.LUA_LDIR = LUA_LDIR;\n\n    const LUA_JSDIR = LUA_LDIR;\n    module.exports.LUA_JSDIR = LUA_JSDIR;\n\n    const LUA_PATH_DEFAULT = to_luastring(\n        LUA_LDIR + \"?.lua;\" + LUA_LDIR + \"?/init.lua;\" +\n        /* LUA_JSDIR excluded as it is equal to LUA_LDIR */\n        \"./?.lua;./?/init.lua\"\n    );\n    module.exports.LUA_PATH_DEFAULT = LUA_PATH_DEFAULT;\n\n    const LUA_JSPATH_DEFAULT = to_luastring(\n        LUA_JSDIR + \"?.js;\" + LUA_JSDIR + \"loadall.js;./?.js\"\n    );\n    module.exports.LUA_JSPATH_DEFAULT = LUA_JSPATH_DEFAULT;\n} else if (require('os').platform() === 'win32') {\n    const LUA_DIRSEP = \"\\\\\";\n    module.exports.LUA_DIRSEP = LUA_DIRSEP;\n\n    /*\n    ** In Windows, any exclamation mark ('!') in the path is replaced by the\n    ** path of the directory of the executable file of the current process.\n    */\n    const LUA_LDIR = \"!\\\\lua\\\\\";\n    module.exports.LUA_LDIR = LUA_LDIR;\n\n    const LUA_JSDIR = \"!\\\\\";\n    module.exports.LUA_JSDIR = LUA_JSDIR;\n\n    const LUA_SHRDIR = \"!\\\\..\\\\share\\\\lua\\\\\" + LUA_VDIR + \"\\\\\";\n    module.exports.LUA_SHRDIR = LUA_SHRDIR;\n\n    const LUA_PATH_DEFAULT = to_luastring(\n        LUA_LDIR + \"?.lua;\" + LUA_LDIR + \"?\\\\init.lua;\" +\n        LUA_JSDIR + \"?.lua;\" + LUA_JSDIR + \"?\\\\init.lua;\" +\n        LUA_SHRDIR + \"?.lua;\" + LUA_SHRDIR + \"?\\\\init.lua;\" +\n        \".\\\\?.lua;.\\\\?\\\\init.lua\"\n    );\n    module.exports.LUA_PATH_DEFAULT = LUA_PATH_DEFAULT;\n\n    const LUA_JSPATH_DEFAULT = to_luastring(\n        LUA_JSDIR + \"?.js;\" +\n        LUA_JSDIR + \"..\\\\share\\\\lua\\\\\" + LUA_VDIR + \"\\\\?.js;\" +\n        LUA_JSDIR + \"loadall.js;.\\\\?.js\"\n    );\n    module.exports.LUA_JSPATH_DEFAULT = LUA_JSPATH_DEFAULT;\n} else {\n    const LUA_DIRSEP = \"/\";\n    module.exports.LUA_DIRSEP = LUA_DIRSEP;\n\n    const LUA_ROOT = \"/usr/local/\";\n    module.exports.LUA_ROOT = LUA_ROOT;\n    const LUA_ROOT2 = \"/usr/\";\n\n    const LUA_LDIR = LUA_ROOT + \"share/lua/\" + LUA_VDIR + \"/\";\n    const LUA_LDIR2 = LUA_ROOT2 + \"share/lua/\" + LUA_VDIR + \"/\";\n    module.exports.LUA_LDIR = LUA_LDIR;\n\n    const LUA_JSDIR = LUA_LDIR;\n    module.exports.LUA_JSDIR = LUA_JSDIR;\n    const LUA_JSDIR2 = LUA_LDIR2;\n\n    const LUA_PATH_DEFAULT = to_luastring(\n        LUA_LDIR + \"?.lua;\" + LUA_LDIR + \"?/init.lua;\" +\n        LUA_LDIR2 + \"?.lua;\" + LUA_LDIR2 + \"?/init.lua;\" +\n        /* LUA_JSDIR(2) excluded as it is equal to LUA_LDIR(2) */\n        \"./?.lua;./?/init.lua\"\n    );\n    module.exports.LUA_PATH_DEFAULT = LUA_PATH_DEFAULT;\n\n    const LUA_JSPATH_DEFAULT = to_luastring(\n        LUA_JSDIR + \"?.js;\" + LUA_JSDIR + \"loadall.js;\" +\n        LUA_JSDIR2 + \"?.js;\" + LUA_JSDIR2 + \"loadall.js;\" +\n        \"./?.js\"\n    );\n    module.exports.LUA_JSPATH_DEFAULT = LUA_JSPATH_DEFAULT;\n}\n\n/*\n@@ LUA_COMPAT_FLOATSTRING makes Lua format integral floats without a\n@@ a float mark ('.0').\n** This macro is not on by default even in compatibility mode,\n** because this is not really an incompatibility.\n*/\nconst LUA_COMPAT_FLOATSTRING = conf.LUA_COMPAT_FLOATSTRING || false;\n\nconst LUA_MAXINTEGER = 2147483647;\nconst LUA_MININTEGER = -2147483648;\n\n/*\n@@ LUAI_MAXSTACK limits the size of the Lua stack.\n** CHANGE it if you need a different limit. This limit is arbitrary;\n** its only purpose is to stop Lua from consuming unlimited stack\n** space (and to reserve some numbers for pseudo-indices).\n*/\nconst LUAI_MAXSTACK = conf.LUAI_MAXSTACK || 1000000;\n\n/*\n@@ LUA_IDSIZE gives the maximum size for the description of the source\n@@ of a function in debug information.\n** CHANGE it if you want a different size.\n*/\nconst LUA_IDSIZE = conf.LUA_IDSIZE || (60-1); /* fengari uses 1 less than lua as we don't embed the null byte */\n\nconst lua_integer2str = function(n) {\n    return String(n); /* should match behaviour of LUA_INTEGER_FMT */\n};\n\nconst lua_number2str = function(n) {\n    return String(Number(n.toPrecision(14))); /* should match behaviour of LUA_NUMBER_FMT */\n};\n\nconst lua_numbertointeger = function(n) {\n    return n >= LUA_MININTEGER && n < -LUA_MININTEGER ? n : false;\n};\n\nconst LUA_INTEGER_FRMLEN = \"\";\nconst LUA_NUMBER_FRMLEN = \"\";\n\nconst LUA_INTEGER_FMT = `%${LUA_INTEGER_FRMLEN}d`;\nconst LUA_NUMBER_FMT  = \"%.14g\";\n\nconst lua_getlocaledecpoint = function() {\n    /* we hard-code the decimal point to '.' as a user cannot change the\n       locale in most JS environments, and in that you can, a multi-byte\n       locale is common.\n    */\n    return 46 /* '.'.charCodeAt(0) */;\n};\n\nconst luai_apicheck = function(l, e) {\n    if (!e) throw Error(e);\n};\n\n/*\n@@ LUAL_BUFFERSIZE is the buffer size used by the lauxlib buffer system.\n*/\nconst LUAL_BUFFERSIZE = conf.LUAL_BUFFERSIZE || 8192;\n\n// See: http://croquetweak.blogspot.fr/2014/08/deconstructing-floats-frexp-and-ldexp.html\nconst frexp = function(value) {\n    if (value === 0) return [value, 0];\n    var data = new DataView(new ArrayBuffer(8));\n    data.setFloat64(0, value);\n    var bits = (data.getUint32(0) >>> 20) & 0x7FF;\n    if (bits === 0) { // denormal\n        data.setFloat64(0, value * Math.pow(2, 64));  // exp + 64\n        bits = ((data.getUint32(0) >>> 20) & 0x7FF) - 64;\n    }\n    var exponent = bits - 1022;\n    var mantissa = ldexp(value, -exponent);\n    return [mantissa, exponent];\n};\n\nconst ldexp = function(mantissa, exponent) {\n    var steps = Math.min(3, Math.ceil(Math.abs(exponent) / 1023));\n    var result = mantissa;\n    for (var i = 0; i < steps; i++)\n        result *= Math.pow(2, Math.floor((exponent + i) / steps));\n    return result;\n};\n\nmodule.exports.LUAI_MAXSTACK          = LUAI_MAXSTACK;\nmodule.exports.LUA_COMPAT_FLOATSTRING = LUA_COMPAT_FLOATSTRING;\nmodule.exports.LUA_IDSIZE             = LUA_IDSIZE;\nmodule.exports.LUA_INTEGER_FMT        = LUA_INTEGER_FMT;\nmodule.exports.LUA_INTEGER_FRMLEN     = LUA_INTEGER_FRMLEN;\nmodule.exports.LUA_MAXINTEGER         = LUA_MAXINTEGER;\nmodule.exports.LUA_MININTEGER         = LUA_MININTEGER;\nmodule.exports.LUA_NUMBER_FMT         = LUA_NUMBER_FMT;\nmodule.exports.LUA_NUMBER_FRMLEN      = LUA_NUMBER_FRMLEN;\nmodule.exports.LUAL_BUFFERSIZE        = LUAL_BUFFERSIZE;\nmodule.exports.frexp                  = frexp;\nmodule.exports.ldexp                  = ldexp;\nmodule.exports.lua_getlocaledecpoint  = lua_getlocaledecpoint;\nmodule.exports.lua_integer2str        = lua_integer2str;\nmodule.exports.lua_number2str         = lua_number2str;\nmodule.exports.lua_numbertointeger    = lua_numbertointeger;\nmodule.exports.luai_apicheck          = luai_apicheck;\n","\"use strict\";\n\nconst {\n    LUA_VERSION_MAJOR,\n    LUA_VERSION_MINOR\n} = require(\"./lua.js\");\n\nconst LUA_VERSUFFIX = \"_\" + LUA_VERSION_MAJOR + \"_\" + LUA_VERSION_MINOR;\nmodule.exports.LUA_VERSUFFIX = LUA_VERSUFFIX;\n\nmodule.exports.lua_assert = function(c) {};\n\nmodule.exports.luaopen_base = require(\"./lbaselib.js\").luaopen_base;\n\nconst LUA_COLIBNAME = \"coroutine\";\nmodule.exports.LUA_COLIBNAME = LUA_COLIBNAME;\nmodule.exports.luaopen_coroutine = require(\"./lcorolib.js\").luaopen_coroutine;\n\nconst LUA_TABLIBNAME = \"table\";\nmodule.exports.LUA_TABLIBNAME = LUA_TABLIBNAME;\nmodule.exports.luaopen_table = require(\"./ltablib.js\").luaopen_table;\n\nif (typeof process !== \"undefined\") {\n    const LUA_IOLIBNAME = \"io\";\n    module.exports.LUA_IOLIBNAME = LUA_IOLIBNAME;\n    module.exports.luaopen_io = require(\"./liolib.js\").luaopen_io;\n}\n\nconst LUA_OSLIBNAME = \"os\";\nmodule.exports.LUA_OSLIBNAME = LUA_OSLIBNAME;\nmodule.exports.luaopen_os = require(\"./loslib.js\").luaopen_os;\n\nconst LUA_STRLIBNAME = \"string\";\nmodule.exports.LUA_STRLIBNAME = LUA_STRLIBNAME;\nmodule.exports.luaopen_string = require(\"./lstrlib.js\").luaopen_string;\n\nconst LUA_UTF8LIBNAME = \"utf8\";\nmodule.exports.LUA_UTF8LIBNAME = LUA_UTF8LIBNAME;\nmodule.exports.luaopen_utf8 = require(\"./lutf8lib.js\").luaopen_utf8;\n\nconst LUA_BITLIBNAME = \"bit32\";\nmodule.exports.LUA_BITLIBNAME = LUA_BITLIBNAME;\n// module.exports.luaopen_bit32 = require(\"./lbitlib.js\").luaopen_bit32;\n\nconst LUA_MATHLIBNAME = \"math\";\nmodule.exports.LUA_MATHLIBNAME = LUA_MATHLIBNAME;\nmodule.exports.luaopen_math = require(\"./lmathlib.js\").luaopen_math;\n\nconst LUA_DBLIBNAME = \"debug\";\nmodule.exports.LUA_DBLIBNAME = LUA_DBLIBNAME;\nmodule.exports.luaopen_debug = require(\"./ldblib.js\").luaopen_debug;\n\nconst LUA_LOADLIBNAME = \"package\";\nmodule.exports.LUA_LOADLIBNAME = LUA_LOADLIBNAME;\nmodule.exports.luaopen_package = require(\"./loadlib.js\").luaopen_package;\n\nconst LUA_FENGARILIBNAME = \"fengari\";\nmodule.exports.LUA_FENGARILIBNAME = LUA_FENGARILIBNAME;\nmodule.exports.luaopen_fengari = require(\"./fengarilib.js\").luaopen_fengari;\n\nconst linit = require('./linit.js');\nmodule.exports.luaL_openlibs = linit.luaL_openlibs;\n","\"use strict\";\n\nconst {\n    LUA_SIGNATURE,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR\n    },\n    thread_status: { LUA_ERRSYNTAX },\n    is_luastring,\n    luastring_eq,\n    to_luastring\n} = require('./defs.js');\nconst ldo      = require('./ldo.js');\nconst lfunc    = require('./lfunc.js');\nconst lobject  = require('./lobject.js');\nconst {\n    MAXARG_sBx,\n    POS_A,\n    POS_Ax,\n    POS_B,\n    POS_Bx,\n    POS_C,\n    POS_OP,\n    SIZE_A,\n    SIZE_Ax,\n    SIZE_B,\n    SIZE_Bx,\n    SIZE_C,\n    SIZE_OP\n} = require('./lopcodes.js');\nconst { lua_assert } = require(\"./llimits.js\");\nconst { luaS_bless } = require('./lstring.js');\nconst {\n    luaZ_read,\n    ZIO\n} = require('./lzio.js');\n\nlet LUAC_DATA = [0x19, 0x93, 13, 10, 0x1a, 10];\n\nclass BytecodeParser {\n\n    constructor(L, Z, name) {\n        this.intSize = 4;\n        this.size_tSize = 4;\n        this.instructionSize = 4;\n        this.integerSize = 4;\n        this.numberSize = 8;\n\n        lua_assert(Z instanceof ZIO, \"BytecodeParser only operates on a ZIO\");\n        lua_assert(is_luastring(name));\n\n        if (name[0] === 64 /* ('@').charCodeAt(0) */ || name[0] === 61 /* ('=').charCodeAt(0) */)\n            this.name = name.subarray(1);\n        else if (name[0] == LUA_SIGNATURE[0])\n            this.name = to_luastring(\"binary string\", true);\n        else\n            this.name = name;\n\n        this.L = L;\n        this.Z = Z;\n\n        // Used to do buffer to number conversions\n        this.arraybuffer = new ArrayBuffer(\n            Math.max(this.intSize, this.size_tSize, this.instructionSize, this.integerSize, this.numberSize)\n        );\n        this.dv = new DataView(this.arraybuffer);\n        this.u8 = new Uint8Array(this.arraybuffer);\n    }\n\n    read(size) {\n        let u8 = new Uint8Array(size);\n        if(luaZ_read(this.Z, u8, 0, size) !== 0)\n            this.error(\"truncated\");\n        return u8;\n    }\n\n    LoadByte() {\n        if (luaZ_read(this.Z, this.u8, 0, 1) !== 0)\n            this.error(\"truncated\");\n        return this.u8[0];\n    }\n\n    LoadInt() {\n        if (luaZ_read(this.Z, this.u8, 0, this.intSize) !== 0)\n            this.error(\"truncated\");\n        return this.dv.getInt32(0, true);\n    }\n\n    LoadNumber() {\n        if (luaZ_read(this.Z, this.u8, 0, this.numberSize) !== 0)\n            this.error(\"truncated\");\n        return this.dv.getFloat64(0, true);\n    }\n\n    LoadInteger() {\n        if (luaZ_read(this.Z, this.u8, 0, this.integerSize) !== 0)\n            this.error(\"truncated\");\n        return this.dv.getInt32(0, true);\n    }\n\n    LoadSize_t() {\n        return this.LoadInteger();\n    }\n\n    LoadString() {\n        let size = this.LoadByte();\n        if (size === 0xFF)\n            size = this.LoadSize_t();\n        if (size === 0)\n            return null;\n        return luaS_bless(this.L, this.read(size-1));\n    }\n\n    /* creates a mask with 'n' 1 bits at position 'p' */\n    static MASK1(n, p) {\n        return ((~((~0)<<(n)))<<(p));\n    }\n\n    LoadCode(f) {\n        let n = this.LoadInt();\n        let p = BytecodeParser;\n\n        for (let i = 0; i < n; i++) {\n            if (luaZ_read(this.Z, this.u8, 0, this.instructionSize) !== 0)\n                this.error(\"truncated\");\n            let ins = this.dv.getUint32(0, true);\n            f.code[i] = {\n                code:   ins,\n                opcode: (ins >> POS_OP) & p.MASK1(SIZE_OP, 0),\n                A:      (ins >> POS_A)  & p.MASK1(SIZE_A,  0),\n                B:      (ins >> POS_B)  & p.MASK1(SIZE_B,  0),\n                C:      (ins >> POS_C)  & p.MASK1(SIZE_C,  0),\n                Bx:     (ins >> POS_Bx) & p.MASK1(SIZE_Bx, 0),\n                Ax:     (ins >> POS_Ax) & p.MASK1(SIZE_Ax, 0),\n                sBx:    ((ins >> POS_Bx) & p.MASK1(SIZE_Bx, 0)) - MAXARG_sBx\n            };\n        }\n    }\n\n    LoadConstants(f) {\n        let n = this.LoadInt();\n\n        for (let i = 0; i < n; i++) {\n            let t = this.LoadByte();\n\n            switch (t) {\n                case LUA_TNIL:\n                    f.k.push(new lobject.TValue(LUA_TNIL, null));\n                    break;\n                case LUA_TBOOLEAN:\n                    f.k.push(new lobject.TValue(LUA_TBOOLEAN, this.LoadByte() !== 0));\n                    break;\n                case LUA_TNUMFLT:\n                    f.k.push(new lobject.TValue(LUA_TNUMFLT, this.LoadNumber()));\n                    break;\n                case LUA_TNUMINT:\n                    f.k.push(new lobject.TValue(LUA_TNUMINT, this.LoadInteger()));\n                    break;\n                case LUA_TSHRSTR:\n                case LUA_TLNGSTR:\n                    f.k.push(new lobject.TValue(LUA_TLNGSTR, this.LoadString()));\n                    break;\n                default:\n                    this.error(`unrecognized constant '${t}'`);\n            }\n        }\n    }\n\n    LoadProtos(f) {\n        let n = this.LoadInt();\n\n        for (let i = 0; i < n; i++) {\n            f.p[i] = new lfunc.Proto(this.L);\n            this.LoadFunction(f.p[i], f.source);\n        }\n    }\n\n    LoadUpvalues(f) {\n        let n = this.LoadInt();\n\n        for (let i = 0; i < n; i++) {\n            f.upvalues[i] = {\n                name:    null,\n                instack: this.LoadByte(),\n                idx:     this.LoadByte()\n            };\n        }\n    }\n\n    LoadDebug(f) {\n        let n = this.LoadInt();\n        for (let i = 0; i < n; i++)\n            f.lineinfo[i] = this.LoadInt();\n\n        n = this.LoadInt();\n        for (let i = 0; i < n; i++) {\n            f.locvars[i] = {\n                varname: this.LoadString(),\n                startpc: this.LoadInt(),\n                endpc:   this.LoadInt()\n            };\n        }\n\n        n = this.LoadInt();\n        for (let i = 0; i < n; i++) {\n            f.upvalues[i].name = this.LoadString();\n        }\n    }\n\n    LoadFunction(f, psource) {\n        f.source = this.LoadString();\n        if (f.source === null)  /* no source in dump? */\n            f.source = psource;  /* reuse parent's source */\n        f.linedefined = this.LoadInt();\n        f.lastlinedefined = this.LoadInt();\n        f.numparams = this.LoadByte();\n        f.is_vararg = this.LoadByte() !== 0;\n        f.maxstacksize = this.LoadByte();\n        this.LoadCode(f);\n        this.LoadConstants(f);\n        this.LoadUpvalues(f);\n        this.LoadProtos(f);\n        this.LoadDebug(f);\n    }\n\n    checkliteral(s, msg) {\n        let buff = this.read(s.length);\n        if (!luastring_eq(buff, s))\n            this.error(msg);\n    }\n\n    checkHeader() {\n        this.checkliteral(LUA_SIGNATURE.subarray(1), \"not a\"); /* 1st char already checked */\n\n        if (this.LoadByte() !== 0x53)\n            this.error(\"version mismatch in\");\n\n        if (this.LoadByte() !== 0)\n            this.error(\"format mismatch in\");\n\n        this.checkliteral(LUAC_DATA, \"corrupted\");\n\n        this.intSize         = this.LoadByte();\n        this.size_tSize      = this.LoadByte();\n        this.instructionSize = this.LoadByte();\n        this.integerSize     = this.LoadByte();\n        this.numberSize      = this.LoadByte();\n\n        this.checksize(this.intSize, 4, \"int\");\n        this.checksize(this.size_tSize, 4, \"size_t\");\n        this.checksize(this.instructionSize, 4, \"instruction\");\n        this.checksize(this.integerSize, 4, \"integer\");\n        this.checksize(this.numberSize, 8, \"number\");\n\n        if (this.LoadInteger() !== 0x5678)\n            this.error(\"endianness mismatch in\");\n\n        if (this.LoadNumber() !== 370.5)\n            this.error(\"float format mismatch in\");\n\n    }\n\n    error(why) {\n        lobject.luaO_pushfstring(this.L, to_luastring(\"%s: %s precompiled chunk\"), this.name, to_luastring(why));\n        ldo.luaD_throw(this.L, LUA_ERRSYNTAX);\n    }\n\n    checksize(byte, size, tname) {\n        if (byte !== size)\n            this.error(`${tname} size mismatch in`);\n    }\n}\n\nconst luaU_undump = function(L, Z, name) {\n    let S = new BytecodeParser(L, Z, name);\n    S.checkHeader();\n    let cl = lfunc.luaF_newLclosure(L, S.LoadByte());\n    ldo.luaD_inctop(L);\n    L.stack[L.top-1].setclLvalue(cl);\n    cl.p = new lfunc.Proto(L);\n    S.LoadFunction(cl.p, null);\n    lua_assert(cl.nupvalues === cl.p.upvalues.length);\n    /* luai_verifycode */\n    return cl;\n};\n\nmodule.exports.luaU_undump = luaU_undump;\n","\"use strict\";\n\nconst {\n    lua_gettop,\n    lua_pushcfunction,\n    lua_pushfstring,\n    lua_pushinteger,\n    lua_pushnil,\n    lua_pushstring,\n    lua_pushvalue,\n    lua_setfield,\n    lua_tointeger\n} = require('./lua.js');\nconst {\n    luaL_Buffer,\n    luaL_addvalue,\n    luaL_argcheck,\n    luaL_buffinit,\n    luaL_checkinteger,\n    luaL_checkstack,\n    luaL_checkstring,\n    luaL_error,\n    luaL_newlib,\n    luaL_optinteger,\n    luaL_pushresult\n} = require('./lauxlib.js');\nconst {\n    luastring_of,\n    to_luastring\n} = require(\"./fengaricore.js\");\n\nconst MAXUNICODE = 0x10FFFF;\n\nconst iscont = function(p) {\n    let c = p & 0xC0;\n    return c === 0x80;\n};\n\n/* translate a relative string position: negative means back from end */\nconst u_posrelat = function(pos, len) {\n    if (pos >= 0) return pos;\n    else if (0 - pos > len) return 0;\n    else return len + pos + 1;\n};\n\n/*\n** Decode one UTF-8 sequence, returning NULL if byte sequence is invalid.\n*/\nconst limits = [0xFF, 0x7F, 0x7FF, 0xFFFF];\nconst utf8_decode = function(s, pos) {\n    let c = s[pos];\n    let res = 0;  /* final result */\n    if (c < 0x80)  /* ascii? */\n        res = c;\n    else {\n        let count = 0;  /* to count number of continuation bytes */\n        while (c & 0x40) {  /* still have continuation bytes? */\n            let cc = s[pos + (++count)];  /* read next byte */\n            if ((cc & 0xC0) !== 0x80)  /* not a continuation byte? */\n                return null;  /* invalid byte sequence */\n            res = (res << 6) | (cc & 0x3F);  /* add lower 6 bits from cont. byte */\n            c <<= 1;  /* to test next bit */\n        }\n        res |= ((c & 0x7F) << (count * 5));  /* add first byte */\n        if (count > 3 || res > MAXUNICODE || res <= limits[count])\n            return null;  /* invalid byte sequence */\n        pos += count;  /* skip continuation bytes read */\n    }\n\n    return {\n        code: res,\n        pos: pos + 1\n    };\n};\n\n/*\n** utf8len(s [, i [, j]]) --> number of characters that start in the\n** range [i,j], or nil + current position if 's' is not well formed in\n** that interval\n*/\nconst utflen = function(L) {\n    let n = 0;\n    let s = luaL_checkstring(L, 1);\n    let len = s.length;\n    let posi = u_posrelat(luaL_optinteger(L, 2, 1), len);\n    let posj = u_posrelat(luaL_optinteger(L, 3, -1), len);\n\n    luaL_argcheck(L, 1 <= posi && --posi <= len, 2, \"initial position out of string\");\n    luaL_argcheck(L, --posj < len, 3, \"final position out of string\");\n\n    while (posi <= posj) {\n        let dec = utf8_decode(s, posi);\n        if (dec === null) { /* conversion error? */\n            lua_pushnil(L);  /* return nil ... */\n            lua_pushinteger(L, posi + 1);  /* ... and current position */\n            return 2;\n        }\n        posi = dec.pos;\n        n++;\n    }\n    lua_pushinteger(L, n);\n    return 1;\n};\n\nconst p_U = to_luastring(\"%U\");\nconst pushutfchar = function(L, arg) {\n    let code = luaL_checkinteger(L, arg);\n    luaL_argcheck(L, 0 <= code && code <= MAXUNICODE, arg, \"value out of range\");\n    lua_pushfstring(L, p_U, code);\n};\n\n/*\n** utfchar(n1, n2, ...)  -> char(n1)..char(n2)...\n*/\nconst utfchar = function(L) {\n    let n = lua_gettop(L);  /* number of arguments */\n    if (n === 1)  /* optimize common case of single char */\n        pushutfchar(L, 1);\n    else {\n        let b = new luaL_Buffer();\n        luaL_buffinit(L, b);\n        for (let i = 1; i <= n; i++) {\n            pushutfchar(L, i);\n            luaL_addvalue(b);\n        }\n        luaL_pushresult(b);\n    }\n    return 1;\n};\n\n/*\n** offset(s, n, [i])  -> index where n-th character counting from\n**   position 'i' starts; 0 means character at 'i'.\n*/\nconst byteoffset = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let n = luaL_checkinteger(L, 2);\n    let posi = n >= 0 ? 1 : s.length + 1;\n    posi = u_posrelat(luaL_optinteger(L, 3, posi), s.length);\n\n    luaL_argcheck(L, 1 <= posi && --posi <= s.length, 3, \"position out of range\");\n\n    if (n === 0) {\n        /* find beginning of current byte sequence */\n        while (posi > 0 && iscont(s[posi])) posi--;\n    } else {\n        if (iscont(s[posi]))\n            luaL_error(L, \"initial position is a continuation byte\");\n\n        if (n < 0) {\n            while (n < 0 && posi > 0) {  /* move back */\n                do {  /* find beginning of previous character */\n                    posi--;\n                } while (posi > 0 && iscont(s[posi]));\n                n++;\n            }\n        } else {\n            n--;  /* do not move for 1st character */\n            while (n > 0 && posi < s.length) {\n                do {  /* find beginning of next character */\n                    posi++;\n                } while (iscont(s[posi]));  /* (cannot pass final '\\0') */\n                n--;\n            }\n        }\n    }\n\n    if (n === 0)  /* did it find given character? */\n        lua_pushinteger(L, posi + 1);\n    else  /* no such character */\n        lua_pushnil(L);\n\n    return 1;\n};\n\n/*\n** codepoint(s, [i, [j]])  -> returns codepoints for all characters\n** that start in the range [i,j]\n*/\nconst codepoint = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let posi = u_posrelat(luaL_optinteger(L, 2, 1), s.length);\n    let pose = u_posrelat(luaL_optinteger(L, 3, posi), s.length);\n\n    luaL_argcheck(L, posi >= 1, 2, \"out of range\");\n    luaL_argcheck(L, pose <= s.length, 3, \"out of range\");\n\n    if (posi > pose) return 0;  /* empty interval; return no values */\n    if (pose - posi >= Number.MAX_SAFE_INTEGER)\n        return luaL_error(L, \"string slice too long\");\n    let n = (pose - posi) + 1;\n    luaL_checkstack(L, n, \"string slice too long\");\n    n = 0;\n    for (posi -= 1; posi < pose;) {\n        let dec = utf8_decode(s, posi);\n        if (dec === null)\n            return luaL_error(L, \"invalid UTF-8 code\");\n        lua_pushinteger(L, dec.code);\n        posi = dec.pos;\n        n++;\n    }\n    return n;\n};\n\nconst iter_aux = function(L) {\n    let s = luaL_checkstring(L, 1);\n    let len = s.length;\n    let n = lua_tointeger(L, 2) - 1;\n\n    if (n < 0)  /* first iteration? */\n        n = 0;  /* start from here */\n    else if (n < len) {\n        n++;  /* skip current byte */\n        while (iscont(s[n])) n++;  /* and its continuations */\n    }\n\n    if (n >= len)\n        return 0;  /* no more codepoints */\n    else {\n        let dec = utf8_decode(s, n);\n        if (dec === null || iscont(s[dec.pos]))\n            return luaL_error(L, to_luastring(\"invalid UTF-8 code\"));\n        lua_pushinteger(L, n + 1);\n        lua_pushinteger(L, dec.code);\n        return 2;\n    }\n};\n\nconst iter_codes = function(L) {\n    luaL_checkstring(L, 1);\n    lua_pushcfunction(L, iter_aux);\n    lua_pushvalue(L, 1);\n    lua_pushinteger(L, 0);\n    return 3;\n};\n\nconst funcs = {\n    \"char\":      utfchar,\n    \"codepoint\": codepoint,\n    \"codes\":     iter_codes,\n    \"len\":       utflen,\n    \"offset\":    byteoffset\n};\n\n/* pattern to match a single UTF-8 character */\nconst UTF8PATT = luastring_of(91, 0, 45, 127, 194, 45, 244, 93, 91, 128, 45, 191, 93, 42);\n\nconst luaopen_utf8 = function(L) {\n    luaL_newlib(L, funcs);\n    lua_pushstring(L, UTF8PATT);\n    lua_setfield(L, -2, to_luastring(\"charpattern\", true));\n    return 1;\n};\n\nmodule.exports.luaopen_utf8 = luaopen_utf8;\n","\"use strict\";\n\nconst {\n    LUA_MASKLINE,\n    LUA_MASKCOUNT,\n    LUA_MULTRET,\n    constant_types: {\n        LUA_TBOOLEAN,\n        LUA_TLCF,\n        LUA_TLIGHTUSERDATA,\n        LUA_TLNGSTR,\n        LUA_TNIL,\n        LUA_TNUMBER,\n        LUA_TNUMFLT,\n        LUA_TNUMINT,\n        LUA_TSHRSTR,\n        LUA_TTABLE,\n        LUA_TUSERDATA\n    },\n    to_luastring\n} = require('./defs.js');\nconst {\n    INDEXK,\n    ISK,\n    LFIELDS_PER_FLUSH,\n    OpCodesI: {\n        OP_ADD,\n        OP_BAND,\n        OP_BNOT,\n        OP_BOR,\n        OP_BXOR,\n        OP_CALL,\n        OP_CLOSURE,\n        OP_CONCAT,\n        OP_DIV,\n        OP_EQ,\n        OP_EXTRAARG,\n        OP_FORLOOP,\n        OP_FORPREP,\n        OP_GETTABLE,\n        OP_GETTABUP,\n        OP_GETUPVAL,\n        OP_IDIV,\n        OP_JMP,\n        OP_LE,\n        OP_LEN,\n        OP_LOADBOOL,\n        OP_LOADK,\n        OP_LOADKX,\n        OP_LOADNIL,\n        OP_LT,\n        OP_MOD,\n        OP_MOVE,\n        OP_MUL,\n        OP_NEWTABLE,\n        OP_NOT,\n        OP_POW,\n        OP_RETURN,\n        OP_SELF,\n        OP_SETLIST,\n        OP_SETTABLE,\n        OP_SETTABUP,\n        OP_SETUPVAL,\n        OP_SHL,\n        OP_SHR,\n        OP_SUB,\n        OP_TAILCALL,\n        OP_TEST,\n        OP_TESTSET,\n        OP_TFORCALL,\n        OP_TFORLOOP,\n        OP_UNM,\n        OP_VARARG\n    }\n} = require('./lopcodes.js');\nconst {\n    LUA_MAXINTEGER,\n    LUA_MININTEGER,\n    lua_numbertointeger\n} = require('./luaconf.js');\nconst {\n    lua_assert,\n    luai_nummod\n} = require('./llimits.js');\nconst lobject = require('./lobject.js');\nconst lfunc   = require('./lfunc.js');\nconst lstate  = require('./lstate.js');\nconst {\n    luaS_bless,\n    luaS_eqlngstr,\n    luaS_hashlongstr\n} = require('./lstring.js');\nconst ldo     = require('./ldo.js');\nconst ltm     = require('./ltm.js');\nconst ltable  = require('./ltable.js');\nconst ldebug  = require('./ldebug.js');\n\n/*\n** finish execution of an opcode interrupted by an yield\n*/\nconst luaV_finishOp = function(L) {\n    let ci = L.ci;\n    let base = ci.l_base;\n    let inst = ci.l_code[ci.l_savedpc - 1];  /* interrupted instruction */\n    let op = inst.opcode;\n\n    switch (op) {  /* finish its execution */\n        case OP_ADD: case OP_SUB: case OP_MUL: case OP_DIV: case OP_IDIV:\n        case OP_BAND: case OP_BOR: case OP_BXOR: case OP_SHL: case OP_SHR:\n        case OP_MOD: case OP_POW:\n        case OP_UNM: case OP_BNOT: case OP_LEN:\n        case OP_GETTABUP: case OP_GETTABLE: case OP_SELF: {\n            lobject.setobjs2s(L, base + inst.A, L.top-1);\n            delete L.stack[--L.top];\n            break;\n        }\n        case OP_LE: case OP_LT: case OP_EQ: {\n            let res = !L.stack[L.top - 1].l_isfalse();\n            delete L.stack[--L.top];\n            if (ci.callstatus & lstate.CIST_LEQ) {  /* \"<=\" using \"<\" instead? */\n                lua_assert(op === OP_LE);\n                ci.callstatus ^= lstate.CIST_LEQ;  /* clear mark */\n                res = !res;  /* negate result */\n            }\n            lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_JMP);\n            if (res !== (inst.A ? true : false))  /* condition failed? */\n                ci.l_savedpc++;  /* skip jump instruction */\n            break;\n        }\n        case OP_CONCAT: {\n            let top = L.top - 1;  /* top when 'luaT_trybinTM' was called */\n            let b = inst.B;  /* first element to concatenate */\n            let total = top - 1 - (base + b);  /* yet to concatenate */\n            lobject.setobjs2s(L, top - 2, top);  /* put TM result in proper position */\n            if (total > 1) {  /* are there elements to concat? */\n                L.top = top - 1;  /* top is one after last element (at top-2) */\n                luaV_concat(L, total);  /* concat them (may yield again) */\n            }\n            /* move final result to final position */\n            lobject.setobjs2s(L, ci.l_base + inst.A, L.top - 1);\n            ldo.adjust_top(L, ci.top);  /* restore top */\n            break;\n        }\n        case OP_TFORCALL: {\n            lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_TFORLOOP);\n            ldo.adjust_top(L, ci.top);  /* correct top */\n            break;\n        }\n        case OP_CALL: {\n            if (inst.C - 1 >= 0)  /* nresults >= 0? */\n                ldo.adjust_top(L, ci.top);  /* adjust results */\n            break;\n        }\n    }\n};\n\nconst RA = function(L, base, i) {\n    return base + i.A;\n};\n\nconst RB = function(L, base, i) {\n    return base + i.B;\n};\n\n// const RC = function(L, base, i) {\n//     return base + i.C;\n// };\n\nconst RKB = function(L, base, k, i) {\n    return ISK(i.B) ? k[INDEXK(i.B)] : L.stack[base + i.B];\n};\n\nconst RKC = function(L, base, k, i) {\n    return ISK(i.C) ? k[INDEXK(i.C)] : L.stack[base + i.C];\n};\n\nconst luaV_execute = function(L) {\n    let ci = L.ci;\n\n    ci.callstatus |= lstate.CIST_FRESH;\n    newframe:\n    for (;;) {\n        lua_assert(ci === L.ci);\n        let cl = ci.func.value;\n        let k = cl.p.k;\n        let base = ci.l_base;\n\n        let i = ci.l_code[ci.l_savedpc++];\n\n        if (L.hookmask & (LUA_MASKLINE | LUA_MASKCOUNT)) {\n            ldebug.luaG_traceexec(L);\n        }\n\n        let ra = RA(L, base, i);\n        let opcode = i.opcode;\n\n        switch (opcode) {\n            case OP_MOVE: {\n                lobject.setobjs2s(L, ra, RB(L, base, i));\n                break;\n            }\n            case OP_LOADK: {\n                let konst = k[i.Bx];\n                lobject.setobj2s(L, ra, konst);\n                break;\n            }\n            case OP_LOADKX: {\n                lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_EXTRAARG);\n                let konst = k[ci.l_code[ci.l_savedpc++].Ax];\n                lobject.setobj2s(L, ra, konst);\n                break;\n            }\n            case OP_LOADBOOL: {\n                L.stack[ra].setbvalue(i.B !== 0);\n\n                if (i.C !== 0)\n                    ci.l_savedpc++; /* skip next instruction (if C) */\n\n                break;\n            }\n            case OP_LOADNIL: {\n                for (let j = 0; j <= i.B; j++)\n                    L.stack[ra + j].setnilvalue();\n                break;\n            }\n            case OP_GETUPVAL: {\n                let b = i.B;\n                lobject.setobj2s(L, ra, cl.upvals[b]);\n                break;\n            }\n            case OP_GETTABUP: {\n                let upval = cl.upvals[i.B];\n                let rc = RKC(L, base, k, i);\n                luaV_gettable(L, upval, rc, ra);\n                break;\n            }\n            case OP_GETTABLE: {\n                let rb = L.stack[RB(L, base, i)];\n                let rc = RKC(L, base, k, i);\n                luaV_gettable(L, rb, rc, ra);\n                break;\n            }\n            case OP_SETTABUP: {\n                let upval = cl.upvals[i.A];\n                let rb = RKB(L, base, k, i);\n                let rc = RKC(L, base, k, i);\n                settable(L, upval, rb, rc);\n                break;\n            }\n            case OP_SETUPVAL: {\n                let uv = cl.upvals[i.B];\n                uv.setfrom(L.stack[ra]);\n                break;\n            }\n            case OP_SETTABLE: {\n                let table = L.stack[ra];\n                let key = RKB(L, base, k, i);\n                let v = RKC(L, base, k, i);\n\n                settable(L, table, key, v);\n                break;\n            }\n            case OP_NEWTABLE: {\n                L.stack[ra].sethvalue(ltable.luaH_new(L));\n                break;\n            }\n            case OP_SELF: {\n                let rb = RB(L, base, i);\n                let rc = RKC(L, base, k, i);\n                lobject.setobjs2s(L, ra + 1, rb);\n                luaV_gettable(L, L.stack[rb], rc, ra);\n                break;\n            }\n            case OP_ADD: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue((op1.value + op2.value)|0);\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 + numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_ADD);\n                }\n                break;\n            }\n            case OP_SUB: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue((op1.value - op2.value)|0);\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 - numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_SUB);\n                }\n                break;\n            }\n            case OP_MUL: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue(luaV_imul(op1.value, op2.value));\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 * numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_MUL);\n                }\n                break;\n            }\n            case OP_MOD: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue(luaV_mod(L, op1.value, op2.value));\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(luai_nummod(L, numberop1, numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_MOD);\n                }\n                break;\n            }\n            case OP_POW: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(Math.pow(numberop1, numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_POW);\n                }\n                break;\n            }\n            case OP_DIV: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(numberop1 / numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_DIV);\n                }\n                break;\n            }\n            case OP_IDIV: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if (op1.ttisinteger() && op2.ttisinteger()) {\n                    L.stack[ra].setivalue(luaV_div(L, op1.value, op2.value));\n                } else if ((numberop1 = tonumber(op1)) !== false && (numberop2 = tonumber(op2)) !== false) {\n                    L.stack[ra].setfltvalue(Math.floor(numberop1 / numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_IDIV);\n                }\n                break;\n            }\n            case OP_BAND: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(numberop1 & numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_BAND);\n                }\n                break;\n            }\n            case OP_BOR: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(numberop1 | numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_BOR);\n                }\n                break;\n            }\n            case OP_BXOR: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(numberop1 ^ numberop2);\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_BXOR);\n                }\n                break;\n            }\n            case OP_SHL: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(luaV_shiftl(numberop1, numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_SHL);\n                }\n                break;\n            }\n            case OP_SHR: {\n                let op1 = RKB(L, base, k, i);\n                let op2 = RKC(L, base, k, i);\n                let numberop1, numberop2;\n\n                if ((numberop1 = tointeger(op1)) !== false && (numberop2 = tointeger(op2)) !== false) {\n                    L.stack[ra].setivalue(luaV_shiftl(numberop1, -numberop2));\n                } else {\n                    ltm.luaT_trybinTM(L, op1, op2, L.stack[ra], ltm.TMS.TM_SHR);\n                }\n                break;\n            }\n            case OP_UNM: {\n                let op = L.stack[RB(L, base, i)];\n                let numberop;\n\n                if (op.ttisinteger()) {\n                    L.stack[ra].setivalue((-op.value)|0);\n                } else if ((numberop = tonumber(op)) !== false) {\n                    L.stack[ra].setfltvalue(-numberop);\n                } else {\n                    ltm.luaT_trybinTM(L, op, op, L.stack[ra], ltm.TMS.TM_UNM);\n                }\n                break;\n            }\n            case OP_BNOT: {\n                let op = L.stack[RB(L, base, i)];\n\n                if (op.ttisinteger()) {\n                    L.stack[ra].setivalue(~op.value);\n                } else {\n                    ltm.luaT_trybinTM(L, op, op, L.stack[ra], ltm.TMS.TM_BNOT);\n                }\n                break;\n            }\n            case OP_NOT: {\n                let op = L.stack[RB(L, base, i)];\n                L.stack[ra].setbvalue(op.l_isfalse());\n                break;\n            }\n            case OP_LEN: {\n                luaV_objlen(L, L.stack[ra], L.stack[RB(L, base, i)]);\n                break;\n            }\n            case OP_CONCAT: {\n                let b = i.B;\n                let c = i.C;\n                L.top = base + c + 1; /* mark the end of concat operands */\n                luaV_concat(L, c - b + 1);\n                let rb = base + b;\n                lobject.setobjs2s(L, ra, rb);\n                ldo.adjust_top(L, ci.top); /* restore top */\n                break;\n            }\n            case OP_JMP: {\n                dojump(L, ci, i, 0);\n                break;\n            }\n            case OP_EQ: {\n                if (luaV_equalobj(L, RKB(L, base, k, i), RKC(L, base, k, i)) !== i.A)\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_LT: {\n                if (luaV_lessthan(L, RKB(L, base, k, i), RKC(L, base, k, i)) !== i.A)\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_LE: {\n                if (luaV_lessequal(L, RKB(L, base, k, i), RKC(L, base, k, i)) !== i.A)\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_TEST: {\n                if (i.C ? L.stack[ra].l_isfalse() : !L.stack[ra].l_isfalse())\n                    ci.l_savedpc++;\n                else\n                    donextjump(L, ci);\n                break;\n            }\n            case OP_TESTSET: {\n                let rbIdx = RB(L, base, i);\n                let rb = L.stack[rbIdx];\n                if (i.C ? rb.l_isfalse() : !rb.l_isfalse())\n                    ci.l_savedpc++;\n                else {\n                    lobject.setobjs2s(L, ra, rbIdx);\n                    donextjump(L, ci);\n                }\n                break;\n            }\n            case OP_CALL: {\n                let b = i.B;\n                let nresults = i.C - 1;\n                if (b !== 0) ldo.adjust_top(L, ra+b);  /* else previous instruction set top */\n                if (ldo.luaD_precall(L, ra, nresults)) {\n                    if (nresults >= 0)\n                        ldo.adjust_top(L, ci.top);  /* adjust results */\n                } else {\n                    ci = L.ci;\n                    continue newframe;\n                }\n\n                break;\n            }\n            case OP_TAILCALL: {\n                let b = i.B;\n                if (b !== 0) ldo.adjust_top(L, ra+b);  /* else previous instruction set top */\n                if (ldo.luaD_precall(L, ra, LUA_MULTRET)) { // JS function\n                } else {\n                    /* tail call: put called frame (n) in place of caller one (o) */\n                    let nci = L.ci;\n                    let oci = nci.previous;\n                    let nfunc = nci.func;\n                    let nfuncOff = nci.funcOff;\n                    let ofuncOff = oci.funcOff;\n                    let lim = nci.l_base + nfunc.value.p.numparams;\n                    if (cl.p.p.length > 0) lfunc.luaF_close(L, oci.l_base);\n                    for (let aux = 0; nfuncOff + aux < lim; aux++)\n                        lobject.setobjs2s(L, ofuncOff + aux, nfuncOff + aux);\n                    oci.l_base = ofuncOff + (nci.l_base - nfuncOff);\n                    oci.top = ofuncOff + (L.top - nfuncOff);\n                    ldo.adjust_top(L, oci.top);  /* correct top */\n                    oci.l_code = nci.l_code;\n                    oci.l_savedpc = nci.l_savedpc;\n                    oci.callstatus |= lstate.CIST_TAIL;\n                    oci.next = null;\n                    ci = L.ci = oci;\n\n                    lua_assert(L.top === oci.l_base + L.stack[ofuncOff].value.p.maxstacksize);\n\n                    continue newframe;\n                }\n                break;\n            }\n            case OP_RETURN: {\n                if (cl.p.p.length > 0) lfunc.luaF_close(L, base);\n                let b = ldo.luaD_poscall(L, ci, ra, (i.B !== 0 ? i.B - 1 : L.top - ra));\n\n                if (ci.callstatus & lstate.CIST_FRESH)\n                    return; /* external invocation: return */\n                /* invocation via reentry: continue execution */\n                ci = L.ci;\n                if (b) ldo.adjust_top(L, ci.top);\n                lua_assert(ci.callstatus & lstate.CIST_LUA);\n                lua_assert(ci.l_code[ci.l_savedpc - 1].opcode === OP_CALL);\n                continue newframe;\n            }\n            case OP_FORLOOP: {\n                if (L.stack[ra].ttisinteger()) { /* integer loop? */\n                    let step = L.stack[ra + 2].value;\n                    let idx = (L.stack[ra].value + step)|0;\n                    let limit = L.stack[ra + 1].value;\n\n                    if (0 < step ? idx <= limit : limit <= idx) {\n                        ci.l_savedpc += i.sBx;\n                        L.stack[ra].chgivalue(idx);  /* update internal index... */\n                        L.stack[ra + 3].setivalue(idx);\n                    }\n                } else { /* floating loop */\n                    let step = L.stack[ra + 2].value;\n                    let idx = L.stack[ra].value + step;\n                    let limit = L.stack[ra + 1].value;\n\n                    if (0 < step ? idx <= limit : limit <= idx) {\n                        ci.l_savedpc += i.sBx;\n                        L.stack[ra].chgfltvalue(idx);  /* update internal index... */\n                        L.stack[ra + 3].setfltvalue(idx);\n                    }\n                }\n                break;\n            }\n            case OP_FORPREP: {\n                let init = L.stack[ra];\n                let plimit = L.stack[ra + 1];\n                let pstep = L.stack[ra + 2];\n                let forlim;\n\n                if (init.ttisinteger() && pstep.ttisinteger() && (forlim = forlimit(plimit, pstep.value))) {\n                    /* all values are integer */\n                    let initv = forlim.stopnow ? 0 : init.value;\n                    plimit.value = forlim.ilimit;\n                    init.value = (initv - pstep.value)|0;\n                } else { /* try making all values floats */\n                    let nlimit, nstep, ninit;\n                    if ((nlimit = tonumber(plimit)) === false)\n                        ldebug.luaG_runerror(L, to_luastring(\"'for' limit must be a number\", true));\n                    L.stack[ra + 1].setfltvalue(nlimit);\n                    if ((nstep = tonumber(pstep)) === false)\n                        ldebug.luaG_runerror(L, to_luastring(\"'for' step must be a number\", true));\n                    L.stack[ra + 2].setfltvalue(nstep);\n                    if ((ninit = tonumber(init)) === false)\n                        ldebug.luaG_runerror(L, to_luastring(\"'for' initial value must be a number\", true));\n                    L.stack[ra].setfltvalue(ninit - nstep);\n                }\n\n                ci.l_savedpc += i.sBx;\n                break;\n            }\n            case OP_TFORCALL: {\n                let cb = ra + 3; /* call base */\n                lobject.setobjs2s(L, cb+2, ra+2);\n                lobject.setobjs2s(L, cb+1, ra+1);\n                lobject.setobjs2s(L, cb, ra);\n                ldo.adjust_top(L, cb+3);  /* func. + 2 args (state and index) */\n                ldo.luaD_call(L, cb, i.C);\n                ldo.adjust_top(L, ci.top);\n                /* go straight to OP_TFORLOOP */\n                i = ci.l_code[ci.l_savedpc++];\n                ra = RA(L, base, i);\n                lua_assert(i.opcode === OP_TFORLOOP);\n            }\n            /* fall through */\n            case OP_TFORLOOP: {\n                if (!L.stack[ra + 1].ttisnil()) { /* continue loop? */\n                    lobject.setobjs2s(L, ra, ra + 1); /* save control variable */\n                    ci.l_savedpc += i.sBx; /* jump back */\n                }\n                break;\n            }\n            case OP_SETLIST: {\n                let n = i.B;\n                let c = i.C;\n\n                if (n === 0) n = L.top - ra - 1;\n\n                if (c === 0) {\n                    lua_assert(ci.l_code[ci.l_savedpc].opcode === OP_EXTRAARG);\n                    c = ci.l_code[ci.l_savedpc++].Ax;\n                }\n\n                let h = L.stack[ra].value;\n                let last = ((c - 1) * LFIELDS_PER_FLUSH) + n;\n\n                for (; n > 0; n--) {\n                    ltable.luaH_setint(h, last--, L.stack[ra + n]);\n                }\n                ldo.adjust_top(L, ci.top);  /* correct top (in case of previous open call) */\n                break;\n            }\n            case OP_CLOSURE: {\n                let p = cl.p.p[i.Bx];\n                let ncl = getcached(p, cl.upvals, L.stack, base);  /* cached closure */\n                if (ncl === null)  /* no match? */\n                    pushclosure(L, p, cl.upvals, base, ra);  /* create a new one */\n                else\n                    L.stack[ra].setclLvalue(ncl);\n                break;\n            }\n            case OP_VARARG: {\n                let b = i.B - 1;\n                let n = base - ci.funcOff - cl.p.numparams - 1;\n                let j;\n\n                if (n < 0) /* less arguments than parameters? */\n                    n = 0; /* no vararg arguments */\n\n                if (b < 0) {\n                    b = n;  /* get all var. arguments */\n                    ldo.luaD_checkstack(L, n);\n                    ldo.adjust_top(L, ra + n);\n                }\n\n                for (j = 0; j < b && j < n; j++)\n                    lobject.setobjs2s(L, ra + j, base - n + j);\n\n                for (; j < b; j++) /* complete required results with nil */\n                    L.stack[ra + j].setnilvalue();\n                break;\n            }\n            case OP_EXTRAARG: {\n                throw Error(\"invalid opcode\");\n            }\n        }\n    }\n};\n\nconst dojump = function(L, ci, i, e) {\n    let a = i.A;\n    if (a !== 0) lfunc.luaF_close(L, ci.l_base + a - 1);\n    ci.l_savedpc += i.sBx + e;\n};\n\nconst donextjump = function(L, ci) {\n    dojump(L, ci, ci.l_code[ci.l_savedpc], 1);\n};\n\n\nconst luaV_lessthan = function(L, l, r) {\n    if (l.ttisnumber() && r.ttisnumber())\n        return LTnum(l, r) ? 1 : 0;\n    else if (l.ttisstring() && r.ttisstring())\n        return l_strcmp(l.tsvalue(), r.tsvalue()) < 0 ? 1 : 0;\n    else {\n        let res = ltm.luaT_callorderTM(L, l, r, ltm.TMS.TM_LT);\n        if (res === null)\n            ldebug.luaG_ordererror(L, l, r);\n        return res ? 1 : 0;\n    }\n};\n\nconst luaV_lessequal = function(L, l, r) {\n    let res;\n\n    if (l.ttisnumber() && r.ttisnumber())\n        return LEnum(l, r) ? 1 : 0;\n    else if (l.ttisstring() && r.ttisstring())\n        return l_strcmp(l.tsvalue(), r.tsvalue()) <= 0 ? 1 : 0;\n    else {\n        res = ltm.luaT_callorderTM(L, l, r, ltm.TMS.TM_LE);\n        if (res !== null)\n            return res ? 1 : 0;\n    }\n    /* try 'lt': */\n    L.ci.callstatus |= lstate.CIST_LEQ; /* mark it is doing 'lt' for 'le' */\n    res = ltm.luaT_callorderTM(L, r, l, ltm.TMS.TM_LT);\n    L.ci.callstatus ^= lstate.CIST_LEQ; /* clear mark */\n    if (res === null)\n        ldebug.luaG_ordererror(L, l, r);\n    return res ? 0 : 1; /* result is negated */\n};\n\nconst luaV_equalobj = function(L, t1, t2) {\n    if (t1.ttype() !== t2.ttype()) { /* not the same variant? */\n        if (t1.ttnov() !== t2.ttnov() || t1.ttnov() !== LUA_TNUMBER)\n            return 0; /* only numbers can be equal with different variants */\n        else { /* two numbers with different variants */\n            /* OPTIMIZATION: instead of calling luaV_tointeger we can just let JS do the comparison */\n            return (t1.value === t2.value) ? 1 : 0;\n        }\n    }\n\n    let tm;\n\n    /* values have same type and same variant */\n    switch(t1.ttype()) {\n        case LUA_TNIL:\n            return 1;\n        case LUA_TBOOLEAN:\n            return t1.value == t2.value ? 1 : 0; // Might be 1 or true\n        case LUA_TLIGHTUSERDATA:\n        case LUA_TNUMINT:\n        case LUA_TNUMFLT:\n        case LUA_TLCF:\n            return t1.value === t2.value ? 1 : 0;\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR: {\n            return luaS_eqlngstr(t1.tsvalue(), t2.tsvalue()) ? 1 : 0;\n        }\n        case LUA_TUSERDATA:\n        case LUA_TTABLE:\n            if (t1.value === t2.value) return 1;\n            else if (L === null) return 0;\n\n            tm = ltm.fasttm(L, t1.value.metatable, ltm.TMS.TM_EQ);\n            if (tm === null)\n                tm = ltm.fasttm(L, t2.value.metatable, ltm.TMS.TM_EQ);\n            break;\n        default:\n            return t1.value === t2.value ? 1 : 0;\n    }\n\n    if (tm === null) /* no TM? */\n        return 0;\n\n    let tv = new lobject.TValue(); /* doesn't use the stack */\n    ltm.luaT_callTM(L, tm, t1, t2, tv, 1);\n    return tv.l_isfalse() ? 0 : 1;\n};\n\nconst luaV_rawequalobj = function(t1, t2) {\n    return luaV_equalobj(null, t1, t2);\n};\n\nconst forlimit = function(obj, step) {\n    let stopnow = false;\n    let ilimit = luaV_tointeger(obj, step < 0 ? 2 : 1);\n    if (ilimit === false) {\n        let n = tonumber(obj);\n        if (n === false)\n            return false;\n\n        if (0 < n) {\n            ilimit = LUA_MAXINTEGER;\n            if (step < 0) stopnow = true;\n        } else {\n            ilimit = LUA_MININTEGER;\n            if (step >= 0) stopnow = true;\n        }\n    }\n\n    return {\n        stopnow: stopnow,\n        ilimit: ilimit\n    };\n};\n\n/*\n** try to convert a value to an integer, rounding according to 'mode':\n** mode === 0: accepts only integral values\n** mode === 1: takes the floor of the number\n** mode === 2: takes the ceil of the number\n*/\nconst luaV_tointeger = function(obj, mode) {\n    if (obj.ttisfloat()) {\n        let n = obj.value;\n        let f = Math.floor(n);\n\n        if (n !== f) { /* not an integral value? */\n            if (mode === 0)\n                return false;  /* fails if mode demands integral value */\n            else if (mode > 1)  /* needs ceil? */\n                f += 1;  /* convert floor to ceil (remember: n !== f) */\n        }\n\n        return lua_numbertointeger(f);\n    } else if (obj.ttisinteger()) {\n        return obj.value;\n    } else if (cvt2num(obj)) {\n        let v = new lobject.TValue();\n        if (lobject.luaO_str2num(obj.svalue(), v) === (obj.vslen() + 1))\n            return luaV_tointeger(v, mode);\n    }\n\n    return false;\n};\n\nconst tointeger = function(o) {\n    return o.ttisinteger() ? o.value : luaV_tointeger(o, 0);\n};\n\nconst tonumber = function(o) {\n    if (o.ttnov() === LUA_TNUMBER)\n        return o.value;\n\n    if (cvt2num(o)) {  /* string convertible to number? */\n        let v = new lobject.TValue();\n        if (lobject.luaO_str2num(o.svalue(), v) === (o.vslen() + 1))\n            return v.value;\n    }\n\n    return false;\n};\n\n/*\n** Return 'l < r', for numbers.\n** As fengari uses javascript numbers for both floats and integers and has\n** correct semantics, we can just compare values.\n*/\nconst LTnum = function(l, r) {\n    return l.value < r.value;\n};\n\n/*\n** Return 'l <= r', for numbers.\n*/\nconst LEnum = function(l, r) {\n    return l.value <= r.value;\n};\n\n/*\n** Compare two strings 'ls' x 'rs', returning an integer smaller-equal-\n** -larger than zero if 'ls' is smaller-equal-larger than 'rs'.\n*/\nconst l_strcmp = function(ls, rs) {\n    let l = luaS_hashlongstr(ls);\n    let r = luaS_hashlongstr(rs);\n    /* In fengari we assume string hash has same collation as byte values */\n    if (l === r)\n        return 0;\n    else if (l < r)\n        return -1;\n    else\n        return 1;\n};\n\n/*\n** Main operation 'ra' = #rb'.\n*/\nconst luaV_objlen = function(L, ra, rb) {\n    let tm;\n    switch(rb.ttype()) {\n        case LUA_TTABLE: {\n            let h = rb.value;\n            tm = ltm.fasttm(L, h.metatable, ltm.TMS.TM_LEN);\n            if (tm !== null) break; /* metamethod? break switch to call it */\n            ra.setivalue(ltable.luaH_getn(h)); /* else primitive len */\n            return;\n        }\n        case LUA_TSHRSTR:\n        case LUA_TLNGSTR:\n            ra.setivalue(rb.vslen());\n            return;\n        default: {\n            tm = ltm.luaT_gettmbyobj(L, rb, ltm.TMS.TM_LEN);\n            if (tm.ttisnil())\n                ldebug.luaG_typeerror(L, rb, to_luastring(\"get length of\", true));\n            break;\n        }\n    }\n\n    ltm.luaT_callTM(L, tm, rb, rb, ra, 1);\n};\n\n/* Shim taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul */\nconst luaV_imul = Math.imul || function(a, b) {\n    let aHi = (a >>> 16) & 0xffff;\n    let aLo = a & 0xffff;\n    let bHi = (b >>> 16) & 0xffff;\n    let bLo = b & 0xffff;\n    /*\n    ** the shift by 0 fixes the sign on the high part\n    ** the final |0 converts the unsigned value into a signed value\n    */\n    return ((aLo * bLo) + (((aHi * bLo + aLo * bHi) << 16) >>> 0) | 0);\n};\n\nconst luaV_div = function(L, m, n) {\n    if (n === 0)\n        ldebug.luaG_runerror(L, to_luastring(\"attempt to divide by zero\"));\n    return Math.floor(m / n)|0;\n};\n\n// % semantic on negative numbers is different in js\nconst luaV_mod = function(L, m, n) {\n    if (n === 0)\n        ldebug.luaG_runerror(L, to_luastring(\"attempt to perform 'n%%0'\"));\n    return (m - Math.floor(m / n) * n)|0;\n};\n\nconst NBITS = 32;\n\nconst luaV_shiftl = function(x, y) {\n    if (y < 0) {  /* shift right? */\n        if (y <= -NBITS) return 0;\n        else return x >>> -y;\n    }\n    else {  /* shift left */\n        if (y >= NBITS) return 0;\n        else return x << y;\n    }\n};\n\n/*\n** check whether cached closure in prototype 'p' may be reused, that is,\n** whether there is a cached closure with the same upvalues needed by\n** new closure to be created.\n*/\nconst getcached = function(p, encup, stack, base) {\n    let c = p.cache;\n    if (c !== null) {  /* is there a cached closure? */\n        let uv = p.upvalues;\n        let nup = uv.length;\n        for (let i = 0; i < nup; i++) {  /* check whether it has right upvalues */\n            let v = uv[i].instack ? stack[base + uv[i].idx] : encup[uv[i].idx];\n            if (c.upvals[i] !== v)\n                return null;  /* wrong upvalue; cannot reuse closure */\n        }\n    }\n    return c;  /* return cached closure (or NULL if no cached closure) */\n};\n\n/*\n** create a new Lua closure, push it in the stack, and initialize\n** its upvalues.\n*/\nconst pushclosure = function(L, p, encup, base, ra) {\n    let nup = p.upvalues.length;\n    let uv = p.upvalues;\n    let ncl = new lobject.LClosure(L, nup);\n    ncl.p = p;\n    L.stack[ra].setclLvalue(ncl);\n    for (let i = 0; i < nup; i++) {\n        if (uv[i].instack)\n            ncl.upvals[i] = lfunc.luaF_findupval(L, base + uv[i].idx);\n        else\n            ncl.upvals[i] = encup[uv[i].idx];\n    }\n    p.cache = ncl;  /* save it on cache for reuse */\n};\n\nconst cvt2str = function(o) {\n    return o.ttisnumber();\n};\n\nconst cvt2num = function(o) {\n    return o.ttisstring();\n};\n\nconst tostring = function(L, i) {\n    let o = L.stack[i];\n\n    if (o.ttisstring()) return true;\n\n    if (cvt2str(o)) {\n        lobject.luaO_tostring(L, o);\n        return true;\n    }\n\n    return false;\n};\n\nconst isemptystr = function(o) {\n    return o.ttisstring() && o.vslen() === 0;\n};\n\n/* copy strings in stack from top - n up to top - 1 to buffer */\nconst copy2buff = function(L, top, n, buff) {\n    let tl = 0;  /* size already copied */\n    do {\n        let tv = L.stack[top-n];\n        let l = tv.vslen();  /* length of string being copied */\n        let s = tv.svalue();\n        buff.set(s, tl);\n        tl += l;\n    } while (--n > 0);\n};\n\n/*\n** Main operation for concatenation: concat 'total' values in the stack,\n** from 'L->top - total' up to 'L->top - 1'.\n*/\nconst luaV_concat = function(L, total) {\n    lua_assert(total >= 2);\n    do {\n        let top = L.top;\n        let n = 2; /* number of elements handled in this pass (at least 2) */\n\n        if (!(L.stack[top-2].ttisstring() || cvt2str(L.stack[top-2])) || !tostring(L, top - 1)) {\n            ltm.luaT_trybinTM(L, L.stack[top-2], L.stack[top-1], L.stack[top-2], ltm.TMS.TM_CONCAT);\n        } else if (isemptystr(L.stack[top-1])) {\n            tostring(L, top - 2);\n        } else if (isemptystr(L.stack[top-2])) {\n            lobject.setobjs2s(L, top - 2, top - 1);\n        } else {\n            /* at least two non-empty string values; get as many as possible */\n            let tl = L.stack[top-1].vslen();\n            /* collect total length and number of strings */\n            for (n = 1; n < total && tostring(L, top - n - 1); n++) {\n                let l = L.stack[top - n - 1].vslen();\n                tl += l;\n            }\n            let buff = new Uint8Array(tl);\n            copy2buff(L, top, n, buff);\n            let ts = luaS_bless(L, buff);\n            lobject.setsvalue2s(L, top - n, ts);\n        }\n        total -= n - 1; /* got 'n' strings to create 1 new */\n        /* popped 'n' strings and pushed one */\n        for (; L.top > top-(n-1);)\n            delete L.stack[--L.top];\n    } while (total > 1); /* repeat until only 1 result left */\n};\n\nconst MAXTAGLOOP = 2000;\n\nconst luaV_gettable = function(L, t, key, ra) {\n    for (let loop = 0; loop < MAXTAGLOOP; loop++) {\n        let tm;\n\n        if (!t.ttistable()) {\n            tm = ltm.luaT_gettmbyobj(L, t, ltm.TMS.TM_INDEX);\n            if (tm.ttisnil())\n                ldebug.luaG_typeerror(L, t, to_luastring('index', true)); /* no metamethod */\n            /* else will try the metamethod */\n        } else {\n            let slot = ltable.luaH_get(L, t.value, key);\n            if (!slot.ttisnil()) {\n                lobject.setobj2s(L, ra, slot);\n                return;\n            } else { /* 't' is a table */\n                tm = ltm.fasttm(L, t.value.metatable, ltm.TMS.TM_INDEX);  /* table's metamethod */\n                if (tm === null) { /* no metamethod? */\n                    L.stack[ra].setnilvalue(); /* result is nil */\n                    return;\n                }\n            }\n            /* else will try the metamethod */\n        }\n        if (tm.ttisfunction()) { /* is metamethod a function? */\n            ltm.luaT_callTM(L, tm, t, key, L.stack[ra], 1); /* call it */\n            return;\n        }\n        t = tm;  /* else try to access 'tm[key]' */\n    }\n\n    ldebug.luaG_runerror(L, to_luastring(\"'__index' chain too long; possible loop\", true));\n};\n\nconst settable = function(L, t, key, val) {\n    for (let loop = 0; loop < MAXTAGLOOP; loop++) {\n        let tm;\n        if (t.ttistable()) {\n            let h = t.value; /* save 't' table */\n            let slot = ltable.luaH_get(L, h, key);\n            if (!slot.ttisnil() || (tm = ltm.fasttm(L, h.metatable, ltm.TMS.TM_NEWINDEX)) === null) {\n                ltable.luaH_setfrom(L, h, key, val);\n                ltable.invalidateTMcache(h);\n                return;\n            }\n            /* else will try the metamethod */\n        } else { /* not a table; check metamethod */\n            if ((tm = ltm.luaT_gettmbyobj(L, t, ltm.TMS.TM_NEWINDEX)).ttisnil())\n                ldebug.luaG_typeerror(L, t, to_luastring('index', true));\n        }\n        /* try the metamethod */\n        if (tm.ttisfunction()) {\n            ltm.luaT_callTM(L, tm, t, key, val, 0);\n            return;\n        }\n        t = tm;  /* else repeat assignment over 'tm' */\n    }\n\n    ldebug.luaG_runerror(L, to_luastring(\"'__newindex' chain too long; possible loop\", true));\n};\n\n\nmodule.exports.cvt2str          = cvt2str;\nmodule.exports.cvt2num          = cvt2num;\nmodule.exports.luaV_gettable    = luaV_gettable;\nmodule.exports.luaV_concat      = luaV_concat;\nmodule.exports.luaV_div         = luaV_div;\nmodule.exports.luaV_equalobj    = luaV_equalobj;\nmodule.exports.luaV_execute     = luaV_execute;\nmodule.exports.luaV_finishOp    = luaV_finishOp;\nmodule.exports.luaV_imul        = luaV_imul;\nmodule.exports.luaV_lessequal   = luaV_lessequal;\nmodule.exports.luaV_lessthan    = luaV_lessthan;\nmodule.exports.luaV_mod         = luaV_mod;\nmodule.exports.luaV_objlen      = luaV_objlen;\nmodule.exports.luaV_rawequalobj = luaV_rawequalobj;\nmodule.exports.luaV_shiftl      = luaV_shiftl;\nmodule.exports.luaV_tointeger   = luaV_tointeger;\nmodule.exports.settable         = settable;\nmodule.exports.tointeger        = tointeger;\nmodule.exports.tonumber         = tonumber;\n","\"use strict\";\n\nconst { lua_assert } = require(\"./llimits.js\");\n\nclass MBuffer {\n    constructor() {\n        this.buffer = null;\n        this.n = 0;\n    }\n}\n\nconst luaZ_buffer = function(buff) {\n    return buff.buffer.subarray(0, buff.n);\n};\n\nconst luaZ_buffremove = function(buff, i) {\n    buff.n -= i;\n};\n\nconst luaZ_resetbuffer = function(buff) {\n    buff.n = 0;\n};\n\nconst luaZ_resizebuffer = function(L, buff, size) {\n    let newbuff = new Uint8Array(size);\n    if (buff.buffer)\n        newbuff.set(buff.buffer);\n    buff.buffer = newbuff;\n};\n\nclass ZIO {\n    constructor(L, reader, data) {\n        this.L = L;           /* Lua state (for reader) */\n        lua_assert(typeof reader == \"function\", \"ZIO requires a reader\");\n        this.reader = reader; /* reader function */\n        this.data = data;     /* additional data */\n        this.n = 0;           /* bytes still unread */\n        this.buffer = null;\n        this.off = 0;         /* current position in buffer */\n    }\n\n    zgetc () {\n        return ((this.n--) > 0) ? this.buffer[this.off++] : luaZ_fill(this);\n    }\n}\n\nconst EOZ = -1;\n\nconst luaZ_fill = function(z) {\n    let buff = z.reader(z.L, z.data);\n    if (buff === null)\n        return EOZ;\n    lua_assert(buff instanceof Uint8Array, \"Should only load binary of array of bytes\");\n    let size = buff.length;\n    if (size === 0)\n        return EOZ;\n    z.buffer = buff;\n    z.off = 0;\n    z.n = size - 1;\n    return z.buffer[z.off++];\n};\n\n/* b should be an array-like that will be set to bytes\n * b_offset is the offset at which to start filling */\nconst luaZ_read = function(z, b, b_offset, n) {\n    while (n) {\n        if (z.n === 0) { /* no bytes in buffer? */\n            if (luaZ_fill(z) === EOZ)\n                return n; /* no more input; return number of missing bytes */\n            else {\n                z.n++;  /* luaZ_fill consumed first byte; put it back */\n                z.off--;\n            }\n        }\n        let m = (n <= z.n) ? n : z.n; /* min. between n and z->n */\n        for (let i=0; i<m; i++) {\n            b[b_offset++] = z.buffer[z.off++];\n        }\n        z.n -= m;\n        if (z.n === 0) // remove reference to input so it can get freed\n            z.buffer = null;\n        n -= m;\n    }\n\n    return 0;\n};\n\nmodule.exports.EOZ               = EOZ;\nmodule.exports.luaZ_buffer       = luaZ_buffer;\nmodule.exports.luaZ_buffremove   = luaZ_buffremove;\nmodule.exports.luaZ_fill         = luaZ_fill;\nmodule.exports.luaZ_read         = luaZ_read;\nmodule.exports.luaZ_resetbuffer  = luaZ_resetbuffer;\nmodule.exports.luaZ_resizebuffer = luaZ_resizebuffer;\nmodule.exports.MBuffer           = MBuffer;\nmodule.exports.ZIO               = ZIO;\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos++);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n\n    openerIdx = closerIdx - closer.jump - 1;\n\n    // avoid crash if `closer.jump` is pointing outside of the array, see #742\n    if (openerIdx < -1) openerIdx = -1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            delimiters[openerIdx - 1].jump + 1 :\n            0;\n\n          closer.jump  = closerIdx - openerIdx + lastJump;\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.jump  = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      jump:   i / 2, // for `~~` 1 marker = 2 characters\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","import content_block from './rules/content_block'\nimport expression from './rules/expression'\nimport passage_link from './rules/passage_link'\nimport variable from './rules/variable'\nimport script_block from './rules/script_block'\nimport Token from 'markdown-it/lib/token'\nimport ParserInline from 'markdown-it/lib/parser_inline'\nimport ParserBlock from 'markdown-it/lib/parser_block'\nimport ParserCore from 'markdown-it/lib/parser_core'\n\n// We construct our own MarkdownIt instance here to exclude the features we don't use\n// (which saves on the bundle size)\nconst md = {\n    inline: new ParserInline(),\n    block: new ParserBlock(),\n    core: new ParserCore(),\n    options: {\n        html:         false,\n        xhtmlOut:     false,\n        breaks:       false,\n        langPrefix:   'language-',\n        linkify:      false,\n        typographer:  false,\n        quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n        highlight: null as null,\n        maxNesting:   100\n    },\n    parse: function(src: string, env: object) {\n        if (typeof src !== 'string') {\n            throw new Error('Input data should be a String');\n        }\n        var state = new this.core.State(src, this, env);\n        this.core.process(state);\n        return state.tokens;\n    } \n}\n\nconst rules = md.inline.ruler\nrules.disable(['link', 'image', 'autolink'])\nrules.push('passage_link', passage_link)\nrules.push('content_block', content_block)\nrules.push('expression', expression)\nrules.push('script_block', script_block)\nrules.push('variable', variable)\nmd.block.ruler.disable(['reference'])\n\nfunction escape(input: string): string {\n    return input\n        .replace(/\\'/g, '\\\\\\'')\n        .replace(/\\n/g, '\\\\\\n')\n}\n\nfunction renderOne(input: Token, output: string[], state: {level: number}) {\n\n    function add(str: string) {\n        output.push(`${'  '.repeat(state.level)}${str}`)\n    }\n    switch (input.type) {\n    case 'inline':\n        for (const child of input.children) {\n            renderOne(child, output, state)\n        }\n        break\n    case 'text':\n        if (input.content.length > 0) {\n            add(`Text('${escape(input.content)}')`)\n        }\n        break\n    case 'link_open':\n        add(`Link('${escape(input.attrGet('href'))}')(function()`)\n        state.level++\n        break\n    case 'content_open':\n        const changer = input.attrGet('changer')\n        if (changer == null) {\n            add(`Show(function()`)\n        } else {\n            add(`AsChanger(${changer})(function()`)\n        }\n        state.level++\n        break\n    case 'code_variable':\n    case 'code_expression':\n        add(`Show(${input.content})`)\n        break\n    case 'code_block':\n        add(input.content)\n        break\n    default: \n        switch (input.nesting) {\n        case 1:\n            add(`Style.${input.tag}(function()`)\n            state.level++\n            break\n        case -1:\n            state.level--\n            add(`end)`)\n            break\n        case 0:\n            add(`Object('${input.tag}')`)\n            break\n        }\n    }\n}\n\nexport function markdownToLua(src: string, outputBuffer: string[], state: {level: number}) {\n    for(const token of md.parse(src, {})) {\n        renderOne(token, outputBuffer, state)\n    }\n}\n\nexport function storyToLua(story: Element): string {\n    let startNode = story.getAttribute('startnode')\n    let startNodeName: string | null = null\n    const buf: string[] = ['-- Generated with Moontale']\n    buf.push(`story = '${escape(story.getAttribute('name'))}'`)\n    buf.push(`Passages = {`)\n    for (let i = 0; i < story.children.length; i++) {\n        let node = story.children[i]\n        if (node.tagName.toLowerCase() === \"tw-passagedata\") {\n            if (startNode === node.getAttribute('pid')) {\n                startNodeName = node.getAttribute('name')\n            }\n            buf.push(`  ['${escape(node.getAttribute('name'))}'] = {`)\n            let tags = node.getAttribute('tags').split(' ')\n            if (tags.length === 1 && tags[0] === '') {\n                tags = []\n            }\n            buf.push(`    tags = { ${tags.map(t => `['${escape(t)}'] = true`).join(',')} },`)\n            buf.push(`    position = {${node.getAttribute('position')}},`)\n            buf.push(`    content = function()`)\n            markdownToLua(node.textContent, buf, {level: 3})\n            buf.push(`    end`)\n            buf.push(`  },`)\n        }\n    }\n    buf.push(`}`)\n    buf.push(`StartPassage = '${escape(startNodeName)}'`)\n\n    return buf.join('\\n')\n}","\nimport { storyToLua } from './convert'\nimport { loadStory, start, raiseEvent } from './runtime'\nimport './style.css'\nimport moontaleLib from '../lua/moontale.lua'\n\nlet luaSrc = storyToLua(document.getElementById('storyData').children[0])\nconsole.log(luaSrc)\nlet output = document.getElementById('output')\n\nfunction onNewText(html: string) {\n    output.innerHTML = html\n    output.style.opacity = '1'\n}\n\nloadStory([moontaleLib, luaSrc], html => {\n    output.style.opacity = '0'\n    setTimeout(onNewText, 200, html)\n}, (message) => console.error(message))\ndocument.addEventListener('click', event => raiseEvent(event.type, (event.target as Element).id))\nstart()\n","// Handle [nested [content blocks]]\nimport StateInline from 'markdown-it/lib/rules_inline/state_inline'\n\nexport default function (state: StateInline, silent: boolean): boolean {\n\n    if (state.src.charCodeAt(state.pos) === 0x5B /* [ */) {\n\n        // If we immediately followed a variable or expression, use it as a Changer for this content:\n        const prevToken = state.tokens[state.tokens.length - 1]\n        let changer: string | null\n        if (prevToken && (prevToken.type == 'code_variable' || prevToken.type == 'code_expression')) {\n            // Remove the expression token; we don't want it to be printed in the output\n            state.tokens.splice(state.tokens.length - 1, 1)\n            changer = prevToken.content\n        } else {\n            changer = null\n        }\n\n        state.push('content_open', '', 1).attrs = [['changer', changer]]\n        state.pos++\n        return true\n    }\n\n    if (state.src.charCodeAt(state.pos) === 0x5D /* ] */) {\n        state.push('content_close', '', -1)\n        state.pos++\n        return true\n    }\n\n    return false\n}\n","// Handle <$ lua_expression $>\nimport StateInline from 'markdown-it/lib/rules_inline/state_inline'\n\nexport default function (state: StateInline, silent: boolean): boolean {\n\n    const markerLength = 2\n    if (!state.src.startsWith('<$', state.pos)) {\n        return false\n    }\n    const end = state.src.indexOf('$>', state.pos + markerLength)\n    if (end === -1) {\n        return false\n    }\n    state.push('code_expression', '', 0).content = state.src.slice(state.pos + markerLength, end)\n    state.pos = end + markerLength\n    return true\n}","// Handle [[passage->links]], all three forms\nimport StateInline from 'markdown-it/lib/rules_inline/state_inline'\n\nexport default function (state: StateInline, silent: boolean): boolean {\n\n    const markerLength = 2\n    if (!state.src.startsWith('[[', state.pos)) {\n        return false\n    }\n\n    const startPos = state.pos + markerLength\n    const srcEnd = state.posMax\n    let endPos = startPos\n    let ltrLink = -1\n    let rtlLink = -1\n    while (endPos < srcEnd && !state.src.startsWith(']]', endPos)) {\n        // For complex links, we always want to minimise the length of the 'target' and maximise the length of the 'label'\n        // So for RTL links, we want to take the left-most (first) occurrence, and for LTR, the right-most (last)\n        if (rtlLink === -1 && state.src.startsWith('<-', endPos)) {\n            rtlLink = endPos\n        } else if (state.src.startsWith('->', endPos)) {\n            ltrLink = endPos\n        }\n        endPos++\n    }\n\n    if (endPos === srcEnd) {\n        // No ']]' found; not a valid link\n        return false\n    }\n\n    if (ltrLink !== -1 && rtlLink !== -1) {\n        // In the first instance, prefer the form where the marker is closest to its 'end'\n        const rtlLength = rtlLink - startPos\n        const ltrLength = endPos - (ltrLink + markerLength)\n        // If it's something stupid like [[foo<- ->bar]] or [[foo-> <-bar]], prefer LTR links\n        if (rtlLength < ltrLength) {\n            ltrLink = -1\n        } else {\n            rtlLink = -1\n        }\n    }\n\n    // Slice up the target and label based on the link form\n    let target: string\n    if (ltrLink !== -1) {\n        target = state.src.slice(ltrLink + markerLength, endPos).trim()\n        state.pos = startPos\n        state.posMax = ltrLink\n    } else if (rtlLink !== -1) {\n        target = state.src.slice(startPos, rtlLink).trim()\n        state.pos = rtlLink + markerLength\n        state.posMax = endPos\n    } else {\n        target = state.src.slice(startPos, endPos).trim()\n        state.pos = startPos\n        state.posMax = endPos\n    }\n\n    // The label can contain tokens itself, so we need to call 'tokenize' here\n    state.push('link_open', 'a', 1).attrs = [ ['href', target] ]\n    state.md.inline.tokenize(state)\n    state.push('link_close', 'a', -1)\n\n    // Restore the state to its original... state\n    state.pos = endPos + markerLength\n    state.posMax = srcEnd\n    return true\n\n}","// Handle {$ lua_script $}\nimport StateInline from 'markdown-it/lib/rules_inline/state_inline'\n\nexport default function (state: StateInline, silent: boolean): boolean {\n\n    const markerLength = 2\n    if (!state.src.startsWith('{$', state.pos)) {\n        return false\n    }\n    const end = state.src.indexOf('$}', state.pos + markerLength)\n    if (end === -1) {\n        return false\n    }\n    state.push('code_block', '', 0).content = state.src.slice(state.pos + markerLength, end)\n    state.pos = end + markerLength\n    return true\n}","// Handle $variables\nimport StateInline from 'markdown-it/lib/rules_inline/state_inline'\n\nfunction isLetter(code: number): boolean {\n    return code === 0x5F || (code >= 0x41 && code <= 0x5A) || (code >= 0x61 && code <= 0x7A)\n}\n\nfunction isLetterOrNumber(code: number): boolean {\n    return isLetter(code) || (code >= 0x30 && code <= 0x39)\n}\n\nfunction propertyExpression(state: StateInline, output: string[]): boolean {\n    let start = state.pos\n    if (state.src.charCodeAt(state.pos) != 0x2E /* . */) {\n        return false\n    }\n    if (!isLetter(state.src.charCodeAt(state.pos + 1))) {\n        return false\n    }\n    state.pos++\n    do {\n        state.pos++\n    } while (state.pos < state.src.length && isLetterOrNumber(state.src.charCodeAt(state.pos)))\n    output.push(state.src.slice(start, state.pos))\n    return true\n}\n\nfunction callExpression(state: StateInline, output: string[], begin: number, end: number): boolean {\n    if (state.src.charCodeAt(state.pos) != begin) {\n        return false\n    }\n    let start = state.pos\n    let pos = state.pos\n    let level = 1\n    let code: Number\n    do {\n        pos++\n        code = state.src.charCodeAt(pos)\n        if (code == begin) {\n            level++\n        } else if (code == end) {\n            level--\n        }\n    } while (level > 0 && code != 0x0A && pos < state.src.length)\n    if (level == 0) {\n        state.pos = pos + 1\n        output.push(state.src.slice(start, state.pos))\n        return true\n    }\n    return false\n}\n\nfunction lambdaExpression(state: StateInline, output: string[]): boolean {\n    if (!state.src.startsWith(\"<<\", state.pos)) {\n        return false\n    }\n    let found = state.src.indexOf(\">>\", state.pos + 2)\n    if (found < 0) {\n        return false\n    }\n    output.push(\"(function() \")\n    output.push(state.src.slice(state.pos + 2, found))\n    output.push(\" end)\")\n    state.pos = found + 2\n    return true\n}\n\nexport default function (state: StateInline, silent: boolean): boolean {\n\n    if (state.src.charCodeAt(state.pos) !== 0x24 /* $ */) {\n        return false\n    }\n    if (!isLetter(state.src.charCodeAt(state.pos + 1))) {\n        return false\n    }\n    const start = state.pos = state.pos + 1\n    do {\n        state.pos++\n    } while (isLetterOrNumber(state.src.charCodeAt(state.pos)))\n    let output = [state.src.slice(start, state.pos)]\n    while (propertyExpression(state, output) // foo.bar\n        || callExpression(state, output, 0x28, 0x29) // foo(bar)\n        || callExpression(state, output, 0x7B, 0x7D) // foo{bar}\n        || lambdaExpression(state, output) // foo<<bar>>\n    ) {\n        // Continue\n    }\n    state.push('code_variable', '', 0).content = output.join('')\n    return true\n}","import { lua, lauxlib, lualib, lua_State } from 'fengari'\n\nconst enc = new TextEncoder()\nlet L: lua_State | null = null\nlet tags: string[] = []\nlet buf: string[] = []\nlet emit: (html: string)=>void | undefined\nlet wasChanged = false\n\nexport function loadStory(src: string[], emitFn: (html: string)=>void, logFn: (error: string, trace: string)=>void) {\n    emit = emitFn\n    L = lauxlib.luaL_newstate()\n\n    lua.lua_atpanic(L, _ => {\n        logFn(lua.lua_tojsstring(L, 1), \"Panic\")\n        return 0\n    })\n\n    lualib.luaL_openlibs(L)\n\n    lua.lua_register(L, \"Log\", _ => {\n        logFn(lua.lua_tojsstring(L, 1), lua.lua_tojsstring(L, 2))\n        return 0\n    })\n\n    lua.lua_register(L, \"Push\", _ => {\n        let str = lua.lua_tojsstring(L, 1)\n        tags.push(str)\n        if (str == 'a') {\n            buf.push(`<${str} href=\"#\" id=\"${lua.lua_tonumber(L, 2)}\">`)\n            lua.lua_pop(L, 1)\n        } else {\n            buf.push(`<${str}>`)\n        }\n        wasChanged = true\n        return 0\n    })\n    lua.lua_register(L, \"Pop\", _ => {\n        let str = tags.splice(tags.length - 1, 1)\n        if (str) {\n            buf.push(`</${str}>`)\n        }\n        wasChanged = true\n        return 0\n    })\n    lua.lua_register(L, \"Text\", _ => {\n        let str = lua.lua_tojsstring(L, 1)\n        buf.push(str)\n        wasChanged = true\n        return 0\n    })\n    lua.lua_register(L, \"Object\", _ => {\n        let str = lua.lua_tojsstring(L, 1)\n        buf.push(`<${str}>`)\n        wasChanged = true\n        return 0\n    })\n    lua.lua_register(L, \"Clear\", _ => {\n        buf = []\n        wasChanged = true\n        return 0\n    })\n\n    src.map(x => lauxlib.luaL_dostring(L, enc.encode(x)))\n}\n\nexport function raiseEvent(event: string, id: string) {\n    lua.lua_getglobal(L, 'RaiseEvent')\n    lua.lua_pushstring(L, event)\n    lua.lua_pushstring(L, id)\n    lua.lua_call(L, 2, 0)\n    if (wasChanged) {\n        wasChanged = false\n        emit?.(buf.join(''))\n    }\n}\n\nexport function start() {\n    lua.lua_getglobal(L, 'SoftReset')\n    lua.lua_call(L, 0, 0)\n    emit?.(buf.join(''))\n    wasChanged = false\n}\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(3607);\n"],"sourceRoot":""}